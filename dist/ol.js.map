{"version":3,"sources":["webpack://ol/webpack/universalModuleDefinition","webpack://ol/webpack/bootstrap","webpack://ol/./node_modules/rbush/index.js","webpack://ol/./node_modules/pbf/index.js","webpack://ol/./node_modules/pixelworks/lib/index.js","webpack://ol/./node_modules/ieee754/index.js","webpack://ol/./node_modules/quickselect/quickselect.js","webpack://ol/./node_modules/pixelworks/lib/processor.js","webpack://ol/./node_modules/pixelworks/lib/util.js","webpack://ol/./build/ol/array.js","webpack://ol/./build/ol/util.js","webpack://ol/./build/ol/AssertionError.js","webpack://ol/./build/ol/CollectionEventType.js","webpack://ol/./build/ol/ObjectEventType.js","webpack://ol/./build/ol/obj.js","webpack://ol/./build/ol/events.js","webpack://ol/./build/ol/Disposable.js","webpack://ol/./build/ol/functions.js","webpack://ol/./build/ol/events/Event.js","webpack://ol/./build/ol/events/Target.js","webpack://ol/./build/ol/events/EventType.js","webpack://ol/./build/ol/Observable.js","webpack://ol/./build/ol/Object.js","webpack://ol/./build/ol/Collection.js","webpack://ol/./build/ol/asserts.js","webpack://ol/./build/ol/math.js","webpack://ol/./build/ol/color.js","webpack://ol/./build/ol/colorlike.js","webpack://ol/./build/ol/MapEventType.js","webpack://ol/./build/ol/dom.js","webpack://ol/./build/ol/control/Control.js","webpack://ol/./build/ol/css.js","webpack://ol/./build/ol/layer/Property.js","webpack://ol/./build/ol/layer/Base.js","webpack://ol/./build/ol/render/EventType.js","webpack://ol/./build/ol/source/State.js","webpack://ol/./build/ol/layer/Layer.js","webpack://ol/./build/ol/control/Attribution.js","webpack://ol/./build/ol/control/FullScreen.js","webpack://ol/./build/ol/geom/GeometryType.js","webpack://ol/./build/ol/sphere.js","webpack://ol/./build/ol/extent/Corner.js","webpack://ol/./build/ol/extent/Relationship.js","webpack://ol/./build/ol/extent.js","webpack://ol/./build/ol/proj/Units.js","webpack://ol/./build/ol/proj/Projection.js","webpack://ol/./build/ol/proj/epsg3857.js","webpack://ol/./build/ol/proj/epsg4326.js","webpack://ol/./build/ol/proj/projections.js","webpack://ol/./build/ol/proj/transforms.js","webpack://ol/./build/ol/proj.js","webpack://ol/./build/ol/control/MousePosition.js","webpack://ol/./build/ol/MapEvent.js","webpack://ol/./build/ol/MapBrowserEvent.js","webpack://ol/./build/ol/has.js","webpack://ol/./build/ol/MapBrowserEventType.js","webpack://ol/./build/ol/MapBrowserPointerEvent.js","webpack://ol/./build/ol/pointer/EventType.js","webpack://ol/./build/ol/pointer/EventSource.js","webpack://ol/./build/ol/pointer/MouseSource.js","webpack://ol/./build/ol/pointer/MsSource.js","webpack://ol/./build/ol/pointer/NativeSource.js","webpack://ol/./build/ol/pointer/PointerEvent.js","webpack://ol/./build/ol/pointer/TouchSource.js","webpack://ol/./build/ol/pointer/PointerEventHandler.js","webpack://ol/./build/ol/MapBrowserEventHandler.js","webpack://ol/./build/ol/MapProperty.js","webpack://ol/./build/ol/TileState.js","webpack://ol/./build/ol/structs/PriorityQueue.js","webpack://ol/./build/ol/TileQueue.js","webpack://ol/./build/ol/tilegrid/common.js","webpack://ol/./build/ol/centerconstraint.js","webpack://ol/./build/ol/rotationconstraint.js","webpack://ol/./build/ol/ViewHint.js","webpack://ol/./build/ol/ViewProperty.js","webpack://ol/./build/ol/string.js","webpack://ol/./build/ol/coordinate.js","webpack://ol/./build/ol/easing.js","webpack://ol/./build/ol/geom/GeometryLayout.js","webpack://ol/./build/ol/geom/flat/transform.js","webpack://ol/./build/ol/transform.js","webpack://ol/./build/ol/geom/Geometry.js","webpack://ol/./build/ol/geom/SimpleGeometry.js","webpack://ol/./build/ol/geom/flat/area.js","webpack://ol/./build/ol/geom/flat/closest.js","webpack://ol/./build/ol/geom/flat/deflate.js","webpack://ol/./build/ol/geom/flat/inflate.js","webpack://ol/./build/ol/geom/flat/simplify.js","webpack://ol/./build/ol/geom/LinearRing.js","webpack://ol/./build/ol/geom/Point.js","webpack://ol/./build/ol/geom/flat/contains.js","webpack://ol/./build/ol/geom/flat/interiorpoint.js","webpack://ol/./build/ol/geom/flat/segments.js","webpack://ol/./build/ol/geom/flat/intersectsextent.js","webpack://ol/./build/ol/geom/flat/reverse.js","webpack://ol/./build/ol/geom/flat/orient.js","webpack://ol/./build/ol/geom/Polygon.js","webpack://ol/./build/ol/View.js","webpack://ol/./build/ol/resolutionconstraint.js","webpack://ol/./build/ol/layer/Group.js","webpack://ol/./build/ol/size.js","webpack://ol/./build/ol/PluggableMap.js","webpack://ol/./build/ol/control/Rotate.js","webpack://ol/./build/ol/control/Zoom.js","webpack://ol/./build/ol/control/util.js","webpack://ol/./build/ol/Kinetic.js","webpack://ol/./build/ol/interaction/Property.js","webpack://ol/./build/ol/interaction/Interaction.js","webpack://ol/./build/ol/interaction/DoubleClickZoom.js","webpack://ol/./build/ol/events/condition.js","webpack://ol/./build/ol/interaction/Pointer.js","webpack://ol/./build/ol/interaction/DragPan.js","webpack://ol/./build/ol/interaction/DragRotate.js","webpack://ol/./build/ol/render/Box.js","webpack://ol/./build/ol/interaction/DragBox.js","webpack://ol/./build/ol/interaction/DragZoom.js","webpack://ol/./build/ol/events/KeyCode.js","webpack://ol/./build/ol/interaction/KeyboardPan.js","webpack://ol/./build/ol/interaction/KeyboardZoom.js","webpack://ol/./build/ol/interaction/MouseWheelZoom.js","webpack://ol/./build/ol/interaction/PinchRotate.js","webpack://ol/./build/ol/interaction/PinchZoom.js","webpack://ol/./build/ol/interaction.js","webpack://ol/./build/ol/render/Event.js","webpack://ol/./build/ol/style/IconImageCache.js","webpack://ol/./build/ol/renderer/Map.js","webpack://ol/./build/ol/renderer/Composite.js","webpack://ol/./build/ol/Map.js","webpack://ol/./build/ol/OverlayPositioning.js","webpack://ol/./build/ol/Overlay.js","webpack://ol/./build/ol/control/OverviewMap.js","webpack://ol/./build/ol/control/ScaleLine.js","webpack://ol/./build/ol/control/ZoomSlider.js","webpack://ol/./build/ol/control/ZoomToExtent.js","webpack://ol/./build/ol/Feature.js","webpack://ol/./build/ol/format/FormatType.js","webpack://ol/./build/ol/featureloader.js","webpack://ol/./build/ol/format/Feature.js","webpack://ol/./build/ol/format/JSONFeature.js","webpack://ol/./build/ol/geom/flat/interpolate.js","webpack://ol/./build/ol/geom/flat/length.js","webpack://ol/./build/ol/geom/LineString.js","webpack://ol/./build/ol/geom/MultiLineString.js","webpack://ol/./build/ol/geom/MultiPoint.js","webpack://ol/./build/ol/geom/flat/center.js","webpack://ol/./build/ol/geom/MultiPolygon.js","webpack://ol/./build/ol/format/EsriJSON.js","webpack://ol/./build/ol/format/filter/Filter.js","webpack://ol/./build/ol/format/filter/Bbox.js","webpack://ol/./build/ol/format/filter/Spatial.js","webpack://ol/./build/ol/format/filter/Contains.js","webpack://ol/./build/ol/format/filter/Comparison.js","webpack://ol/./build/ol/format/filter/During.js","webpack://ol/./build/ol/format/filter/ComparisonBinary.js","webpack://ol/./build/ol/format/filter/EqualTo.js","webpack://ol/./build/ol/format/filter/GreaterThan.js","webpack://ol/./build/ol/format/filter/GreaterThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Intersects.js","webpack://ol/./build/ol/format/filter/IsBetween.js","webpack://ol/./build/ol/format/filter/IsLike.js","webpack://ol/./build/ol/format/filter/IsNull.js","webpack://ol/./build/ol/format/filter/LessThan.js","webpack://ol/./build/ol/format/filter/LessThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Not.js","webpack://ol/./build/ol/format/filter/NotEqualTo.js","webpack://ol/./build/ol/format/filter/LogicalNary.js","webpack://ol/./build/ol/format/filter/Or.js","webpack://ol/./build/ol/format/filter/Within.js","webpack://ol/./build/ol/format/filter/And.js","webpack://ol/./build/ol/format/filter.js","webpack://ol/./build/ol/geom/GeometryCollection.js","webpack://ol/./build/ol/format/GeoJSON.js","webpack://ol/./build/ol/xml.js","webpack://ol/./build/ol/format/XMLFeature.js","webpack://ol/./build/ol/format/GMLBase.js","webpack://ol/./build/ol/format/xsd.js","webpack://ol/./build/ol/format/GML3.js","webpack://ol/./build/ol/format/GML.js","webpack://ol/./build/ol/format/GML2.js","webpack://ol/./build/ol/format/GML32.js","webpack://ol/./build/ol/format/GPX.js","webpack://ol/./build/ol/format/TextFeature.js","webpack://ol/./build/ol/format/IGC.js","webpack://ol/./build/ol/style/Fill.js","webpack://ol/./build/ol/ImageState.js","webpack://ol/./build/ol/style/IconAnchorUnits.js","webpack://ol/./build/ol/style/IconImage.js","webpack://ol/./build/ol/style/IconOrigin.js","webpack://ol/./build/ol/style/Image.js","webpack://ol/./build/ol/style/Icon.js","webpack://ol/./build/ol/style/Stroke.js","webpack://ol/./build/ol/structs/LRUCache.js","webpack://ol/./build/ol/render/canvas/LabelCache.js","webpack://ol/./build/ol/render/canvas.js","webpack://ol/./build/ol/style/RegularShape.js","webpack://ol/./build/ol/style/Circle.js","webpack://ol/./build/ol/style/Style.js","webpack://ol/./build/ol/format/KML.js","webpack://ol/./build/ol/style/TextPlacement.js","webpack://ol/./build/ol/style/Text.js","webpack://ol/./build/ol/render/Feature.js","webpack://ol/./build/ol/format/MVT.js","webpack://ol/./build/ol/format/OSMXML.js","webpack://ol/./build/ol/geom/flat/flip.js","webpack://ol/./build/ol/format/Polyline.js","webpack://ol/./build/ol/format/TopoJSON.js","webpack://ol/./build/ol/format/WFS.js","webpack://ol/./build/ol/format/WKT.js","webpack://ol/./build/ol/format/XLink.js","webpack://ol/./build/ol/format/XML.js","webpack://ol/./build/ol/format/WMSCapabilities.js","webpack://ol/./build/ol/format/WMSGetFeatureInfo.js","webpack://ol/./build/ol/format/OWS.js","webpack://ol/./build/ol/format/WMTSCapabilities.js","webpack://ol/./build/ol/Geolocation.js","webpack://ol/./build/ol/geom/Circle.js","webpack://ol/./build/ol/interaction/DragAndDrop.js","webpack://ol/./build/ol/interaction/DragRotateAndZoom.js","webpack://ol/./build/ol/layer/BaseVector.js","webpack://ol/./build/ol/render/VectorContext.js","webpack://ol/./build/ol/render/canvas/Instruction.js","webpack://ol/./build/ol/render/canvas/Builder.js","webpack://ol/./build/ol/render/canvas/ImageBuilder.js","webpack://ol/./build/ol/render/canvas/LineStringBuilder.js","webpack://ol/./build/ol/render/canvas/PolygonBuilder.js","webpack://ol/./build/ol/geom/flat/straightchunk.js","webpack://ol/./build/ol/render/canvas/TextBuilder.js","webpack://ol/./build/ol/render/canvas/BuilderGroup.js","webpack://ol/./build/ol/render/canvas/BuilderType.js","webpack://ol/./build/ol/geom/flat/textpath.js","webpack://ol/./build/ol/render/canvas/Executor.js","webpack://ol/./build/ol/render/canvas/ExecutorGroup.js","webpack://ol/./build/ol/renderer/Layer.js","webpack://ol/./build/ol/renderer/canvas/Layer.js","webpack://ol/./build/ol/renderer/vector.js","webpack://ol/./build/ol/renderer/canvas/VectorLayer.js","webpack://ol/./build/ol/layer/Vector.js","webpack://ol/./build/ol/loadingstrategy.js","webpack://ol/./build/ol/source/Source.js","webpack://ol/./build/ol/source/VectorEventType.js","webpack://ol/./build/ol/structs/RBush.js","webpack://ol/./build/ol/source/Vector.js","webpack://ol/./build/ol/interaction/Draw.js","webpack://ol/./build/ol/interaction/Extent.js","webpack://ol/./build/ol/interaction/Modify.js","webpack://ol/./build/ol/interaction/Select.js","webpack://ol/./build/ol/interaction/Snap.js","webpack://ol/./build/ol/interaction/Translate.js","webpack://ol/./build/ol/layer/BaseImage.js","webpack://ol/./build/ol/layer/TileProperty.js","webpack://ol/./build/ol/layer/BaseTile.js","webpack://ol/./build/ol/geom/flat/geodesic.js","webpack://ol/./build/ol/layer/Graticule.js","webpack://ol/./build/ol/webgl.js","webpack://ol/./build/ol/webgl/Buffer.js","webpack://ol/./build/ol/webgl/ContextEventType.js","webpack://ol/./build/ol/vec/mat4.js","webpack://ol/./build/ol/webgl/PostProcessingPass.js","webpack://ol/./build/ol/webgl/Helper.js","webpack://ol/./build/ol/renderer/webgl/PointsLayer.js","webpack://ol/./build/ol/layer/Heatmap.js","webpack://ol/./build/ol/reproj/common.js","webpack://ol/./build/ol/renderer/canvas/ImageLayer.js","webpack://ol/./build/ol/layer/Image.js","webpack://ol/./build/ol/TileRange.js","webpack://ol/./build/ol/renderer/canvas/TileLayer.js","webpack://ol/./build/ol/layer/Tile.js","webpack://ol/./build/ol/ImageBase.js","webpack://ol/./build/ol/ImageCanvas.js","webpack://ol/./build/ol/renderer/canvas/VectorImageLayer.js","webpack://ol/./build/ol/layer/VectorImage.js","webpack://ol/./build/ol/layer/VectorTileRenderType.js","webpack://ol/./build/ol/renderer/canvas/VectorTileLayer.js","webpack://ol/./build/ol/layer/VectorTile.js","webpack://ol/./build/ol/render/canvas/Immediate.js","webpack://ol/./build/ol/tilecoord.js","webpack://ol/./build/ol/tileurlfunction.js","webpack://ol/./build/ol/net.js","webpack://ol/./build/ol/Tile.js","webpack://ol/./build/ol/ImageTile.js","webpack://ol/./build/ol/TileCache.js","webpack://ol/./build/ol/reproj.js","webpack://ol/./build/ol/reproj/Triangulation.js","webpack://ol/./build/ol/reproj/Tile.js","webpack://ol/./build/ol/tilegrid/TileGrid.js","webpack://ol/./build/ol/tilegrid.js","webpack://ol/./build/ol/source/Tile.js","webpack://ol/./build/ol/source/TileEventType.js","webpack://ol/./build/ol/source/UrlTile.js","webpack://ol/./build/ol/source/TileImage.js","webpack://ol/./build/ol/source/BingMaps.js","webpack://ol/./build/ol/source/XYZ.js","webpack://ol/./build/ol/source/CartoDB.js","webpack://ol/./build/ol/source/Cluster.js","webpack://ol/./build/ol/reproj/Image.js","webpack://ol/./build/ol/source/Image.js","webpack://ol/./build/ol/Image.js","webpack://ol/./build/ol/uri.js","webpack://ol/./build/ol/source/ImageArcGISRest.js","webpack://ol/./build/ol/source/ImageCanvas.js","webpack://ol/./build/ol/source/ImageMapGuide.js","webpack://ol/./build/ol/source/ImageStatic.js","webpack://ol/./build/ol/source/common.js","webpack://ol/./build/ol/source/WMSServerType.js","webpack://ol/./build/ol/source/ImageWMS.js","webpack://ol/./build/ol/source/OSM.js","webpack://ol/./build/ol/source/Raster.js","webpack://ol/./build/ol/source/Stamen.js","webpack://ol/./build/ol/source/TileArcGISRest.js","webpack://ol/./build/ol/source/TileDebug.js","webpack://ol/./build/ol/source/TileJSON.js","webpack://ol/./build/ol/source/TileWMS.js","webpack://ol/./build/ol/source/UTFGrid.js","webpack://ol/./build/ol/VectorRenderTile.js","webpack://ol/./build/ol/VectorTile.js","webpack://ol/./build/ol/source/VectorTile.js","webpack://ol/./build/ol/source/WMTSRequestEncoding.js","webpack://ol/./build/ol/tilegrid/WMTS.js","webpack://ol/./build/ol/source/WMTS.js","webpack://ol/./build/ol/source/Zoomify.js","webpack://ol/./build/index.js","webpack://ol/./build/ol/proj/proj4.js","webpack://ol/./build/ol/render.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","extraLen","LN2","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","h","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","buffer","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","set","finish","floor","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","write","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","Processor","offset","isLE","mLen","nBytes","e","eLen","eMax","eBias","nBits","NaN","rt","abs","isNaN","swap","tmp","defaultCompare","quickselectStep","z","exp","sd","newLeft","newRight","newImageData","createMinion","operation","workerHasImageData","ImageData","_","newWorkerImageData","width","output","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Array","Uint8ClampedArray","arrays","pixels","array","pixel","createWorker","config","onMessage","lines","keys","lib","map","toString","concat","blob","Blob","source","URL","createObjectURL","worker","Worker","addEventListener","threads","_imageOps","workers","_onWorkerMessage","minion","postMessage","setTimeout","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","callback","_enqueue","_dispatch","_destroyed","job","shift","input","segmentLength","slices","jj","event","_resolveJob","hasImageData","context","document","createElement","getContext","imageData","createImageData","numberSafeCompareFunction","includes","linearFindNearest","target","direction","reverseSubArray","begin","extension","isArray","find","func","equals","arr1","arr2","len1","findIndex","every","el","idx","util_abstract","uidCounter_","getUid","ol_uid","extendStatics","VERSION","__extends","setPrototypeOf","__proto__","__","constructor","ol_AssertionError","_super","AssertionError","code","_this","message","split","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","var_sources","TypeError","ii","arguments","getValues","values","isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","removeListenerMap","listen","opt_once","callOnce","evt","unlistenByKey","bindListener","listenOnce","unlisten","unlistenAll","ol_Disposable","Disposable","disposed_","dispose","disposeInternal","TRUE","FALSE","VOID","stopPropagation","events_Event","Event","propagationStopped","preventDefault","Target_extends","events_Target","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","propagate","pendingRemovals","hasListener","opt_type","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable_extends","ol_Observable","Observable","revision_","changed","getRevision","on","once","un","Object_extends","ObjectEvent","oldValue","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","opt_silent","unset","changeEventTypeCache","ol_Object","Collection_extends","Property","CollectionEvent","opt_element","opt_index","element","ol_Collection","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","forEach","f","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","assert","assertion","errorCode","clamp","cosh","x","y","squaredSegmentDistance","x1","y1","x2","y2","dx","dy","math_squaredDistance","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","cache","cacheSize","fromString","g","exec","style","body","appendChild","rgb","getComputedStyle","removeChild","fromNamed","hasAlpha","parseInt","substr","normalize","Number","fromStringInternal_","asArray","asColorLike","MapEventType","createCanvasContext2D","opt_width","opt_height","canvas","dom_outerWidth","offsetWidth","marginLeft","marginRight","dom_outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChildren","lastChild","Control_extends","control_Control","Control","target_","map_","listenerKeys","render","setTarget","getMap","setMap","getOverlayContainerStopEvent","getElementById","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","layer_Property","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base_extends","Base","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","className_","className","state_","getClassName","getLayerState","state","layer","managed","round","getOpacity","sourceState","getSourceState","getVisible","extent","getExtent","getZIndex","getMaxResolution","getMinResolution","getLayersArray","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","render_EventType","State","UNDEFINED","LOADING","READY","Layer_extends","visibleAtResolution","layerState","resolution","layer_Layer","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","handleSourcePropertyChange_","setSource","states","getSource","getState","handleSourceChange_","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","renderEvent","layerStatesArray","createRenderer","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","button","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","viewState","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","FullScreen_extends","FullScreen_events","isFullScreenSupported","webkitRequestFullscreen","mozRequestFullScreen","mozFullScreenEnabled","msRequestFullscreen","msFullscreenEnabled","requestFullscreen","fullscreenEnabled","isFullScreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","control_FullScreen","FullScreen","cssClassName_","labelNode_","createTextNode","labelActive","labelActiveNode_","button_","setClassName_","keys_","source_","handleFullScreen_","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","getTargetElement","mozRequestFullScreenWithKeys","requestFullScreenWithKeys","handleFullScreenChange_","updateSize","fullscreen","activeClassName","inactiveClassName","nextClassName","add","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","sin","cos","atan2","getLengthInternal","coordinates","getAreaInternal","sphere_offset","distance","bearing","lon1","dByR","lat","asin","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","createEmpty","extendCoordinate","extent_buffer","opt_extent","clone","closestSquaredDistanceXY","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","extent_getArea","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","extent_intersects","extent_isEmpty","scaleFromCenter","deltaX","deltaY","applyTransform","transformFn","xs","ys","_boundingExtentXYs","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","sourceCode","destinationCode","transforms_get","transform","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","proj_transform","transformExtent","MousePosition_extends","PROJECTION","MousePosition_render","mapProjection_","transform_","control_MousePosition","MousePosition","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","lastMouseMovePixel_","getCoordinateFormat","getProjection","handleMouseMove","getEventPixel","updateHTML_","handleMouseOut","viewport","getViewport","html","getCoordinateFromPixel","MapEvent_extends","ol_MapEvent","MapEvent","opt_frameState","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","dragging","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","GEOLOCATION","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","pointer_EventSource","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","MouseSource_extends","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","MouseSource","lastTouches","lts","clientX","clientY","MsSource_extends","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","NativeSource_extends","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","PointerEvent_extends","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","TouchSource_extends","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt_1","PointerEventHandler_extends","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","TileState","IDLE","LOADED","EMPTY","ABORT","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","none","disable","delta","rotationconstraint_none","ViewHint","ViewProperty","padNumber","number","opt_precision","numberString","toFixed","decimal","compareVersions","v1","v2","s1","s2","n1","n2","coordinate_add","closestOnSegment","segment","start","along","degreesToStringHDMS","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","coordinate_format","template","replace","coordinate_equals","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","coordinate_scale","scale","coordinate_squaredDistance","coord1","coord2","coordinate_distance","squaredDistanceToSegment","toStringXY","easeIn","easeOut","inAndOut","linear","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","opt_dest","dest","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","d1","e1","f1","a2","d2","e2","f2","ol_transform_rotate","ol_transform_scale","makeScale","ol_transform_translate","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","mat","det","transform_toString","Geometry_extends","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","anchor","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","getType","intersectsExtent","translate","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_rotate","transform_scale","transform_translate","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","squaredDistance_1","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","LinearRing_extends","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","getArea","Point_extends","geom_Point","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","point1","point2","intersectsLineString","coordinatesExtent","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_extends","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","circular","opt_n","opt_sphereRadius","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","polygon","makeRegular","getRadius","startAngle","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","resolutions","power","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","zoom","constrainResolution","getResolution","options_","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","animationCount","isDef","setCenter","setZoom","setRotation","Date","now","series","complete","duration","easing","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","position","centerX","centerY","hint","Group_extends","Group_Property","LAYERS","Group","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","ownLayerState","size_buffer","size_scale","ratio","toSize","PluggableMap_extends","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getSize","getView","getOverlayContainer","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","getLoading","loading","dispatchRenderEvent","postRenderFunctions","targetElement","removeLayerRenderers","handleViewPropertyChanged_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","skippedFeatureUids","usedTiles","setLayerGroup","setSize","setView","skipFeature","computedStyle","parseFloat","unskipFeature","Rotate_extends","Rotate_render","rotation_","autoHide_","msTransform","webkitTransform","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","newResolution","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","interaction_Property","ACTIVE","Interaction_extends","Interaction_rotate","opt_duration","rotateWithoutConstraints","currentRotation","Interaction_zoom","zoomWithoutConstraints","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_extends","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altKeyOnly","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","never","condition_pointerMove","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","event_1","DragPan_extends","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","getGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_extends","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_context","opt_glContext","inversePixelTransform","glContext","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","shared","Map_extends","expireIconCache","renderer_Map","MapRenderer","layerRenderers_","layerRendererListeners_","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerStates","getLayerRenderer","callback_1","getWrapX","layerKey","renderer","handleLayerRendererChange_","getLayerRenderers","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","layerStatesMap","reduce","acc","_loop_1","this_1","Composite_extends","Composite","CompositeMapRenderer","insertBefore","firstChild","children_","oldChildren","childNodes","oldChild","newChild","replaceChildren","getDataAtPixel","ol_Map_extends","ol_Map","Map","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay_extends","Overlay_Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","ol_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","box","offsetX","pageXOffset","offsetY","pageYOffset","mapSize","updateRenderedPosition","bottom","top_1","getOptions","OverviewMap_extends","OverviewMap_render","validateExtent_","updateBox_","control_OverviewMap","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","oldMap","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","ovresolution","bottomLeft","topRight","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","ScaleLine_extends","UNITS_PROP","ScaleLine_Units","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine_render","viewState_","control_ScaleLine","ScaleLine","bar","innerElement_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","text","pointResolutionUnits","nominalCount","suffix","metersPerDegree","createScaleBar","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","ZoomSlider_extends","Direction","VERTICAL","HORIZONTAL","ZoomSlider_render","sliderInitialized_","initSlider_","res","currentResolution_","setThumbPosition_","control_ZoomSlider","ZoomSlider","direction_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","firstElementChild","drag","getPositionForResolution_","ZoomToExtent_extends","control_ZoomToExtent","ZoomToExtent","handleZoomToExtent","Feature_extends","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","styles_1","createStyleFunction","setId","FormatType","ARRAY_BUFFER","JSON","TEXT","XML","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","featureloader_xhr","dataProjection","addFeatures","format_Feature","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","transformed","decimals","power_1","transformExtentWithOptions","JSONFeature_extends","getObject","parse","format_JSONFeature","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","interpolatePoint","pointY","length_1","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringLength","LineString_extends","geom_LineString","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","MultiLineString_extends","geom_MultiLineString","MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","getFlatMidpoints","midpoints","intersectsLineStringArray","MultiPoint_extends","geom_MultiPoint","MultiPoint","appendPoint","getPoint","getPoints","points","center_linearRingss","MultiPolygon_extends","geom_MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getEndss","getFlatInteriorPoints","getInteriorPoints","linearRingsAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","EsriJSON_extends","GEOMETRY_READERS","getGeometryLayout","paths","rings","GEOMETRY_WRITERS","esriJSONPolygon","flatRing","outerRings","holes","clockwise","hole","matched","outerRing","containsHole","reverse","convertRings","geometryReader","hasZ","hasM","getHasZM","geometryWriter","esriJSON","hasZM","multiPoint","multiLineString","format_EsriJSON","EsriJSON","geometryName","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","wkid","objects","filter_Filter","Filter","tagName_","getTagName","Bbox_extends","filter_Bbox","Bbox","opt_srsName","srsName","Spatial_extends","filter_Spatial","Spatial","Contains_extends","filter_Contains","Contains","Comparison_extends","filter_Comparison","Comparison","propertyName","During_extends","filter_During","During","ComparisonBinary_extends","filter_ComparisonBinary","ComparisonBinary","expression","opt_matchCase","matchCase","EqualTo_extends","filter_EqualTo","EqualTo","GreaterThan_extends","filter_GreaterThan","GreaterThan","GreaterThanOrEqualTo_extends","filter_GreaterThanOrEqualTo","GreaterThanOrEqualTo","Intersects_extends","filter_Intersects","Intersects","IsBetween_extends","filter_IsBetween","IsBetween","lowerBoundary","upperBoundary","IsLike_extends","filter_IsLike","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","singleChar","escapeChar","IsNull_extends","filter_IsNull","IsNull","LessThan_extends","filter_LessThan","LessThan","LessThanOrEqualTo_extends","filter_LessThanOrEqualTo","LessThanOrEqualTo","Not_extends","filter_Not","Not","NotEqualTo_extends","filter_NotEqualTo","NotEqualTo","LogicalNary_extends","filter_LogicalNary","LogicalNary","conditions","Or_extends","filter_Or","Or","Within_extends","filter_Within","Within","And_extends","filter_And","And","and","params","filter_bbox","GeometryCollection_extends","cloneGeometries","geometries","clonedGeometries","geom_GeometryCollection","GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometries","getGeometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","GeoJSON_extends","GeoJSON_readGeometry","GeoJSON_readPointGeometry","GeoJSON_readLineStringGeometry","GeoJSON_readPolygonGeometry","GeoJSON_readMultiPointGeometry","GeoJSON_readMultiLineStringGeometry","GeoJSON_readMultiPolygonGeometry","readGeometryCollectionGeometry","GeoJSON_writeGeometry","geoJSON","GeoJSON_writePointGeometry","GeoJSON_writeLineStringGeometry","rightHanded","GeoJSON_writePolygonGeometry","GeoJSON_writeMultiPointGeometry","GeoJSON_writeMultiLineStringGeometry","GeoJSON_writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","XMLFeature_extends","format_XMLFeature","XMLFeature","xmlSerializer_","XMLSerializer","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLBase_extends","GMLNS","ONLY_WHITESPACE_RE","GMLBase_GMLBase","GMLBase","featureType","featureNS","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","ft","uri","candidate","featureTypes","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS","readFeatureElementInternal","asFeature","test","_content_","attName","fid","getAttributeNS","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","format_GMLBase","readBooleanString","string","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","GML3_extends","GML3_schemaLocation","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML3_GML3","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","readFlatPosList_","contextDimension","dim","writePos_","srsDimension","getCoords_","opt_hasZ","writePosList_","parts","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","posList","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","patches","writeSurfacePatches_","writeCurveOrLineString_","segments","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","line","writeGeometryElement","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","geom","setAttributeNS","interior","exterior","Surface","Curve","Envelope","curveMember","curveMembers","surfaceMember","surfaceMembers","lowerCorner","upperCorner","PolygonPatch","LineStringSegment","format_GML3","GML","format_GML","GML2_extends","GML2_schemaLocation","GML2_MULTIGEOMETRY_TO_MEMBER_NODENAME","GML2_GML2","GML2","readFlatCoordinates_","proj","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","createCoordinatesNode_","writeCoordinates_","innerBoundaryIs","outerBoundaryIs","format_GML2","GML32_extends","GML32","http://www.opengis.net/gml/3.2","format_GML32","GPX_extends","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX_GPX","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","applyLayoutOptions","href","format_GPX","TextFeature_extends","getText","format_TextFeature","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","IGC_extends","IGCZ","BAROMETRIC","GPS","NONE","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","format_IGC","IGC","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","style_Fill","Fill","color_","getColor","setColor","ImageState","IconAnchorUnits","FRACTION","IconImage_extends","IconImage_IconImage","IconImage","image","imageState","hitDetectionImage_","image_","Image","canvas_","imageListenerKeys_","imageState_","size_","src_","tainted_","isTainted_","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","getImage","getImageState","getHitDetectionImage","fillRect","getSrc","ctx","imgData","putImageData","IconOrigin","style_Image","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","getScale","getRotateWithView","getSnapToPixel","getAnchor","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","setSnapToPixel","snapToPixel","listenImageChange","unlistenImageChange","Icon_extends","style_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","iconImage_","IconImage_get","offset_","offsetOrigin_","offsetOrigin","origin_","setAnchor","iconImageSize","style_Stroke","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","LRUCache_extends","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","LabelCache_extends","LabelCache_LabelCache","LabelCache","consumers","consumer","consumerId","prune","outer","release","defaultFillStyle","defaultLineDash","defaultStrokeStyle","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","span","heights","measureTextHeight","measureTextWidth","canvas_measureAndCacheTextWidth","rotateAtOffset","resetTransform","originX","originY","w","alpha","globalAlpha","setTransform","RegularShape_extends","style_RegularShape","RegularShape","hitDetectionCanvas_","fill_","fill","radius_","radius1","radius2_","radius2","stroke_","stroke","imageSize_","hitDetectionImageSize_","getFill","getRadius2","getStroke","strokeStyle","strokeWidth","renderOptions","imageSize","draw_","createHitDetectionCanvas_","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","drawHitDetectionCanvas_","Circle_extends","style_Circle","CircleStyle","setRadius","Style","geometryFunction_","defaultGeometryFunction","text_","zIndex_","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","style_Style","TextPlacement","LINE","DEFAULT_FILL_COLOR","style_Text","Text","font_","textAlign_","textAlign","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","KML_extends","GX_NAMESPACE_URIS","KML_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readURI","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","KML_LINK_PARSERS","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML_KML","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","styleFunction","sharedStyles","nameStyle","drawName","createNameStyleFunction","foundStyle","findStyle","styleValue","createFeatureStyleFunction","styleUri","baseURI","location","fs","readName","readNameFromDocument","readNameFromNode","name_1","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","textStyle","textOffset","imageScale","foundText","readColor","hexColor","readFlatCoordinates","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","heading","hotSpot","origin","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","imageStyle","LabelStyle","LineStyle","PolyStyle","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","KML_GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","v","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","iconProperties","origin_1","format_KML","Feature_tmpTransform","Feature_RenderFeature","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","midpoint","render_Feature","MVT_extends","layersPBFReader","layerPBFReader","version","featurePBFReader","readRawFeature","format_MVT","MVT","featureClass_","featureClass","layerName_","layerName","layers_","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","geometryType","numEnds","getGeometryType","prevEndIndex","ctor","pbf_default","pbfLayers","pbfLayer","OSMXML_extends","OSMXML_NAMESPACE_URIS","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","nodes","tags","NODE_PARSERS","way","ways","OSMXML_OSMXML","OSMXML","format_OSMXML","flipXY","opt_destOffset","destOffset","Polyline_extends","encodeDeltas","numbers","opt_factor","factor","lastNumbers","encodeFloats","decodeDeltas","encoded","decodeFloats","encodeUnsignedInteger","encodeUnsignedIntegers","encodeSignedIntegers","current","decodeUnsignedIntegers","decodeSignedIntegers","format_Polyline","Polyline","factor_","geometryLayout_","geometryLayout","TopoJSON_extends","TopoJSON_TopoJSON","TopoJSON","topoJSONTopology","arcs","transformArc","transformArcs","topoJSONFeatures","objectName","readFeaturesFromGeometryCollection","readFeatureFromGeometry","TopoJSON_GEOMETRY_READERS","transformVertex","concatenateArcs","polyArray","ringCoords","indices","collection","vertex","format_TopoJSON","WFS_extends","boundedBy","TRANSACTION_SUMMARY_PARSERS","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","InsertResults","INSERT_RESULTS_PARSERS","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","gmlVersion","Update","featurePrefix","typeName","getTypeName","XMLNS","writeOgcFidFilter","Delete","WFSNS","Native","nativeElement","vendorId","safeToIgnore","FEATURE_PREFIX","OGCNS","FESNS","SCHEMA_LOCATIONS","1.1.0","1.0.0","DEFAULT_VERSION","WFS_WFS","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","writeGetFeature","handle","outputFormat","maxFeatures","resultType","viewParams","propertyNames","GETFEATURE_SERIALIZERS","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","OGC_FID_PARSERS","http://www.opengis.net/ogc","FeatureId","prefix","Query","writeFilterCondition","valueReference","timePeriod","writeTimeInstant","writeLogicalFilter","BBOX","writeOgcPropertyName","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","writeOgcLiteral","PropertyIsLike","writeOgcExpression","timeInstant","timePosition","format_WFS","WKT_extends","GeometryConstructor","LINESTRING","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","Z","TokenType","WKTGeometryType","WKT_type","toUpperCase","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","readNumber_","readText_","scientificNotation","substring","WKT_Parser","Parser","lexer","lexer_","token_","layout_","consume_","isTokenType","match","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","dimensions","token","geomType","WKT_WKT","WKT","splitCollection_","splitCollection","parse_","encode","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","GeometryEncoder","components","geoms","enc","geometryEncoder","encodeGeometryLayout","format_WKT","NAMESPACE_URI","readHref","format_XML","readFromDocument","readFromNode","WMSCapabilities_extends","WMSCapabilities_NAMESPACE_URIS","WMSCapabilities_PARSERS","Service","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","Request","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","LAYER_PARSERS","WMSCapabilities_WMSCapabilities","WMSCapabilities","wmsCapabilityObject","Name","Title","Abstract","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","Format","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","Dimension","unitSymbol","multipleValues","nearestValue","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","WMSCapabilities_STYLE_PARSERS","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","opaque","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","HTTP","HTTP_PARSERS","Get","Post","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","format_WMSCapabilities","WMSGetFeatureInfo_extends","format_WMSGetFeatureInfo","WMSGetFeatureInfo","readFeatures_","layerElement","layerFeatures","gmlFeatures","OWS_extends","OWS_NAMESPACE_URIS","OWS_PARSERS","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS_OWS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","AdministrativeArea","PostalCode","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","DCP_PARSERS","OWS_HTTP_PARSERS","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities_extends","WMTSCapabilities_NAMESPACE_URIS","WMTSCapabilities_OWS_NAMESPACE_URIS","WMTSCapabilities_PARSERS","Contents","CONTENTS_PARSERS","WMTSCapabilities_WMTSCapabilities","WMTSCapabilities","owsParser_","WMTSCapabilityObject","WMTSCapabilities_LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","WMTSCapabilities_STYLE_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","resource","WGS84BoundingBox","WGS84_BBOX_READERS","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","format_WMTSCapabilities","Geolocation_extends","Geolocation_Property","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","SPEED","TRACKING","TRACKING_OPTIONS","Geolocation_GeolocationError","GeolocationError","error","ol_Geolocation","Geolocation","position_","watchId_","handleTrackingChanged_","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","accuracy","altitude","altitudeAccuracy","longitude","latitude","projectedPosition","speed","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","geom_Circle_extends","Circle_Circle","Circle","setCenterAndRadius","getRadiusSquared_","geom_Circle","DragAndDrop_extends","DragAndDropEventType","DragAndDropEvent","file","opt_features","opt_projection","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","interaction_DragAndDrop","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","tryReadFeatures_","registerListeners_","dropArea","unregisterListeners_","DragRotateAndZoom_extends","interaction_DragRotateAndZoom","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","BaseVector_extends","BaseVector_Property","BaseVector_BaseVectorLayer","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","toFunction","BaseVector","render_VectorContext","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","opt_declutterGroup","setTextStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder_extends","Builder","CanvasBuilder","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroup_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroup","hitDetectionImage","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextBuilder_extends","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","BATCH_CONSTRUCTORS","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","flatOffset","flatEnd","oo","range","drawChars_","geometryWidths","saveTextStates_","pixelRatio_1","strokeKey","textKey","fillKey","baseline","textScale","textFillStyle","textStrokeStyle","textOffsetX","textOffsetY","textRotateWithView","textRotation","canvas_BuilderGroup","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","BuilderType","DEFAULT","IMAGE","drawTextOnPath","startM","measureAndCacheTextWidth","previousAngle","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","unshift","Executor_extends","Executor_tmpExtent","Executor_tmpTransform","Executor_p1","Executor_p2","p3","p4","canvas_Executor","Executor","overlaps","declutterTree","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","getTextImage","align","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","strokeText","fillText","replayTextBackground_","p1","p2","strokeInstruction","moveTo","setStrokeStyle_","replayImage_","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","repeatSize","renderDeclutter_","groupCount","declutterData","drawTextImageWithPointPlacement_","execute_","skippedFeaturesHash","featureCallback","opt_hitExtent","pixelCoordinates","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","batchSize","labelWithAnchor","widthIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","cc","chars","part","execute","executeHitDetection","opt_featureCallback","ExecutorGroup_extends","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","declutterTree_","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutterReplays","hitExtent","contextSize","clearRect","declutteredFeatures","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","i_1","j_1","result_1","executor","zs","getExecutor","getExecutors","opt_builderTypes","opt_declutterReplays","save","builderTypes","restore","0","canvas_ExecutorGroup","renderer_Layer_extends","renderer_Layer","LayerRenderer","layer_","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform_","inversePixelTransform_","transformOrigin","halfWidth","halfHeight","topLeft","bottomRight","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","err","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","vectorLayer","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRenderOrder_","replayGroup_","replayGroupChanged","handleFontsChanged_","canvasTransform","vectorSource","clipExtent","clipped","world","transform_1","transform_2","layer_1","features_1","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","gutter","loadFeatures","dirty","features_2","forEachFeatureInExtent","replayGroupInstructions","executorGroup","getOverlaps","Vector_extends","Vector","VectorLayer","loadingstrategy_all","loadingstrategy_bbox","Source_extends","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","setState","VectorEventType","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","structs_RBush","RBush","opt_maxEntries","rbush_","items_","extents","uid","getAll","getInExtent","forEach_","forEachInExtent","source_Vector_extends","VectorSourceEvent","opt_feature","source_Vector","VectorSource","loader_","format_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","Draw_extends","Draw_Mode","DrawEventType","DrawEvent","interaction_Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","Constructor_1","mode_1","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","Extent_extends","ExtentEventType","EXTENTCHANGED","ExtentInteractionEvent","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","Extent","ExtentInteraction","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","getSegments","closestSegment","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","Modify_extends","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","compareIndexes","pointDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","interaction_Modify","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","kk","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","Select_extends","SelectEventType","SELECT","SelectEvent","selected","deselected","Select_handleEvent","addCondition_","removeCondition_","toggleCondition_","featureLayerAssociation_","filter_","addFeatureLayerAssociation_","multi_","layerFilter_","hitTolerance_","removeFeatureLayerAssociation_","Select_getDefaultStyleFunction","interaction_Select","Select","addCondition","removeCondition","toggleCondition","multi","featureOverlay","featureOverlay_","layers_1","getHitTolerance","setHitTolerance","currentMap","selectedFeatures","Snap_extends","getFeatureFromEvent","interaction_Snap","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","nodesToRemove_1","isCircle","closestOnCircle","Translate_extends","TranslateEventType","TranslateEvent","interaction_Translate","Translate","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","deltaX_1","deltaY_1","BaseImage_extends","BaseImageLayer","BaseImage","TileProperty","BaseTile_extends","BaseTile_BaseTileLayer","BaseTileLayer","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","BaseTile","geodesic_line","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","Graticule_extends","Graticule_DEFAULT_STROKE_STYLE","INTERVALS","layer_Graticule","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleCache_","lonLabelStyle_","latLabelStyleCache_","latLabelStyle_","intervals_","loaderFunction","featurePool_","lineStyle_","tmpExtent_","renderExtent","updateProjectionInfo_","createGraticule_","featureCount","featuresColl","labelData","poolIndex","addMeridian_","lon","minLat","maxLat","getMeridian_","textPoint","getMeridianPoint_","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","getInterval_","cnt","centerLonLat","centerLon","centerLat","validExtent","frac","meridian","clampedBottom","clampedTop","getMeridians","lon2","parallel","clampedLeft","clampedRight","getParallels","epsg4326Projection","worldExtentP","DYNAMIC_DRAW","CONTEXT_IDS","opt_attributes","EXTENSIONS","webgl_gl","getParameter","MAX_TEXTURE_SIZE","getSupportedExtensions","BufferUsage","STATIC_DRAW","STREAM_DRAW","Buffer","WebGLArrayBuffer","opt_arr","opt_usage","arr_","usage_","getUsage","ContextEventType","LOST","RESTORED","fromTransform","mat4","DEFAULT_VERTEX_SHADER","DEFAULT_FRAGMENT_SHADER","PostProcessingPass","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","Float32Array","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","getGL","init","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","HTMLCanvasElement","texture","uniform3f","uniform4f","uniform1f","Helper_extends","DefaultUniform","DefaultAttrib","Helper","WebGLHelper","bufferCache_","shaderCache_","programCache_","currentProgram_","hasOESElementIndexUint","getExtension","handleWebGLContextLost","handleWebGLContextRestored","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","postProcessPasses_","postProcesses","shaderCompileErrors_","arrayBuffer","bufferKey","bufferCache","Uint32Array","Uint16Array","deleteBuffer","bufferCacheEntry","isContextLost","deleteProgram","deleteShader","prepareDraw","getCanvas","applyFrameState","drawElements","elementType","UNSIGNED_INT","UNSIGNED_SHORT","numItems","offsetInBytes","finalizeDraw","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","setUniformMatrixValue","HTMLImageElement","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderInfoLog","getShaderCompileErrors","getAttributeLocation","setUniformFloatValue","uniformMatrix4fv","enableAttributeArray","attribName","createTextureInternal","opt_wrapS","opt_wrapT","TEXTURE_MAG_FILTER","createEmptyTexture","PointsLayer_extends","PointsLayer_VERTEX_SHADER","PointsLayer_FRAGMENT_SHADER","PointsLayer","WebGLPointsLayerRenderer","u_texture","getDefaultTexture","helper_","sourceRevision_","verticesBuffer_","indicesBuffer_","program_","sizeCallback_","sizeCallback","coordCallback_","coordCallback","opacityCallback_","opacityCallback","texCoordCallback_","texCoordCallback","colorCallback_","colorCallback","rotateWithViewCallback_","rotateWithViewCallback","u0","v0","u1","v0_r","v0_g","v0_b","v0_a","v1_r","v1_g","v1_b","v1_a","v2_r","v2_g","v2_b","v2_a","v3_r","v3_g","v3_b","v3_a","baseIndex","bytesPerFloat","BYTES_PER_ELEMENT","Heatmap_extends","Heatmap_Property","BLUR","GRADIENT","DEFAULT_GRADIENT","layer_Heatmap","Heatmap","gradient","blur","shadow","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","u_size","u_blurSlope","u_resolution","u_gradientTexture","ERROR_THRESHOLD","ImageLayer_extends","canvas_ImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","renderedExtent","imageExtent","imageResolution","imagePixelRatio","getPixelRatio","viewCenter","dw","dh","Image_extends","layer_Image","ImageLayer","TileRange","containsTileRange","TileRange_createOrUpdate","ol_TileRange","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile","tileState","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","tilePixelRatio","getTilePixelRatio","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","drawTileImage","transition","getTileImage","getOpaque","alphaChanged","endTransition","canvas_TileLayer","Tile_extends","layer_Tile","TileLayer","ImageBase_extends","ol_ImageBase","ImageBase","ImageCanvas_extends","ol_ImageCanvas","ImageCanvas","opt_loader","error_","getError","handleLoad_","VectorImageLayer_extends","canvas_VectorImageLayer","CanvasVectorImageLayerRenderer","skippedFeatures_","vectorRenderer_","layerImageRatio_","getImageRatio","vectorRenderer","skippedFeatures_1","context_1","imageFrameState_1","newSkippedFeatures_1","VectorImage_extends","VectorImage","VectorImageLayer","imageRatio","imageRatio_","VectorTileRenderType","HYBRID","VectorTileLayer_extends","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","canvas_VectorTileLayer","CanvasVectorTileLayerRenderer","baseCanvas","overlayContext_","overlayCanvas","container_","overlayPixelTransform_","inverseOverlayPixelTransform_","renderedLayerRevision_","renderTileImageQueue_","tileListenerKeys_","tmpTransform_","prepareTile","tileUid","updateExecutorGroup_","tileImageNeedsRender_","listenerKey","hasContext","layerRevision","revision","builderState","getReplayState","renderedRenderOrder","renderedZ","sourceZ","sourceTileGrid","getTileGrid","tileExtent","wrappedTileCoord","sourceTiles","layerUid","executorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","executorGroupInstructions","replayExtent","renderingReplayGroup","getReplayTransform_","renderResolution","renderMode","getRenderMode","renderTileImages_","replayTypes","clips","worldOffset","currentClip","zz","executorData","replayDeclutter","renderTileImage_","replayState","renderedTileRevision","renderedTileZ","pixelScale","VectorTile_extends","VectorTile_VectorTileLayer","VectorTileLayer","renderMode_","layer_VectorTile","Immediate_extends","Immediate","CanvasImmediateRenderer","context_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","hash","tileurlfunction_createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","startCharCode","stopCharCode","stop_1","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","ol_Tile_extends","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getTileCoord","ImageTile_extends","getBlankImage","ol_ImageTile","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","TileCache_extends","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","p0","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Tile_extends","reproj_Tile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","tmpTileCoord","tilegrid_TileGrid","TileGrid","opt_strict","currentVal","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","getForProjection","createForProjection","createXYZ","xyzOptions","gridOptions","resolutionsFromExtent","opt_maxZoom","opt_tileSize","opt_corner","createForExtent","extentFromProjection","half","source_Tile_extends","Tile_TileSource","TileSource","opaque_","tilePixelRatio_","canUseScreen","self","screen","availWidth","availHeight","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","getTileCoordForTileUrlFunction","worldsAway","tilegrid_wrapX","withinExtentAndZ","TileSourceEvent","source_Tile","TileEventType","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","setTileUrlFunction","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","BingMaps_extends","source_BingMaps","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","quadKey","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","XYZ_extends","source_XYZ","CartoDB_extends","source_CartoDB","CartoDB","account_","account","mapId_","config_","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","tilesUrl","cdn_url","https","layergroupid","Cluster_extends","source_Cluster","Cluster","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","reproj_Image_extends","reproj_Image","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","source_Image_extends","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","source_Image","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","ol_Image_extends","ol_Image","ImageWrapper","imageLoadFunction","imageLoadFunction_","appendParams","keyParams","encodeURIComponent","qs","ImageArcGISRest_extends","source_ImageArcGISRest","ImageArcGISRest","params_","ratio_","getParams","F","FORMAT","TRANSPARENT","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","source_ImageCanvas_extends","source_ImageCanvas","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","ImageMapGuide_extends","source_ImageMapGuide","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","baseUrl","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","ImageStatic_extends","ImageStatic","Static","imageExtent_","getImageExtent","targetWidth","DEFAULT_WMS_VERSION","WMSServerType","ImageWMS_extends","GETFEATUREINFO_IMAGE_SIZE","source_ImageWMS","ImageWMS","v13_","updateV13_","serverType_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","viewExtent","requestExtent","OSM_extends","ATTRIBUTION","source_OSM","OSM","Raster_extends","RasterEventType","RasterOperationType","PIXEL","RasterSourceEvent","Raster_RasterSource","RasterSource","worker_","operationType_","operationType","threads_","createLayer","createLayers","requestedFrameState_","renderedImageCanvas_","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","sharedContext","layerOrSource","Raster","Stamen_extends","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig","TileArcGISRest_extends","TileArcGISRest_tileUrlFunction","source_TileArcGISRest","TileArcGISRest","getKeyForParams_","TileDebug_extends","TileDebug_LabeledTile","LabeledTile","strokeRect","source_TileDebug","TileDebug","textTileCoord","TileJSON_extends","source_TileJSON","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","attributionExtent_1","TileWMS_extends","TileWMS_tileUrlFunction","source_TileWMS","TileWMS","transparent","UTFGrid_extends","UTFGrid_CustomTile","CustomTile","preemptive","preemptive_","grid_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","source_UTFGrid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","VectorRenderTile_extends","ol_VectorRenderTile","VectorRenderTile","getSourceTiles","removeSourceTiles","loadingSourceTiles","errorSourceTileKeys","replayState_","getSourceTiles_","removeSourceTiles_","ol_VectorTile_extends","DEFAULT_EXTENT","ol_VectorTile","VectorTile","onLoad","setFeatures","onError","source_VectorTile_extends","source_VectorTile","defaultLoadFunction","loadingTiles_","sourceTilesByTileKey_","tileGrids_","covered_1","empty_1","sourceZ_1","loadedZ_1","key_1","sourceTileKey","previousSourceTiles","addSourceTiles","WMTSRequestEncoding","KVP","REST","WMTS_extends","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","tilegrid_WMTS","createFromCapabilitiesMatrixSet","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","elt","elt_ml","tileWidth","tileHeight","source_WMTS_extends","source_WMTS","WMTS","requestEncoding","version_","dimensions_","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Version","localContext_1","TileCol","TileRow","Zoomify_extends","TierSizeCalculation","TRUNCATED","Zoomify_CustomTile","zoomifyImage_","source_Zoomify","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","tileCountUpToTier","tileCoordZ","tileIndex","tileSize_1","TileGroup","ZoomifyTileClass","ol","colorlike","featureloader","has","loadingstrategy","proj4","webgl","sphere","unByKey","stableSort","compareFnc","createStringXY","toStringHDMS","upAndDown","click","doubleClick","platformModifierKeyOnly","writeFilter","between","during","equalTo","greaterThan","greaterThanOrEqualTo","isNull","lessThan","lessThanOrEqualTo","like","not","notEqualTo","or","within","createBox","boxCoordinates","createRegularPolygon","fromLonLat","projCodes","defs","def","axis","to_meter","code1","proj1","code2","proj2","toLonLat","lonLat","getRenderPixel","getVectorContext","toContext","optionsFromCapabilities","wmtsCap","tileMatrixSets","supportedCRS","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","gets","encodings","__webpack_exports__"],"mappings":"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","file":"ol.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ol\"] = factory();\n\telse\n\t\troot[\"ol\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","/**\r\n * @module ol/array\r\n */\r\n/**\r\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\r\n * https://github.com/darkskyapp/binary-search\r\n *\r\n * @param {Array<*>} haystack Items to search through.\r\n * @param {*} needle The item to look for.\r\n * @param {Function=} opt_comparator Comparator function.\r\n * @return {number} The index of the item if found, -1 if not.\r\n */\r\nexport function binarySearch(haystack, needle, opt_comparator) {\r\n    var mid, cmp;\r\n    var comparator = opt_comparator || numberSafeCompareFunction;\r\n    var low = 0;\r\n    var high = haystack.length;\r\n    var found = false;\r\n    while (low < high) {\r\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\r\n         * to double (which gives the wrong results). */\r\n        mid = low + (high - low >> 1);\r\n        cmp = +comparator(haystack[mid], needle);\r\n        if (cmp < 0.0) { /* Too low. */\r\n            low = mid + 1;\r\n        }\r\n        else { /* Key found or too high */\r\n            high = mid;\r\n            found = !cmp;\r\n        }\r\n    }\r\n    /* Key not found. */\r\n    return found ? low : ~low;\r\n}\r\n/**\r\n * Compare function for array sort that is safe for numbers.\r\n * @param {*} a The first object to be compared.\r\n * @param {*} b The second object to be compared.\r\n * @return {number} A negative number, zero, or a positive number as the first\r\n *     argument is less than, equal to, or greater than the second.\r\n */\r\nexport function numberSafeCompareFunction(a, b) {\r\n    return a > b ? 1 : a < b ? -1 : 0;\r\n}\r\n/**\r\n * Whether the array contains the given object.\r\n * @param {Array<*>} arr The array to test for the presence of the element.\r\n * @param {*} obj The object for which to test.\r\n * @return {boolean} The object is in the array.\r\n */\r\nexport function includes(arr, obj) {\r\n    return arr.indexOf(obj) >= 0;\r\n}\r\n/**\r\n * @param {Array<number>} arr Array.\r\n * @param {number} target Target.\r\n * @param {number} direction 0 means return the nearest, > 0\r\n *    means return the largest nearest, < 0 means return the\r\n *    smallest nearest.\r\n * @return {number} Index.\r\n */\r\nexport function linearFindNearest(arr, target, direction) {\r\n    var n = arr.length;\r\n    if (arr[0] <= target) {\r\n        return 0;\r\n    }\r\n    else if (target <= arr[n - 1]) {\r\n        return n - 1;\r\n    }\r\n    else {\r\n        var i = void 0;\r\n        if (direction > 0) {\r\n            for (i = 1; i < n; ++i) {\r\n                if (arr[i] < target) {\r\n                    return i - 1;\r\n                }\r\n            }\r\n        }\r\n        else if (direction < 0) {\r\n            for (i = 1; i < n; ++i) {\r\n                if (arr[i] <= target) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (i = 1; i < n; ++i) {\r\n                if (arr[i] == target) {\r\n                    return i;\r\n                }\r\n                else if (arr[i] < target) {\r\n                    if (arr[i - 1] - target < target - arr[i]) {\r\n                        return i - 1;\r\n                    }\r\n                    else {\r\n                        return i;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return n - 1;\r\n    }\r\n}\r\n/**\r\n * @param {Array<*>} arr Array.\r\n * @param {number} begin Begin index.\r\n * @param {number} end End index.\r\n */\r\nexport function reverseSubArray(arr, begin, end) {\r\n    while (begin < end) {\r\n        var tmp = arr[begin];\r\n        arr[begin] = arr[end];\r\n        arr[end] = tmp;\r\n        ++begin;\r\n        --end;\r\n    }\r\n}\r\n/**\r\n * @param {Array<VALUE>} arr The array to modify.\r\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\r\n * @template VALUE\r\n */\r\nexport function extend(arr, data) {\r\n    var extension = Array.isArray(data) ? data : [data];\r\n    var length = extension.length;\r\n    for (var i = 0; i < length; i++) {\r\n        arr[arr.length] = extension[i];\r\n    }\r\n}\r\n/**\r\n * @param {Array<VALUE>} arr The array to modify.\r\n * @param {VALUE} obj The element to remove.\r\n * @template VALUE\r\n * @return {boolean} If the element was removed.\r\n */\r\nexport function remove(arr, obj) {\r\n    var i = arr.indexOf(obj);\r\n    var found = i > -1;\r\n    if (found) {\r\n        arr.splice(i, 1);\r\n    }\r\n    return found;\r\n}\r\n/**\r\n * @param {Array<VALUE>} arr The array to search in.\r\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\r\n * @template VALUE\r\n * @return {VALUE|null} The element found or null.\r\n */\r\nexport function find(arr, func) {\r\n    var length = arr.length >>> 0;\r\n    var value;\r\n    for (var i = 0; i < length; i++) {\r\n        value = arr[i];\r\n        if (func(value, i, arr)) {\r\n            return value;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\r\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\r\n * @return {boolean} Whether the two arrays are equal.\r\n */\r\nexport function equals(arr1, arr2) {\r\n    var len1 = arr1.length;\r\n    if (len1 !== arr2.length) {\r\n        return false;\r\n    }\r\n    for (var i = 0; i < len1; i++) {\r\n        if (arr1[i] !== arr2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Sort the passed array such that the relative order of equal elements is preverved.\r\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\r\n * @param {Array<*>} arr The array to sort (modifies original).\r\n * @param {!function(*, *): number} compareFnc Comparison function.\r\n * @api\r\n */\r\nexport function stableSort(arr, compareFnc) {\r\n    var length = arr.length;\r\n    var tmp = Array(arr.length);\r\n    var i;\r\n    for (i = 0; i < length; i++) {\r\n        tmp[i] = { index: i, value: arr[i] };\r\n    }\r\n    tmp.sort(function (a, b) {\r\n        return compareFnc(a.value, b.value) || a.index - b.index;\r\n    });\r\n    for (i = 0; i < arr.length; i++) {\r\n        arr[i] = tmp[i].value;\r\n    }\r\n}\r\n/**\r\n * @param {Array<*>} arr The array to search in.\r\n * @param {Function} func Comparison function.\r\n * @return {number} Return index.\r\n */\r\nexport function findIndex(arr, func) {\r\n    var index;\r\n    var found = !arr.every(function (el, idx) {\r\n        index = idx;\r\n        return !func(el, idx, arr);\r\n    });\r\n    return found ? index : -1;\r\n}\r\n/**\r\n * @param {Array<*>} arr The array to test.\r\n * @param {Function=} opt_func Comparison function.\r\n * @param {boolean=} opt_strict Strictly sorted (default false).\r\n * @return {boolean} Return index.\r\n */\r\nexport function isSorted(arr, opt_func, opt_strict) {\r\n    var compare = opt_func || numberSafeCompareFunction;\r\n    return arr.every(function (currentVal, index) {\r\n        if (index === 0) {\r\n            return true;\r\n        }\r\n        var res = compare(arr[index - 1], currentVal);\r\n        return !(res > 0 || opt_strict && res === 0);\r\n    });\r\n}\r\n//# sourceMappingURL=array.js.map","/**\r\n * @module ol/util\r\n */\r\n/**\r\n * @return {?} Any return.\r\n */\r\nexport function abstract() {\r\n    return /** @type {?} */ ((function () {\r\n        throw new Error('Unimplemented abstract method.');\r\n    })());\r\n}\r\n/**\r\n * Counter for getUid.\r\n * @type {number}\r\n * @private\r\n */\r\nvar uidCounter_ = 0;\r\n/**\r\n * Gets a unique ID for an object. This mutates the object so that further calls\r\n * with the same object as a parameter returns the same value. Unique IDs are generated\r\n * as a strictly increasing sequence. Adapted from goog.getUid.\r\n *\r\n * @param {Object} obj The object to get the unique ID for.\r\n * @return {string} The unique ID for the object.\r\n * @function module:ol.getUid\r\n * @api\r\n */\r\nexport function getUid(obj) {\r\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\r\n}\r\n/**\r\n * OpenLayers version.\r\n * @type {string}\r\n */\r\nexport var VERSION = '5.3.0';\r\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/AssertionError\r\n */\r\nimport { VERSION } from './util.js';\r\n/**\r\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\r\n * extended with a `code` property.\r\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\r\n */\r\nvar AssertionError = /** @class */ (function (_super) {\r\n    __extends(AssertionError, _super);\r\n    /**\r\n     * @param {number} code Error code.\r\n     */\r\n    function AssertionError(code) {\r\n        var _this = this;\r\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\r\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\r\n            '/doc/errors/#' + code + ' for details.';\r\n        _this = _super.call(this, message) || this;\r\n        /**\r\n         * Error code. The meaning of the code can be found on\r\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\r\n         * the version found in the OpenLayers script's header comment if a version\r\n         * other than the latest is used).\r\n         * @type {number}\r\n         * @api\r\n         */\r\n        _this.code = code;\r\n        /**\r\n         * @type {string}\r\n         */\r\n        _this.name = 'AssertionError';\r\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\r\n        _this.message = message;\r\n        return _this;\r\n    }\r\n    return AssertionError;\r\n}(Error));\r\nexport default AssertionError;\r\n//# sourceMappingURL=AssertionError.js.map","/**\r\n * @module ol/CollectionEventType\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n    /**\r\n     * Triggered when an item is added to the collection.\r\n     * @event module:ol/Collection.CollectionEvent#add\r\n     * @api\r\n     */\r\n    ADD: 'add',\r\n    /**\r\n     * Triggered when an item is removed from the collection.\r\n     * @event module:ol/Collection.CollectionEvent#remove\r\n     * @api\r\n     */\r\n    REMOVE: 'remove'\r\n};\r\n//# sourceMappingURL=CollectionEventType.js.map","/**\r\n * @module ol/ObjectEventType\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n    /**\r\n     * Triggered when a property is changed.\r\n     * @event module:ol/Object.ObjectEvent#propertychange\r\n     * @api\r\n     */\r\n    PROPERTYCHANGE: 'propertychange'\r\n};\r\n//# sourceMappingURL=ObjectEventType.js.map","/**\r\n * @module ol/obj\r\n */\r\n/**\r\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\r\n * one or more source objects to a target object.\r\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\r\n *\r\n * @param {!Object} target The target object.\r\n * @param {...Object} var_sources The source object(s).\r\n * @return {!Object} The modified target object.\r\n */\r\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\r\n    if (target === undefined || target === null) {\r\n        throw new TypeError('Cannot convert undefined or null to object');\r\n    }\r\n    var output = Object(target);\r\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\r\n        var source = arguments[i];\r\n        if (source !== undefined && source !== null) {\r\n            for (var key in source) {\r\n                if (source.hasOwnProperty(key)) {\r\n                    output[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return output;\r\n};\r\n/**\r\n * Removes all properties from an object.\r\n * @param {Object} object The object to clear.\r\n */\r\nexport function clear(object) {\r\n    for (var property in object) {\r\n        delete object[property];\r\n    }\r\n}\r\n/**\r\n * Polyfill for Object.values().  Get an array of property values from an object.\r\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\r\n *\r\n * @param {!Object<K,V>} object The object from which to get the values.\r\n * @return {!Array<V>} The property values.\r\n * @template K,V\r\n */\r\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\r\n    var values = [];\r\n    for (var property in object) {\r\n        values.push(object[property]);\r\n    }\r\n    return values;\r\n};\r\n/**\r\n * Determine if an object has any properties.\r\n * @param {Object} object The object to check.\r\n * @return {boolean} The object is empty.\r\n */\r\nexport function isEmpty(object) {\r\n    var property;\r\n    for (property in object) {\r\n        return false;\r\n    }\r\n    return !property;\r\n}\r\n//# sourceMappingURL=obj.js.map","/**\r\n * @module ol/events\r\n */\r\nimport { clear } from './obj.js';\r\n/**\r\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\r\n * @typedef {Object} EventsKey\r\n * @property {Object} [bindTo]\r\n * @property {ListenerFunction} [boundListener]\r\n * @property {boolean} callOnce\r\n * @property {number} [deleteIndex]\r\n * @property {ListenerFunction} listener\r\n * @property {import(\"./events/Target.js\").EventTargetLike} target\r\n * @property {string} type\r\n * @api\r\n */\r\n/**\r\n * Listener function. This function is called with an event object as argument.\r\n * When the function returns `false`, event propagation will stop.\r\n *\r\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\r\n * @api\r\n */\r\n/**\r\n * @param {EventsKey} listenerObj Listener object.\r\n * @return {ListenerFunction} Bound listener.\r\n */\r\nexport function bindListener(listenerObj) {\r\n    var boundListener = function (evt) {\r\n        var listener = listenerObj.listener;\r\n        var bindTo = listenerObj.bindTo || listenerObj.target;\r\n        if (listenerObj.callOnce) {\r\n            unlistenByKey(listenerObj);\r\n        }\r\n        return listener.call(bindTo, evt);\r\n    };\r\n    listenerObj.boundListener = boundListener;\r\n    return boundListener;\r\n}\r\n/**\r\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\r\n * array.\r\n *\r\n * @param {!Array<!EventsKey>} listeners Array of listeners.\r\n * @param {!Function} listener The listener function.\r\n * @param {Object=} opt_this The `this` value inside the listener.\r\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\r\n *     listener, for {@link module:ol/events~unlistenByKey}.\r\n * @return {EventsKey|undefined} The matching listener object.\r\n */\r\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\r\n    var listenerObj;\r\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\r\n        listenerObj = listeners[i];\r\n        if (listenerObj.listener === listener &&\r\n            listenerObj.bindTo === opt_this) {\r\n            if (opt_setDeleteIndex) {\r\n                listenerObj.deleteIndex = i;\r\n            }\r\n            return listenerObj;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n/**\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\r\n * @param {string} type Type.\r\n * @return {Array<EventsKey>|undefined} Listeners.\r\n */\r\nexport function getListeners(target, type) {\r\n    var listenerMap = getListenerMap(target);\r\n    return listenerMap ? listenerMap[type] : undefined;\r\n}\r\n/**\r\n * Get the lookup of listeners.\r\n * @param {Object} target Target.\r\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\r\n * @return {!Object<string, Array<EventsKey>>} Map of\r\n *     listeners by event type.\r\n */\r\nfunction getListenerMap(target, opt_create) {\r\n    var listenerMap = target.ol_lm;\r\n    if (!listenerMap && opt_create) {\r\n        listenerMap = target.ol_lm = {};\r\n    }\r\n    return listenerMap;\r\n}\r\n/**\r\n * Remove the listener map from a target.\r\n * @param {Object} target Target.\r\n */\r\nfunction removeListenerMap(target) {\r\n    delete target.ol_lm;\r\n}\r\n/**\r\n * Clean up all listener objects of the given type.  All properties on the\r\n * listener objects will be removed, and if no listeners remain in the listener\r\n * map, it will be removed from the target.\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\r\n * @param {string} type Type.\r\n */\r\nfunction removeListeners(target, type) {\r\n    var listeners = getListeners(target, type);\r\n    if (listeners) {\r\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\r\n            /** @type {import(\"./events/Target.js\").default} */ (target).\r\n                removeEventListener(type, listeners[i].boundListener);\r\n            clear(listeners[i]);\r\n        }\r\n        listeners.length = 0;\r\n        var listenerMap = getListenerMap(target);\r\n        if (listenerMap) {\r\n            delete listenerMap[type];\r\n            if (Object.keys(listenerMap).length === 0) {\r\n                removeListenerMap(target);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Registers an event listener on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * This function efficiently binds a `listener` to a `this` object, and returns\r\n * a key for use with {@link module:ol/events~unlistenByKey}.\r\n *\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\r\n * @param {string} type Event type.\r\n * @param {ListenerFunction} listener Listener.\r\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\r\n *     listener. Default is the `target`.\r\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\r\n * @return {EventsKey} Unique key for the listener.\r\n */\r\nexport function listen(target, type, listener, opt_this, opt_once) {\r\n    var listenerMap = getListenerMap(target, true);\r\n    var listeners = listenerMap[type];\r\n    if (!listeners) {\r\n        listeners = listenerMap[type] = [];\r\n    }\r\n    var listenerObj = findListener(listeners, listener, opt_this, false);\r\n    if (listenerObj) {\r\n        if (!opt_once) {\r\n            // Turn one-off listener into a permanent one.\r\n            listenerObj.callOnce = false;\r\n        }\r\n    }\r\n    else {\r\n        listenerObj = {\r\n            bindTo: opt_this,\r\n            callOnce: !!opt_once,\r\n            listener: listener,\r\n            target: target,\r\n            type: type\r\n        };\r\n        /** @type {import(\"./events/Target.js\").default} */ (target).\r\n            addEventListener(type, bindListener(listenerObj));\r\n        listeners.push(listenerObj);\r\n    }\r\n    return listenerObj;\r\n}\r\n/**\r\n * Registers a one-off event listener on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * This function efficiently binds a `listener` as self-unregistering listener\r\n * to a `this` object, and returns a key for use with\r\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\r\n * unregistered before it is called.\r\n *\r\n * When {@link module:ol/events~listen} is called with the same arguments after this\r\n * function, the self-unregistering listener will be turned into a permanent\r\n * listener.\r\n *\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\r\n * @param {string} type Event type.\r\n * @param {ListenerFunction} listener Listener.\r\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\r\n *     listener. Default is the `target`.\r\n * @return {EventsKey} Key for unlistenByKey.\r\n */\r\nexport function listenOnce(target, type, listener, opt_this) {\r\n    return listen(target, type, listener, opt_this, true);\r\n}\r\n/**\r\n * Unregisters an event listener on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * To return a listener, this function needs to be called with the exact same\r\n * arguments that were used for a previous {@link module:ol/events~listen} call.\r\n *\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\r\n * @param {string} type Event type.\r\n * @param {ListenerFunction} listener Listener.\r\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\r\n *     listener. Default is the `target`.\r\n */\r\nexport function unlisten(target, type, listener, opt_this) {\r\n    var listeners = getListeners(target, type);\r\n    if (listeners) {\r\n        var listenerObj = findListener(listeners, listener, opt_this, true);\r\n        if (listenerObj) {\r\n            unlistenByKey(listenerObj);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Unregisters event listeners on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * The argument passed to this function is the key returned from\r\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\r\n *\r\n * @param {EventsKey} key The key.\r\n */\r\nexport function unlistenByKey(key) {\r\n    if (key && key.target) {\r\n        /** @type {import(\"./events/Target.js\").default} */ (key.target).\r\n            removeEventListener(key.type, key.boundListener);\r\n        var listeners = getListeners(key.target, key.type);\r\n        if (listeners) {\r\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\r\n            if (i !== -1) {\r\n                listeners.splice(i, 1);\r\n            }\r\n            if (listeners.length === 0) {\r\n                removeListeners(key.target, key.type);\r\n            }\r\n        }\r\n        clear(key);\r\n    }\r\n}\r\n/**\r\n * Unregisters all event listeners on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\r\n */\r\nexport function unlistenAll(target) {\r\n    var listenerMap = getListenerMap(target);\r\n    if (listenerMap) {\r\n        for (var type in listenerMap) {\r\n            removeListeners(target, type);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=events.js.map","/**\r\n * @module ol/Disposable\r\n */\r\n/**\r\n * @classdesc\r\n * Objects that need to clean up after themselves.\r\n */\r\nvar Disposable = /** @class */ (function () {\r\n    function Disposable() {\r\n        /**\r\n         * The object has already been disposed.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this.disposed_ = false;\r\n    }\r\n    /**\r\n     * Clean up.\r\n     */\r\n    Disposable.prototype.dispose = function () {\r\n        if (!this.disposed_) {\r\n            this.disposed_ = true;\r\n            this.disposeInternal();\r\n        }\r\n    };\r\n    /**\r\n     * Extension point for disposable objects.\r\n     * @protected\r\n     */\r\n    Disposable.prototype.disposeInternal = function () { };\r\n    return Disposable;\r\n}());\r\nexport default Disposable;\r\n//# sourceMappingURL=Disposable.js.map","/**\r\n * @module ol/functions\r\n */\r\n/**\r\n * Always returns true.\r\n * @returns {boolean} true.\r\n */\r\nexport function TRUE() {\r\n    return true;\r\n}\r\n/**\r\n * Always returns false.\r\n * @returns {boolean} false.\r\n */\r\nexport function FALSE() {\r\n    return false;\r\n}\r\n/**\r\n * A reusable function, used e.g. as a default for callbacks.\r\n *\r\n * @return {void} Nothing.\r\n */\r\nexport function VOID() { }\r\n//# sourceMappingURL=functions.js.map","/**\r\n * @module ol/events/Event\r\n */\r\n/**\r\n * @classdesc\r\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\r\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\r\n *\r\n * This implementation only provides `type` and `target` properties, and\r\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\r\n * for higher level events defined in the library, and works with\r\n * {@link module:ol/events/Target~Target}.\r\n */\r\nvar Event = /** @class */ (function () {\r\n    /**\r\n     * @param {string} type Type.\r\n     */\r\n    function Event(type) {\r\n        /**\r\n         * @type {boolean}\r\n         */\r\n        this.propagationStopped;\r\n        /**\r\n         * The event type.\r\n         * @type {string}\r\n         * @api\r\n         */\r\n        this.type = type;\r\n        /**\r\n         * The event target.\r\n         * @type {Object}\r\n         * @api\r\n         */\r\n        this.target = null;\r\n    }\r\n    /**\r\n     * Stop event propagation.\r\n     * @api\r\n     */\r\n    Event.prototype.preventDefault = function () {\r\n        this.propagationStopped = true;\r\n    };\r\n    /**\r\n     * Stop event propagation.\r\n     * @api\r\n     */\r\n    Event.prototype.stopPropagation = function () {\r\n        this.propagationStopped = true;\r\n    };\r\n    return Event;\r\n}());\r\n/**\r\n * @param {Event|import(\"./Event.js\").default} evt Event\r\n */\r\nexport function stopPropagation(evt) {\r\n    evt.stopPropagation();\r\n}\r\n/**\r\n * @param {Event|import(\"./Event.js\").default} evt Event\r\n */\r\nexport function preventDefault(evt) {\r\n    evt.preventDefault();\r\n}\r\nexport default Event;\r\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/events/Target\r\n */\r\nimport Disposable from '../Disposable.js';\r\nimport { unlistenAll } from '../events.js';\r\nimport { VOID } from '../functions.js';\r\nimport Event from './Event.js';\r\n/**\r\n * @typedef {EventTarget|Target} EventTargetLike\r\n */\r\n/**\r\n * @classdesc\r\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\r\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\r\n *\r\n * There are two important simplifications compared to the specification:\r\n *\r\n * 1. The handling of `useCapture` in `addEventListener` and\r\n *    `removeEventListener`. There is no real capture model.\r\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\r\n *    There is no event target hierarchy. When a listener calls\r\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\r\n *    more listeners after this one will be called. Same as when the listener\r\n *    returns false.\r\n */\r\nvar Target = /** @class */ (function (_super) {\r\n    __extends(Target, _super);\r\n    function Target() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @private\r\n         * @type {!Object<string, number>}\r\n         */\r\n        _this.pendingRemovals_ = {};\r\n        /**\r\n         * @private\r\n         * @type {!Object<string, number>}\r\n         */\r\n        _this.dispatching_ = {};\r\n        /**\r\n         * @private\r\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\r\n         */\r\n        _this.listeners_ = {};\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {string} type Type.\r\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\r\n     */\r\n    Target.prototype.addEventListener = function (type, listener) {\r\n        var listeners = this.listeners_[type];\r\n        if (!listeners) {\r\n            listeners = this.listeners_[type] = [];\r\n        }\r\n        if (listeners.indexOf(listener) === -1) {\r\n            listeners.push(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Dispatches an event and calls all listeners listening for events\r\n     * of this type. The event parameter can either be a string or an\r\n     * Object with a `type` property.\r\n     *\r\n     * @param {{type: string,\r\n     *     target: (EventTargetLike|undefined),\r\n     *     propagationStopped: (boolean|undefined)}|\r\n     *     import(\"./Event.js\").default|string} event Event object.\r\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\r\n     *     event object or if any of the listeners returned false.\r\n     * @api\r\n     */\r\n    Target.prototype.dispatchEvent = function (event) {\r\n        var evt = typeof event === 'string' ? new Event(event) : event;\r\n        var type = evt.type;\r\n        evt.target = this;\r\n        var listeners = this.listeners_[type];\r\n        var propagate;\r\n        if (listeners) {\r\n            if (!(type in this.dispatching_)) {\r\n                this.dispatching_[type] = 0;\r\n                this.pendingRemovals_[type] = 0;\r\n            }\r\n            ++this.dispatching_[type];\r\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\r\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\r\n                    propagate = false;\r\n                    break;\r\n                }\r\n            }\r\n            --this.dispatching_[type];\r\n            if (this.dispatching_[type] === 0) {\r\n                var pendingRemovals = this.pendingRemovals_[type];\r\n                delete this.pendingRemovals_[type];\r\n                while (pendingRemovals--) {\r\n                    this.removeEventListener(type, VOID);\r\n                }\r\n                delete this.dispatching_[type];\r\n            }\r\n            return propagate;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Target.prototype.disposeInternal = function () {\r\n        unlistenAll(this);\r\n    };\r\n    /**\r\n     * Get the listeners for a specified event type. Listeners are returned in the\r\n     * order that they will be called in.\r\n     *\r\n     * @param {string} type Type.\r\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\r\n     */\r\n    Target.prototype.getListeners = function (type) {\r\n        return this.listeners_[type];\r\n    };\r\n    /**\r\n     * @param {string=} opt_type Type. If not provided,\r\n     *     `true` will be returned if this event target has any listeners.\r\n     * @return {boolean} Has listeners.\r\n     */\r\n    Target.prototype.hasListener = function (opt_type) {\r\n        return opt_type ?\r\n            opt_type in this.listeners_ :\r\n            Object.keys(this.listeners_).length > 0;\r\n    };\r\n    /**\r\n     * @param {string} type Type.\r\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\r\n     */\r\n    Target.prototype.removeEventListener = function (type, listener) {\r\n        var listeners = this.listeners_[type];\r\n        if (listeners) {\r\n            var index = listeners.indexOf(listener);\r\n            if (type in this.pendingRemovals_) {\r\n                // make listener a no-op, and remove later in #dispatchEvent()\r\n                listeners[index] = VOID;\r\n                ++this.pendingRemovals_[type];\r\n            }\r\n            else {\r\n                listeners.splice(index, 1);\r\n                if (listeners.length === 0) {\r\n                    delete this.listeners_[type];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return Target;\r\n}(Disposable));\r\nexport default Target;\r\n//# sourceMappingURL=Target.js.map","/**\r\n * @module ol/events/EventType\r\n */\r\n/**\r\n * @enum {string}\r\n * @const\r\n */\r\nexport default {\r\n    /**\r\n     * Generic change event. Triggered when the revision counter is increased.\r\n     * @event module:ol/events/Event~Event#change\r\n     * @api\r\n     */\r\n    CHANGE: 'change',\r\n    CLEAR: 'clear',\r\n    CONTEXTMENU: 'contextmenu',\r\n    CLICK: 'click',\r\n    DBLCLICK: 'dblclick',\r\n    DRAGENTER: 'dragenter',\r\n    DRAGOVER: 'dragover',\r\n    DROP: 'drop',\r\n    ERROR: 'error',\r\n    KEYDOWN: 'keydown',\r\n    KEYPRESS: 'keypress',\r\n    LOAD: 'load',\r\n    MOUSEDOWN: 'mousedown',\r\n    MOUSEMOVE: 'mousemove',\r\n    MOUSEOUT: 'mouseout',\r\n    MOUSEUP: 'mouseup',\r\n    MOUSEWHEEL: 'mousewheel',\r\n    MSPOINTERDOWN: 'MSPointerDown',\r\n    RESIZE: 'resize',\r\n    TOUCHSTART: 'touchstart',\r\n    TOUCHMOVE: 'touchmove',\r\n    TOUCHEND: 'touchend',\r\n    WHEEL: 'wheel'\r\n};\r\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/Observable\r\n */\r\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\r\nimport EventTarget from './events/Target.js';\r\nimport EventType from './events/EventType.js';\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * An event target providing convenient methods for listener registration\r\n * and unregistration. A generic `change` event is always available through\r\n * {@link module:ol/Observable~Observable#changed}.\r\n *\r\n * @fires import(\"./events/Event.js\").Event\r\n * @api\r\n */\r\nvar Observable = /** @class */ (function (_super) {\r\n    __extends(Observable, _super);\r\n    function Observable() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.revision_ = 0;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Increases the revision counter and dispatches a 'change' event.\r\n     * @api\r\n     */\r\n    Observable.prototype.changed = function () {\r\n        ++this.revision_;\r\n        this.dispatchEvent(EventType.CHANGE);\r\n    };\r\n    /**\r\n     * Get the version number for this object.  Each time the object is modified,\r\n     * its version number will be incremented.\r\n     * @return {number} Revision.\r\n     * @api\r\n     */\r\n    Observable.prototype.getRevision = function () {\r\n        return this.revision_;\r\n    };\r\n    /**\r\n     * Listen for a certain type of event.\r\n     * @param {string|Array<string>} type The event type or array of event types.\r\n     * @param {function(?): ?} listener The listener function.\r\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\r\n     *     called with an array of event types as the first argument, the return\r\n     *     will be an array of keys.\r\n     * @api\r\n     */\r\n    Observable.prototype.on = function (type, listener) {\r\n        if (Array.isArray(type)) {\r\n            var len = type.length;\r\n            var keys = new Array(len);\r\n            for (var i = 0; i < len; ++i) {\r\n                keys[i] = listen(this, type[i], listener);\r\n            }\r\n            return keys;\r\n        }\r\n        else {\r\n            return listen(this, /** @type {string} */ (type), listener);\r\n        }\r\n    };\r\n    /**\r\n     * Listen once for a certain type of event.\r\n     * @param {string|Array<string>} type The event type or array of event types.\r\n     * @param {function(?): ?} listener The listener function.\r\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\r\n     *     called with an array of event types as the first argument, the return\r\n     *     will be an array of keys.\r\n     * @api\r\n     */\r\n    Observable.prototype.once = function (type, listener) {\r\n        if (Array.isArray(type)) {\r\n            var len = type.length;\r\n            var keys = new Array(len);\r\n            for (var i = 0; i < len; ++i) {\r\n                keys[i] = listenOnce(this, type[i], listener);\r\n            }\r\n            return keys;\r\n        }\r\n        else {\r\n            return listenOnce(this, /** @type {string} */ (type), listener);\r\n        }\r\n    };\r\n    /**\r\n     * Unlisten for a certain type of event.\r\n     * @param {string|Array<string>} type The event type or array of event types.\r\n     * @param {function(?): ?} listener The listener function.\r\n     * @api\r\n     */\r\n    Observable.prototype.un = function (type, listener) {\r\n        if (Array.isArray(type)) {\r\n            for (var i = 0, ii = type.length; i < ii; ++i) {\r\n                unlisten(this, type[i], listener);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            unlisten(this, /** @type {string} */ (type), listener);\r\n        }\r\n    };\r\n    return Observable;\r\n}(EventTarget));\r\n/**\r\n * Removes an event listener using the key returned by `on()` or `once()`.\r\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\r\n *     or `once()` (or an array of keys).\r\n * @api\r\n */\r\nexport function unByKey(key) {\r\n    if (Array.isArray(key)) {\r\n        for (var i = 0, ii = key.length; i < ii; ++i) {\r\n            unlistenByKey(key[i]);\r\n        }\r\n    }\r\n    else {\r\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\r\n    }\r\n}\r\nexport default Observable;\r\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/Object\r\n */\r\nimport { getUid } from './util.js';\r\nimport ObjectEventType from './ObjectEventType.js';\r\nimport Observable from './Observable.js';\r\nimport Event from './events/Event.js';\r\nimport { assign } from './obj.js';\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\r\n */\r\nvar ObjectEvent = /** @class */ (function (_super) {\r\n    __extends(ObjectEvent, _super);\r\n    /**\r\n     * @param {string} type The event type.\r\n     * @param {string} key The property name.\r\n     * @param {*} oldValue The old value for `key`.\r\n     */\r\n    function ObjectEvent(type, key, oldValue) {\r\n        var _this = _super.call(this, type) || this;\r\n        /**\r\n         * The name of the property whose value is changing.\r\n         * @type {string}\r\n         * @api\r\n         */\r\n        _this.key = key;\r\n        /**\r\n         * The old value. To get the new value use `e.target.get(e.key)` where\r\n         * `e` is the event object.\r\n         * @type {*}\r\n         * @api\r\n         */\r\n        _this.oldValue = oldValue;\r\n        return _this;\r\n    }\r\n    return ObjectEvent;\r\n}(Event));\r\nexport { ObjectEvent };\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Most non-trivial classes inherit from this.\r\n *\r\n * This extends {@link module:ol/Observable} with observable\r\n * properties, where each property is observable as well as the object as a\r\n * whole.\r\n *\r\n * Classes that inherit from this have pre-defined properties, to which you can\r\n * add your owns. The pre-defined properties are listed in this documentation as\r\n * 'Observable Properties', and have their own accessors; for example,\r\n * {@link module:ol/Map~Map} has a `target` property, accessed with\r\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\r\n * settable. There are also general-purpose accessors `get()` and `set()`. For\r\n * example, `get('target')` is equivalent to `getTarget()`.\r\n *\r\n * The `set` accessors trigger a change event, and you can monitor this by\r\n * registering a listener. For example, {@link module:ol/View~View} has a\r\n * `center` property, so `view.on('change:center', function(evt) {...});` would\r\n * call the function whenever the value of the center property changes. Within\r\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\r\n * would return the new center.\r\n *\r\n * You can add your own observable properties with\r\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\r\n * You can listen for changes on that property value with\r\n * `object.on('change:prop', listener)`. You can get a list of all\r\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\r\n *\r\n * Note that the observable properties are separate from standard JS properties.\r\n * You can, for example, give your map object a title with\r\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\r\n * first will be a `hasOwnProperty`; the second will appear in\r\n * `getProperties()`. Only the second is observable.\r\n *\r\n * Properties can be deleted by using the unset method. E.g.\r\n * object.unset('foo').\r\n *\r\n * @fires ObjectEvent\r\n * @api\r\n */\r\nvar BaseObject = /** @class */ (function (_super) {\r\n    __extends(BaseObject, _super);\r\n    /**\r\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\r\n     */\r\n    function BaseObject(opt_values) {\r\n        var _this = _super.call(this) || this;\r\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\r\n        // the same as the order in which they were created.  This also helps to\r\n        // ensure that object properties are always added in the same order, which\r\n        // helps many JavaScript engines generate faster code.\r\n        getUid(_this);\r\n        /**\r\n         * @private\r\n         * @type {!Object<string, *>}\r\n         */\r\n        _this.values_ = {};\r\n        if (opt_values !== undefined) {\r\n            _this.setProperties(opt_values);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets a value.\r\n     * @param {string} key Key name.\r\n     * @return {*} Value.\r\n     * @api\r\n     */\r\n    BaseObject.prototype.get = function (key) {\r\n        var value;\r\n        if (this.values_.hasOwnProperty(key)) {\r\n            value = this.values_[key];\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Get a list of object property names.\r\n     * @return {Array<string>} List of property names.\r\n     * @api\r\n     */\r\n    BaseObject.prototype.getKeys = function () {\r\n        return Object.keys(this.values_);\r\n    };\r\n    /**\r\n     * Get an object of all property names and values.\r\n     * @return {Object<string, *>} Object.\r\n     * @api\r\n     */\r\n    BaseObject.prototype.getProperties = function () {\r\n        return assign({}, this.values_);\r\n    };\r\n    /**\r\n     * @param {string} key Key name.\r\n     * @param {*} oldValue Old value.\r\n     */\r\n    BaseObject.prototype.notify = function (key, oldValue) {\r\n        var eventType;\r\n        eventType = getChangeEventType(key);\r\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\r\n        eventType = ObjectEventType.PROPERTYCHANGE;\r\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\r\n    };\r\n    /**\r\n     * Sets a value.\r\n     * @param {string} key Key name.\r\n     * @param {*} value Value.\r\n     * @param {boolean=} opt_silent Update without triggering an event.\r\n     * @api\r\n     */\r\n    BaseObject.prototype.set = function (key, value, opt_silent) {\r\n        if (opt_silent) {\r\n            this.values_[key] = value;\r\n        }\r\n        else {\r\n            var oldValue = this.values_[key];\r\n            this.values_[key] = value;\r\n            if (oldValue !== value) {\r\n                this.notify(key, oldValue);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a collection of key-value pairs.  Note that this changes any existing\r\n     * properties and adds new ones (it does not remove any existing properties).\r\n     * @param {Object<string, *>} values Values.\r\n     * @param {boolean=} opt_silent Update without triggering an event.\r\n     * @api\r\n     */\r\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\r\n        for (var key in values) {\r\n            this.set(key, values[key], opt_silent);\r\n        }\r\n    };\r\n    /**\r\n     * Unsets a property.\r\n     * @param {string} key Key name.\r\n     * @param {boolean=} opt_silent Unset without triggering an event.\r\n     * @api\r\n     */\r\n    BaseObject.prototype.unset = function (key, opt_silent) {\r\n        if (key in this.values_) {\r\n            var oldValue = this.values_[key];\r\n            delete this.values_[key];\r\n            if (!opt_silent) {\r\n                this.notify(key, oldValue);\r\n            }\r\n        }\r\n    };\r\n    return BaseObject;\r\n}(Observable));\r\n/**\r\n * @type {Object<string, string>}\r\n */\r\nvar changeEventTypeCache = {};\r\n/**\r\n * @param {string} key Key name.\r\n * @return {string} Change name.\r\n */\r\nexport function getChangeEventType(key) {\r\n    return changeEventTypeCache.hasOwnProperty(key) ?\r\n        changeEventTypeCache[key] :\r\n        (changeEventTypeCache[key] = 'change:' + key);\r\n}\r\nexport default BaseObject;\r\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/Collection\r\n */\r\nimport AssertionError from './AssertionError.js';\r\nimport CollectionEventType from './CollectionEventType.js';\r\nimport BaseObject from './Object.js';\r\nimport Event from './events/Event.js';\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nvar Property = {\r\n    LENGTH: 'length'\r\n};\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\r\n * type.\r\n */\r\nvar CollectionEvent = /** @class */ (function (_super) {\r\n    __extends(CollectionEvent, _super);\r\n    /**\r\n     * @param {CollectionEventType} type Type.\r\n     * @param {*=} opt_element Element.\r\n     * @param {number} opt_index The index of the added or removed element.\r\n     */\r\n    function CollectionEvent(type, opt_element, opt_index) {\r\n        var _this = _super.call(this, type) || this;\r\n        /**\r\n         * The element that is added to or removed from the collection.\r\n         * @type {*}\r\n         * @api\r\n         */\r\n        _this.element = opt_element;\r\n        /**\r\n         * The index of the added or removed element.\r\n         * @type {number}\r\n         * @api\r\n         */\r\n        _this.index = opt_index;\r\n        return _this;\r\n    }\r\n    return CollectionEvent;\r\n}(Event));\r\nexport { CollectionEvent };\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean} [unique=false] Disallow the same item from being added to\r\n * the collection twice.\r\n */\r\n/**\r\n * @classdesc\r\n * An expanded version of standard JS Array, adding convenience methods for\r\n * manipulation. Add and remove changes to the Collection trigger a Collection\r\n * event. Note that this does not cover changes to the objects _within_ the\r\n * Collection; they trigger events on the appropriate object, not on the\r\n * Collection as a whole.\r\n *\r\n * @fires CollectionEvent\r\n *\r\n * @template T\r\n * @api\r\n */\r\nvar Collection = /** @class */ (function (_super) {\r\n    __extends(Collection, _super);\r\n    /**\r\n     * @param {Array<T>=} opt_array Array.\r\n     * @param {Options=} opt_options Collection options.\r\n     */\r\n    function Collection(opt_array, opt_options) {\r\n        var _this = _super.call(this) || this;\r\n        var options = opt_options || {};\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.unique_ = !!options.unique;\r\n        /**\r\n         * @private\r\n         * @type {!Array<T>}\r\n         */\r\n        _this.array_ = opt_array ? opt_array : [];\r\n        if (_this.unique_) {\r\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\r\n                _this.assertUnique_(_this.array_[i], i);\r\n            }\r\n        }\r\n        _this.updateLength_();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Remove all elements from the collection.\r\n     * @api\r\n     */\r\n    Collection.prototype.clear = function () {\r\n        while (this.getLength() > 0) {\r\n            this.pop();\r\n        }\r\n    };\r\n    /**\r\n     * Add elements to the collection.  This pushes each item in the provided array\r\n     * to the end of the collection.\r\n     * @param {!Array<T>} arr Array.\r\n     * @return {Collection<T>} This collection.\r\n     * @api\r\n     */\r\n    Collection.prototype.extend = function (arr) {\r\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\r\n            this.push(arr[i]);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Iterate over each element, calling the provided callback.\r\n     * @param {function(T, number, Array<T>): *} f The function to call\r\n     *     for every element. This function takes 3 arguments (the element, the\r\n     *     index and the array). The return value is ignored.\r\n     * @api\r\n     */\r\n    Collection.prototype.forEach = function (f) {\r\n        var array = this.array_;\r\n        for (var i = 0, ii = array.length; i < ii; ++i) {\r\n            f(array[i], i, array);\r\n        }\r\n    };\r\n    /**\r\n     * Get a reference to the underlying Array object. Warning: if the array\r\n     * is mutated, no events will be dispatched by the collection, and the\r\n     * collection's \"length\" property won't be in sync with the actual length\r\n     * of the array.\r\n     * @return {!Array<T>} Array.\r\n     * @api\r\n     */\r\n    Collection.prototype.getArray = function () {\r\n        return this.array_;\r\n    };\r\n    /**\r\n     * Get the element at the provided index.\r\n     * @param {number} index Index.\r\n     * @return {T} Element.\r\n     * @api\r\n     */\r\n    Collection.prototype.item = function (index) {\r\n        return this.array_[index];\r\n    };\r\n    /**\r\n     * Get the length of this collection.\r\n     * @return {number} The length of the array.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Collection.prototype.getLength = function () {\r\n        return this.get(Property.LENGTH);\r\n    };\r\n    /**\r\n     * Insert an element at the provided index.\r\n     * @param {number} index Index.\r\n     * @param {T} elem Element.\r\n     * @api\r\n     */\r\n    Collection.prototype.insertAt = function (index, elem) {\r\n        if (this.unique_) {\r\n            this.assertUnique_(elem);\r\n        }\r\n        this.array_.splice(index, 0, elem);\r\n        this.updateLength_();\r\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\r\n    };\r\n    /**\r\n     * Remove the last element of the collection and return it.\r\n     * Return `undefined` if the collection is empty.\r\n     * @return {T|undefined} Element.\r\n     * @api\r\n     */\r\n    Collection.prototype.pop = function () {\r\n        return this.removeAt(this.getLength() - 1);\r\n    };\r\n    /**\r\n     * Insert the provided element at the end of the collection.\r\n     * @param {T} elem Element.\r\n     * @return {number} New length of the collection.\r\n     * @api\r\n     */\r\n    Collection.prototype.push = function (elem) {\r\n        if (this.unique_) {\r\n            this.assertUnique_(elem);\r\n        }\r\n        var n = this.getLength();\r\n        this.insertAt(n, elem);\r\n        return this.getLength();\r\n    };\r\n    /**\r\n     * Remove the first occurrence of an element from the collection.\r\n     * @param {T} elem Element.\r\n     * @return {T|undefined} The removed element or undefined if none found.\r\n     * @api\r\n     */\r\n    Collection.prototype.remove = function (elem) {\r\n        var arr = this.array_;\r\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\r\n            if (arr[i] === elem) {\r\n                return this.removeAt(i);\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    /**\r\n     * Remove the element at the provided index and return it.\r\n     * Return `undefined` if the collection does not contain this index.\r\n     * @param {number} index Index.\r\n     * @return {T|undefined} Value.\r\n     * @api\r\n     */\r\n    Collection.prototype.removeAt = function (index) {\r\n        var prev = this.array_[index];\r\n        this.array_.splice(index, 1);\r\n        this.updateLength_();\r\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\r\n        return prev;\r\n    };\r\n    /**\r\n     * Set the element at the provided index.\r\n     * @param {number} index Index.\r\n     * @param {T} elem Element.\r\n     * @api\r\n     */\r\n    Collection.prototype.setAt = function (index, elem) {\r\n        var n = this.getLength();\r\n        if (index < n) {\r\n            if (this.unique_) {\r\n                this.assertUnique_(elem, index);\r\n            }\r\n            var prev = this.array_[index];\r\n            this.array_[index] = elem;\r\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\r\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\r\n        }\r\n        else {\r\n            for (var j = n; j < index; ++j) {\r\n                this.insertAt(j, undefined);\r\n            }\r\n            this.insertAt(index, elem);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    Collection.prototype.updateLength_ = function () {\r\n        this.set(Property.LENGTH, this.array_.length);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {T} elem Element.\r\n     * @param {number=} opt_except Optional index to ignore.\r\n     */\r\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\r\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\r\n            if (this.array_[i] === elem && i !== opt_except) {\r\n                throw new AssertionError(58);\r\n            }\r\n        }\r\n    };\r\n    return Collection;\r\n}(BaseObject));\r\nexport default Collection;\r\n//# sourceMappingURL=Collection.js.map","/**\r\n * @module ol/asserts\r\n */\r\nimport AssertionError from './AssertionError.js';\r\n/**\r\n * @param {*} assertion Assertion we expected to be truthy.\r\n * @param {number} errorCode Error code.\r\n */\r\nexport function assert(assertion, errorCode) {\r\n    if (!assertion) {\r\n        throw new AssertionError(errorCode);\r\n    }\r\n}\r\n//# sourceMappingURL=asserts.js.map","/**\r\n * @module ol/math\r\n */\r\nimport { assert } from './asserts.js';\r\n/**\r\n * Takes a number and clamps it to within the provided bounds.\r\n * @param {number} value The input number.\r\n * @param {number} min The minimum value to return.\r\n * @param {number} max The maximum value to return.\r\n * @return {number} The input number if it is within bounds, or the nearest\r\n *     number within the bounds.\r\n */\r\nexport function clamp(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n/**\r\n * Return the hyperbolic cosine of a given number. The method will use the\r\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\r\n * cosine will be calculated via the reference implementation of the Mozilla\r\n * developer network.\r\n *\r\n * @param {number} x X.\r\n * @return {number} Hyperbolic cosine of x.\r\n */\r\nexport var cosh = (function () {\r\n    // Wrapped in a iife, to save the overhead of checking for the native\r\n    // implementation on every invocation.\r\n    var cosh;\r\n    if ('cosh' in Math) {\r\n        // The environment supports the native Math.cosh function, use it…\r\n        cosh = Math.cosh;\r\n    }\r\n    else {\r\n        // … else, use the reference implementation of MDN:\r\n        cosh = function (x) {\r\n            var y = /** @type {Math} */ (Math).exp(x);\r\n            return (y + 1 / y) / 2;\r\n        };\r\n    }\r\n    return cosh;\r\n}());\r\n/**\r\n * @param {number} x X.\r\n * @return {number} The smallest power of two greater than or equal to x.\r\n */\r\nexport function roundUpToPowerOfTwo(x) {\r\n    assert(0 < x, 29); // `x` must be greater than `0`\r\n    return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\r\n}\r\n/**\r\n * Returns the square of the closest distance between the point (x, y) and the\r\n * line segment (x1, y1) to (x2, y2).\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {number} x1 X1.\r\n * @param {number} y1 Y1.\r\n * @param {number} x2 X2.\r\n * @param {number} y2 Y2.\r\n * @return {number} Squared distance.\r\n */\r\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\r\n    var dx = x2 - x1;\r\n    var dy = y2 - y1;\r\n    if (dx !== 0 || dy !== 0) {\r\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\r\n        if (t > 1) {\r\n            x1 = x2;\r\n            y1 = y2;\r\n        }\r\n        else if (t > 0) {\r\n            x1 += dx * t;\r\n            y1 += dy * t;\r\n        }\r\n    }\r\n    return squaredDistance(x, y, x1, y1);\r\n}\r\n/**\r\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\r\n * @param {number} x1 X1.\r\n * @param {number} y1 Y1.\r\n * @param {number} x2 X2.\r\n * @param {number} y2 Y2.\r\n * @return {number} Squared distance.\r\n */\r\nexport function squaredDistance(x1, y1, x2, y2) {\r\n    var dx = x2 - x1;\r\n    var dy = y2 - y1;\r\n    return dx * dx + dy * dy;\r\n}\r\n/**\r\n * Solves system of linear equations using Gaussian elimination method.\r\n *\r\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\r\n *                                     in row-major order.\r\n * @return {Array<number>} The resulting vector.\r\n */\r\nexport function solveLinearSystem(mat) {\r\n    var n = mat.length;\r\n    for (var i = 0; i < n; i++) {\r\n        // Find max in the i-th column (ignoring i - 1 first rows)\r\n        var maxRow = i;\r\n        var maxEl = Math.abs(mat[i][i]);\r\n        for (var r = i + 1; r < n; r++) {\r\n            var absValue = Math.abs(mat[r][i]);\r\n            if (absValue > maxEl) {\r\n                maxEl = absValue;\r\n                maxRow = r;\r\n            }\r\n        }\r\n        if (maxEl === 0) {\r\n            return null; // matrix is singular\r\n        }\r\n        // Swap max row with i-th (current) row\r\n        var tmp = mat[maxRow];\r\n        mat[maxRow] = mat[i];\r\n        mat[i] = tmp;\r\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\r\n        for (var j = i + 1; j < n; j++) {\r\n            var coef = -mat[j][i] / mat[i][i];\r\n            for (var k = i; k < n + 1; k++) {\r\n                if (i == k) {\r\n                    mat[j][k] = 0;\r\n                }\r\n                else {\r\n                    mat[j][k] += coef * mat[i][k];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Solve Ax=b for upper triangular matrix A (mat)\r\n    var x = new Array(n);\r\n    for (var l = n - 1; l >= 0; l--) {\r\n        x[l] = mat[l][n] / mat[l][l];\r\n        for (var m = l - 1; m >= 0; m--) {\r\n            mat[m][n] -= mat[m][l] * x[l];\r\n        }\r\n    }\r\n    return x;\r\n}\r\n/**\r\n * Converts radians to to degrees.\r\n *\r\n * @param {number} angleInRadians Angle in radians.\r\n * @return {number} Angle in degrees.\r\n */\r\nexport function toDegrees(angleInRadians) {\r\n    return angleInRadians * 180 / Math.PI;\r\n}\r\n/**\r\n * Converts degrees to radians.\r\n *\r\n * @param {number} angleInDegrees Angle in degrees.\r\n * @return {number} Angle in radians.\r\n */\r\nexport function toRadians(angleInDegrees) {\r\n    return angleInDegrees * Math.PI / 180;\r\n}\r\n/**\r\n * Returns the modulo of a / b, depending on the sign of b.\r\n *\r\n * @param {number} a Dividend.\r\n * @param {number} b Divisor.\r\n * @return {number} Modulo.\r\n */\r\nexport function modulo(a, b) {\r\n    var r = a % b;\r\n    return r * b < 0 ? r + b : r;\r\n}\r\n/**\r\n * Calculates the linearly interpolated value of x between a and b.\r\n *\r\n * @param {number} a Number\r\n * @param {number} b Number\r\n * @param {number} x Value to be interpolated.\r\n * @return {number} Interpolated value.\r\n */\r\nexport function lerp(a, b, x) {\r\n    return a + x * (b - a);\r\n}\r\n//# sourceMappingURL=math.js.map","/**\r\n * @module ol/color\r\n */\r\nimport { assert } from './asserts.js';\r\nimport { clamp } from './math.js';\r\n/**\r\n * A color represented as a short array [red, green, blue, alpha].\r\n * red, green, and blue should be integers in the range 0..255 inclusive.\r\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\r\n * given then `1` will be used.\r\n * @typedef {Array<number>} Color\r\n * @api\r\n */\r\n/**\r\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\r\n * @const\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\r\n/**\r\n * Regular expression for matching potential named color style strings.\r\n * @const\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\r\n/**\r\n * Return the color as an rgba string.\r\n * @param {Color|string} color Color.\r\n * @return {string} Rgba string.\r\n * @api\r\n */\r\nexport function asString(color) {\r\n    if (typeof color === 'string') {\r\n        return color;\r\n    }\r\n    else {\r\n        return toString(color);\r\n    }\r\n}\r\n/**\r\n * Return named color as an rgba string.\r\n * @param {string} color Named color.\r\n * @return {string} Rgb string.\r\n */\r\nfunction fromNamed(color) {\r\n    var el = document.createElement('div');\r\n    el.style.color = color;\r\n    if (el.style.color !== '') {\r\n        document.body.appendChild(el);\r\n        var rgb = getComputedStyle(el).color;\r\n        document.body.removeChild(el);\r\n        return rgb;\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * @param {string} s String.\r\n * @return {Color} Color.\r\n */\r\nexport var fromString = (function () {\r\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\r\n    // semantics, whenever the cache grows too large we simply delete an\r\n    // arbitrary 25% of the entries.\r\n    /**\r\n     * @const\r\n     * @type {number}\r\n     */\r\n    var MAX_CACHE_SIZE = 1024;\r\n    /**\r\n     * @type {Object<string, Color>}\r\n     */\r\n    var cache = {};\r\n    /**\r\n     * @type {number}\r\n     */\r\n    var cacheSize = 0;\r\n    return (\r\n    /**\r\n     * @param {string} s String.\r\n     * @return {Color} Color.\r\n     */\r\n    function (s) {\r\n        var color;\r\n        if (cache.hasOwnProperty(s)) {\r\n            color = cache[s];\r\n        }\r\n        else {\r\n            if (cacheSize >= MAX_CACHE_SIZE) {\r\n                var i = 0;\r\n                for (var key in cache) {\r\n                    if ((i++ & 3) === 0) {\r\n                        delete cache[key];\r\n                        --cacheSize;\r\n                    }\r\n                }\r\n            }\r\n            color = fromStringInternal_(s);\r\n            cache[s] = color;\r\n            ++cacheSize;\r\n        }\r\n        return color;\r\n    });\r\n})();\r\n/**\r\n * Return the color as an array. This function maintains a cache of calculated\r\n * arrays which means the result should not be modified.\r\n * @param {Color|string} color Color.\r\n * @return {Color} Color.\r\n * @api\r\n */\r\nexport function asArray(color) {\r\n    if (Array.isArray(color)) {\r\n        return color;\r\n    }\r\n    else {\r\n        return fromString(color);\r\n    }\r\n}\r\n/**\r\n * @param {string} s String.\r\n * @private\r\n * @return {Color} Color.\r\n */\r\nfunction fromStringInternal_(s) {\r\n    var r, g, b, a, color;\r\n    if (NAMED_COLOR_RE_.exec(s)) {\r\n        s = fromNamed(s);\r\n    }\r\n    if (HEX_COLOR_RE_.exec(s)) { // hex\r\n        var n = s.length - 1; // number of hex digits\r\n        var d = // number of digits per channel\r\n         void 0; // number of digits per channel\r\n        if (n <= 4) {\r\n            d = 1;\r\n        }\r\n        else {\r\n            d = 2;\r\n        }\r\n        var hasAlpha = n === 4 || n === 8;\r\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\r\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\r\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\r\n        if (hasAlpha) {\r\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\r\n        }\r\n        else {\r\n            a = 255;\r\n        }\r\n        if (d == 1) {\r\n            r = (r << 4) + r;\r\n            g = (g << 4) + g;\r\n            b = (b << 4) + b;\r\n            if (hasAlpha) {\r\n                a = (a << 4) + a;\r\n            }\r\n        }\r\n        color = [r, g, b, a / 255];\r\n    }\r\n    else if (s.indexOf('rgba(') == 0) { // rgba()\r\n        color = s.slice(5, -1).split(',').map(Number);\r\n        normalize(color);\r\n    }\r\n    else if (s.indexOf('rgb(') == 0) { // rgb()\r\n        color = s.slice(4, -1).split(',').map(Number);\r\n        color.push(1);\r\n        normalize(color);\r\n    }\r\n    else {\r\n        assert(false, 14); // Invalid color\r\n    }\r\n    return color;\r\n}\r\n/**\r\n * TODO this function is only used in the test, we probably shouldn't export it\r\n * @param {Color} color Color.\r\n * @return {Color} Clamped color.\r\n */\r\nexport function normalize(color) {\r\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\r\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\r\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\r\n    color[3] = clamp(color[3], 0, 1);\r\n    return color;\r\n}\r\n/**\r\n * @param {Color} color Color.\r\n * @return {string} String.\r\n */\r\nexport function toString(color) {\r\n    var r = color[0];\r\n    if (r != (r | 0)) {\r\n        r = (r + 0.5) | 0;\r\n    }\r\n    var g = color[1];\r\n    if (g != (g | 0)) {\r\n        g = (g + 0.5) | 0;\r\n    }\r\n    var b = color[2];\r\n    if (b != (b | 0)) {\r\n        b = (b + 0.5) | 0;\r\n    }\r\n    var a = color[3] === undefined ? 1 : color[3];\r\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\r\n}\r\n//# sourceMappingURL=color.js.map","/**\r\n * @module ol/colorlike\r\n */\r\nimport { toString } from './color.js';\r\n/**\r\n * A type accepted by CanvasRenderingContext2D.fillStyle\r\n * or CanvasRenderingContext2D.strokeStyle.\r\n * Represents a color, pattern, or gradient. The origin for patterns and\r\n * gradients as fill style is an increment of 512 css pixels from map coordinate\r\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\r\n * must be a factor of two (2, 4, 8, ..., 512).\r\n *\r\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\r\n * @api\r\n */\r\n/**\r\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\r\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\r\n * @api\r\n */\r\nexport function asColorLike(color) {\r\n    if (Array.isArray(color)) {\r\n        return toString(color);\r\n    }\r\n    else {\r\n        return color;\r\n    }\r\n}\r\n//# sourceMappingURL=colorlike.js.map","/**\r\n * @module ol/MapEventType\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n    /**\r\n     * Triggered after a map frame is rendered.\r\n     * @event module:ol/MapEvent~MapEvent#postrender\r\n     * @api\r\n     */\r\n    POSTRENDER: 'postrender',\r\n    /**\r\n     * Triggered when the map starts moving.\r\n     * @event module:ol/MapEvent~MapEvent#movestart\r\n     * @api\r\n     */\r\n    MOVESTART: 'movestart',\r\n    /**\r\n     * Triggered after the map is moved.\r\n     * @event module:ol/MapEvent~MapEvent#moveend\r\n     * @api\r\n     */\r\n    MOVEEND: 'moveend'\r\n};\r\n//# sourceMappingURL=MapEventType.js.map","/**\r\n * @module ol/dom\r\n */\r\n/**\r\n * Create an html canvas element and returns its 2d context.\r\n * @param {number=} opt_width Canvas width.\r\n * @param {number=} opt_height Canvas height.\r\n * @return {CanvasRenderingContext2D} The context.\r\n */\r\nexport function createCanvasContext2D(opt_width, opt_height) {\r\n    var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\r\n    if (opt_width) {\r\n        canvas.width = opt_width;\r\n    }\r\n    if (opt_height) {\r\n        canvas.height = opt_height;\r\n    }\r\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\r\n}\r\n/**\r\n * Get the current computed width for the given element including margin,\r\n * padding and border.\r\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\r\n * @param {!HTMLElement} element Element.\r\n * @return {number} The width.\r\n */\r\nexport function outerWidth(element) {\r\n    var width = element.offsetWidth;\r\n    var style = getComputedStyle(element);\r\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\r\n    return width;\r\n}\r\n/**\r\n * Get the current computed height for the given element including margin,\r\n * padding and border.\r\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\r\n * @param {!HTMLElement} element Element.\r\n * @return {number} The height.\r\n */\r\nexport function outerHeight(element) {\r\n    var height = element.offsetHeight;\r\n    var style = getComputedStyle(element);\r\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\r\n    return height;\r\n}\r\n/**\r\n * @param {Node} newNode Node to replace old node\r\n * @param {Node} oldNode The node to be replaced\r\n */\r\nexport function replaceNode(newNode, oldNode) {\r\n    var parent = oldNode.parentNode;\r\n    if (parent) {\r\n        parent.replaceChild(newNode, oldNode);\r\n    }\r\n}\r\n/**\r\n * @param {Node} node The node to remove.\r\n * @returns {Node} The node that was removed or null.\r\n */\r\nexport function removeNode(node) {\r\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\r\n}\r\n/**\r\n * @param {Node} node The node to remove the children from.\r\n */\r\nexport function removeChildren(node) {\r\n    while (node.lastChild) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n}\r\n/**\r\n * Transform the children of a parent node so they match the\r\n * provided list of children.  This function aims to efficiently\r\n * remove, add, and reorder child nodes while maintaining a simple\r\n * implementation (it is not guaranteed to minimize DOM operations).\r\n * @param {Node} node The parent node whose children need reworking.\r\n * @param {Array<Node>} children The desired children.\r\n */\r\nexport function replaceChildren(node, children) {\r\n    var oldChildren = node.childNodes;\r\n    for (var i = 0; true; ++i) {\r\n        var oldChild = oldChildren[i];\r\n        var newChild = children[i];\r\n        // check if our work is done\r\n        if (!oldChild && !newChild) {\r\n            break;\r\n        }\r\n        // check if children match\r\n        if (oldChild === newChild) {\r\n            continue;\r\n        }\r\n        // check if a new child needs to be added\r\n        if (!oldChild) {\r\n            node.appendChild(newChild);\r\n            continue;\r\n        }\r\n        // check if an old child needs to be removed\r\n        if (!newChild) {\r\n            node.removeChild(oldChild);\r\n            --i;\r\n            continue;\r\n        }\r\n        // reorder\r\n        node.insertBefore(newChild, oldChild);\r\n    }\r\n}\r\n//# sourceMappingURL=dom.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/control/Control\r\n */\r\nimport { VOID } from '../functions.js';\r\nimport MapEventType from '../MapEventType.js';\r\nimport BaseObject from '../Object.js';\r\nimport { removeNode } from '../dom.js';\r\nimport { listen, unlistenByKey } from '../events.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {HTMLElement} [element] The element is the control's\r\n * container element. This only needs to be specified if you're developing\r\n * a custom control.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\r\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want\r\n * the control to be rendered outside of the map's viewport.\r\n */\r\n/**\r\n * @classdesc\r\n * A control is a visible widget with a DOM element in a fixed position on the\r\n * screen. They can involve user input (buttons), or be informational only;\r\n * the position is determined using CSS. By default these are placed in the\r\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\r\n * any outside DOM element.\r\n *\r\n * This is the base class for controls. You can use it for simple custom\r\n * controls by creating the element with listeners, creating an instance:\r\n * ```js\r\n * var myControl = new Control({element: myElement});\r\n * ```\r\n * and then adding this to the map.\r\n *\r\n * The main advantage of having this as a control rather than a simple separate\r\n * DOM element is that preventing propagation is handled for you. Controls\r\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\r\n *\r\n * You can also extend this base for your own control class. See\r\n * examples/custom-controls for an example of how to do this.\r\n *\r\n * @api\r\n */\r\nvar Control = /** @class */ (function (_super) {\r\n    __extends(Control, _super);\r\n    /**\r\n     * @param {Options} options Control options.\r\n     */\r\n    function Control(options) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @protected\r\n         * @type {HTMLElement}\r\n         */\r\n        _this.element = options.element ? options.element : null;\r\n        /**\r\n         * @private\r\n         * @type {HTMLElement}\r\n         */\r\n        _this.target_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../PluggableMap.js\").default}\r\n         */\r\n        _this.map_ = null;\r\n        /**\r\n         * @protected\r\n         * @type {!Array<import(\"../events.js\").EventsKey>}\r\n         */\r\n        _this.listenerKeys = [];\r\n        /**\r\n         * @type {function(import(\"../MapEvent.js\").default): void}\r\n         */\r\n        _this.render = options.render ? options.render : VOID;\r\n        if (options.target) {\r\n            _this.setTarget(options.target);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Control.prototype.disposeInternal = function () {\r\n        removeNode(this.element);\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    /**\r\n     * Get the map associated with this control.\r\n     * @return {import(\"../PluggableMap.js\").default} Map.\r\n     * @api\r\n     */\r\n    Control.prototype.getMap = function () {\r\n        return this.map_;\r\n    };\r\n    /**\r\n     * Remove the control from its current map and attach it to the new map.\r\n     * Subclasses may set up event handlers to get notified about changes to\r\n     * the map here.\r\n     * @param {import(\"../PluggableMap.js\").default} map Map.\r\n     * @api\r\n     */\r\n    Control.prototype.setMap = function (map) {\r\n        if (this.map_) {\r\n            removeNode(this.element);\r\n        }\r\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\r\n            unlistenByKey(this.listenerKeys[i]);\r\n        }\r\n        this.listenerKeys.length = 0;\r\n        this.map_ = map;\r\n        if (this.map_) {\r\n            var target = this.target_ ?\r\n                this.target_ : map.getOverlayContainerStopEvent();\r\n            target.appendChild(this.element);\r\n            if (this.render !== VOID) {\r\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\r\n            }\r\n            map.render();\r\n        }\r\n    };\r\n    /**\r\n     * This function is used to set a target element for the control. It has no\r\n     * effect if it is called after the control has been added to the map (i.e.\r\n     * after `setMap` is called on the control). If no `target` is set in the\r\n     * options passed to the control constructor and if `setTarget` is not called\r\n     * then the control is added to the map's overlay container.\r\n     * @param {HTMLElement|string} target Target.\r\n     * @api\r\n     */\r\n    Control.prototype.setTarget = function (target) {\r\n        this.target_ = typeof target === 'string' ?\r\n            document.getElementById(target) :\r\n            target;\r\n    };\r\n    return Control;\r\n}(BaseObject));\r\nexport default Control;\r\n//# sourceMappingURL=Control.js.map","/**\r\n * @module ol/css\r\n */\r\n/**\r\n * The CSS class for hidden feature.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport var CLASS_HIDDEN = 'ol-hidden';\r\n/**\r\n * The CSS class that we'll give the DOM elements to have them selectable.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport var CLASS_SELECTABLE = 'ol-selectable';\r\n/**\r\n * The CSS class that we'll give the DOM elements to have them unselectable.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\r\n/**\r\n * The CSS class for unsupported feature.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\r\n/**\r\n * The CSS class for controls.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport var CLASS_CONTROL = 'ol-control';\r\n/**\r\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\r\n * to those elements which usually can be expanded.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport var CLASS_COLLAPSED = 'ol-collapsed';\r\n/**\r\n * Get the list of font families from a font spec.  Note that this doesn't work\r\n * for font families that have commas in them.\r\n * @param {string} The CSS font property.\r\n * @return {Object<string>} The font families (or null if the input spec is invalid).\r\n */\r\nexport var getFontFamilies = (function () {\r\n    var style;\r\n    var cache = {};\r\n    return function (font) {\r\n        if (!style) {\r\n            style = document.createElement('div').style;\r\n        }\r\n        if (!(font in cache)) {\r\n            style.font = font;\r\n            var family = style.fontFamily;\r\n            style.font = '';\r\n            if (!family) {\r\n                return null;\r\n            }\r\n            cache[font] = family.split(/,\\s?/);\r\n        }\r\n        return cache[font];\r\n    };\r\n})();\r\n//# sourceMappingURL=css.js.map","/**\r\n * @module ol/layer/Property\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n    OPACITY: 'opacity',\r\n    VISIBLE: 'visible',\r\n    EXTENT: 'extent',\r\n    Z_INDEX: 'zIndex',\r\n    MAX_RESOLUTION: 'maxResolution',\r\n    MIN_RESOLUTION: 'minResolution',\r\n    SOURCE: 'source'\r\n};\r\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/layer/Base\r\n */\r\nimport { abstract } from '../util.js';\r\nimport BaseObject from '../Object.js';\r\nimport LayerProperty from './Property.js';\r\nimport { clamp } from '../math.js';\r\nimport { assign } from '../obj.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n */\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\r\n * the options is set as a {@link module:ol/Object} property on the layer object, so\r\n * is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nvar BaseLayer = /** @class */ (function (_super) {\r\n    __extends(BaseLayer, _super);\r\n    /**\r\n     * @param {Options} options Layer options.\r\n     */\r\n    function BaseLayer(options) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @type {Object<string, *>}\r\n         */\r\n        var properties = assign({}, options);\r\n        properties[LayerProperty.OPACITY] =\r\n            options.opacity !== undefined ? options.opacity : 1;\r\n        properties[LayerProperty.VISIBLE] =\r\n            options.visible !== undefined ? options.visible : true;\r\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\r\n        properties[LayerProperty.MAX_RESOLUTION] =\r\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\r\n        properties[LayerProperty.MIN_RESOLUTION] =\r\n            options.minResolution !== undefined ? options.minResolution : 0;\r\n        /**\r\n         * @type {string}\r\n         * @private\r\n         */\r\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\r\n        delete properties.className;\r\n        _this.setProperties(properties);\r\n        /**\r\n         * @type {import(\"./Layer.js\").State}\r\n         * @private\r\n         */\r\n        _this.state_ = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {string} CSS class name.\r\n     */\r\n    BaseLayer.prototype.getClassName = function () {\r\n        return this.className_;\r\n    };\r\n    /**\r\n     * @return {import(\"./Layer.js\").State} Layer state.\r\n     */\r\n    BaseLayer.prototype.getLayerState = function () {\r\n        /** @type {import(\"./Layer.js\").State} */\r\n        var state = this.state_ || /** @type {?} */ ({\r\n            layer: this,\r\n            managed: true\r\n        });\r\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\r\n        state.sourceState = this.getSourceState();\r\n        state.visible = this.getVisible();\r\n        state.extent = this.getExtent();\r\n        state.zIndex = this.getZIndex() || 0;\r\n        state.maxResolution = this.getMaxResolution();\r\n        state.minResolution = Math.max(this.getMinResolution(), 0);\r\n        this.state_ = state;\r\n        return state;\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\r\n     *     modified in place).\r\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\r\n     */\r\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\r\n     *     states (to be modified in place).\r\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\r\n     */\r\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\r\n     * will be visible regardless of extent.\r\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\r\n     * @observable\r\n     * @api\r\n     */\r\n    BaseLayer.prototype.getExtent = function () {\r\n        return (\r\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\r\n    };\r\n    /**\r\n     * Return the maximum resolution of the layer.\r\n     * @return {number} The maximum resolution of the layer.\r\n     * @observable\r\n     * @api\r\n     */\r\n    BaseLayer.prototype.getMaxResolution = function () {\r\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\r\n    };\r\n    /**\r\n     * Return the minimum resolution of the layer.\r\n     * @return {number} The minimum resolution of the layer.\r\n     * @observable\r\n     * @api\r\n     */\r\n    BaseLayer.prototype.getMinResolution = function () {\r\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\r\n    };\r\n    /**\r\n     * Return the opacity of the layer (between 0 and 1).\r\n     * @return {number} The opacity of the layer.\r\n     * @observable\r\n     * @api\r\n     */\r\n    BaseLayer.prototype.getOpacity = function () {\r\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @return {import(\"../source/State.js\").default} Source state.\r\n     */\r\n    BaseLayer.prototype.getSourceState = function () {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Return the visibility of the layer (`true` or `false`).\r\n     * @return {boolean} The visibility of the layer.\r\n     * @observable\r\n     * @api\r\n     */\r\n    BaseLayer.prototype.getVisible = function () {\r\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\r\n    };\r\n    /**\r\n     * Return the Z-index of the layer, which is used to order layers before\r\n     * rendering. The default Z-index is 0.\r\n     * @return {number} The Z-index of the layer.\r\n     * @observable\r\n     * @api\r\n     */\r\n    BaseLayer.prototype.getZIndex = function () {\r\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\r\n    };\r\n    /**\r\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\r\n     * will be visible at all extents.\r\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\r\n     * @observable\r\n     * @api\r\n     */\r\n    BaseLayer.prototype.setExtent = function (extent) {\r\n        this.set(LayerProperty.EXTENT, extent);\r\n    };\r\n    /**\r\n     * Set the maximum resolution at which the layer is visible.\r\n     * @param {number} maxResolution The maximum resolution of the layer.\r\n     * @observable\r\n     * @api\r\n     */\r\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\r\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\r\n    };\r\n    /**\r\n     * Set the minimum resolution at which the layer is visible.\r\n     * @param {number} minResolution The minimum resolution of the layer.\r\n     * @observable\r\n     * @api\r\n     */\r\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\r\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\r\n    };\r\n    /**\r\n     * Set the opacity of the layer, allowed values range from 0 to 1.\r\n     * @param {number} opacity The opacity of the layer.\r\n     * @observable\r\n     * @api\r\n     */\r\n    BaseLayer.prototype.setOpacity = function (opacity) {\r\n        this.set(LayerProperty.OPACITY, opacity);\r\n    };\r\n    /**\r\n     * Set the visibility of the layer (`true` or `false`).\r\n     * @param {boolean} visible The visibility of the layer.\r\n     * @observable\r\n     * @api\r\n     */\r\n    BaseLayer.prototype.setVisible = function (visible) {\r\n        this.set(LayerProperty.VISIBLE, visible);\r\n    };\r\n    /**\r\n     * Set Z-index of the layer, which is used to order layers before rendering.\r\n     * The default Z-index is 0.\r\n     * @param {number} zindex The z-index of the layer.\r\n     * @observable\r\n     * @api\r\n     */\r\n    BaseLayer.prototype.setZIndex = function (zindex) {\r\n        this.set(LayerProperty.Z_INDEX, zindex);\r\n    };\r\n    return BaseLayer;\r\n}(BaseObject));\r\nexport default BaseLayer;\r\n//# sourceMappingURL=Base.js.map","/**\r\n * @module ol/render/EventType\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n    /**\r\n     * Triggered before a layer is rendered.\r\n     * @event module:ol/render/Event~RenderEvent#prerender\r\n     * @api\r\n     */\r\n    PRERENDER: 'prerender',\r\n    /**\r\n     * Triggered after a layer is rendered.\r\n     * @event module:ol/render/Event~RenderEvent#postrender\r\n     * @api\r\n     */\r\n    POSTRENDER: 'postrender',\r\n    /**\r\n     * Triggered before layers are rendered.\r\n     * @event module:ol/render/Event~RenderEvent#precompose\r\n     * @api\r\n     */\r\n    PRECOMPOSE: 'precompose',\r\n    /**\r\n     * Triggered after all layers are rendered.\r\n     * @event module:ol/render/Event~RenderEvent#postcompose\r\n     * @api\r\n     */\r\n    POSTCOMPOSE: 'postcompose',\r\n    /**\r\n     * Triggered when rendering is complete, i.e. all sources and tiles have\r\n     * finished loading for the current viewport, and all tiles are faded in.\r\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\r\n     * @api\r\n     */\r\n    RENDERCOMPLETE: 'rendercomplete'\r\n};\r\n//# sourceMappingURL=EventType.js.map","/**\r\n * @module ol/source/State\r\n */\r\n/**\r\n * @enum {string}\r\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\r\n */\r\nexport default {\r\n    UNDEFINED: 'undefined',\r\n    LOADING: 'loading',\r\n    READY: 'ready',\r\n    ERROR: 'error'\r\n};\r\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/layer/Layer\r\n */\r\nimport { listen, unlistenByKey } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { getChangeEventType } from '../Object.js';\r\nimport BaseLayer from './Base.js';\r\nimport LayerProperty from './Property.js';\r\nimport { assign } from '../obj.js';\r\nimport RenderEventType from '../render/EventType.js';\r\nimport SourceState from '../source/State.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\r\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\r\n * construction.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\r\n */\r\n/**\r\n * @typedef {Object} State\r\n * @property {import(\"./Base.js\").default} layer\r\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\r\n * @property {SourceState} sourceState\r\n * @property {boolean} visible\r\n * @property {boolean} managed\r\n * @property {import(\"../extent.js\").Extent} [extent]\r\n * @property {number} zIndex\r\n * @property {number} maxResolution\r\n * @property {number} minResolution\r\n */\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * A visual representation of raster or vector map data.\r\n * Layers group together those properties that pertain to how the data is to be\r\n * displayed, irrespective of the source of that data.\r\n *\r\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\r\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\r\n * internally. These unmanaged layers are associated with the map using\r\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\r\n *\r\n * A generic `change` event is fired when the state of the source changes.\r\n *\r\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\r\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\r\n */\r\nvar Layer = /** @class */ (function (_super) {\r\n    __extends(Layer, _super);\r\n    /**\r\n     * @param {Options} options Layer options.\r\n     */\r\n    function Layer(options) {\r\n        var _this = this;\r\n        var baseOptions = assign({}, options);\r\n        delete baseOptions.source;\r\n        _this = _super.call(this, baseOptions) || this;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../events.js\").EventsKey}\r\n         */\r\n        _this.mapPrecomposeKey_ = null;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../events.js\").EventsKey}\r\n         */\r\n        _this.mapRenderKey_ = null;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../events.js\").EventsKey}\r\n         */\r\n        _this.sourceChangeKey_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../renderer/Layer.js\").default}\r\n         */\r\n        _this.renderer_ = null;\r\n        if (options.map) {\r\n            _this.setMap(options.map);\r\n        }\r\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\r\n        var source = options.source ? options.source : null;\r\n        _this.setSource(source);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Layer.prototype.getLayersArray = function (opt_array) {\r\n        var array = opt_array ? opt_array : [];\r\n        array.push(this);\r\n        return array;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\r\n        var states = opt_states ? opt_states : [];\r\n        states.push(this.getLayerState());\r\n        return states;\r\n    };\r\n    /**\r\n     * Get the layer source.\r\n     * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\r\n     * @observable\r\n     * @api\r\n     */\r\n    Layer.prototype.getSource = function () {\r\n        var source = this.get(LayerProperty.SOURCE);\r\n        return (\r\n        /** @type {import(\"../source/Source.js\").default} */ (source) || null);\r\n    };\r\n    /**\r\n      * @inheritDoc\r\n      */\r\n    Layer.prototype.getSourceState = function () {\r\n        var source = this.getSource();\r\n        return !source ? SourceState.UNDEFINED : source.getState();\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    Layer.prototype.handleSourceChange_ = function () {\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    Layer.prototype.handleSourcePropertyChange_ = function () {\r\n        if (this.sourceChangeKey_) {\r\n            unlistenByKey(this.sourceChangeKey_);\r\n            this.sourceChangeKey_ = null;\r\n        }\r\n        var source = this.getSource();\r\n        if (source) {\r\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\r\n        }\r\n        this.changed();\r\n    };\r\n    /**\r\n     * In charge to manage the rendering of the layer. One layer type is\r\n     * bounded with one layer renderer.\r\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @return {HTMLElement} The rendered element.\r\n     */\r\n    Layer.prototype.render = function (frameState) {\r\n        var layerRenderer = this.getRenderer();\r\n        var layerState = this.getLayerState();\r\n        if (layerRenderer.prepareFrame(frameState, layerState)) {\r\n            return layerRenderer.renderFrame(frameState, layerState);\r\n        }\r\n    };\r\n    /**\r\n     * Sets the layer to be rendered on top of other layers on a map. The map will\r\n     * not manage this layer in its layers collection, and the callback in\r\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\r\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\r\n     * use `#setMap(null)`.\r\n     *\r\n     * To add the layer to a map and have it managed by the map, use\r\n     * {@link module:ol/Map#addLayer} instead.\r\n     * @param {import(\"../PluggableMap.js\").default} map Map.\r\n     * @api\r\n     */\r\n    Layer.prototype.setMap = function (map) {\r\n        if (this.mapPrecomposeKey_) {\r\n            unlistenByKey(this.mapPrecomposeKey_);\r\n            this.mapPrecomposeKey_ = null;\r\n        }\r\n        if (!map) {\r\n            this.changed();\r\n        }\r\n        if (this.mapRenderKey_) {\r\n            unlistenByKey(this.mapRenderKey_);\r\n            this.mapRenderKey_ = null;\r\n        }\r\n        if (map) {\r\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\r\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\r\n                var layerState = this.getLayerState();\r\n                layerState.managed = false;\r\n                if (this.getZIndex() === undefined) {\r\n                    layerState.zIndex = Infinity;\r\n                }\r\n                renderEvent.frameState.layerStatesArray.push(layerState);\r\n            }, this);\r\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\r\n            this.changed();\r\n        }\r\n    };\r\n    /**\r\n     * Set the layer source.\r\n     * @param {import(\"../source/Source.js\").default} source The layer source.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Layer.prototype.setSource = function (source) {\r\n        this.set(LayerProperty.SOURCE, source);\r\n    };\r\n    /**\r\n     * Get the renderer for this layer.\r\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\r\n     */\r\n    Layer.prototype.getRenderer = function () {\r\n        if (!this.renderer_) {\r\n            this.renderer_ = this.createRenderer();\r\n        }\r\n        return this.renderer_;\r\n    };\r\n    /**\r\n     * Create a renderer for this layer.\r\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\r\n     * @protected\r\n     */\r\n    Layer.prototype.createRenderer = function () {\r\n        return null;\r\n    };\r\n    return Layer;\r\n}(BaseLayer));\r\n/**\r\n * Return `true` if the layer is visible, and if the passed resolution is\r\n * between the layer's minResolution and maxResolution. The comparison is\r\n * inclusive for `minResolution` and exclusive for `maxResolution`.\r\n * @param {State} layerState Layer state.\r\n * @param {number} resolution Resolution.\r\n * @return {boolean} The layer is visible at the given resolution.\r\n */\r\nexport function visibleAtResolution(layerState, resolution) {\r\n    return layerState.visible && resolution >= layerState.minResolution &&\r\n        resolution < layerState.maxResolution;\r\n}\r\nexport default Layer;\r\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/control/Attribution\r\n */\r\nimport { equals } from '../array.js';\r\nimport Control from './Control.js';\r\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\r\nimport { removeChildren, replaceNode } from '../dom.js';\r\nimport { listen } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { visibleAtResolution } from '../layer/Layer.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-attribution'] CSS class name.\r\n * @property {HTMLElement|string} [target] Specify a target if you\r\n * want the control to be rendered outside of the map's\r\n * viewport.\r\n * @property {boolean} [collapsible] Specify if attributions can\r\n * be collapsed. If not specified, sources control this behavior with their\r\n * `attributionsCollapsible` setting.\r\n * @property {boolean} [collapsed=true] Specify if attributions should\r\n * be collapsed at startup.\r\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\r\n * @property {string} [label='i'] Text label to use for the\r\n * collapsed attributions button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\r\n * for the expanded attributions button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\r\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n */\r\n/**\r\n * @classdesc\r\n * Control to show all the attributions associated with the layer sources\r\n * in the map. This control is one of the default controls included in maps.\r\n * By default it will show in the bottom right portion of the map, but this can\r\n * be changed by using a css selector for `.ol-attribution`.\r\n *\r\n * @api\r\n */\r\nvar Attribution = /** @class */ (function (_super) {\r\n    __extends(Attribution, _super);\r\n    /**\r\n     * @param {Options=} opt_options Attribution options.\r\n     */\r\n    function Attribution(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        _this = _super.call(this, {\r\n            element: document.createElement('div'),\r\n            render: options.render || render,\r\n            target: options.target\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {HTMLElement}\r\n         */\r\n        _this.ulElement_ = document.createElement('ul');\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.collapsible_ = options.collapsible !== undefined ?\r\n            options.collapsible : true;\r\n        if (!_this.collapsible_) {\r\n            _this.collapsed_ = false;\r\n        }\r\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\r\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\r\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\r\n        if (typeof collapseLabel === 'string') {\r\n            /**\r\n             * @private\r\n             * @type {HTMLElement}\r\n             */\r\n            _this.collapseLabel_ = document.createElement('span');\r\n            _this.collapseLabel_.textContent = collapseLabel;\r\n        }\r\n        else {\r\n            _this.collapseLabel_ = collapseLabel;\r\n        }\r\n        var label = options.label !== undefined ? options.label : 'i';\r\n        if (typeof label === 'string') {\r\n            /**\r\n             * @private\r\n             * @type {HTMLElement}\r\n             */\r\n            _this.label_ = document.createElement('span');\r\n            _this.label_.textContent = label;\r\n        }\r\n        else {\r\n            _this.label_ = label;\r\n        }\r\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\r\n            _this.collapseLabel_ : _this.label_;\r\n        var button = document.createElement('button');\r\n        button.setAttribute('type', 'button');\r\n        button.title = tipLabel;\r\n        button.appendChild(activeLabel);\r\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\r\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\r\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\r\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\r\n        var element = _this.element;\r\n        element.className = cssClasses;\r\n        element.appendChild(_this.ulElement_);\r\n        element.appendChild(button);\r\n        /**\r\n         * A list of currently rendered resolutions.\r\n         * @type {Array<string>}\r\n         * @private\r\n         */\r\n        _this.renderedAttributions_ = [];\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.renderedVisible_ = true;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Collect a list of visible attributions and set the collapsible state.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @return {Array<string>} Attributions.\r\n     * @private\r\n     */\r\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\r\n        /**\r\n         * Used to determine if an attribution already exists.\r\n         * @type {!Object<string, boolean>}\r\n         */\r\n        var lookup = {};\r\n        /**\r\n         * A list of visible attributions.\r\n         * @type {Array<string>}\r\n         */\r\n        var visibleAttributions = [];\r\n        var layerStatesArray = frameState.layerStatesArray;\r\n        var resolution = frameState.viewState.resolution;\r\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n            var layerState = layerStatesArray[i];\r\n            if (!visibleAtResolution(layerState, resolution)) {\r\n                continue;\r\n            }\r\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\r\n            if (!source) {\r\n                continue;\r\n            }\r\n            var attributionGetter = source.getAttributions();\r\n            if (!attributionGetter) {\r\n                continue;\r\n            }\r\n            var attributions = attributionGetter(frameState);\r\n            if (!attributions) {\r\n                continue;\r\n            }\r\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\r\n                this.setCollapsible(false);\r\n            }\r\n            if (Array.isArray(attributions)) {\r\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\r\n                    if (!(attributions[j] in lookup)) {\r\n                        visibleAttributions.push(attributions[j]);\r\n                        lookup[attributions[j]] = true;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (!(attributions in lookup)) {\r\n                    visibleAttributions.push(attributions);\r\n                    lookup[attributions] = true;\r\n                }\r\n            }\r\n        }\r\n        return visibleAttributions;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     */\r\n    Attribution.prototype.updateElement_ = function (frameState) {\r\n        if (!frameState) {\r\n            if (this.renderedVisible_) {\r\n                this.element.style.display = 'none';\r\n                this.renderedVisible_ = false;\r\n            }\r\n            return;\r\n        }\r\n        var attributions = this.collectSourceAttributions_(frameState);\r\n        var visible = attributions.length > 0;\r\n        if (this.renderedVisible_ != visible) {\r\n            this.element.style.display = visible ? '' : 'none';\r\n            this.renderedVisible_ = visible;\r\n        }\r\n        if (equals(attributions, this.renderedAttributions_)) {\r\n            return;\r\n        }\r\n        removeChildren(this.ulElement_);\r\n        // append the attributions\r\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\r\n            var element = document.createElement('li');\r\n            element.innerHTML = attributions[i];\r\n            this.ulElement_.appendChild(element);\r\n        }\r\n        this.renderedAttributions_ = attributions;\r\n    };\r\n    /**\r\n     * @param {MouseEvent} event The event to handle\r\n     * @private\r\n     */\r\n    Attribution.prototype.handleClick_ = function (event) {\r\n        event.preventDefault();\r\n        this.handleToggle_();\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    Attribution.prototype.handleToggle_ = function () {\r\n        this.element.classList.toggle(CLASS_COLLAPSED);\r\n        if (this.collapsed_) {\r\n            replaceNode(this.collapseLabel_, this.label_);\r\n        }\r\n        else {\r\n            replaceNode(this.label_, this.collapseLabel_);\r\n        }\r\n        this.collapsed_ = !this.collapsed_;\r\n    };\r\n    /**\r\n     * Return `true` if the attribution is collapsible, `false` otherwise.\r\n     * @return {boolean} True if the widget is collapsible.\r\n     * @api\r\n     */\r\n    Attribution.prototype.getCollapsible = function () {\r\n        return this.collapsible_;\r\n    };\r\n    /**\r\n     * Set whether the attribution should be collapsible.\r\n     * @param {boolean} collapsible True if the widget is collapsible.\r\n     * @api\r\n     */\r\n    Attribution.prototype.setCollapsible = function (collapsible) {\r\n        if (this.collapsible_ === collapsible) {\r\n            return;\r\n        }\r\n        this.collapsible_ = collapsible;\r\n        this.element.classList.toggle('ol-uncollapsible');\r\n        if (!collapsible && this.collapsed_) {\r\n            this.handleToggle_();\r\n        }\r\n    };\r\n    /**\r\n     * Collapse or expand the attribution according to the passed parameter. Will\r\n     * not do anything if the attribution isn't collapsible or if the current\r\n     * collapsed state is already the one requested.\r\n     * @param {boolean} collapsed True if the widget is collapsed.\r\n     * @api\r\n     */\r\n    Attribution.prototype.setCollapsed = function (collapsed) {\r\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\r\n            return;\r\n        }\r\n        this.handleToggle_();\r\n    };\r\n    /**\r\n     * Return `true` when the attribution is currently collapsed or `false`\r\n     * otherwise.\r\n     * @return {boolean} True if the widget is collapsed.\r\n     * @api\r\n     */\r\n    Attribution.prototype.getCollapsed = function () {\r\n        return this.collapsed_;\r\n    };\r\n    return Attribution;\r\n}(Control));\r\n/**\r\n * Update the attribution element.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {Attribution}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n    this.updateElement_(mapEvent.frameState);\r\n}\r\nexport default Attribution;\r\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/control/FullScreen\r\n */\r\nimport Control from './Control.js';\r\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED } from '../css.js';\r\nimport { replaceNode } from '../dom.js';\r\nimport { listen } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nvar events = ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'];\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-full-screen'] CSS class name.\r\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\r\n * button when full-screen is active.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\r\n * @property {boolean} [keys=false] Full keyboard access.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the\r\n * control to be rendered outside of the map's viewport.\r\n * @property {HTMLElement|string} [source] The element to be displayed\r\n * fullscreen. When not provided, the element containing the map viewport will\r\n * be displayed fullscreen.\r\n */\r\n/**\r\n * @classdesc\r\n * Provides a button that when clicked fills up the full screen with the map.\r\n * The full screen source element is by default the element containing the map viewport unless\r\n * overridden by providing the `source` option. In which case, the dom\r\n * element introduced using this parameter will be displayed in full screen.\r\n *\r\n * When in full screen mode, a close button is shown to exit full screen mode.\r\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\r\n * toggle the map in full screen mode.\r\n *\r\n * @api\r\n */\r\nvar FullScreen = /** @class */ (function (_super) {\r\n    __extends(FullScreen, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function FullScreen(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        _this = _super.call(this, {\r\n            element: document.createElement('div'),\r\n            target: options.target\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.cssClassName_ = options.className !== undefined ? options.className :\r\n            'ol-full-screen';\r\n        var label = options.label !== undefined ? options.label : '\\u2922';\r\n        /**\r\n         * @private\r\n         * @type {Text}\r\n         */\r\n        _this.labelNode_ = typeof label === 'string' ?\r\n            document.createTextNode(label) : label;\r\n        var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\r\n        /**\r\n         * @private\r\n         * @type {Text}\r\n         */\r\n        _this.labelActiveNode_ = typeof labelActive === 'string' ?\r\n            document.createTextNode(labelActive) : labelActive;\r\n        /**\r\n         * @private\r\n         * @type {HTMLElement}\r\n         */\r\n        _this.button_ = document.createElement('button');\r\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\r\n        _this.setClassName_(_this.button_, isFullScreen());\r\n        _this.button_.setAttribute('type', 'button');\r\n        _this.button_.title = tipLabel;\r\n        _this.button_.appendChild(_this.labelNode_);\r\n        listen(_this.button_, EventType.CLICK, _this.handleClick_, _this);\r\n        var cssClasses = _this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\r\n            ' ' + CLASS_CONTROL + ' ' +\r\n            (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\r\n        var element = _this.element;\r\n        element.className = cssClasses;\r\n        element.appendChild(_this.button_);\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.keys_ = options.keys !== undefined ? options.keys : false;\r\n        /**\r\n         * @private\r\n         * @type {HTMLElement|string|undefined}\r\n         */\r\n        _this.source_ = options.source;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {MouseEvent} event The event to handle\r\n     * @private\r\n     */\r\n    FullScreen.prototype.handleClick_ = function (event) {\r\n        event.preventDefault();\r\n        this.handleFullScreen_();\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    FullScreen.prototype.handleFullScreen_ = function () {\r\n        if (!isFullScreenSupported()) {\r\n            return;\r\n        }\r\n        var map = this.getMap();\r\n        if (!map) {\r\n            return;\r\n        }\r\n        if (isFullScreen()) {\r\n            exitFullScreen();\r\n        }\r\n        else {\r\n            var element = void 0;\r\n            if (this.source_) {\r\n                element = typeof this.source_ === 'string' ?\r\n                    document.getElementById(this.source_) :\r\n                    this.source_;\r\n            }\r\n            else {\r\n                element = map.getTargetElement();\r\n            }\r\n            if (this.keys_) {\r\n                requestFullScreenWithKeys(element);\r\n            }\r\n            else {\r\n                requestFullScreen(element);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    FullScreen.prototype.handleFullScreenChange_ = function () {\r\n        var map = this.getMap();\r\n        if (isFullScreen()) {\r\n            this.setClassName_(this.button_, true);\r\n            replaceNode(this.labelActiveNode_, this.labelNode_);\r\n        }\r\n        else {\r\n            this.setClassName_(this.button_, false);\r\n            replaceNode(this.labelNode_, this.labelActiveNode_);\r\n        }\r\n        if (map) {\r\n            map.updateSize();\r\n        }\r\n    };\r\n    /**\r\n     * @param {HTMLElement} element Target element\r\n     * @param {boolean} fullscreen True if fullscreen class name should be active\r\n     * @private\r\n     */\r\n    FullScreen.prototype.setClassName_ = function (element, fullscreen) {\r\n        var activeClassName = this.cssClassName_ + '-true';\r\n        var inactiveClassName = this.cssClassName_ + '-false';\r\n        var nextClassName = fullscreen ? activeClassName : inactiveClassName;\r\n        element.classList.remove(activeClassName);\r\n        element.classList.remove(inactiveClassName);\r\n        element.classList.add(nextClassName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    FullScreen.prototype.setMap = function (map) {\r\n        _super.prototype.setMap.call(this, map);\r\n        if (map) {\r\n            for (var i = 0, ii = events.length; i < ii; ++i) {\r\n                this.listenerKeys.push(listen(document, events[i], this.handleFullScreenChange_, this));\r\n            }\r\n        }\r\n    };\r\n    return FullScreen;\r\n}(Control));\r\n/**\r\n * @return {boolean} Fullscreen is supported by the current platform.\r\n */\r\nfunction isFullScreenSupported() {\r\n    var body = document.body;\r\n    return !!(body.webkitRequestFullscreen ||\r\n        (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\r\n        (body.msRequestFullscreen && document.msFullscreenEnabled) ||\r\n        (body.requestFullscreen && document.fullscreenEnabled));\r\n}\r\n/**\r\n * @return {boolean} Element is currently in fullscreen.\r\n */\r\nfunction isFullScreen() {\r\n    return !!(document.webkitIsFullScreen || document.mozFullScreen ||\r\n        document.msFullscreenElement || document.fullscreenElement);\r\n}\r\n/**\r\n * Request to fullscreen an element.\r\n * @param {HTMLElement} element Element to request fullscreen\r\n */\r\nfunction requestFullScreen(element) {\r\n    if (element.requestFullscreen) {\r\n        element.requestFullscreen();\r\n    }\r\n    else if (element.msRequestFullscreen) {\r\n        element.msRequestFullscreen();\r\n    }\r\n    else if (element.mozRequestFullScreen) {\r\n        element.mozRequestFullScreen();\r\n    }\r\n    else if (element.webkitRequestFullscreen) {\r\n        element.webkitRequestFullscreen();\r\n    }\r\n}\r\n/**\r\n * Request to fullscreen an element with keyboard input.\r\n * @param {HTMLElement} element Element to request fullscreen\r\n */\r\nfunction requestFullScreenWithKeys(element) {\r\n    if (element.mozRequestFullScreenWithKeys) {\r\n        element.mozRequestFullScreenWithKeys();\r\n    }\r\n    else if (element.webkitRequestFullscreen) {\r\n        element.webkitRequestFullscreen();\r\n    }\r\n    else {\r\n        requestFullScreen(element);\r\n    }\r\n}\r\n/**\r\n * Exit fullscreen.\r\n */\r\nfunction exitFullScreen() {\r\n    if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n    }\r\n    else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen();\r\n    }\r\n    else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen();\r\n    }\r\n    else if (document.webkitExitFullscreen) {\r\n        document.webkitExitFullscreen();\r\n    }\r\n}\r\nexport default FullScreen;\r\n//# sourceMappingURL=FullScreen.js.map","/**\r\n * @module ol/geom/GeometryType\r\n */\r\n/**\r\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\r\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\r\n * `'GeometryCollection'`, `'Circle'`.\r\n * @enum {string}\r\n */\r\nexport default {\r\n    POINT: 'Point',\r\n    LINE_STRING: 'LineString',\r\n    LINEAR_RING: 'LinearRing',\r\n    POLYGON: 'Polygon',\r\n    MULTI_POINT: 'MultiPoint',\r\n    MULTI_LINE_STRING: 'MultiLineString',\r\n    MULTI_POLYGON: 'MultiPolygon',\r\n    GEOMETRY_COLLECTION: 'GeometryCollection',\r\n    CIRCLE: 'Circle'\r\n};\r\n//# sourceMappingURL=GeometryType.js.map","/**\r\n * @license\r\n * Latitude/longitude spherical geodesy formulae taken from\r\n * http://www.movable-type.co.uk/scripts/latlong.html\r\n * Licensed under CC-BY-3.0.\r\n */\r\n/**\r\n * @module ol/sphere\r\n */\r\nimport { toRadians, toDegrees } from './math.js';\r\nimport GeometryType from './geom/GeometryType.js';\r\n/**\r\n * Object literal with options for the {@link getLength} or {@link getArea}\r\n * functions.\r\n * @typedef {Object} SphereMetricOptions\r\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\r\n * Projection of the  geometry.  By default, the geometry is assumed to be in\r\n * Web Mercator.\r\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\r\n * earth is used (Clarke 1866 Authalic Sphere).\r\n */\r\n/**\r\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\r\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\r\n * @type {number}\r\n */\r\nexport var DEFAULT_RADIUS = 6371008.8;\r\n/**\r\n * Get the great circle distance (in meters) between two geographic coordinates.\r\n * @param {Array} c1 Starting coordinate.\r\n * @param {Array} c2 Ending coordinate.\r\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\r\n *     mean radius using the WGS84 ellipsoid.\r\n * @return {number} The great circle distance between the points (in meters).\r\n * @api\r\n */\r\nexport function getDistance(c1, c2, opt_radius) {\r\n    var radius = opt_radius || DEFAULT_RADIUS;\r\n    var lat1 = toRadians(c1[1]);\r\n    var lat2 = toRadians(c2[1]);\r\n    var deltaLatBy2 = (lat2 - lat1) / 2;\r\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\r\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\r\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\r\n            Math.cos(lat1) * Math.cos(lat2);\r\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n}\r\n/**\r\n * Get the cumulative great circle length of linestring coordinates (geographic).\r\n * @param {Array} coordinates Linestring coordinates.\r\n * @param {number} radius The sphere radius to use.\r\n * @return {number} The length (in meters).\r\n */\r\nfunction getLengthInternal(coordinates, radius) {\r\n    var length = 0;\r\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\r\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\r\n    }\r\n    return length;\r\n}\r\n/**\r\n * Get the spherical length of a geometry.  This length is the sum of the\r\n * great circle distances between coordinates.  For polygons, the length is\r\n * the sum of all rings.  For points, the length is zero.  For multi-part\r\n * geometries, the length is the sum of the length of each part.\r\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\r\n * @param {SphereMetricOptions=} opt_options Options for the\r\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\r\n * You can change this by providing a `projection` option.\r\n * @return {number} The spherical length (in meters).\r\n * @api\r\n */\r\nexport function getLength(geometry, opt_options) {\r\n    var options = opt_options || {};\r\n    var radius = options.radius || DEFAULT_RADIUS;\r\n    var projection = options.projection || 'EPSG:3857';\r\n    var type = geometry.getType();\r\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\r\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\r\n    }\r\n    var length = 0;\r\n    var coordinates, coords, i, ii, j, jj;\r\n    switch (type) {\r\n        case GeometryType.POINT:\r\n        case GeometryType.MULTI_POINT: {\r\n            break;\r\n        }\r\n        case GeometryType.LINE_STRING:\r\n        case GeometryType.LINEAR_RING: {\r\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\r\n            length = getLengthInternal(coordinates, radius);\r\n            break;\r\n        }\r\n        case GeometryType.MULTI_LINE_STRING:\r\n        case GeometryType.POLYGON: {\r\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\r\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\r\n                length += getLengthInternal(coordinates[i], radius);\r\n            }\r\n            break;\r\n        }\r\n        case GeometryType.MULTI_POLYGON: {\r\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\r\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\r\n                coords = coordinates[i];\r\n                for (j = 0, jj = coords.length; j < jj; ++j) {\r\n                    length += getLengthInternal(coords[j], radius);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case GeometryType.GEOMETRY_COLLECTION: {\r\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\r\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\r\n                length += getLength(geometries[i], opt_options);\r\n            }\r\n            break;\r\n        }\r\n        default: {\r\n            throw new Error('Unsupported geometry type: ' + type);\r\n        }\r\n    }\r\n    return length;\r\n}\r\n/**\r\n * Returns the spherical area for a list of coordinates.\r\n *\r\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\r\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\r\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\r\n * Laboratory, Pasadena, CA, June 2007\r\n *\r\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\r\n * ring. If the ring is oriented clockwise, the area will be positive,\r\n * otherwise it will be negative.\r\n * @param {number} radius The sphere radius.\r\n * @return {number} Area (in square meters).\r\n */\r\nfunction getAreaInternal(coordinates, radius) {\r\n    var area = 0;\r\n    var len = coordinates.length;\r\n    var x1 = coordinates[len - 1][0];\r\n    var y1 = coordinates[len - 1][1];\r\n    for (var i = 0; i < len; i++) {\r\n        var x2 = coordinates[i][0];\r\n        var y2 = coordinates[i][1];\r\n        area += toRadians(x2 - x1) *\r\n            (2 + Math.sin(toRadians(y1)) +\r\n                Math.sin(toRadians(y2)));\r\n        x1 = x2;\r\n        y1 = y2;\r\n    }\r\n    return area * radius * radius / 2.0;\r\n}\r\n/**\r\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\r\n * that polygon edges are segments of great circles on a sphere.\r\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\r\n * @param {SphereMetricOptions=} opt_options Options for the area\r\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\r\n *     You can change this by providing a `projection` option.\r\n * @return {number} The spherical area (in square meters).\r\n * @api\r\n */\r\nexport function getArea(geometry, opt_options) {\r\n    var options = opt_options || {};\r\n    var radius = options.radius || DEFAULT_RADIUS;\r\n    var projection = options.projection || 'EPSG:3857';\r\n    var type = geometry.getType();\r\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\r\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\r\n    }\r\n    var area = 0;\r\n    var coordinates, coords, i, ii, j, jj;\r\n    switch (type) {\r\n        case GeometryType.POINT:\r\n        case GeometryType.MULTI_POINT:\r\n        case GeometryType.LINE_STRING:\r\n        case GeometryType.MULTI_LINE_STRING:\r\n        case GeometryType.LINEAR_RING: {\r\n            break;\r\n        }\r\n        case GeometryType.POLYGON: {\r\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\r\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\r\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\r\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\r\n            }\r\n            break;\r\n        }\r\n        case GeometryType.MULTI_POLYGON: {\r\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\r\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\r\n                coords = coordinates[i];\r\n                area += Math.abs(getAreaInternal(coords[0], radius));\r\n                for (j = 1, jj = coords.length; j < jj; ++j) {\r\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case GeometryType.GEOMETRY_COLLECTION: {\r\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\r\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\r\n                area += getArea(geometries[i], opt_options);\r\n            }\r\n            break;\r\n        }\r\n        default: {\r\n            throw new Error('Unsupported geometry type: ' + type);\r\n        }\r\n    }\r\n    return area;\r\n}\r\n/**\r\n * Returns the coordinate at the given distance and bearing from `c1`.\r\n *\r\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\r\n * @param {number} distance The great-circle distance between the origin\r\n *     point and the target point.\r\n * @param {number} bearing The bearing (in radians).\r\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\r\n *     mean radius using the WGS84 ellipsoid.\r\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\r\n */\r\nexport function offset(c1, distance, bearing, opt_radius) {\r\n    var radius = opt_radius || DEFAULT_RADIUS;\r\n    var lat1 = toRadians(c1[1]);\r\n    var lon1 = toRadians(c1[0]);\r\n    var dByR = distance / radius;\r\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\r\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\r\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\r\n    return [toDegrees(lon), toDegrees(lat)];\r\n}\r\n//# sourceMappingURL=sphere.js.map","/**\r\n * @module ol/extent/Corner\r\n */\r\n/**\r\n * Extent corner.\r\n * @enum {string}\r\n */\r\nexport default {\r\n    BOTTOM_LEFT: 'bottom-left',\r\n    BOTTOM_RIGHT: 'bottom-right',\r\n    TOP_LEFT: 'top-left',\r\n    TOP_RIGHT: 'top-right'\r\n};\r\n//# sourceMappingURL=Corner.js.map","/**\r\n * @module ol/extent/Relationship\r\n */\r\n/**\r\n * Relationship to an extent.\r\n * @enum {number}\r\n */\r\nexport default {\r\n    UNKNOWN: 0,\r\n    INTERSECTING: 1,\r\n    ABOVE: 2,\r\n    RIGHT: 4,\r\n    BELOW: 8,\r\n    LEFT: 16\r\n};\r\n//# sourceMappingURL=Relationship.js.map","/**\r\n * @module ol/extent\r\n */\r\nimport { assert } from './asserts.js';\r\nimport Corner from './extent/Corner.js';\r\nimport Relationship from './extent/Relationship.js';\r\n/**\r\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\r\n * @typedef {Array<number>} Extent\r\n * @api\r\n */\r\n/**\r\n * Build an extent that includes all given coordinates.\r\n *\r\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\r\n * @return {Extent} Bounding extent.\r\n * @api\r\n */\r\nexport function boundingExtent(coordinates) {\r\n    var extent = createEmpty();\r\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        extendCoordinate(extent, coordinates[i]);\r\n    }\r\n    return extent;\r\n}\r\n/**\r\n * @param {Array<number>} xs Xs.\r\n * @param {Array<number>} ys Ys.\r\n * @param {Extent=} opt_extent Destination extent.\r\n * @private\r\n * @return {Extent} Extent.\r\n */\r\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\r\n    var minX = Math.min.apply(null, xs);\r\n    var minY = Math.min.apply(null, ys);\r\n    var maxX = Math.max.apply(null, xs);\r\n    var maxY = Math.max.apply(null, ys);\r\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\r\n}\r\n/**\r\n * Return extent increased by the provided value.\r\n * @param {Extent} extent Extent.\r\n * @param {number} value The amount by which the extent should be buffered.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n * @api\r\n */\r\nexport function buffer(extent, value, opt_extent) {\r\n    if (opt_extent) {\r\n        opt_extent[0] = extent[0] - value;\r\n        opt_extent[1] = extent[1] - value;\r\n        opt_extent[2] = extent[2] + value;\r\n        opt_extent[3] = extent[3] + value;\r\n        return opt_extent;\r\n    }\r\n    else {\r\n        return [\r\n            extent[0] - value,\r\n            extent[1] - value,\r\n            extent[2] + value,\r\n            extent[3] + value\r\n        ];\r\n    }\r\n}\r\n/**\r\n * Creates a clone of an extent.\r\n *\r\n * @param {Extent} extent Extent to clone.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} The clone.\r\n */\r\nexport function clone(extent, opt_extent) {\r\n    if (opt_extent) {\r\n        opt_extent[0] = extent[0];\r\n        opt_extent[1] = extent[1];\r\n        opt_extent[2] = extent[2];\r\n        opt_extent[3] = extent[3];\r\n        return opt_extent;\r\n    }\r\n    else {\r\n        return extent.slice();\r\n    }\r\n}\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {number} Closest squared distance.\r\n */\r\nexport function closestSquaredDistanceXY(extent, x, y) {\r\n    var dx, dy;\r\n    if (x < extent[0]) {\r\n        dx = extent[0] - x;\r\n    }\r\n    else if (extent[2] < x) {\r\n        dx = x - extent[2];\r\n    }\r\n    else {\r\n        dx = 0;\r\n    }\r\n    if (y < extent[1]) {\r\n        dy = extent[1] - y;\r\n    }\r\n    else if (extent[3] < y) {\r\n        dy = y - extent[3];\r\n    }\r\n    else {\r\n        dy = 0;\r\n    }\r\n    return dx * dx + dy * dy;\r\n}\r\n/**\r\n * Check if the passed coordinate is contained or on the edge of the extent.\r\n *\r\n * @param {Extent} extent Extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @return {boolean} The coordinate is contained in the extent.\r\n * @api\r\n */\r\nexport function containsCoordinate(extent, coordinate) {\r\n    return containsXY(extent, coordinate[0], coordinate[1]);\r\n}\r\n/**\r\n * Check if one extent contains another.\r\n *\r\n * An extent is deemed contained if it lies completely within the other extent,\r\n * including if they share one or more edges.\r\n *\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @return {boolean} The second extent is contained by or on the edge of the\r\n *     first.\r\n * @api\r\n */\r\nexport function containsExtent(extent1, extent2) {\r\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\r\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\r\n}\r\n/**\r\n * Check if the passed coordinate is contained or on the edge of the extent.\r\n *\r\n * @param {Extent} extent Extent.\r\n * @param {number} x X coordinate.\r\n * @param {number} y Y coordinate.\r\n * @return {boolean} The x, y values are contained in the extent.\r\n * @api\r\n */\r\nexport function containsXY(extent, x, y) {\r\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\r\n}\r\n/**\r\n * Get the relationship between a coordinate and extent.\r\n * @param {Extent} extent The extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\r\n * @return {Relationship} The relationship (bitwise compare with\r\n *     import(\"./extent/Relationship.js\").Relationship).\r\n */\r\nexport function coordinateRelationship(extent, coordinate) {\r\n    var minX = extent[0];\r\n    var minY = extent[1];\r\n    var maxX = extent[2];\r\n    var maxY = extent[3];\r\n    var x = coordinate[0];\r\n    var y = coordinate[1];\r\n    var relationship = Relationship.UNKNOWN;\r\n    if (x < minX) {\r\n        relationship = relationship | Relationship.LEFT;\r\n    }\r\n    else if (x > maxX) {\r\n        relationship = relationship | Relationship.RIGHT;\r\n    }\r\n    if (y < minY) {\r\n        relationship = relationship | Relationship.BELOW;\r\n    }\r\n    else if (y > maxY) {\r\n        relationship = relationship | Relationship.ABOVE;\r\n    }\r\n    if (relationship === Relationship.UNKNOWN) {\r\n        relationship = Relationship.INTERSECTING;\r\n    }\r\n    return relationship;\r\n}\r\n/**\r\n * Create an empty extent.\r\n * @return {Extent} Empty extent.\r\n * @api\r\n */\r\nexport function createEmpty() {\r\n    return [Infinity, Infinity, -Infinity, -Infinity];\r\n}\r\n/**\r\n * Create a new extent or update the provided extent.\r\n * @param {number} minX Minimum X.\r\n * @param {number} minY Minimum Y.\r\n * @param {number} maxX Maximum X.\r\n * @param {number} maxY Maximum Y.\r\n * @param {Extent=} opt_extent Destination extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\r\n    if (opt_extent) {\r\n        opt_extent[0] = minX;\r\n        opt_extent[1] = minY;\r\n        opt_extent[2] = maxX;\r\n        opt_extent[3] = maxY;\r\n        return opt_extent;\r\n    }\r\n    else {\r\n        return [minX, minY, maxX, maxY];\r\n    }\r\n}\r\n/**\r\n * Create a new empty extent or make the provided one empty.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateEmpty(opt_extent) {\r\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\r\n}\r\n/**\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\r\n    var x = coordinate[0];\r\n    var y = coordinate[1];\r\n    return createOrUpdate(x, y, x, y, opt_extent);\r\n}\r\n/**\r\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\r\n    var extent = createOrUpdateEmpty(opt_extent);\r\n    return extendCoordinates(extent, coordinates);\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\r\n    var extent = createOrUpdateEmpty(opt_extent);\r\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\r\n}\r\n/**\r\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateFromRings(rings, opt_extent) {\r\n    var extent = createOrUpdateEmpty(opt_extent);\r\n    return extendRings(extent, rings);\r\n}\r\n/**\r\n * Determine if two extents are equivalent.\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @return {boolean} The two extents are equivalent.\r\n * @api\r\n */\r\nexport function equals(extent1, extent2) {\r\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\r\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\r\n}\r\n/**\r\n * Modify an extent to include another extent.\r\n * @param {Extent} extent1 The extent to be modified.\r\n * @param {Extent} extent2 The extent that will be included in the first.\r\n * @return {Extent} A reference to the first (extended) extent.\r\n * @api\r\n */\r\nexport function extend(extent1, extent2) {\r\n    if (extent2[0] < extent1[0]) {\r\n        extent1[0] = extent2[0];\r\n    }\r\n    if (extent2[2] > extent1[2]) {\r\n        extent1[2] = extent2[2];\r\n    }\r\n    if (extent2[1] < extent1[1]) {\r\n        extent1[1] = extent2[1];\r\n    }\r\n    if (extent2[3] > extent1[3]) {\r\n        extent1[3] = extent2[3];\r\n    }\r\n    return extent1;\r\n}\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n */\r\nexport function extendCoordinate(extent, coordinate) {\r\n    if (coordinate[0] < extent[0]) {\r\n        extent[0] = coordinate[0];\r\n    }\r\n    if (coordinate[0] > extent[2]) {\r\n        extent[2] = coordinate[0];\r\n    }\r\n    if (coordinate[1] < extent[1]) {\r\n        extent[1] = coordinate[1];\r\n    }\r\n    if (coordinate[1] > extent[3]) {\r\n        extent[3] = coordinate[1];\r\n    }\r\n}\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\r\n * @return {Extent} Extent.\r\n */\r\nexport function extendCoordinates(extent, coordinates) {\r\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        extendCoordinate(extent, coordinates[i]);\r\n    }\r\n    return extent;\r\n}\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {Extent} Extent.\r\n */\r\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\r\n    for (; offset < end; offset += stride) {\r\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\r\n    }\r\n    return extent;\r\n}\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\r\n * @return {Extent} Extent.\r\n */\r\nexport function extendRings(extent, rings) {\r\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\r\n        extendCoordinates(extent, rings[i]);\r\n    }\r\n    return extent;\r\n}\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n */\r\nexport function extendXY(extent, x, y) {\r\n    extent[0] = Math.min(extent[0], x);\r\n    extent[1] = Math.min(extent[1], y);\r\n    extent[2] = Math.max(extent[2], x);\r\n    extent[3] = Math.max(extent[3], y);\r\n}\r\n/**\r\n * This function calls `callback` for each corner of the extent. If the\r\n * callback returns a truthy value the function returns that value\r\n * immediately. Otherwise the function returns `false`.\r\n * @param {Extent} extent Extent.\r\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\r\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\r\n * @return {S|boolean} Value.\r\n * @template S, T\r\n */\r\nexport function forEachCorner(extent, callback, opt_this) {\r\n    var val;\r\n    val = callback.call(opt_this, getBottomLeft(extent));\r\n    if (val) {\r\n        return val;\r\n    }\r\n    val = callback.call(opt_this, getBottomRight(extent));\r\n    if (val) {\r\n        return val;\r\n    }\r\n    val = callback.call(opt_this, getTopRight(extent));\r\n    if (val) {\r\n        return val;\r\n    }\r\n    val = callback.call(opt_this, getTopLeft(extent));\r\n    if (val) {\r\n        return val;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Get the size of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {number} Area.\r\n * @api\r\n */\r\nexport function getArea(extent) {\r\n    var area = 0;\r\n    if (!isEmpty(extent)) {\r\n        area = getWidth(extent) * getHeight(extent);\r\n    }\r\n    return area;\r\n}\r\n/**\r\n * Get the bottom left coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\r\n * @api\r\n */\r\nexport function getBottomLeft(extent) {\r\n    return [extent[0], extent[1]];\r\n}\r\n/**\r\n * Get the bottom right coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\r\n * @api\r\n */\r\nexport function getBottomRight(extent) {\r\n    return [extent[2], extent[1]];\r\n}\r\n/**\r\n * Get the center coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Center.\r\n * @api\r\n */\r\nexport function getCenter(extent) {\r\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\r\n}\r\n/**\r\n * Get a corner coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @param {Corner} corner Corner.\r\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\r\n */\r\nexport function getCorner(extent, corner) {\r\n    var coordinate;\r\n    if (corner === Corner.BOTTOM_LEFT) {\r\n        coordinate = getBottomLeft(extent);\r\n    }\r\n    else if (corner === Corner.BOTTOM_RIGHT) {\r\n        coordinate = getBottomRight(extent);\r\n    }\r\n    else if (corner === Corner.TOP_LEFT) {\r\n        coordinate = getTopLeft(extent);\r\n    }\r\n    else if (corner === Corner.TOP_RIGHT) {\r\n        coordinate = getTopRight(extent);\r\n    }\r\n    else {\r\n        assert(false, 13); // Invalid corner\r\n    }\r\n    return coordinate;\r\n}\r\n/**\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @return {number} Enlarged area.\r\n */\r\nexport function getEnlargedArea(extent1, extent2) {\r\n    var minX = Math.min(extent1[0], extent2[0]);\r\n    var minY = Math.min(extent1[1], extent2[1]);\r\n    var maxX = Math.max(extent1[2], extent2[2]);\r\n    var maxY = Math.max(extent1[3], extent2[3]);\r\n    return (maxX - minX) * (maxY - minY);\r\n}\r\n/**\r\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\r\n * @param {number} resolution Resolution.\r\n * @param {number} rotation Rotation.\r\n * @param {import(\"./size.js\").Size} size Size.\r\n * @param {Extent=} opt_extent Destination extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\r\n    var dx = resolution * size[0] / 2;\r\n    var dy = resolution * size[1] / 2;\r\n    var cosRotation = Math.cos(rotation);\r\n    var sinRotation = Math.sin(rotation);\r\n    var xCos = dx * cosRotation;\r\n    var xSin = dx * sinRotation;\r\n    var yCos = dy * cosRotation;\r\n    var ySin = dy * sinRotation;\r\n    var x = center[0];\r\n    var y = center[1];\r\n    var x0 = x - xCos + ySin;\r\n    var x1 = x - xCos - ySin;\r\n    var x2 = x + xCos - ySin;\r\n    var x3 = x + xCos + ySin;\r\n    var y0 = y - xSin - yCos;\r\n    var y1 = y - xSin + yCos;\r\n    var y2 = y + xSin + yCos;\r\n    var y3 = y + xSin - yCos;\r\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\r\n}\r\n/**\r\n * Get the height of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {number} Height.\r\n * @api\r\n */\r\nexport function getHeight(extent) {\r\n    return extent[3] - extent[1];\r\n}\r\n/**\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @return {number} Intersection area.\r\n */\r\nexport function getIntersectionArea(extent1, extent2) {\r\n    var intersection = getIntersection(extent1, extent2);\r\n    return getArea(intersection);\r\n}\r\n/**\r\n * Get the intersection of two extents.\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\r\n * @return {Extent} Intersecting extent.\r\n * @api\r\n */\r\nexport function getIntersection(extent1, extent2, opt_extent) {\r\n    var intersection = opt_extent ? opt_extent : createEmpty();\r\n    if (intersects(extent1, extent2)) {\r\n        if (extent1[0] > extent2[0]) {\r\n            intersection[0] = extent1[0];\r\n        }\r\n        else {\r\n            intersection[0] = extent2[0];\r\n        }\r\n        if (extent1[1] > extent2[1]) {\r\n            intersection[1] = extent1[1];\r\n        }\r\n        else {\r\n            intersection[1] = extent2[1];\r\n        }\r\n        if (extent1[2] < extent2[2]) {\r\n            intersection[2] = extent1[2];\r\n        }\r\n        else {\r\n            intersection[2] = extent2[2];\r\n        }\r\n        if (extent1[3] < extent2[3]) {\r\n            intersection[3] = extent1[3];\r\n        }\r\n        else {\r\n            intersection[3] = extent2[3];\r\n        }\r\n    }\r\n    else {\r\n        createOrUpdateEmpty(intersection);\r\n    }\r\n    return intersection;\r\n}\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @return {number} Margin.\r\n */\r\nexport function getMargin(extent) {\r\n    return getWidth(extent) + getHeight(extent);\r\n}\r\n/**\r\n * Get the size (width, height) of an extent.\r\n * @param {Extent} extent The extent.\r\n * @return {import(\"./size.js\").Size} The extent size.\r\n * @api\r\n */\r\nexport function getSize(extent) {\r\n    return [extent[2] - extent[0], extent[3] - extent[1]];\r\n}\r\n/**\r\n * Get the top left coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\r\n * @api\r\n */\r\nexport function getTopLeft(extent) {\r\n    return [extent[0], extent[3]];\r\n}\r\n/**\r\n * Get the top right coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\r\n * @api\r\n */\r\nexport function getTopRight(extent) {\r\n    return [extent[2], extent[3]];\r\n}\r\n/**\r\n * Get the width of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {number} Width.\r\n * @api\r\n */\r\nexport function getWidth(extent) {\r\n    return extent[2] - extent[0];\r\n}\r\n/**\r\n * Determine if one extent intersects another.\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent.\r\n * @return {boolean} The two extents intersect.\r\n * @api\r\n */\r\nexport function intersects(extent1, extent2) {\r\n    return extent1[0] <= extent2[2] &&\r\n        extent1[2] >= extent2[0] &&\r\n        extent1[1] <= extent2[3] &&\r\n        extent1[3] >= extent2[1];\r\n}\r\n/**\r\n * Determine if an extent is empty.\r\n * @param {Extent} extent Extent.\r\n * @return {boolean} Is empty.\r\n * @api\r\n */\r\nexport function isEmpty(extent) {\r\n    //return extent[2] < extent[0] || extent[3] < extent[1];\r\n    // Jan Mayen has an extent that results in this beeing true\r\n    return false;\r\n}\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function returnOrUpdate(extent, opt_extent) {\r\n    if (opt_extent) {\r\n        opt_extent[0] = extent[0];\r\n        opt_extent[1] = extent[1];\r\n        opt_extent[2] = extent[2];\r\n        opt_extent[3] = extent[3];\r\n        return opt_extent;\r\n    }\r\n    else {\r\n        return extent;\r\n    }\r\n}\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {number} value Value.\r\n */\r\nexport function scaleFromCenter(extent, value) {\r\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\r\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\r\n    extent[0] -= deltaX;\r\n    extent[2] += deltaX;\r\n    extent[1] -= deltaY;\r\n    extent[3] += deltaY;\r\n}\r\n/**\r\n * Determine if the segment between two coordinates intersects (crosses,\r\n * touches, or is contained by) the provided extent.\r\n * @param {Extent} extent The extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\r\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\r\n * @return {boolean} The segment intersects the extent.\r\n */\r\nexport function intersectsSegment(extent, start, end) {\r\n    var intersects = false;\r\n    var startRel = coordinateRelationship(extent, start);\r\n    var endRel = coordinateRelationship(extent, end);\r\n    if (startRel === Relationship.INTERSECTING ||\r\n        endRel === Relationship.INTERSECTING) {\r\n        intersects = true;\r\n    }\r\n    else {\r\n        var minX = extent[0];\r\n        var minY = extent[1];\r\n        var maxX = extent[2];\r\n        var maxY = extent[3];\r\n        var startX = start[0];\r\n        var startY = start[1];\r\n        var endX = end[0];\r\n        var endY = end[1];\r\n        var slope = (endY - startY) / (endX - startX);\r\n        var x = void 0, y = void 0;\r\n        if (!!(endRel & Relationship.ABOVE) &&\r\n            !(startRel & Relationship.ABOVE)) {\r\n            // potentially intersects top\r\n            x = endX - ((endY - maxY) / slope);\r\n            intersects = x >= minX && x <= maxX;\r\n        }\r\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\r\n            !(startRel & Relationship.RIGHT)) {\r\n            // potentially intersects right\r\n            y = endY - ((endX - maxX) * slope);\r\n            intersects = y >= minY && y <= maxY;\r\n        }\r\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\r\n            !(startRel & Relationship.BELOW)) {\r\n            // potentially intersects bottom\r\n            x = endX - ((endY - minY) / slope);\r\n            intersects = x >= minX && x <= maxX;\r\n        }\r\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\r\n            !(startRel & Relationship.LEFT)) {\r\n            // potentially intersects left\r\n            y = endY - ((endX - minX) * slope);\r\n            intersects = y >= minY && y <= maxY;\r\n        }\r\n    }\r\n    return intersects;\r\n}\r\n/**\r\n * Apply a transform function to the extent.\r\n * @param {Extent} extent Extent.\r\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\r\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\r\n * @param {Extent=} opt_extent Destination extent.\r\n * @return {Extent} Extent.\r\n * @api\r\n */\r\nexport function applyTransform(extent, transformFn, opt_extent) {\r\n    var coordinates = [\r\n        extent[0], extent[1],\r\n        extent[0], extent[3],\r\n        extent[2], extent[1],\r\n        extent[2], extent[3]\r\n    ];\r\n    transformFn(coordinates, coordinates, 2);\r\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\r\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\r\n    return _boundingExtentXYs(xs, ys, opt_extent);\r\n}\r\n//# sourceMappingURL=extent.js.map","/**\r\n * @module ol/proj/Units\r\n */\r\n/**\r\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\r\n * `'us-ft'`.\r\n * @enum {string}\r\n */\r\nvar Units = {\r\n    DEGREES: 'degrees',\r\n    FEET: 'ft',\r\n    METERS: 'm',\r\n    PIXELS: 'pixels',\r\n    TILE_PIXELS: 'tile-pixels',\r\n    USFEET: 'us-ft'\r\n};\r\n/**\r\n * Meters per unit lookup table.\r\n * @const\r\n * @type {Object<Units, number>}\r\n * @api\r\n */\r\nexport var METERS_PER_UNIT = {};\r\n// use the radius of the Normal sphere\r\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\r\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\r\nMETERS_PER_UNIT[Units.METERS] = 1;\r\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\r\nexport default Units;\r\n//# sourceMappingURL=Units.js.map","/**\r\n * @module ol/proj/Projection\r\n */\r\nimport { METERS_PER_UNIT } from './Units.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\r\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\r\n * proj4 projection is defined for `code`.\r\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\r\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\r\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\r\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\r\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\r\n * lookup table.\r\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\r\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\r\n * Function to determine resolution at a point. The function is called with a\r\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\r\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\r\n * the default {@link module:ol/proj#getPointResolution} function will be used.\r\n */\r\n/**\r\n * @classdesc\r\n * Projection definition class. One of these is created for each projection\r\n * supported in the application and stored in the {@link module:ol/proj} namespace.\r\n * You can use these in applications, but this is not required, as API params\r\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\r\n * code will suffice.\r\n *\r\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\r\n * projection.\r\n *\r\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\r\n * with the following aliases:\r\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\r\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\r\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\r\n *     urn:x-ogc:def:crs:EPSG:4326\r\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\r\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\r\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\r\n *\r\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\r\n * be added using `proj4.defs()`. After all required projection definitions are\r\n * added, call the {@link module:ol/proj/proj4~register} function.\r\n *\r\n * @api\r\n */\r\nvar Projection = /** @class */ (function () {\r\n    /**\r\n     * @param {Options} options Projection options.\r\n     */\r\n    function Projection(options) {\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        this.code_ = options.code;\r\n        /**\r\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\r\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\r\n         * tile.\r\n         * @private\r\n         * @type {import(\"./Units.js\").default}\r\n         */\r\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\r\n        /**\r\n         * Validity extent of the projection in projected coordinates. For projections\r\n         * with `TILE_PIXELS` units, this is the extent of the tile in\r\n         * tile pixel space.\r\n         * @private\r\n         * @type {import(\"../extent.js\").Extent}\r\n         */\r\n        this.extent_ = options.extent !== undefined ? options.extent : null;\r\n        /**\r\n         * Extent of the world in EPSG:4326. For projections with\r\n         * `TILE_PIXELS` units, this is the extent of the tile in\r\n         * projected coordinate space.\r\n         * @private\r\n         * @type {import(\"../extent.js\").Extent}\r\n         */\r\n        this.worldExtent_ = options.worldExtent !== undefined ?\r\n            options.worldExtent : null;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\r\n            options.axisOrientation : 'enu';\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        this.global_ = options.global !== undefined ? options.global : false;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        this.canWrapX_ = !!(this.global_ && this.extent_);\r\n        /**\r\n         * @private\r\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\r\n         */\r\n        this.getPointResolutionFunc_ = options.getPointResolution;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n         */\r\n        this.defaultTileGrid_ = null;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        this.metersPerUnit_ = options.metersPerUnit;\r\n    }\r\n    /**\r\n     * @return {boolean} The projection is suitable for wrapping the x-axis\r\n     */\r\n    Projection.prototype.canWrapX = function () {\r\n        return this.canWrapX_;\r\n    };\r\n    /**\r\n     * Get the code for this projection, e.g. 'EPSG:4326'.\r\n     * @return {string} Code.\r\n     * @api\r\n     */\r\n    Projection.prototype.getCode = function () {\r\n        return this.code_;\r\n    };\r\n    /**\r\n     * Get the validity extent for this projection.\r\n     * @return {import(\"../extent.js\").Extent} Extent.\r\n     * @api\r\n     */\r\n    Projection.prototype.getExtent = function () {\r\n        return this.extent_;\r\n    };\r\n    /**\r\n     * Get the units of this projection.\r\n     * @return {import(\"./Units.js\").default} Units.\r\n     * @api\r\n     */\r\n    Projection.prototype.getUnits = function () {\r\n        return this.units_;\r\n    };\r\n    /**\r\n     * Get the amount of meters per unit of this projection.  If the projection is\r\n     * not configured with `metersPerUnit` or a units identifier, the return is\r\n     * `undefined`.\r\n     * @return {number|undefined} Meters.\r\n     * @api\r\n     */\r\n    Projection.prototype.getMetersPerUnit = function () {\r\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\r\n    };\r\n    /**\r\n     * Get the world extent for this projection.\r\n     * @return {import(\"../extent.js\").Extent} Extent.\r\n     * @api\r\n     */\r\n    Projection.prototype.getWorldExtent = function () {\r\n        return this.worldExtent_;\r\n    };\r\n    /**\r\n     * Get the axis orientation of this projection.\r\n     * Example values are:\r\n     * enu - the default easting, northing, elevation.\r\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\r\n     *     or south orientated transverse mercator.\r\n     * wnu - westing, northing, up - some planetary coordinate systems have\r\n     *     \"west positive\" coordinate systems\r\n     * @return {string} Axis orientation.\r\n     * @api\r\n     */\r\n    Projection.prototype.getAxisOrientation = function () {\r\n        return this.axisOrientation_;\r\n    };\r\n    /**\r\n     * Is this projection a global projection which spans the whole world?\r\n     * @return {boolean} Whether the projection is global.\r\n     * @api\r\n     */\r\n    Projection.prototype.isGlobal = function () {\r\n        return this.global_;\r\n    };\r\n    /**\r\n     * Set if the projection is a global projection which spans the whole world\r\n     * @param {boolean} global Whether the projection is global.\r\n     * @api\r\n     */\r\n    Projection.prototype.setGlobal = function (global) {\r\n        this.global_ = global;\r\n        this.canWrapX_ = !!(global && this.extent_);\r\n    };\r\n    /**\r\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\r\n     */\r\n    Projection.prototype.getDefaultTileGrid = function () {\r\n        return this.defaultTileGrid_;\r\n    };\r\n    /**\r\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\r\n     */\r\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\r\n        this.defaultTileGrid_ = tileGrid;\r\n    };\r\n    /**\r\n     * Set the validity extent for this projection.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @api\r\n     */\r\n    Projection.prototype.setExtent = function (extent) {\r\n        this.extent_ = extent;\r\n        this.canWrapX_ = !!(this.global_ && extent);\r\n    };\r\n    /**\r\n     * Set the world extent for this projection.\r\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\r\n     *     [minlon, minlat, maxlon, maxlat].\r\n     * @api\r\n     */\r\n    Projection.prototype.setWorldExtent = function (worldExtent) {\r\n        this.worldExtent_ = worldExtent;\r\n    };\r\n    /**\r\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\r\n     * for this projection.\r\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\r\n     * @api\r\n     */\r\n    Projection.prototype.setGetPointResolution = function (func) {\r\n        this.getPointResolutionFunc_ = func;\r\n    };\r\n    /**\r\n     * Get the custom point resolution function for this projection (if set).\r\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\r\n     * resolution function (if set).\r\n     */\r\n    Projection.prototype.getPointResolutionFunc = function () {\r\n        return this.getPointResolutionFunc_;\r\n    };\r\n    return Projection;\r\n}());\r\nexport default Projection;\r\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/proj/epsg3857\r\n */\r\nimport { cosh } from '../math.js';\r\nimport Projection from './Projection.js';\r\nimport Units from './Units.js';\r\n/**\r\n * Radius of WGS84 sphere\r\n *\r\n * @const\r\n * @type {number}\r\n */\r\nexport var RADIUS = 6378137;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var HALF_SIZE = Math.PI * RADIUS;\r\n/**\r\n * @const\r\n * @type {import(\"../extent.js\").Extent}\r\n */\r\nexport var EXTENT = [\r\n    -HALF_SIZE, -HALF_SIZE,\r\n    HALF_SIZE, HALF_SIZE\r\n];\r\n/**\r\n * @const\r\n * @type {import(\"../extent.js\").Extent}\r\n */\r\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\r\n/**\r\n * @classdesc\r\n * Projection object for web/spherical Mercator (EPSG:3857).\r\n */\r\nvar EPSG3857Projection = /** @class */ (function (_super) {\r\n    __extends(EPSG3857Projection, _super);\r\n    /**\r\n     * @param {string} code Code.\r\n     */\r\n    function EPSG3857Projection(code) {\r\n        return _super.call(this, {\r\n            code: code,\r\n            units: Units.METERS,\r\n            extent: EXTENT,\r\n            global: true,\r\n            worldExtent: WORLD_EXTENT,\r\n            getPointResolution: function (resolution, point) {\r\n                return resolution / cosh(point[1] / RADIUS);\r\n            }\r\n        }) || this;\r\n    }\r\n    return EPSG3857Projection;\r\n}(Projection));\r\n/**\r\n * Projections equal to EPSG:3857.\r\n *\r\n * @const\r\n * @type {Array<import(\"./Projection.js\").default>}\r\n */\r\nexport var PROJECTIONS = [\r\n    new EPSG3857Projection('EPSG:3857'),\r\n    new EPSG3857Projection('EPSG:102100'),\r\n    new EPSG3857Projection('EPSG:102113'),\r\n    new EPSG3857Projection('EPSG:900913'),\r\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\r\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\r\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\r\n];\r\n/**\r\n * Transformation from EPSG:4326 to EPSG:3857.\r\n *\r\n * @param {Array<number>} input Input array of coordinate values.\r\n * @param {Array<number>=} opt_output Output array of coordinate values.\r\n * @param {number=} opt_dimension Dimension (default is `2`).\r\n * @return {Array<number>} Output array of coordinate values.\r\n */\r\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\r\n    var length = input.length;\r\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\r\n    var output = opt_output;\r\n    if (output === undefined) {\r\n        if (dimension > 2) {\r\n            // preserve values beyond second dimension\r\n            output = input.slice();\r\n        }\r\n        else {\r\n            output = new Array(length);\r\n        }\r\n    }\r\n    var halfSize = HALF_SIZE;\r\n    for (var i = 0; i < length; i += dimension) {\r\n        output[i] = halfSize * input[i] / 180;\r\n        var y = RADIUS *\r\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\r\n        if (y > halfSize) {\r\n            y = halfSize;\r\n        }\r\n        else if (y < -halfSize) {\r\n            y = -halfSize;\r\n        }\r\n        output[i + 1] = y;\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Transformation from EPSG:3857 to EPSG:4326.\r\n *\r\n * @param {Array<number>} input Input array of coordinate values.\r\n * @param {Array<number>=} opt_output Output array of coordinate values.\r\n * @param {number=} opt_dimension Dimension (default is `2`).\r\n * @return {Array<number>} Output array of coordinate values.\r\n */\r\nexport function toEPSG4326(input, opt_output, opt_dimension) {\r\n    var length = input.length;\r\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\r\n    var output = opt_output;\r\n    if (output === undefined) {\r\n        if (dimension > 2) {\r\n            // preserve values beyond second dimension\r\n            output = input.slice();\r\n        }\r\n        else {\r\n            output = new Array(length);\r\n        }\r\n    }\r\n    for (var i = 0; i < length; i += dimension) {\r\n        output[i] = 180 * input[i] / HALF_SIZE;\r\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\r\n    }\r\n    return output;\r\n}\r\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/proj/epsg4326\r\n */\r\nimport Projection from './Projection.js';\r\nimport Units from './Units.js';\r\n/**\r\n * Semi-major radius of the WGS84 ellipsoid.\r\n *\r\n * @const\r\n * @type {number}\r\n */\r\nexport var RADIUS = 6378137;\r\n/**\r\n * Extent of the EPSG:4326 projection which is the whole world.\r\n *\r\n * @const\r\n * @type {import(\"../extent.js\").Extent}\r\n */\r\nexport var EXTENT = [-180, -90, 180, 90];\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\r\n/**\r\n * @classdesc\r\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\r\n *\r\n * Note that OpenLayers does not strictly comply with the EPSG definition.\r\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\r\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\r\n */\r\nvar EPSG4326Projection = /** @class */ (function (_super) {\r\n    __extends(EPSG4326Projection, _super);\r\n    /**\r\n     * @param {string} code Code.\r\n     * @param {string=} opt_axisOrientation Axis orientation.\r\n     */\r\n    function EPSG4326Projection(code, opt_axisOrientation) {\r\n        return _super.call(this, {\r\n            code: code,\r\n            units: Units.DEGREES,\r\n            extent: EXTENT,\r\n            axisOrientation: opt_axisOrientation,\r\n            global: true,\r\n            metersPerUnit: METERS_PER_UNIT,\r\n            worldExtent: EXTENT\r\n        }) || this;\r\n    }\r\n    return EPSG4326Projection;\r\n}(Projection));\r\n/**\r\n * Projections equal to EPSG:4326.\r\n *\r\n * @const\r\n * @type {Array<import(\"./Projection.js\").default>}\r\n */\r\nexport var PROJECTIONS = [\r\n    new EPSG4326Projection('CRS:84'),\r\n    new EPSG4326Projection('EPSG:4326', 'neu'),\r\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\r\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\r\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\r\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\r\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\r\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\r\n];\r\n//# sourceMappingURL=epsg4326.js.map","/**\r\n * @module ol/proj/projections\r\n */\r\n/**\r\n * @type {Object<string, import(\"./Projection.js\").default>}\r\n */\r\nvar cache = {};\r\n/**\r\n * Clear the projections cache.\r\n */\r\nexport function clear() {\r\n    cache = {};\r\n}\r\n/**\r\n * Get a cached projection by code.\r\n * @param {string} code The code for the projection.\r\n * @return {import(\"./Projection.js\").default} The projection (if cached).\r\n */\r\nexport function get(code) {\r\n    return cache[code] || null;\r\n}\r\n/**\r\n * Add a projection to the cache.\r\n * @param {string} code The projection code.\r\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\r\n */\r\nexport function add(code, projection) {\r\n    cache[code] = projection;\r\n}\r\n//# sourceMappingURL=projections.js.map","/**\r\n * @module ol/proj/transforms\r\n */\r\nimport { isEmpty } from '../obj.js';\r\n/**\r\n * @private\r\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\r\n */\r\nvar transforms = {};\r\n/**\r\n * Clear the transform cache.\r\n */\r\nexport function clear() {\r\n    transforms = {};\r\n}\r\n/**\r\n * Registers a conversion function to convert coordinates from the source\r\n * projection to the destination projection.\r\n *\r\n * @param {import(\"./Projection.js\").default} source Source.\r\n * @param {import(\"./Projection.js\").default} destination Destination.\r\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\r\n */\r\nexport function add(source, destination, transformFn) {\r\n    var sourceCode = source.getCode();\r\n    var destinationCode = destination.getCode();\r\n    if (!(sourceCode in transforms)) {\r\n        transforms[sourceCode] = {};\r\n    }\r\n    transforms[sourceCode][destinationCode] = transformFn;\r\n}\r\n/**\r\n * Unregisters the conversion function to convert coordinates from the source\r\n * projection to the destination projection.  This method is used to clean up\r\n * cached transforms during testing.\r\n *\r\n * @param {import(\"./Projection.js\").default} source Source projection.\r\n * @param {import(\"./Projection.js\").default} destination Destination projection.\r\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\r\n */\r\nexport function remove(source, destination) {\r\n    var sourceCode = source.getCode();\r\n    var destinationCode = destination.getCode();\r\n    var transform = transforms[sourceCode][destinationCode];\r\n    delete transforms[sourceCode][destinationCode];\r\n    if (isEmpty(transforms[sourceCode])) {\r\n        delete transforms[sourceCode];\r\n    }\r\n    return transform;\r\n}\r\n/**\r\n * Get a transform given a source code and a destination code.\r\n * @param {string} sourceCode The code for the source projection.\r\n * @param {string} destinationCode The code for the destination projection.\r\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\r\n */\r\nexport function get(sourceCode, destinationCode) {\r\n    var transform;\r\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\r\n        transform = transforms[sourceCode][destinationCode];\r\n    }\r\n    return transform;\r\n}\r\n//# sourceMappingURL=transforms.js.map","/**\r\n * @module ol/proj\r\n */\r\n/**\r\n * The ol/proj module stores:\r\n * * a list of {@link module:ol/proj/Projection}\r\n * objects, one for each projection supported by the application\r\n * * a list of transform functions needed to convert coordinates in one projection\r\n * into another.\r\n *\r\n * The static functions are the methods used to maintain these.\r\n * Each transform function can handle not only simple coordinate pairs, but also\r\n * large arrays of coordinates such as vector geometries.\r\n *\r\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\r\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\r\n * for example by Bing Maps or OpenStreetMap), together with the relevant\r\n * transform functions.\r\n *\r\n * Additional transforms may be added by using the http://proj4js.org/\r\n * library (version 2.2 or later). You can use the full build supplied by\r\n * Proj4js, or create a custom build to support those projections you need; see\r\n * the Proj4js website for how to do this. You also need the Proj4js definitions\r\n * for the required projections. These definitions can be obtained from\r\n * https://epsg.io/, and are a JS function, so can be loaded in a script\r\n * tag (as in the examples) or pasted into your application.\r\n *\r\n * After all required projection definitions are added to proj4's registry (by\r\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\r\n * package. Existing transforms are not changed by this function. See\r\n * examples/wms-image-custom-proj for an example of this.\r\n *\r\n * Additional projection definitions can be registered with `proj4.defs()` any\r\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\r\n * know in advance what projections are needed, you can initially load minimal\r\n * support and then load whichever are requested.\r\n *\r\n * Note that Proj4js does not support projection extents. If you want to add\r\n * one for creating default tile grids, you can add it after the Projection\r\n * object has been created with `setExtent`, for example,\r\n * `get('EPSG:1234').setExtent(extent)`.\r\n *\r\n * In addition to Proj4js support, any transform functions can be added with\r\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\r\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\r\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\r\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\r\n * examples/wms-custom-proj for an example of this.\r\n *\r\n * Note that if no transforms are needed and you only need to define the\r\n * projection, just add a {@link module:ol/proj/Projection} with\r\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\r\n * this.\r\n */\r\nimport { getDistance } from './sphere.js';\r\nimport { applyTransform } from './extent.js';\r\nimport { modulo } from './math.js';\r\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\r\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\r\nimport Projection from './proj/Projection.js';\r\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\r\nimport * as projections from './proj/projections.js';\r\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\r\n/**\r\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\r\n * string or undefined.\r\n * @typedef {Projection|string|undefined} ProjectionLike\r\n * @api\r\n */\r\n/**\r\n * A transform function accepts an array of input coordinate values, an optional\r\n * output array, and an optional dimension (default should be 2).  The function\r\n * transforms the input coordinate values, populates the output array, and\r\n * returns the output array.\r\n *\r\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\r\n * @api\r\n */\r\nexport { METERS_PER_UNIT };\r\nexport { Projection };\r\n/**\r\n * @param {Array<number>} input Input coordinate array.\r\n * @param {Array<number>=} opt_output Output array of coordinate values.\r\n * @param {number=} opt_dimension Dimension.\r\n * @return {Array<number>} Output coordinate array (new array, same coordinate\r\n *     values).\r\n */\r\nexport function cloneTransform(input, opt_output, opt_dimension) {\r\n    var output;\r\n    if (opt_output !== undefined) {\r\n        for (var i = 0, ii = input.length; i < ii; ++i) {\r\n            opt_output[i] = input[i];\r\n        }\r\n        output = opt_output;\r\n    }\r\n    else {\r\n        output = input.slice();\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * @param {Array<number>} input Input coordinate array.\r\n * @param {Array<number>=} opt_output Output array of coordinate values.\r\n * @param {number=} opt_dimension Dimension.\r\n * @return {Array<number>} Input coordinate array (same array as input).\r\n */\r\nexport function identityTransform(input, opt_output, opt_dimension) {\r\n    if (opt_output !== undefined && input !== opt_output) {\r\n        for (var i = 0, ii = input.length; i < ii; ++i) {\r\n            opt_output[i] = input[i];\r\n        }\r\n        input = opt_output;\r\n    }\r\n    return input;\r\n}\r\n/**\r\n * Add a Projection object to the list of supported projections that can be\r\n * looked up by their code.\r\n *\r\n * @param {Projection} projection Projection instance.\r\n * @api\r\n */\r\nexport function addProjection(projection) {\r\n    projections.add(projection.getCode(), projection);\r\n    addTransformFunc(projection, projection, cloneTransform);\r\n}\r\n/**\r\n * @param {Array<Projection>} projections Projections.\r\n */\r\nexport function addProjections(projections) {\r\n    projections.forEach(addProjection);\r\n}\r\n/**\r\n * Fetches a Projection object for the code specified.\r\n *\r\n * @param {ProjectionLike} projectionLike Either a code string which is\r\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\r\n *     existing projection object, or undefined.\r\n * @return {Projection} Projection object, or null if not in list.\r\n * @api\r\n */\r\nexport function get(projectionLike) {\r\n    return typeof projectionLike === 'string' ?\r\n        projections.get(/** @type {string} */ (projectionLike)) :\r\n        ( /** @type {Projection} */(projectionLike) || null);\r\n}\r\n/**\r\n * Get the resolution of the point in degrees or distance units.\r\n * For projections with degrees as the unit this will simply return the\r\n * provided resolution. For other projections the point resolution is\r\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\r\n * measuring its width and height on the normal sphere,\r\n * and taking the average of the width and height.\r\n * A custom function can be provided for a specific projection, either\r\n * by setting the `getPointResolution` option in the\r\n * {@link module:ol/proj/Projection~Projection} constructor or by using\r\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\r\n * projection object.\r\n * @param {ProjectionLike} projection The projection.\r\n * @param {number} resolution Nominal resolution in projection units.\r\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\r\n * @param {Units=} opt_units Units to get the point resolution in.\r\n * Default is the projection's units.\r\n * @return {number} Point resolution.\r\n * @api\r\n */\r\nexport function getPointResolution(projection, resolution, point, opt_units) {\r\n    projection = get(projection);\r\n    var pointResolution;\r\n    var getter = projection.getPointResolutionFunc();\r\n    if (getter) {\r\n        pointResolution = getter(resolution, point);\r\n    }\r\n    else {\r\n        var units = projection.getUnits();\r\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\r\n            pointResolution = resolution;\r\n        }\r\n        else {\r\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\r\n            // measuring its width and height on the normal sphere, and taking the\r\n            // average of the width and height.\r\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\r\n            var vertices = [\r\n                point[0] - resolution / 2, point[1],\r\n                point[0] + resolution / 2, point[1],\r\n                point[0], point[1] - resolution / 2,\r\n                point[0], point[1] + resolution / 2\r\n            ];\r\n            vertices = toEPSG4326_1(vertices, vertices, 2);\r\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\r\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\r\n            pointResolution = (width + height) / 2;\r\n            var metersPerUnit = opt_units ?\r\n                METERS_PER_UNIT[opt_units] :\r\n                projection.getMetersPerUnit();\r\n            if (metersPerUnit !== undefined) {\r\n                pointResolution /= metersPerUnit;\r\n            }\r\n        }\r\n    }\r\n    return pointResolution;\r\n}\r\n/**\r\n * Registers transformation functions that don't alter coordinates. Those allow\r\n * to transform between projections with equal meaning.\r\n *\r\n * @param {Array<Projection>} projections Projections.\r\n * @api\r\n */\r\nexport function addEquivalentProjections(projections) {\r\n    addProjections(projections);\r\n    projections.forEach(function (source) {\r\n        projections.forEach(function (destination) {\r\n            if (source !== destination) {\r\n                addTransformFunc(source, destination, cloneTransform);\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Registers transformation functions to convert coordinates in any projection\r\n * in projection1 to any projection in projection2.\r\n *\r\n * @param {Array<Projection>} projections1 Projections with equal\r\n *     meaning.\r\n * @param {Array<Projection>} projections2 Projections with equal\r\n *     meaning.\r\n * @param {TransformFunction} forwardTransform Transformation from any\r\n *   projection in projection1 to any projection in projection2.\r\n * @param {TransformFunction} inverseTransform Transform from any projection\r\n *   in projection2 to any projection in projection1..\r\n */\r\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\r\n    projections1.forEach(function (projection1) {\r\n        projections2.forEach(function (projection2) {\r\n            addTransformFunc(projection1, projection2, forwardTransform);\r\n            addTransformFunc(projection2, projection1, inverseTransform);\r\n        });\r\n    });\r\n}\r\n/**\r\n * Clear all cached projections and transforms.\r\n */\r\nexport function clearAllProjections() {\r\n    projections.clear();\r\n    clearTransformFuncs();\r\n}\r\n/**\r\n * @param {Projection|string|undefined} projection Projection.\r\n * @param {string} defaultCode Default code.\r\n * @return {Projection} Projection.\r\n */\r\nexport function createProjection(projection, defaultCode) {\r\n    if (!projection) {\r\n        return get(defaultCode);\r\n    }\r\n    else if (typeof projection === 'string') {\r\n        return get(projection);\r\n    }\r\n    else {\r\n        return (\r\n        /** @type {Projection} */ (projection));\r\n    }\r\n}\r\n/**\r\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\r\n * function.\r\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\r\n *     transform.\r\n * @return {TransformFunction} Transform function.\r\n */\r\nexport function createTransformFromCoordinateTransform(coordTransform) {\r\n    return (\r\n    /**\r\n     * @param {Array<number>} input Input.\r\n     * @param {Array<number>=} opt_output Output.\r\n     * @param {number=} opt_dimension Dimension.\r\n     * @return {Array<number>} Output.\r\n     */\r\n    function (input, opt_output, opt_dimension) {\r\n        var length = input.length;\r\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\r\n        var output = opt_output !== undefined ? opt_output : new Array(length);\r\n        for (var i = 0; i < length; i += dimension) {\r\n            var point = coordTransform([input[i], input[i + 1]]);\r\n            output[i] = point[0];\r\n            output[i + 1] = point[1];\r\n            for (var j = dimension - 1; j >= 2; --j) {\r\n                output[i + j] = input[i + j];\r\n            }\r\n        }\r\n        return output;\r\n    });\r\n}\r\n/**\r\n * Registers coordinate transform functions to convert coordinates between the\r\n * source projection and the destination projection.\r\n * The forward and inverse functions convert coordinate pairs; this function\r\n * converts these into the functions used internally which also handle\r\n * extents and coordinate arrays.\r\n *\r\n * @param {ProjectionLike} source Source projection.\r\n * @param {ProjectionLike} destination Destination projection.\r\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\r\n *     function (that is, from the source projection to the destination\r\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\r\n *     the transformed {@link module:ol/coordinate~Coordinate}.\r\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\r\n *     function (that is, from the destination projection to the source\r\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\r\n *     the transformed {@link module:ol/coordinate~Coordinate}.\r\n * @api\r\n */\r\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\r\n    var sourceProj = get(source);\r\n    var destProj = get(destination);\r\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\r\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\r\n}\r\n/**\r\n * Transforms a coordinate from longitude/latitude to a different projection.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\r\n *     an array with longitude as 1st and latitude as 2nd element.\r\n * @param {ProjectionLike=} opt_projection Target projection. The\r\n *     default is Web Mercator, i.e. 'EPSG:3857'.\r\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\r\n * @api\r\n */\r\nexport function fromLonLat(coordinate, opt_projection) {\r\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\r\n}\r\n/**\r\n * Transforms a coordinate to longitude/latitude.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\r\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\r\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\r\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\r\n *     with longitude as 1st and latitude as 2nd element.\r\n * @api\r\n */\r\nexport function toLonLat(coordinate, opt_projection) {\r\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\r\n    var lon = lonLat[0];\r\n    if (lon < -180 || lon > 180) {\r\n        lonLat[0] = modulo(lon + 180, 360) - 180;\r\n    }\r\n    return lonLat;\r\n}\r\n/**\r\n * Checks if two projections are the same, that is every coordinate in one\r\n * projection does represent the same geographic point as the same coordinate in\r\n * the other projection.\r\n *\r\n * @param {Projection} projection1 Projection 1.\r\n * @param {Projection} projection2 Projection 2.\r\n * @return {boolean} Equivalent.\r\n * @api\r\n */\r\nexport function equivalent(projection1, projection2) {\r\n    if (projection1 === projection2) {\r\n        return true;\r\n    }\r\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\r\n    if (projection1.getCode() === projection2.getCode()) {\r\n        return equalUnits;\r\n    }\r\n    else {\r\n        var transformFunc = getTransformFromProjections(projection1, projection2);\r\n        return transformFunc === cloneTransform && equalUnits;\r\n    }\r\n}\r\n/**\r\n * Searches in the list of transform functions for the function for converting\r\n * coordinates from the source projection to the destination projection.\r\n *\r\n * @param {Projection} sourceProjection Source Projection object.\r\n * @param {Projection} destinationProjection Destination Projection\r\n *     object.\r\n * @return {TransformFunction} Transform function.\r\n */\r\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\r\n    var sourceCode = sourceProjection.getCode();\r\n    var destinationCode = destinationProjection.getCode();\r\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\r\n    if (!transformFunc) {\r\n        transformFunc = identityTransform;\r\n    }\r\n    return transformFunc;\r\n}\r\n/**\r\n * Given the projection-like objects, searches for a transformation\r\n * function to convert a coordinates array from the source projection to the\r\n * destination projection.\r\n *\r\n * @param {ProjectionLike} source Source.\r\n * @param {ProjectionLike} destination Destination.\r\n * @return {TransformFunction} Transform function.\r\n * @api\r\n */\r\nexport function getTransform(source, destination) {\r\n    var sourceProjection = get(source);\r\n    var destinationProjection = get(destination);\r\n    return getTransformFromProjections(sourceProjection, destinationProjection);\r\n}\r\n/**\r\n * Transforms a coordinate from source projection to destination projection.\r\n * This returns a new coordinate (and does not modify the original).\r\n *\r\n * See {@link module:ol/proj~transformExtent} for extent transformation.\r\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\r\n * subclasses for geometry transforms.\r\n *\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {ProjectionLike} source Source projection-like.\r\n * @param {ProjectionLike} destination Destination projection-like.\r\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\r\n * @api\r\n */\r\nexport function transform(coordinate, source, destination) {\r\n    var transformFunc = getTransform(source, destination);\r\n    return transformFunc(coordinate, undefined, coordinate.length);\r\n}\r\n/**\r\n * Transforms an extent from source projection to destination projection.  This\r\n * returns a new extent (and does not modify the original).\r\n *\r\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\r\n * @param {ProjectionLike} source Source projection-like.\r\n * @param {ProjectionLike} destination Destination projection-like.\r\n * @return {import(\"./extent.js\").Extent} The transformed extent.\r\n * @api\r\n */\r\nexport function transformExtent(extent, source, destination) {\r\n    var transformFunc = getTransform(source, destination);\r\n    return applyTransform(extent, transformFunc);\r\n}\r\n/**\r\n * Transforms the given point to the destination projection.\r\n *\r\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\r\n * @param {Projection} sourceProjection Source projection.\r\n * @param {Projection} destinationProjection Destination projection.\r\n * @return {import(\"./coordinate.js\").Coordinate} Point.\r\n */\r\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\r\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\r\n    return transformFunc(point);\r\n}\r\n/**\r\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\r\n * by when this module is executed and should only need to be called again after\r\n * `clearAllProjections()` is called (e.g. in tests).\r\n */\r\nexport function addCommon() {\r\n    // Add transformations that don't alter coordinates to convert within set of\r\n    // projections with equal meaning.\r\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\r\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\r\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\r\n    // coordinates and back.\r\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\r\n}\r\naddCommon();\r\n//# sourceMappingURL=proj.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/control/MousePosition\r\n */\r\nimport { listen } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { getChangeEventType } from '../Object.js';\r\nimport Control from './Control.js';\r\nimport { getTransformFromProjections, identityTransform, get as getProjection } from '../proj.js';\r\n/**\r\n * @type {string}\r\n */\r\nvar PROJECTION = 'projection';\r\n/**\r\n * @type {string}\r\n */\r\nvar COORDINATE_FORMAT = 'coordinateFormat';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-mouse-position'] CSS class name.\r\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\r\n * control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the\r\n * control to be rendered outside of the map's viewport.\r\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\r\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\r\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\r\n * retain the last rendered position, set this option to something falsey (like an empty\r\n * string `''`).\r\n */\r\n/**\r\n * @classdesc\r\n * A control to show the 2D coordinates of the mouse cursor. By default, these\r\n * are in the view projection, but can be in any supported projection.\r\n * By default the control is shown in the top right corner of the map, but this\r\n * can be changed by using the css selector `.ol-mouse-position`.\r\n *\r\n * On touch devices, which usually do not have a mouse cursor, the coordinates\r\n * of the currently touched position are shown.\r\n *\r\n * @api\r\n */\r\nvar MousePosition = /** @class */ (function (_super) {\r\n    __extends(MousePosition, _super);\r\n    /**\r\n     * @param {Options=} opt_options Mouse position options.\r\n     */\r\n    function MousePosition(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        var element = document.createElement('div');\r\n        element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\r\n        _this = _super.call(this, {\r\n            element: element,\r\n            render: options.render || render,\r\n            target: options.target\r\n        }) || this;\r\n        listen(_this, getChangeEventType(PROJECTION), _this.handleProjectionChanged_, _this);\r\n        if (options.coordinateFormat) {\r\n            _this.setCoordinateFormat(options.coordinateFormat);\r\n        }\r\n        if (options.projection) {\r\n            _this.setProjection(options.projection);\r\n        }\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.renderOnMouseOut_ = !!_this.undefinedHTML_;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.renderedHTML_ = element.innerHTML;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../proj/Projection.js\").default}\r\n         */\r\n        _this.mapProjection_ = null;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../proj.js\").TransformFunction}\r\n         */\r\n        _this.transform_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../pixel.js\").Pixel}\r\n         */\r\n        _this.lastMouseMovePixel_ = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    MousePosition.prototype.handleProjectionChanged_ = function () {\r\n        this.transform_ = null;\r\n    };\r\n    /**\r\n     * Return the coordinate format type used to render the current position or\r\n     * undefined.\r\n     * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\r\n     *     position in.\r\n     * @observable\r\n     * @api\r\n     */\r\n    MousePosition.prototype.getCoordinateFormat = function () {\r\n        return (\r\n        /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT)));\r\n    };\r\n    /**\r\n     * Return the projection that is used to report the mouse position.\r\n     * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\r\n     *     position in.\r\n     * @observable\r\n     * @api\r\n     */\r\n    MousePosition.prototype.getProjection = function () {\r\n        return (\r\n        /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION)));\r\n    };\r\n    /**\r\n     * @param {Event} event Browser event.\r\n     * @protected\r\n     */\r\n    MousePosition.prototype.handleMouseMove = function (event) {\r\n        var map = this.getMap();\r\n        this.lastMouseMovePixel_ = map.getEventPixel(event);\r\n        this.updateHTML_(this.lastMouseMovePixel_);\r\n    };\r\n    /**\r\n     * @param {Event} event Browser event.\r\n     * @protected\r\n     */\r\n    MousePosition.prototype.handleMouseOut = function (event) {\r\n        this.updateHTML_(null);\r\n        this.lastMouseMovePixel_ = null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    MousePosition.prototype.setMap = function (map) {\r\n        _super.prototype.setMap.call(this, map);\r\n        if (map) {\r\n            var viewport = map.getViewport();\r\n            this.listenerKeys.push(listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this), listen(viewport, EventType.TOUCHSTART, this.handleMouseMove, this));\r\n            if (this.renderOnMouseOut_) {\r\n                this.listenerKeys.push(listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this), listen(viewport, EventType.TOUCHEND, this.handleMouseOut, this));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Set the coordinate format type used to render the current position.\r\n     * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\r\n     *     position in.\r\n     * @observable\r\n     * @api\r\n     */\r\n    MousePosition.prototype.setCoordinateFormat = function (format) {\r\n        this.set(COORDINATE_FORMAT, format);\r\n    };\r\n    /**\r\n     * Set the projection that is used to report the mouse position.\r\n     * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\r\n     *     position in.\r\n     * @observable\r\n     * @api\r\n     */\r\n    MousePosition.prototype.setProjection = function (projection) {\r\n        this.set(PROJECTION, getProjection(projection));\r\n    };\r\n    /**\r\n     * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\r\n     * @private\r\n     */\r\n    MousePosition.prototype.updateHTML_ = function (pixel) {\r\n        var html = this.undefinedHTML_;\r\n        if (pixel && this.mapProjection_) {\r\n            if (!this.transform_) {\r\n                var projection = this.getProjection();\r\n                if (projection) {\r\n                    this.transform_ = getTransformFromProjections(this.mapProjection_, projection);\r\n                }\r\n                else {\r\n                    this.transform_ = identityTransform;\r\n                }\r\n            }\r\n            var map = this.getMap();\r\n            var coordinate = map.getCoordinateFromPixel(pixel);\r\n            if (coordinate) {\r\n                this.transform_(coordinate, coordinate);\r\n                var coordinateFormat = this.getCoordinateFormat();\r\n                if (coordinateFormat) {\r\n                    html = coordinateFormat(coordinate);\r\n                }\r\n                else {\r\n                    html = coordinate.toString();\r\n                }\r\n            }\r\n        }\r\n        if (!this.renderedHTML_ || html !== this.renderedHTML_) {\r\n            this.element.innerHTML = html;\r\n            this.renderedHTML_ = html;\r\n        }\r\n    };\r\n    return MousePosition;\r\n}(Control));\r\n/**\r\n * Update the projection. Rendering of the coordinates is done in\r\n * `handleMouseMove` and `handleMouseUp`.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {MousePosition}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n    var frameState = mapEvent.frameState;\r\n    if (!frameState) {\r\n        this.mapProjection_ = null;\r\n    }\r\n    else {\r\n        if (this.mapProjection_ != frameState.viewState.projection) {\r\n            this.mapProjection_ = frameState.viewState.projection;\r\n            this.transform_ = null;\r\n        }\r\n    }\r\n}\r\nexport default MousePosition;\r\n//# sourceMappingURL=MousePosition.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/MapEvent\r\n */\r\nimport Event from './events/Event.js';\r\n/**\r\n * @classdesc\r\n * Events emitted as map events are instances of this type.\r\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\r\n */\r\nvar MapEvent = /** @class */ (function (_super) {\r\n    __extends(MapEvent, _super);\r\n    /**\r\n     * @param {string} type Event type.\r\n     * @param {import(\"./PluggableMap.js\").default} map Map.\r\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\r\n     */\r\n    function MapEvent(type, map, opt_frameState) {\r\n        var _this = _super.call(this, type) || this;\r\n        /**\r\n         * The map where the event occurred.\r\n         * @type {import(\"./PluggableMap.js\").default}\r\n         * @api\r\n         */\r\n        _this.map = map;\r\n        /**\r\n         * The frame state at the time of the event.\r\n         * @type {?import(\"./PluggableMap.js\").FrameState}\r\n         * @api\r\n         */\r\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\r\n        return _this;\r\n    }\r\n    return MapEvent;\r\n}(Event));\r\nexport default MapEvent;\r\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/MapBrowserEvent\r\n */\r\nimport MapEvent from './MapEvent.js';\r\n/**\r\n * @classdesc\r\n * Events emitted as map browser events are instances of this type.\r\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\r\n */\r\nvar MapBrowserEvent = /** @class */ (function (_super) {\r\n    __extends(MapBrowserEvent, _super);\r\n    /**\r\n     * @param {string} type Event type.\r\n     * @param {import(\"./PluggableMap.js\").default} map Map.\r\n     * @param {Event} browserEvent Browser event.\r\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\r\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\r\n     */\r\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\r\n        var _this = _super.call(this, type, map, opt_frameState) || this;\r\n        /**\r\n         * The original browser event.\r\n         * @const\r\n         * @type {Event}\r\n         * @api\r\n         */\r\n        _this.originalEvent = browserEvent;\r\n        /**\r\n         * The map pixel relative to the viewport corresponding to the original browser event.\r\n         * @type {import(\"./pixel.js\").Pixel}\r\n         * @api\r\n         */\r\n        _this.pixel = map.getEventPixel(browserEvent);\r\n        /**\r\n         * The coordinate in view projection corresponding to the original browser event.\r\n         * @type {import(\"./coordinate.js\").Coordinate}\r\n         * @api\r\n         */\r\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\r\n        /**\r\n         * Indicates if the map is currently being dragged. Only set for\r\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\r\n         *\r\n         * @type {boolean}\r\n         * @api\r\n         */\r\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Prevents the default browser action.\r\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\r\n     * @override\r\n     * @api\r\n     */\r\n    MapBrowserEvent.prototype.preventDefault = function () {\r\n        _super.prototype.preventDefault.call(this);\r\n        this.originalEvent.preventDefault();\r\n    };\r\n    /**\r\n     * Prevents further propagation of the current event.\r\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\r\n     * @override\r\n     * @api\r\n     */\r\n    MapBrowserEvent.prototype.stopPropagation = function () {\r\n        _super.prototype.stopPropagation.call(this);\r\n        this.originalEvent.stopPropagation();\r\n    };\r\n    return MapBrowserEvent;\r\n}(MapEvent));\r\nexport default MapBrowserEvent;\r\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\r\n * @module ol/has\r\n */\r\nvar ua = typeof navigator !== 'undefined' ?\r\n    navigator.userAgent.toLowerCase() : '';\r\n/**\r\n * User agent string says we are dealing with Firefox as browser.\r\n * @type {boolean}\r\n */\r\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\r\n/**\r\n * User agent string says we are dealing with Safari as browser.\r\n * @type {boolean}\r\n */\r\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\r\n/**\r\n * User agent string says we are dealing with a WebKit engine.\r\n * @type {boolean}\r\n */\r\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\r\n/**\r\n * User agent string says we are dealing with a Mac as platform.\r\n * @type {boolean}\r\n */\r\nexport var MAC = ua.indexOf('macintosh') !== -1;\r\n/**\r\n * The ratio between physical pixels and device-independent pixels\r\n * (dips) on the device (`window.devicePixelRatio`).\r\n * @const\r\n * @type {number}\r\n * @api\r\n */\r\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\r\n/**\r\n * Is HTML5 geolocation supported in the current browser?\r\n * @const\r\n * @type {boolean}\r\n * @api\r\n */\r\nexport var GEOLOCATION = 'geolocation' in navigator;\r\n/**\r\n * True if browser supports touch events.\r\n * @const\r\n * @type {boolean}\r\n * @api\r\n */\r\nexport var TOUCH = 'ontouchstart' in window;\r\n/**\r\n * True if browser supports pointer events.\r\n * @const\r\n * @type {boolean}\r\n */\r\nexport var POINTER = 'PointerEvent' in window;\r\n/**\r\n * True if browser supports ms pointer events (IE 10).\r\n * @const\r\n * @type {boolean}\r\n */\r\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\r\nexport { HAS as WEBGL } from './webgl.js';\r\n//# sourceMappingURL=has.js.map","/**\r\n * @module ol/MapBrowserEventType\r\n */\r\nimport EventType from './events/EventType.js';\r\n/**\r\n * Constants for event names.\r\n * @enum {string}\r\n */\r\nexport default {\r\n    /**\r\n     * A true single click with no dragging and no double click. Note that this\r\n     * event is delayed by 250 ms to ensure that it is not a double click.\r\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\r\n     * @api\r\n     */\r\n    SINGLECLICK: 'singleclick',\r\n    /**\r\n     * A click with no dragging. A double click will fire two of this.\r\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\r\n     * @api\r\n     */\r\n    CLICK: EventType.CLICK,\r\n    /**\r\n     * A true double click, with no dragging.\r\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\r\n     * @api\r\n     */\r\n    DBLCLICK: EventType.DBLCLICK,\r\n    /**\r\n     * Triggered when a pointer is dragged.\r\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\r\n     * @api\r\n     */\r\n    POINTERDRAG: 'pointerdrag',\r\n    /**\r\n     * Triggered when a pointer is moved. Note that on touch devices this is\r\n     * triggered when the map is panned, so is not the same as mousemove.\r\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\r\n     * @api\r\n     */\r\n    POINTERMOVE: 'pointermove',\r\n    POINTERDOWN: 'pointerdown',\r\n    POINTERUP: 'pointerup',\r\n    POINTEROVER: 'pointerover',\r\n    POINTEROUT: 'pointerout',\r\n    POINTERENTER: 'pointerenter',\r\n    POINTERLEAVE: 'pointerleave',\r\n    POINTERCANCEL: 'pointercancel'\r\n};\r\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/MapBrowserPointerEvent\r\n */\r\nimport MapBrowserEvent from './MapBrowserEvent.js';\r\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\r\n    __extends(MapBrowserPointerEvent, _super);\r\n    /**\r\n     * @param {string} type Event type.\r\n     * @param {import(\"./PluggableMap.js\").default} map Map.\r\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer event.\r\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\r\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\r\n     */\r\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\r\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\r\n        /**\r\n         * @const\r\n         * @type {import(\"./pointer/PointerEvent.js\").default}\r\n         */\r\n        _this.pointerEvent = pointerEvent;\r\n        return _this;\r\n    }\r\n    return MapBrowserPointerEvent;\r\n}(MapBrowserEvent));\r\nexport default MapBrowserPointerEvent;\r\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\r\n * @module ol/pointer/EventType\r\n */\r\n/**\r\n * Constants for event names.\r\n * @enum {string}\r\n */\r\nexport default {\r\n    POINTERMOVE: 'pointermove',\r\n    POINTERDOWN: 'pointerdown',\r\n    POINTERUP: 'pointerup',\r\n    POINTEROVER: 'pointerover',\r\n    POINTEROUT: 'pointerout',\r\n    POINTERENTER: 'pointerenter',\r\n    POINTERLEAVE: 'pointerleave',\r\n    POINTERCANCEL: 'pointercancel'\r\n};\r\n//# sourceMappingURL=EventType.js.map","/**\r\n * @module ol/pointer/EventSource\r\n */\r\nvar EventSource = /** @class */ (function () {\r\n    /**\r\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\r\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\r\n     */\r\n    function EventSource(dispatcher, mapping) {\r\n        /**\r\n         * @type {import(\"./PointerEventHandler.js\").default}\r\n         */\r\n        this.dispatcher = dispatcher;\r\n        /**\r\n         * @private\r\n         * @const\r\n         * @type {!Object<string, function(Event): void>}\r\n         */\r\n        this.mapping_ = mapping;\r\n    }\r\n    /**\r\n     * List of events supported by this source.\r\n     * @return {Array<string>} Event names\r\n     */\r\n    EventSource.prototype.getEvents = function () {\r\n        return Object.keys(this.mapping_);\r\n    };\r\n    /**\r\n     * Returns the handler that should handle a given event type.\r\n     * @param {string} eventType The event type.\r\n     * @return {function(Event)} Handler\r\n     */\r\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\r\n        return this.mapping_[eventType];\r\n    };\r\n    return EventSource;\r\n}());\r\nexport default EventSource;\r\n//# sourceMappingURL=EventSource.js.map","/**\r\n * @module ol/pointer/MouseSource\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// Based on https://github.com/Polymer/PointerEvents\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\nimport EventSource from './EventSource.js';\r\n/**\r\n * @type {number}\r\n */\r\nexport var POINTER_ID = 1;\r\n/**\r\n * @type {string}\r\n */\r\nexport var POINTER_TYPE = 'mouse';\r\n/**\r\n * Radius around touchend that swallows mouse events.\r\n *\r\n * @type {number}\r\n */\r\nvar DEDUP_DIST = 25;\r\n/**\r\n * Handler for `mousedown`.\r\n *\r\n * @this {MouseSource}\r\n * @param {MouseEvent} inEvent The in event.\r\n */\r\nfunction mousedown(inEvent) {\r\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\r\n        // TODO(dfreedman) workaround for some elements not sending mouseup\r\n        // http://crbug/149091\r\n        if (POINTER_ID.toString() in this.pointerMap) {\r\n            this.cancel(inEvent);\r\n        }\r\n        var e = prepareEvent(inEvent, this.dispatcher);\r\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\r\n        this.dispatcher.down(e, inEvent);\r\n    }\r\n}\r\n/**\r\n * Handler for `mousemove`.\r\n *\r\n * @this {MouseSource}\r\n * @param {MouseEvent} inEvent The in event.\r\n */\r\nfunction mousemove(inEvent) {\r\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\r\n        var e = prepareEvent(inEvent, this.dispatcher);\r\n        this.dispatcher.move(e, inEvent);\r\n    }\r\n}\r\n/**\r\n * Handler for `mouseup`.\r\n *\r\n * @this {MouseSource}\r\n * @param {MouseEvent} inEvent The in event.\r\n */\r\nfunction mouseup(inEvent) {\r\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\r\n        var p = this.pointerMap[POINTER_ID.toString()];\r\n        if (p && p.button === inEvent.button) {\r\n            var e = prepareEvent(inEvent, this.dispatcher);\r\n            this.dispatcher.up(e, inEvent);\r\n            this.cleanupMouse();\r\n        }\r\n    }\r\n}\r\n/**\r\n * Handler for `mouseover`.\r\n *\r\n * @this {MouseSource}\r\n * @param {MouseEvent} inEvent The in event.\r\n */\r\nfunction mouseover(inEvent) {\r\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\r\n        var e = prepareEvent(inEvent, this.dispatcher);\r\n        this.dispatcher.enterOver(e, inEvent);\r\n    }\r\n}\r\n/**\r\n * Handler for `mouseout`.\r\n *\r\n * @this {MouseSource}\r\n * @param {MouseEvent} inEvent The in event.\r\n */\r\nfunction mouseout(inEvent) {\r\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\r\n        var e = prepareEvent(inEvent, this.dispatcher);\r\n        this.dispatcher.leaveOut(e, inEvent);\r\n    }\r\n}\r\nvar MouseSource = /** @class */ (function (_super) {\r\n    __extends(MouseSource, _super);\r\n    /**\r\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\r\n     */\r\n    function MouseSource(dispatcher) {\r\n        var _this = this;\r\n        var mapping = {\r\n            'mousedown': mousedown,\r\n            'mousemove': mousemove,\r\n            'mouseup': mouseup,\r\n            'mouseover': mouseover,\r\n            'mouseout': mouseout\r\n        };\r\n        _this = _super.call(this, dispatcher, mapping) || this;\r\n        /**\r\n         * @const\r\n         * @type {!Object<string, Event|Object>}\r\n         */\r\n        _this.pointerMap = dispatcher.pointerMap;\r\n        /**\r\n         * @const\r\n         * @type {Array<import(\"../pixel.js\").Pixel>}\r\n         */\r\n        _this.lastTouches = [];\r\n        return _this;\r\n    }\r\n    /**\r\n     * Detect if a mouse event was simulated from a touch by\r\n     * checking if previously there was a touch event at the\r\n     * same position.\r\n     *\r\n     * FIXME - Known problem with the native Android browser on\r\n     * Samsung GT-I9100 (Android 4.1.2):\r\n     * In case the page is scrolled, this function does not work\r\n     * correctly when a canvas is used (WebGL or canvas renderer).\r\n     * Mouse listeners on canvas elements (for this browser), create\r\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\r\n     * when a div is used, there is only one event). For the 'bad' one,\r\n     * clientX/clientY and also pageX/pageY are wrong when the page\r\n     * is scrolled. Because of that, this function can not detect if\r\n     * the events were simulated from a touch event. As result, a\r\n     * pointer event at a wrong position is dispatched, which confuses\r\n     * the map interactions.\r\n     * It is unclear, how one can get the correct position for the event\r\n     * or detect that the positions are invalid.\r\n     *\r\n     * @private\r\n     * @param {MouseEvent} inEvent The in event.\r\n     * @return {boolean} True, if the event was generated by a touch.\r\n     */\r\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\r\n        var lts = this.lastTouches;\r\n        var x = inEvent.clientX;\r\n        var y = inEvent.clientY;\r\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\r\n            // simulated mouse events will be swallowed near a primary touchend\r\n            var dx = Math.abs(x - t[0]);\r\n            var dy = Math.abs(y - t[1]);\r\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Dispatches a `pointercancel` event.\r\n     *\r\n     * @param {Event} inEvent The in event.\r\n     */\r\n    MouseSource.prototype.cancel = function (inEvent) {\r\n        var e = prepareEvent(inEvent, this.dispatcher);\r\n        this.dispatcher.cancel(e, inEvent);\r\n        this.cleanupMouse();\r\n    };\r\n    /**\r\n     * Remove the mouse from the list of active pointers.\r\n     */\r\n    MouseSource.prototype.cleanupMouse = function () {\r\n        delete this.pointerMap[POINTER_ID.toString()];\r\n    };\r\n    return MouseSource;\r\n}(EventSource));\r\n/**\r\n * Creates a copy of the original event that will be used\r\n * for the fake pointer event.\r\n *\r\n * @param {Event} inEvent The in event.\r\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\r\n * @return {Object} The copied event.\r\n */\r\nexport function prepareEvent(inEvent, dispatcher) {\r\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\r\n    // forward mouse preventDefault\r\n    var pd = e.preventDefault;\r\n    e.preventDefault = function () {\r\n        inEvent.preventDefault();\r\n        pd();\r\n    };\r\n    e.pointerId = POINTER_ID;\r\n    e.isPrimary = true;\r\n    e.pointerType = POINTER_TYPE;\r\n    return e;\r\n}\r\nexport default MouseSource;\r\n//# sourceMappingURL=MouseSource.js.map","/**\r\n * @module ol/pointer/MsSource\r\n */\r\n// Based on https://github.com/Polymer/PointerEvents\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\nimport EventSource from './EventSource.js';\r\n/**\r\n * @const\r\n * @type {Array<string>}\r\n */\r\nvar POINTER_TYPES = [\r\n    '',\r\n    'unavailable',\r\n    'touch',\r\n    'pen',\r\n    'mouse'\r\n];\r\n/**\r\n * Handler for `msPointerDown`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerDown(inEvent) {\r\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\r\n    var e = this.prepareEvent_(inEvent);\r\n    this.dispatcher.down(e, inEvent);\r\n}\r\n/**\r\n * Handler for `msPointerMove`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerMove(inEvent) {\r\n    var e = this.prepareEvent_(inEvent);\r\n    this.dispatcher.move(e, inEvent);\r\n}\r\n/**\r\n * Handler for `msPointerUp`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerUp(inEvent) {\r\n    var e = this.prepareEvent_(inEvent);\r\n    this.dispatcher.up(e, inEvent);\r\n    this.cleanup(inEvent.pointerId);\r\n}\r\n/**\r\n * Handler for `msPointerOut`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerOut(inEvent) {\r\n    var e = this.prepareEvent_(inEvent);\r\n    this.dispatcher.leaveOut(e, inEvent);\r\n}\r\n/**\r\n * Handler for `msPointerOver`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerOver(inEvent) {\r\n    var e = this.prepareEvent_(inEvent);\r\n    this.dispatcher.enterOver(e, inEvent);\r\n}\r\n/**\r\n * Handler for `msPointerCancel`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerCancel(inEvent) {\r\n    var e = this.prepareEvent_(inEvent);\r\n    this.dispatcher.cancel(e, inEvent);\r\n    this.cleanup(inEvent.pointerId);\r\n}\r\n/**\r\n * Handler for `msLostPointerCapture`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msLostPointerCapture(inEvent) {\r\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\r\n    this.dispatcher.dispatchEvent(e);\r\n}\r\n/**\r\n * Handler for `msGotPointerCapture`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msGotPointerCapture(inEvent) {\r\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\r\n    this.dispatcher.dispatchEvent(e);\r\n}\r\nvar MsSource = /** @class */ (function (_super) {\r\n    __extends(MsSource, _super);\r\n    /**\r\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\r\n     */\r\n    function MsSource(dispatcher) {\r\n        var _this = this;\r\n        var mapping = {\r\n            'MSPointerDown': msPointerDown,\r\n            'MSPointerMove': msPointerMove,\r\n            'MSPointerUp': msPointerUp,\r\n            'MSPointerOut': msPointerOut,\r\n            'MSPointerOver': msPointerOver,\r\n            'MSPointerCancel': msPointerCancel,\r\n            'MSGotPointerCapture': msGotPointerCapture,\r\n            'MSLostPointerCapture': msLostPointerCapture\r\n        };\r\n        _this = _super.call(this, dispatcher, mapping) || this;\r\n        /**\r\n         * @const\r\n         * @type {!Object<string, MSPointerEvent|Object>}\r\n         */\r\n        _this.pointerMap = dispatcher.pointerMap;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a copy of the original event that will be used\r\n     * for the fake pointer event.\r\n     *\r\n     * @private\r\n     * @param {MSPointerEvent} inEvent The in event.\r\n     * @return {Object} The copied event.\r\n     */\r\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\r\n        /** @type {MSPointerEvent|Object} */\r\n        var e = inEvent;\r\n        if (typeof inEvent.pointerType === 'number') {\r\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\r\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\r\n        }\r\n        return e;\r\n    };\r\n    /**\r\n     * Remove this pointer from the list of active pointers.\r\n     * @param {number} pointerId Pointer identifier.\r\n     */\r\n    MsSource.prototype.cleanup = function (pointerId) {\r\n        delete this.pointerMap[pointerId.toString()];\r\n    };\r\n    return MsSource;\r\n}(EventSource));\r\nexport default MsSource;\r\n//# sourceMappingURL=MsSource.js.map","/**\r\n * @module ol/pointer/NativeSource\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// Based on https://github.com/Polymer/PointerEvents\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\nimport EventSource from './EventSource.js';\r\n/**\r\n * Handler for `pointerdown`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerDown(inEvent) {\r\n    this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n/**\r\n * Handler for `pointermove`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerMove(inEvent) {\r\n    this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n/**\r\n * Handler for `pointerup`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerUp(inEvent) {\r\n    this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n/**\r\n * Handler for `pointerout`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerOut(inEvent) {\r\n    this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n/**\r\n * Handler for `pointerover`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerOver(inEvent) {\r\n    this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n/**\r\n * Handler for `pointercancel`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerCancel(inEvent) {\r\n    this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n/**\r\n * Handler for `lostpointercapture`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction lostPointerCapture(inEvent) {\r\n    this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n/**\r\n * Handler for `gotpointercapture`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction gotPointerCapture(inEvent) {\r\n    this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\nvar NativeSource = /** @class */ (function (_super) {\r\n    __extends(NativeSource, _super);\r\n    /**\r\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\r\n     */\r\n    function NativeSource(dispatcher) {\r\n        var _this = this;\r\n        var mapping = {\r\n            'pointerdown': pointerDown,\r\n            'pointermove': pointerMove,\r\n            'pointerup': pointerUp,\r\n            'pointerout': pointerOut,\r\n            'pointerover': pointerOver,\r\n            'pointercancel': pointerCancel,\r\n            'gotpointercapture': gotPointerCapture,\r\n            'lostpointercapture': lostPointerCapture\r\n        };\r\n        _this = _super.call(this, dispatcher, mapping) || this;\r\n        return _this;\r\n    }\r\n    return NativeSource;\r\n}(EventSource));\r\nexport default NativeSource;\r\n//# sourceMappingURL=NativeSource.js.map","/**\r\n * @module ol/pointer/PointerEvent\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// Based on https://github.com/Polymer/PointerEvents\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\nimport _Event from '../events/Event.js';\r\n/**\r\n * Is the `buttons` property supported?\r\n * @type {boolean}\r\n */\r\nvar HAS_BUTTONS = false;\r\nvar PointerEvent = /** @class */ (function (_super) {\r\n    __extends(PointerEvent, _super);\r\n    /**\r\n     * A class for pointer events.\r\n     *\r\n     * This class is used as an abstraction for mouse events,\r\n     * touch events and even native pointer events.\r\n     *\r\n     * @param {string} type The type of the event to create.\r\n     * @param {Event} originalEvent The event.\r\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\r\n     *    initial event properties.\r\n     */\r\n    function PointerEvent(type, originalEvent, opt_eventDict) {\r\n        var _this = _super.call(this, type) || this;\r\n        /**\r\n         * @const\r\n         * @type {Event}\r\n         */\r\n        _this.originalEvent = originalEvent;\r\n        var eventDict = opt_eventDict ? opt_eventDict : {};\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.buttons = getButtons(eventDict);\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.pressure = getPressure(eventDict, _this.buttons);\r\n        // MouseEvent related properties\r\n        /**\r\n         * @type {boolean}\r\n         */\r\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\r\n        /**\r\n         * @type {boolean}\r\n         */\r\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\r\n        /**\r\n         * @type {Object}\r\n         */\r\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\r\n        /**\r\n         * @type {boolean}\r\n         */\r\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\r\n        /**\r\n         * @type {boolean}\r\n         */\r\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\r\n        /**\r\n         * @type {boolean}\r\n         */\r\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\r\n        /**\r\n         * @type {boolean}\r\n         */\r\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\r\n        /**\r\n         * @type {Node}\r\n         */\r\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\r\n            eventDict['relatedTarget'] : null;\r\n        // PointerEvent related properties\r\n        /**\r\n         * @const\r\n         * @type {number}\r\n         */\r\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\r\n        /**\r\n         * @type {string}\r\n         */\r\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\r\n        /**\r\n         * @type {boolean}\r\n         */\r\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\r\n        // keep the semantics of preventDefault\r\n        if (originalEvent.preventDefault) {\r\n            _this.preventDefault = function () {\r\n                originalEvent.preventDefault();\r\n            };\r\n        }\r\n        return _this;\r\n    }\r\n    return PointerEvent;\r\n}(_Event));\r\n/**\r\n * @param {Object<string, ?>} eventDict The event dictionary.\r\n * @return {number} Button indicator.\r\n */\r\nfunction getButtons(eventDict) {\r\n    // According to the w3c spec,\r\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\r\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\r\n    // left mouse button depressed.\r\n    //\r\n    // As of now, the only way to distinguish between the two states of\r\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\r\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\r\n    // no mouse button is held.\r\n    //\r\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\r\n    // but initMouseEvent does not expose an argument with which to set\r\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\r\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\r\n    // of app developers.\r\n    //\r\n    // The only way to propagate the correct state of MouseEvent.which and\r\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\r\n    // is to call initMouseEvent with a buttonArg value of -1.\r\n    //\r\n    // This is fixed with DOM Level 4's use of buttons\r\n    var buttons;\r\n    if (eventDict.buttons || HAS_BUTTONS) {\r\n        buttons = eventDict.buttons;\r\n    }\r\n    else {\r\n        switch (eventDict.which) {\r\n            case 1:\r\n                buttons = 1;\r\n                break;\r\n            case 2:\r\n                buttons = 4;\r\n                break;\r\n            case 3:\r\n                buttons = 2;\r\n                break;\r\n            default: buttons = 0;\r\n        }\r\n    }\r\n    return buttons;\r\n}\r\n/**\r\n * @param {Object<string, ?>} eventDict The event dictionary.\r\n * @param {number} buttons Button indicator.\r\n * @return {number} The pressure.\r\n */\r\nfunction getPressure(eventDict, buttons) {\r\n    // Spec requires that pointers without pressure specified use 0.5 for down\r\n    // state and 0 for up state.\r\n    var pressure = 0;\r\n    if (eventDict.pressure) {\r\n        pressure = eventDict.pressure;\r\n    }\r\n    else {\r\n        pressure = buttons ? 0.5 : 0;\r\n    }\r\n    return pressure;\r\n}\r\n/**\r\n * Checks if the `buttons` property is supported.\r\n */\r\n(function () {\r\n    try {\r\n        var ev = new MouseEvent('click', { buttons: 1 });\r\n        HAS_BUTTONS = ev.buttons === 1;\r\n    }\r\n    catch (e) {\r\n        // pass\r\n    }\r\n})();\r\nexport default PointerEvent;\r\n//# sourceMappingURL=PointerEvent.js.map","/**\r\n * @module ol/pointer/TouchSource\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// Based on https://github.com/Polymer/PointerEvents\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\nimport { remove } from '../array.js';\r\nimport EventSource from './EventSource.js';\r\nimport { POINTER_ID } from './MouseSource.js';\r\n/**\r\n * @type {number}\r\n */\r\nvar CLICK_COUNT_TIMEOUT = 200;\r\n/**\r\n * @type {string}\r\n */\r\nvar POINTER_TYPE = 'touch';\r\n/**\r\n * Handler for `touchstart`, triggers `pointerover`,\r\n * `pointerenter` and `pointerdown` events.\r\n *\r\n * @this {TouchSource}\r\n * @param {TouchEvent} inEvent The in event.\r\n */\r\nfunction touchstart(inEvent) {\r\n    this.vacuumTouches_(inEvent);\r\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\r\n    this.dedupSynthMouse_(inEvent);\r\n    this.clickCount_++;\r\n    this.processTouches_(inEvent, this.overDown_);\r\n}\r\n/**\r\n * Handler for `touchmove`.\r\n *\r\n * @this {TouchSource}\r\n * @param {TouchEvent} inEvent The in event.\r\n */\r\nfunction touchmove(inEvent) {\r\n    this.processTouches_(inEvent, this.moveOverOut_);\r\n}\r\n/**\r\n * Handler for `touchend`, triggers `pointerup`,\r\n * `pointerout` and `pointerleave` events.\r\n *\r\n * @this {TouchSource}\r\n * @param {TouchEvent} inEvent The event.\r\n */\r\nfunction touchend(inEvent) {\r\n    this.dedupSynthMouse_(inEvent);\r\n    this.processTouches_(inEvent, this.upOut_);\r\n}\r\n/**\r\n * Handler for `touchcancel`, triggers `pointercancel`,\r\n * `pointerout` and `pointerleave` events.\r\n *\r\n * @this {TouchSource}\r\n * @param {TouchEvent} inEvent The in event.\r\n */\r\nfunction touchcancel(inEvent) {\r\n    this.processTouches_(inEvent, this.cancelOut_);\r\n}\r\nvar TouchSource = /** @class */ (function (_super) {\r\n    __extends(TouchSource, _super);\r\n    /**\r\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher The event handler.\r\n     * @param {import(\"./MouseSource.js\").default} mouseSource Mouse source.\r\n     */\r\n    function TouchSource(dispatcher, mouseSource) {\r\n        var _this = this;\r\n        var mapping = {\r\n            'touchstart': touchstart,\r\n            'touchmove': touchmove,\r\n            'touchend': touchend,\r\n            'touchcancel': touchcancel\r\n        };\r\n        _this = _super.call(this, dispatcher, mapping) || this;\r\n        /**\r\n         * @const\r\n         * @type {!Object<string, Event|Object>}\r\n         */\r\n        _this.pointerMap = dispatcher.pointerMap;\r\n        /**\r\n         * @const\r\n         * @type {import(\"./MouseSource.js\").default}\r\n         */\r\n        _this.mouseSource = mouseSource;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.firstTouchId_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.clickCount_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {?}\r\n         */\r\n        _this.resetId_;\r\n        /**\r\n         * Mouse event timeout: This should be long enough to\r\n         * ignore compat mouse events made by touch.\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.dedupTimeout_ = 2500;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {Touch} inTouch The in touch.\r\n     * @return {boolean} True, if this is the primary touch.\r\n     */\r\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\r\n        return this.firstTouchId_ === inTouch.identifier;\r\n    };\r\n    /**\r\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\r\n     * @param {Touch} inTouch The in touch.\r\n     * @private\r\n     */\r\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\r\n        var count = Object.keys(this.pointerMap).length;\r\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\r\n            this.firstTouchId_ = inTouch.identifier;\r\n            this.cancelResetClickCount_();\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {PointerEvent} inPointer The in pointer object.\r\n     */\r\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\r\n        if (inPointer.isPrimary) {\r\n            this.firstTouchId_ = undefined;\r\n            this.resetClickCount_();\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    TouchSource.prototype.resetClickCount_ = function () {\r\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    TouchSource.prototype.resetClickCountHandler_ = function () {\r\n        this.clickCount_ = 0;\r\n        this.resetId_ = undefined;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    TouchSource.prototype.cancelResetClickCount_ = function () {\r\n        if (this.resetId_ !== undefined) {\r\n            clearTimeout(this.resetId_);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {TouchEvent} browserEvent Browser event\r\n     * @param {Touch} inTouch Touch event\r\n     * @return {PointerEvent} A pointer object.\r\n     */\r\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\r\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\r\n        // Spec specifies that pointerId 1 is reserved for Mouse.\r\n        // Touch identifiers can start at 0.\r\n        // Add 2 to the touch identifier for compatibility.\r\n        e.pointerId = inTouch.identifier + 2;\r\n        // TODO: check if this is necessary?\r\n        //e.target = findTarget(e);\r\n        e.bubbles = true;\r\n        e.cancelable = true;\r\n        e.detail = this.clickCount_;\r\n        e.button = 0;\r\n        e.buttons = 1;\r\n        e.width = inTouch.radiusX || 0;\r\n        e.height = inTouch.radiusY || 0;\r\n        e.pressure = inTouch.force || 0.5;\r\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\r\n        e.pointerType = POINTER_TYPE;\r\n        // make sure that the properties that are different for\r\n        // each `Touch` object are not copied from the BrowserEvent object\r\n        e.clientX = inTouch.clientX;\r\n        e.clientY = inTouch.clientY;\r\n        e.screenX = inTouch.screenX;\r\n        e.screenY = inTouch.screenY;\r\n        return e;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {TouchEvent} inEvent Touch event\r\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\r\n     */\r\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\r\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\r\n        var count = touches.length;\r\n        function preventDefault() {\r\n            inEvent.preventDefault();\r\n        }\r\n        for (var i = 0; i < count; ++i) {\r\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\r\n            // forward touch preventDefaults\r\n            pointer.preventDefault = preventDefault;\r\n            inFunction.call(this, inEvent, pointer);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {TouchList} touchList The touch list.\r\n     * @param {number} searchId Search identifier.\r\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\r\n     */\r\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\r\n        var l = touchList.length;\r\n        for (var i = 0; i < l; i++) {\r\n            var touch = touchList[i];\r\n            if (touch.identifier === searchId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * In some instances, a touchstart can happen without a touchend. This\r\n     * leaves the pointermap in a broken state.\r\n     * Therefore, on every touchstart, we remove the touches that did not fire a\r\n     * touchend event.\r\n     * To keep state globally consistent, we fire a pointercancel for\r\n     * this \"abandoned\" touch\r\n     *\r\n     * @private\r\n     * @param {TouchEvent} inEvent The in event.\r\n     */\r\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\r\n        var touchList = inEvent.touches;\r\n        // pointerMap.getCount() should be < touchList.length here,\r\n        // as the touchstart has not been processed yet.\r\n        var keys = Object.keys(this.pointerMap);\r\n        var count = keys.length;\r\n        if (count >= touchList.length) {\r\n            var d = [];\r\n            for (var i = 0; i < count; ++i) {\r\n                var key = Number(keys[i]);\r\n                var value = this.pointerMap[key];\r\n                // Never remove pointerId == 1, which is mouse.\r\n                // Touch identifiers are 2 smaller than their pointerId, which is the\r\n                // index in pointermap.\r\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\r\n                    d.push(value.out);\r\n                }\r\n            }\r\n            for (var i = 0; i < d.length; ++i) {\r\n                this.cancelOut_(inEvent, d[i]);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {TouchEvent} browserEvent The event.\r\n     * @param {PointerEvent} inPointer The in pointer object.\r\n     */\r\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\r\n        this.pointerMap[inPointer.pointerId] = {\r\n            target: inPointer.target,\r\n            out: inPointer,\r\n            outTarget: inPointer.target\r\n        };\r\n        this.dispatcher.over(inPointer, browserEvent);\r\n        this.dispatcher.enter(inPointer, browserEvent);\r\n        this.dispatcher.down(inPointer, browserEvent);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {TouchEvent} browserEvent The event.\r\n     * @param {PointerEvent} inPointer The in pointer.\r\n     */\r\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\r\n        var event = inPointer;\r\n        var pointer = this.pointerMap[event.pointerId];\r\n        // a finger drifted off the screen, ignore it\r\n        if (!pointer) {\r\n            return;\r\n        }\r\n        var outEvent = pointer.out;\r\n        var outTarget = pointer.outTarget;\r\n        this.dispatcher.move(event, browserEvent);\r\n        if (outEvent && outTarget !== event.target) {\r\n            outEvent.relatedTarget = event.target;\r\n            /** @type {Object} */ (event).relatedTarget = outTarget;\r\n            // recover from retargeting by shadow\r\n            outEvent.target = outTarget;\r\n            if (event.target) {\r\n                this.dispatcher.leaveOut(outEvent, browserEvent);\r\n                this.dispatcher.enterOver(event, browserEvent);\r\n            }\r\n            else {\r\n                // clean up case when finger leaves the screen\r\n                /** @type {Object} */ (event).target = outTarget;\r\n                /** @type {Object} */ (event).relatedTarget = null;\r\n                this.cancelOut_(browserEvent, event);\r\n            }\r\n        }\r\n        pointer.out = event;\r\n        pointer.outTarget = event.target;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {TouchEvent} browserEvent An event.\r\n     * @param {PointerEvent} inPointer The inPointer object.\r\n     */\r\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\r\n        this.dispatcher.up(inPointer, browserEvent);\r\n        this.dispatcher.out(inPointer, browserEvent);\r\n        this.dispatcher.leave(inPointer, browserEvent);\r\n        this.cleanUpPointer_(inPointer);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {TouchEvent} browserEvent The event.\r\n     * @param {PointerEvent} inPointer The in pointer.\r\n     */\r\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\r\n        this.dispatcher.cancel(inPointer, browserEvent);\r\n        this.dispatcher.out(inPointer, browserEvent);\r\n        this.dispatcher.leave(inPointer, browserEvent);\r\n        this.cleanUpPointer_(inPointer);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {PointerEvent} inPointer The inPointer object.\r\n     */\r\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\r\n        delete this.pointerMap[inPointer.pointerId];\r\n        this.removePrimaryPointer_(inPointer);\r\n    };\r\n    /**\r\n     * Prevent synth mouse events from creating pointer events.\r\n     *\r\n     * @private\r\n     * @param {TouchEvent} inEvent The in event.\r\n     */\r\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\r\n        var lts = this.mouseSource.lastTouches;\r\n        var t = inEvent.changedTouches[0];\r\n        // only the primary finger will synth mouse events\r\n        if (this.isPrimaryTouch_(t)) {\r\n            // remember x/y of last touch\r\n            var lt_1 = [t.clientX, t.clientY];\r\n            lts.push(lt_1);\r\n            setTimeout(function () {\r\n                // remove touch after timeout\r\n                remove(lts, lt_1);\r\n            }, this.dedupTimeout_);\r\n        }\r\n    };\r\n    return TouchSource;\r\n}(EventSource));\r\nexport default TouchSource;\r\n//# sourceMappingURL=TouchSource.js.map","/**\r\n * @module ol/pointer/PointerEventHandler\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// Based on https://github.com/Polymer/PointerEvents\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\nimport { listen, unlisten } from '../events.js';\r\nimport EventTarget from '../events/Target.js';\r\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\r\nimport PointerEventType from './EventType.js';\r\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\r\nimport MsSource from './MsSource.js';\r\nimport NativeSource from './NativeSource.js';\r\nimport PointerEvent from './PointerEvent.js';\r\nimport TouchSource from './TouchSource.js';\r\n/**\r\n * Properties to copy when cloning an event, with default values.\r\n * @type {Array<Array>}\r\n */\r\nvar CLONE_PROPS = [\r\n    // MouseEvent\r\n    ['bubbles', false],\r\n    ['cancelable', false],\r\n    ['view', null],\r\n    ['detail', null],\r\n    ['screenX', 0],\r\n    ['screenY', 0],\r\n    ['clientX', 0],\r\n    ['clientY', 0],\r\n    ['ctrlKey', false],\r\n    ['altKey', false],\r\n    ['shiftKey', false],\r\n    ['metaKey', false],\r\n    ['button', 0],\r\n    ['relatedTarget', null],\r\n    // DOM Level 3\r\n    ['buttons', 0],\r\n    // PointerEvent\r\n    ['pointerId', 0],\r\n    ['width', 0],\r\n    ['height', 0],\r\n    ['pressure', 0],\r\n    ['tiltX', 0],\r\n    ['tiltY', 0],\r\n    ['pointerType', ''],\r\n    ['hwTimestamp', 0],\r\n    ['isPrimary', false],\r\n    // event instance\r\n    ['type', ''],\r\n    ['target', null],\r\n    ['currentTarget', null],\r\n    ['which', 0]\r\n];\r\nvar PointerEventHandler = /** @class */ (function (_super) {\r\n    __extends(PointerEventHandler, _super);\r\n    /**\r\n     * @param {Element|HTMLDocument} element Viewport element.\r\n     */\r\n    function PointerEventHandler(element) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @const\r\n         * @private\r\n         * @type {Element|HTMLDocument}\r\n         */\r\n        _this.element_ = element;\r\n        /**\r\n         * @const\r\n         * @type {!Object<string, Event|Object>}\r\n         */\r\n        _this.pointerMap = {};\r\n        /**\r\n         * @type {Object<string, function(Event): void>}\r\n         * @private\r\n         */\r\n        _this.eventMap_ = {};\r\n        /**\r\n         * @type {Array<import(\"./EventSource.js\").default>}\r\n         * @private\r\n         */\r\n        _this.eventSourceList_ = [];\r\n        _this.registerSources();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Set up the event sources (mouse, touch and native pointers)\r\n     * that generate pointer events.\r\n     */\r\n    PointerEventHandler.prototype.registerSources = function () {\r\n        if (POINTER) {\r\n            this.registerSource('native', new NativeSource(this));\r\n        }\r\n        else if (MSPOINTER) {\r\n            this.registerSource('ms', new MsSource(this));\r\n        }\r\n        else {\r\n            var mouseSource = new MouseSource(this);\r\n            this.registerSource('mouse', mouseSource);\r\n            if (TOUCH) {\r\n                this.registerSource('touch', new TouchSource(this, mouseSource));\r\n            }\r\n        }\r\n        // register events on the viewport element\r\n        this.register_();\r\n    };\r\n    /**\r\n     * Add a new event source that will generate pointer events.\r\n     *\r\n     * @param {string} name A name for the event source\r\n     * @param {import(\"./EventSource.js\").default} source The source event.\r\n     */\r\n    PointerEventHandler.prototype.registerSource = function (name, source) {\r\n        var s = source;\r\n        var newEvents = s.getEvents();\r\n        if (newEvents) {\r\n            newEvents.forEach(function (e) {\r\n                var handler = s.getHandlerForEvent(e);\r\n                if (handler) {\r\n                    this.eventMap_[e] = handler.bind(s);\r\n                }\r\n            }.bind(this));\r\n            this.eventSourceList_.push(s);\r\n        }\r\n    };\r\n    /**\r\n     * Set up the events for all registered event sources.\r\n     * @private\r\n     */\r\n    PointerEventHandler.prototype.register_ = function () {\r\n        var l = this.eventSourceList_.length;\r\n        for (var i = 0; i < l; i++) {\r\n            var eventSource = this.eventSourceList_[i];\r\n            this.addEvents_(eventSource.getEvents());\r\n        }\r\n    };\r\n    /**\r\n     * Remove all registered events.\r\n     * @private\r\n     */\r\n    PointerEventHandler.prototype.unregister_ = function () {\r\n        var l = this.eventSourceList_.length;\r\n        for (var i = 0; i < l; i++) {\r\n            var eventSource = this.eventSourceList_[i];\r\n            this.removeEvents_(eventSource.getEvents());\r\n        }\r\n    };\r\n    /**\r\n     * Calls the right handler for a new event.\r\n     * @private\r\n     * @param {Event} inEvent Browser event.\r\n     */\r\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\r\n        var type = inEvent.type;\r\n        var handler = this.eventMap_[type];\r\n        if (handler) {\r\n            handler(inEvent);\r\n        }\r\n    };\r\n    /**\r\n     * Setup listeners for the given events.\r\n     * @private\r\n     * @param {Array<string>} events List of events.\r\n     */\r\n    PointerEventHandler.prototype.addEvents_ = function (events) {\r\n        events.forEach(function (eventName) {\r\n            listen(this.element_, eventName, this.eventHandler_, this);\r\n        }.bind(this));\r\n    };\r\n    /**\r\n     * Unregister listeners for the given events.\r\n     * @private\r\n     * @param {Array<string>} events List of events.\r\n     */\r\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\r\n        events.forEach(function (e) {\r\n            unlisten(this.element_, e, this.eventHandler_, this);\r\n        }.bind(this));\r\n    };\r\n    /**\r\n     * Returns a snapshot of inEvent, with writable properties.\r\n     *\r\n     * @param {Event} event Browser event.\r\n     * @param {Event|Touch} inEvent An event that contains\r\n     *    properties to copy.\r\n     * @return {Object} An object containing shallow copies of\r\n     *    `inEvent`'s properties.\r\n     */\r\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\r\n        var eventCopy = {};\r\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\r\n            var p = CLONE_PROPS[i][0];\r\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\r\n        }\r\n        return eventCopy;\r\n    };\r\n    // EVENTS\r\n    /**\r\n     * Triggers a 'pointerdown' event.\r\n     * @param {Object} data Pointer event data.\r\n     * @param {Event} event The event.\r\n     */\r\n    PointerEventHandler.prototype.down = function (data, event) {\r\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\r\n    };\r\n    /**\r\n     * Triggers a 'pointermove' event.\r\n     * @param {Object} data Pointer event data.\r\n     * @param {Event} event The event.\r\n     */\r\n    PointerEventHandler.prototype.move = function (data, event) {\r\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\r\n    };\r\n    /**\r\n     * Triggers a 'pointerup' event.\r\n     * @param {Object} data Pointer event data.\r\n     * @param {Event} event The event.\r\n     */\r\n    PointerEventHandler.prototype.up = function (data, event) {\r\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\r\n    };\r\n    /**\r\n     * Triggers a 'pointerenter' event.\r\n     * @param {Object} data Pointer event data.\r\n     * @param {Event} event The event.\r\n     */\r\n    PointerEventHandler.prototype.enter = function (data, event) {\r\n        data.bubbles = false;\r\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\r\n    };\r\n    /**\r\n     * Triggers a 'pointerleave' event.\r\n     * @param {Object} data Pointer event data.\r\n     * @param {Event} event The event.\r\n     */\r\n    PointerEventHandler.prototype.leave = function (data, event) {\r\n        data.bubbles = false;\r\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\r\n    };\r\n    /**\r\n     * Triggers a 'pointerover' event.\r\n     * @param {Object} data Pointer event data.\r\n     * @param {Event} event The event.\r\n     */\r\n    PointerEventHandler.prototype.over = function (data, event) {\r\n        data.bubbles = true;\r\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\r\n    };\r\n    /**\r\n     * Triggers a 'pointerout' event.\r\n     * @param {Object} data Pointer event data.\r\n     * @param {Event} event The event.\r\n     */\r\n    PointerEventHandler.prototype.out = function (data, event) {\r\n        data.bubbles = true;\r\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\r\n    };\r\n    /**\r\n     * Triggers a 'pointercancel' event.\r\n     * @param {Object} data Pointer event data.\r\n     * @param {Event} event The event.\r\n     */\r\n    PointerEventHandler.prototype.cancel = function (data, event) {\r\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\r\n    };\r\n    /**\r\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\r\n     * @param {Object} data Pointer event data.\r\n     * @param {Event} event The event.\r\n     */\r\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\r\n        this.out(data, event);\r\n        if (!this.contains_(data.target, data.relatedTarget)) {\r\n            this.leave(data, event);\r\n        }\r\n    };\r\n    /**\r\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\r\n     * @param {Object} data Pointer event data.\r\n     * @param {Event} event The event.\r\n     */\r\n    PointerEventHandler.prototype.enterOver = function (data, event) {\r\n        this.over(data, event);\r\n        if (!this.contains_(data.target, data.relatedTarget)) {\r\n            this.enter(data, event);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {Element} container The container element.\r\n     * @param {Element} contained The contained element.\r\n     * @return {boolean} Returns true if the container element\r\n     *   contains the other element.\r\n     */\r\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\r\n        if (!container || !contained) {\r\n            return false;\r\n        }\r\n        return container.contains(contained);\r\n    };\r\n    // EVENT CREATION AND TRACKING\r\n    /**\r\n     * Creates a new Event of type `inType`, based on the information in\r\n     * `data`.\r\n     *\r\n     * @param {string} inType A string representing the type of event to create.\r\n     * @param {Object} data Pointer event data.\r\n     * @param {Event} event The event.\r\n     * @return {PointerEvent} A PointerEvent of type `inType`.\r\n     */\r\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\r\n        return new PointerEvent(inType, event, data);\r\n    };\r\n    /**\r\n     * Make and dispatch an event in one call.\r\n     * @param {string} inType A string representing the type of event.\r\n     * @param {Object} data Pointer event data.\r\n     * @param {Event} event The event.\r\n     */\r\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\r\n        var e = this.makeEvent(inType, data, event);\r\n        this.dispatchEvent(e);\r\n    };\r\n    /**\r\n     * Creates a pointer event from a native pointer event\r\n     * and dispatches this event.\r\n     * @param {Event} event A platform event with a target.\r\n     */\r\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\r\n        var e = this.makeEvent(event.type, event, event);\r\n        this.dispatchEvent(e);\r\n    };\r\n    /**\r\n     * Wrap a native mouse event into a pointer event.\r\n     * This proxy method is required for the legacy IE support.\r\n     * @param {string} eventType The pointer event type.\r\n     * @param {Event} event The event.\r\n     * @return {PointerEvent} The wrapped event.\r\n     */\r\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\r\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\r\n        return pointerEvent;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PointerEventHandler.prototype.disposeInternal = function () {\r\n        this.unregister_();\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    return PointerEventHandler;\r\n}(EventTarget));\r\nexport default PointerEventHandler;\r\n//# sourceMappingURL=PointerEventHandler.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/MapBrowserEventHandler\r\n */\r\nimport { DEVICE_PIXEL_RATIO } from './has.js';\r\nimport MapBrowserEventType from './MapBrowserEventType.js';\r\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\r\nimport { listen, unlistenByKey } from './events.js';\r\nimport EventTarget from './events/Target.js';\r\nimport PointerEventType from './pointer/EventType.js';\r\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\r\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\r\n    __extends(MapBrowserEventHandler, _super);\r\n    /**\r\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\r\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\r\n     */\r\n    function MapBrowserEventHandler(map, moveTolerance) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * This is the element that we will listen to the real events on.\r\n         * @type {import(\"./PluggableMap.js\").default}\r\n         * @private\r\n         */\r\n        _this.map_ = map;\r\n        /**\r\n         * @type {any}\r\n         * @private\r\n         */\r\n        _this.clickTimeoutId_;\r\n        /**\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.dragging_ = false;\r\n        /**\r\n         * @type {!Array<import(\"./events.js\").EventsKey>}\r\n         * @private\r\n         */\r\n        _this.dragListenerKeys_ = [];\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.moveTolerance_ = moveTolerance ?\r\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\r\n        /**\r\n         * The most recent \"down\" type event (or null if none have occurred).\r\n         * Set on pointerdown.\r\n         * @type {import(\"./pointer/PointerEvent.js\").default}\r\n         * @private\r\n         */\r\n        _this.down_ = null;\r\n        var element = _this.map_.getViewport();\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.activePointers_ = 0;\r\n        /**\r\n         * @type {!Object<number, boolean>}\r\n         * @private\r\n         */\r\n        _this.trackedTouches_ = {};\r\n        /**\r\n         * Event handler which generates pointer events for\r\n         * the viewport element.\r\n         *\r\n         * @type {PointerEventHandler}\r\n         * @private\r\n         */\r\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\r\n        /**\r\n         * Event handler which generates pointer events for\r\n         * the document (used when dragging).\r\n         *\r\n         * @type {PointerEventHandler}\r\n         * @private\r\n         */\r\n        _this.documentPointerEventHandler_ = null;\r\n        /**\r\n         * @type {?import(\"./events.js\").EventsKey}\r\n         * @private\r\n         */\r\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\r\n        /**\r\n         * @type {?import(\"./events.js\").EventsKey}\r\n         * @private\r\n         */\r\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n     * event.\r\n     * @private\r\n     */\r\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\r\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\r\n        this.dispatchEvent(newEvent);\r\n        if (this.clickTimeoutId_ !== undefined) {\r\n            // double-click\r\n            clearTimeout(this.clickTimeoutId_);\r\n            this.clickTimeoutId_ = undefined;\r\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\r\n            this.dispatchEvent(newEvent);\r\n        }\r\n        else {\r\n            // click\r\n            this.clickTimeoutId_ = setTimeout(function () {\r\n                this.clickTimeoutId_ = undefined;\r\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\r\n                this.dispatchEvent(newEvent);\r\n            }.bind(this), 250);\r\n        }\r\n    };\r\n    /**\r\n     * Keeps track on how many pointers are currently active.\r\n     *\r\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n     * event.\r\n     * @private\r\n     */\r\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\r\n        var event = pointerEvent;\r\n        if (event.type == MapBrowserEventType.POINTERUP ||\r\n            event.type == MapBrowserEventType.POINTERCANCEL) {\r\n            delete this.trackedTouches_[event.pointerId];\r\n        }\r\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\r\n            this.trackedTouches_[event.pointerId] = true;\r\n        }\r\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\r\n    };\r\n    /**\r\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n     * event.\r\n     * @private\r\n     */\r\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\r\n        this.updateActivePointers_(pointerEvent);\r\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\r\n        this.dispatchEvent(newEvent);\r\n        // We emulate click events on left mouse button click, touch contact, and pen\r\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\r\n        // to 0).\r\n        // See http://www.w3.org/TR/pointerevents/#button-states\r\n        // We only fire click, singleclick, and doubleclick if nobody has called\r\n        // event.stopPropagation() or event.preventDefault().\r\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\r\n            this.emulateClick_(this.down_);\r\n        }\r\n        if (this.activePointers_ === 0) {\r\n            this.dragListenerKeys_.forEach(unlistenByKey);\r\n            this.dragListenerKeys_.length = 0;\r\n            this.dragging_ = false;\r\n            this.down_ = null;\r\n            this.documentPointerEventHandler_.dispose();\r\n            this.documentPointerEventHandler_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n     * event.\r\n     * @return {boolean} If the left mouse button was pressed.\r\n     * @private\r\n     */\r\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\r\n        return pointerEvent.button === 0;\r\n    };\r\n    /**\r\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n     * event.\r\n     * @private\r\n     */\r\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\r\n        this.updateActivePointers_(pointerEvent);\r\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\r\n        this.dispatchEvent(newEvent);\r\n        this.down_ = pointerEvent;\r\n        if (this.dragListenerKeys_.length === 0) {\r\n            /* Set up a pointer event handler on the `document`,\r\n             * which is required when the pointer is moved outside\r\n             * the viewport when dragging.\r\n             */\r\n            this.documentPointerEventHandler_ =\r\n                new PointerEventHandler(document);\r\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \r\n            /* Note that the listener for `pointercancel is set up on\r\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\r\n             * the `pointerup` and `pointermove` listeners.\r\n             *\r\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\r\n             * issues `pointercancel` events, when there was no `touchend` for a\r\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\r\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\r\n             * But `documentPointerEventHandler_` doesn't know about the first\r\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\r\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\r\n             * only registered there.\r\n             */\r\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n     * event.\r\n     * @private\r\n     */\r\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\r\n        // Between pointerdown and pointerup, pointermove events are triggered.\r\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\r\n        // moved a significant distance.\r\n        if (this.isMoving_(pointerEvent)) {\r\n            this.dragging_ = true;\r\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\r\n            this.dispatchEvent(newEvent);\r\n        }\r\n        // Some native android browser triggers mousemove events during small period\r\n        // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\r\n        // https://code.google.com/p/android/issues/detail?id=19827\r\n        // ex: Galaxy Tab P3110 + Android 4.1.1\r\n        pointerEvent.preventDefault();\r\n    };\r\n    /**\r\n     * Wrap and relay a pointer event.  Note that this requires that the type\r\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\r\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n     * event.\r\n     * @private\r\n     */\r\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\r\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\r\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\r\n    };\r\n    /**\r\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n     * event.\r\n     * @return {boolean} Is moving.\r\n     * @private\r\n     */\r\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\r\n        return this.dragging_ ||\r\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\r\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\r\n        if (this.relayedListenerKey_) {\r\n            unlistenByKey(this.relayedListenerKey_);\r\n            this.relayedListenerKey_ = null;\r\n        }\r\n        if (this.pointerdownListenerKey_) {\r\n            unlistenByKey(this.pointerdownListenerKey_);\r\n            this.pointerdownListenerKey_ = null;\r\n        }\r\n        this.dragListenerKeys_.forEach(unlistenByKey);\r\n        this.dragListenerKeys_.length = 0;\r\n        if (this.documentPointerEventHandler_) {\r\n            this.documentPointerEventHandler_.dispose();\r\n            this.documentPointerEventHandler_ = null;\r\n        }\r\n        if (this.pointerEventHandler_) {\r\n            this.pointerEventHandler_.dispose();\r\n            this.pointerEventHandler_ = null;\r\n        }\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    return MapBrowserEventHandler;\r\n}(EventTarget));\r\nexport default MapBrowserEventHandler;\r\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\r\n * @module ol/MapProperty\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n    LAYERGROUP: 'layergroup',\r\n    SIZE: 'size',\r\n    TARGET: 'target',\r\n    VIEW: 'view'\r\n};\r\n//# sourceMappingURL=MapProperty.js.map","/**\r\n * @module ol/TileState\r\n */\r\n/**\r\n * @enum {number}\r\n */\r\nexport default {\r\n    IDLE: 0,\r\n    LOADING: 1,\r\n    LOADED: 2,\r\n    /**\r\n     * Indicates that tile loading failed\r\n     * @type {number}\r\n     */\r\n    ERROR: 3,\r\n    EMPTY: 4,\r\n    ABORT: 5\r\n};\r\n//# sourceMappingURL=TileState.js.map","/**\r\n * @module ol/structs/PriorityQueue\r\n */\r\nimport { assert } from '../asserts.js';\r\nimport { clear } from '../obj.js';\r\n/**\r\n * @type {number}\r\n */\r\nexport var DROP = Infinity;\r\n/**\r\n * @classdesc\r\n * Priority queue.\r\n *\r\n * The implementation is inspired from the Closure Library's Heap class and\r\n * Python's heapq module.\r\n *\r\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\r\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\r\n *\r\n * @template T\r\n */\r\nvar PriorityQueue = /** @class */ (function () {\r\n    /**\r\n     * @param {function(T): number} priorityFunction Priority function.\r\n     * @param {function(T): string} keyFunction Key function.\r\n     */\r\n    function PriorityQueue(priorityFunction, keyFunction) {\r\n        /**\r\n         * @type {function(T): number}\r\n         * @private\r\n         */\r\n        this.priorityFunction_ = priorityFunction;\r\n        /**\r\n         * @type {function(T): string}\r\n         * @private\r\n         */\r\n        this.keyFunction_ = keyFunction;\r\n        /**\r\n         * @type {Array<T>}\r\n         * @private\r\n         */\r\n        this.elements_ = [];\r\n        /**\r\n         * @type {Array<number>}\r\n         * @private\r\n         */\r\n        this.priorities_ = [];\r\n        /**\r\n         * @type {!Object<string, boolean>}\r\n         * @private\r\n         */\r\n        this.queuedElements_ = {};\r\n    }\r\n    /**\r\n     * FIXME empty description for jsdoc\r\n     */\r\n    PriorityQueue.prototype.clear = function () {\r\n        this.elements_.length = 0;\r\n        this.priorities_.length = 0;\r\n        clear(this.queuedElements_);\r\n    };\r\n    /**\r\n     * Remove and return the highest-priority element. O(log N).\r\n     * @return {T} Element.\r\n     */\r\n    PriorityQueue.prototype.dequeue = function () {\r\n        var elements = this.elements_;\r\n        var priorities = this.priorities_;\r\n        var element = elements[0];\r\n        if (elements.length == 1) {\r\n            elements.length = 0;\r\n            priorities.length = 0;\r\n        }\r\n        else {\r\n            elements[0] = elements.pop();\r\n            priorities[0] = priorities.pop();\r\n            this.siftUp_(0);\r\n        }\r\n        var elementKey = this.keyFunction_(element);\r\n        delete this.queuedElements_[elementKey];\r\n        return element;\r\n    };\r\n    /**\r\n     * Enqueue an element. O(log N).\r\n     * @param {T} element Element.\r\n     * @return {boolean} The element was added to the queue.\r\n     */\r\n    PriorityQueue.prototype.enqueue = function (element) {\r\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\r\n        var priority = this.priorityFunction_(element);\r\n        if (priority != DROP) {\r\n            this.elements_.push(element);\r\n            this.priorities_.push(priority);\r\n            this.queuedElements_[this.keyFunction_(element)] = true;\r\n            this.siftDown_(0, this.elements_.length - 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {number} Count.\r\n     */\r\n    PriorityQueue.prototype.getCount = function () {\r\n        return this.elements_.length;\r\n    };\r\n    /**\r\n     * Gets the index of the left child of the node at the given index.\r\n     * @param {number} index The index of the node to get the left child for.\r\n     * @return {number} The index of the left child.\r\n     * @private\r\n     */\r\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\r\n        return index * 2 + 1;\r\n    };\r\n    /**\r\n     * Gets the index of the right child of the node at the given index.\r\n     * @param {number} index The index of the node to get the right child for.\r\n     * @return {number} The index of the right child.\r\n     * @private\r\n     */\r\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\r\n        return index * 2 + 2;\r\n    };\r\n    /**\r\n     * Gets the index of the parent of the node at the given index.\r\n     * @param {number} index The index of the node to get the parent for.\r\n     * @return {number} The index of the parent.\r\n     * @private\r\n     */\r\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\r\n        return (index - 1) >> 1;\r\n    };\r\n    /**\r\n     * Make this a heap. O(N).\r\n     * @private\r\n     */\r\n    PriorityQueue.prototype.heapify_ = function () {\r\n        var i;\r\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\r\n            this.siftUp_(i);\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean} Is empty.\r\n     */\r\n    PriorityQueue.prototype.isEmpty = function () {\r\n        return this.elements_.length === 0;\r\n    };\r\n    /**\r\n     * @param {string} key Key.\r\n     * @return {boolean} Is key queued.\r\n     */\r\n    PriorityQueue.prototype.isKeyQueued = function (key) {\r\n        return key in this.queuedElements_;\r\n    };\r\n    /**\r\n     * @param {T} element Element.\r\n     * @return {boolean} Is queued.\r\n     */\r\n    PriorityQueue.prototype.isQueued = function (element) {\r\n        return this.isKeyQueued(this.keyFunction_(element));\r\n    };\r\n    /**\r\n     * @param {number} index The index of the node to move down.\r\n     * @private\r\n     */\r\n    PriorityQueue.prototype.siftUp_ = function (index) {\r\n        var elements = this.elements_;\r\n        var priorities = this.priorities_;\r\n        var count = elements.length;\r\n        var element = elements[index];\r\n        var priority = priorities[index];\r\n        var startIndex = index;\r\n        while (index < (count >> 1)) {\r\n            var lIndex = this.getLeftChildIndex_(index);\r\n            var rIndex = this.getRightChildIndex_(index);\r\n            var smallerChildIndex = rIndex < count &&\r\n                priorities[rIndex] < priorities[lIndex] ?\r\n                rIndex : lIndex;\r\n            elements[index] = elements[smallerChildIndex];\r\n            priorities[index] = priorities[smallerChildIndex];\r\n            index = smallerChildIndex;\r\n        }\r\n        elements[index] = element;\r\n        priorities[index] = priority;\r\n        this.siftDown_(startIndex, index);\r\n    };\r\n    /**\r\n     * @param {number} startIndex The index of the root.\r\n     * @param {number} index The index of the node to move up.\r\n     * @private\r\n     */\r\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\r\n        var elements = this.elements_;\r\n        var priorities = this.priorities_;\r\n        var element = elements[index];\r\n        var priority = priorities[index];\r\n        while (index > startIndex) {\r\n            var parentIndex = this.getParentIndex_(index);\r\n            if (priorities[parentIndex] > priority) {\r\n                elements[index] = elements[parentIndex];\r\n                priorities[index] = priorities[parentIndex];\r\n                index = parentIndex;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        elements[index] = element;\r\n        priorities[index] = priority;\r\n    };\r\n    /**\r\n     * FIXME empty description for jsdoc\r\n     */\r\n    PriorityQueue.prototype.reprioritize = function () {\r\n        var priorityFunction = this.priorityFunction_;\r\n        var elements = this.elements_;\r\n        var priorities = this.priorities_;\r\n        var index = 0;\r\n        var n = elements.length;\r\n        var element, i, priority;\r\n        for (i = 0; i < n; ++i) {\r\n            element = elements[i];\r\n            priority = priorityFunction(element);\r\n            if (priority == DROP) {\r\n                delete this.queuedElements_[this.keyFunction_(element)];\r\n            }\r\n            else {\r\n                priorities[index] = priority;\r\n                elements[index++] = element;\r\n            }\r\n        }\r\n        elements.length = index;\r\n        priorities.length = index;\r\n        this.heapify_();\r\n    };\r\n    return PriorityQueue;\r\n}());\r\nexport default PriorityQueue;\r\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/TileQueue\r\n */\r\nimport TileState from './TileState.js';\r\nimport { listen, unlisten } from './events.js';\r\nimport EventType from './events/EventType.js';\r\nimport PriorityQueue from './structs/PriorityQueue.js';\r\n/**\r\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\r\n */\r\nvar TileQueue = /** @class */ (function (_super) {\r\n    __extends(TileQueue, _super);\r\n    /**\r\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\r\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\r\n     */\r\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\r\n        var _this = _super.call(this, \r\n        /**\r\n         * @param {Array} element Element.\r\n         * @return {number} Priority.\r\n         */\r\n        function (element) {\r\n            return tilePriorityFunction.apply(null, element);\r\n        }, \r\n        /**\r\n         * @param {Array} element Element.\r\n         * @return {string} Key.\r\n         */\r\n        function (element) {\r\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {function(): ?}\r\n         */\r\n        _this.tileChangeCallback_ = tileChangeCallback;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.tilesLoading_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {!Object<string,boolean>}\r\n         */\r\n        _this.tilesLoadingKeys_ = {};\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TileQueue.prototype.enqueue = function (element) {\r\n        var added = _super.prototype.enqueue.call(this, element);\r\n        if (added) {\r\n            var tile = element[0];\r\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\r\n        }\r\n        return added;\r\n    };\r\n    /**\r\n     * @return {number} Number of tiles loading.\r\n     */\r\n    TileQueue.prototype.getTilesLoading = function () {\r\n        return this.tilesLoading_;\r\n    };\r\n    /**\r\n     * @param {import(\"./events/Event.js\").default} event Event.\r\n     * @protected\r\n     */\r\n    TileQueue.prototype.handleTileChange = function (event) {\r\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\r\n        var state = tile.getState();\r\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\r\n            state === TileState.EMPTY || state === TileState.ABORT) {\r\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\r\n            var tileKey = tile.getKey();\r\n            if (tileKey in this.tilesLoadingKeys_) {\r\n                delete this.tilesLoadingKeys_[tileKey];\r\n                --this.tilesLoading_;\r\n            }\r\n            this.tileChangeCallback_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\r\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\r\n     */\r\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\r\n        var newLoads = 0;\r\n        var abortedTiles = false;\r\n        var state, tile, tileKey;\r\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\r\n            this.getCount() > 0) {\r\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\r\n            tileKey = tile.getKey();\r\n            state = tile.getState();\r\n            if (state === TileState.ABORT) {\r\n                abortedTiles = true;\r\n            }\r\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\r\n                this.tilesLoadingKeys_[tileKey] = true;\r\n                ++this.tilesLoading_;\r\n                ++newLoads;\r\n                tile.load();\r\n            }\r\n        }\r\n        if (newLoads === 0 && abortedTiles) {\r\n            // Do not stop the render loop when all wanted tiles were aborted due to\r\n            // a small, saturated tile cache.\r\n            this.tileChangeCallback_();\r\n        }\r\n    };\r\n    return TileQueue;\r\n}(PriorityQueue));\r\nexport default TileQueue;\r\n//# sourceMappingURL=TileQueue.js.map","/**\r\n * @module ol/tilegrid/common\r\n */\r\n/**\r\n * Default maximum zoom for default tile grids.\r\n * @type {number}\r\n */\r\nexport var DEFAULT_MAX_ZOOM = 42;\r\n/**\r\n * Default tile size.\r\n * @type {number}\r\n */\r\nexport var DEFAULT_TILE_SIZE = 256;\r\n//# sourceMappingURL=common.js.map","/**\r\n * @module ol/centerconstraint\r\n */\r\nimport { clamp } from './math.js';\r\n/**\r\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\r\n */\r\n/**\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @return {Type} The constraint.\r\n */\r\nexport function createExtent(extent) {\r\n    return (\r\n    /**\r\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\r\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\r\n     */\r\n    function (center) {\r\n        if (center) {\r\n            return [\r\n                clamp(center[0], extent[0], extent[2]),\r\n                clamp(center[1], extent[1], extent[3])\r\n            ];\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    });\r\n}\r\n/**\r\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\r\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\r\n */\r\nexport function none(center) {\r\n    return center;\r\n}\r\n//# sourceMappingURL=centerconstraint.js.map","/**\r\n * @module ol/rotationconstraint\r\n */\r\nimport { toRadians } from './math.js';\r\n/**\r\n * @typedef {function((number|undefined), number): (number|undefined)} Type\r\n */\r\n/**\r\n * @param {number|undefined} rotation Rotation.\r\n * @param {number} delta Delta.\r\n * @return {number|undefined} Rotation.\r\n */\r\nexport function disable(rotation, delta) {\r\n    if (rotation !== undefined) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * @param {number|undefined} rotation Rotation.\r\n * @param {number} delta Delta.\r\n * @return {number|undefined} Rotation.\r\n */\r\nexport function none(rotation, delta) {\r\n    if (rotation !== undefined) {\r\n        return rotation + delta;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * @param {number} n N.\r\n * @return {Type} Rotation constraint.\r\n */\r\nexport function createSnapToN(n) {\r\n    var theta = 2 * Math.PI / n;\r\n    return (\r\n    /**\r\n     * @param {number|undefined} rotation Rotation.\r\n     * @param {number} delta Delta.\r\n     * @return {number|undefined} Rotation.\r\n     */\r\n    function (rotation, delta) {\r\n        if (rotation !== undefined) {\r\n            rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\r\n            return rotation;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    });\r\n}\r\n/**\r\n * @param {number=} opt_tolerance Tolerance.\r\n * @return {Type} Rotation constraint.\r\n */\r\nexport function createSnapToZero(opt_tolerance) {\r\n    var tolerance = opt_tolerance || toRadians(5);\r\n    return (\r\n    /**\r\n     * @param {number|undefined} rotation Rotation.\r\n     * @param {number} delta Delta.\r\n     * @return {number|undefined} Rotation.\r\n     */\r\n    function (rotation, delta) {\r\n        if (rotation !== undefined) {\r\n            if (Math.abs(rotation + delta) <= tolerance) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return rotation + delta;\r\n            }\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=rotationconstraint.js.map","/**\r\n * @module ol/ViewHint\r\n */\r\n/**\r\n * @enum {number}\r\n */\r\nexport default {\r\n    ANIMATING: 0,\r\n    INTERACTING: 1\r\n};\r\n//# sourceMappingURL=ViewHint.js.map","/**\r\n * @module ol/ViewProperty\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n    CENTER: 'center',\r\n    RESOLUTION: 'resolution',\r\n    ROTATION: 'rotation'\r\n};\r\n//# sourceMappingURL=ViewProperty.js.map","/**\r\n * @module ol/string\r\n */\r\n/**\r\n * @param {number} number Number to be formatted\r\n * @param {number} width The desired width\r\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\r\n * @returns {string} Formatted string\r\n */\r\nexport function padNumber(number, width, opt_precision) {\r\n    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\r\n    var decimal = numberString.indexOf('.');\r\n    decimal = decimal === -1 ? numberString.length : decimal;\r\n    return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\r\n}\r\n/**\r\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\r\n * @param {string|number} v1 First version\r\n * @param {string|number} v2 Second version\r\n * @returns {number} Value\r\n */\r\nexport function compareVersions(v1, v2) {\r\n    var s1 = ('' + v1).split('.');\r\n    var s2 = ('' + v2).split('.');\r\n    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\r\n        var n1 = parseInt(s1[i] || '0', 10);\r\n        var n2 = parseInt(s2[i] || '0', 10);\r\n        if (n1 > n2) {\r\n            return 1;\r\n        }\r\n        if (n2 > n1) {\r\n            return -1;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n//# sourceMappingURL=string.js.map","/**\r\n * @module ol/coordinate\r\n */\r\nimport { modulo } from './math.js';\r\nimport { padNumber } from './string.js';\r\n/**\r\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\r\n * @typedef {Array<number>} Coordinate\r\n * @api\r\n */\r\n/**\r\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\r\n * transforms it into a `{string}`.\r\n *\r\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\r\n * @api\r\n */\r\n/**\r\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\r\n * by the function.\r\n *\r\n * Example:\r\n *\r\n *     import {add} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     add(coord, [-2, 4]);\r\n *     // coord is now [5.85, 51.983333]\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {Coordinate} delta Delta.\r\n * @return {Coordinate} The input coordinate adjusted by\r\n * the given delta.\r\n * @api\r\n */\r\nexport function add(coordinate, delta) {\r\n    coordinate[0] += +delta[0];\r\n    coordinate[1] += +delta[1];\r\n    return coordinate;\r\n}\r\n/**\r\n * Calculates the point closest to the passed coordinate on the passed circle.\r\n *\r\n * @param {Coordinate} coordinate The coordinate.\r\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\r\n * @return {Coordinate} Closest point on the circumference.\r\n */\r\nexport function closestOnCircle(coordinate, circle) {\r\n    var r = circle.getRadius();\r\n    var center = circle.getCenter();\r\n    var x0 = center[0];\r\n    var y0 = center[1];\r\n    var x1 = coordinate[0];\r\n    var y1 = coordinate[1];\r\n    var dx = x1 - x0;\r\n    var dy = y1 - y0;\r\n    if (dx === 0 && dy === 0) {\r\n        dx = 1;\r\n    }\r\n    var d = Math.sqrt(dx * dx + dy * dy);\r\n    var x = x0 + r * dx / d;\r\n    var y = y0 + r * dy / d;\r\n    return [x, y];\r\n}\r\n/**\r\n * Calculates the point closest to the passed coordinate on the passed segment.\r\n * This is the foot of the perpendicular of the coordinate to the segment when\r\n * the foot is on the segment, or the closest segment coordinate when the foot\r\n * is outside the segment.\r\n *\r\n * @param {Coordinate} coordinate The coordinate.\r\n * @param {Array<Coordinate>} segment The two coordinates\r\n * of the segment.\r\n * @return {Coordinate} The foot of the perpendicular of\r\n * the coordinate to the segment.\r\n */\r\nexport function closestOnSegment(coordinate, segment) {\r\n    var x0 = coordinate[0];\r\n    var y0 = coordinate[1];\r\n    var start = segment[0];\r\n    var end = segment[1];\r\n    var x1 = start[0];\r\n    var y1 = start[1];\r\n    var x2 = end[0];\r\n    var y2 = end[1];\r\n    var dx = x2 - x1;\r\n    var dy = y2 - y1;\r\n    var along = (dx === 0 && dy === 0) ? 0 :\r\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\r\n    var x, y;\r\n    if (along <= 0) {\r\n        x = x1;\r\n        y = y1;\r\n    }\r\n    else if (along >= 1) {\r\n        x = x2;\r\n        y = y2;\r\n    }\r\n    else {\r\n        x = x1 + along * dx;\r\n        y = y1 + along * dy;\r\n    }\r\n    return [x, y];\r\n}\r\n/**\r\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\r\n * used to format\r\n * a {Coordinate} to a string.\r\n *\r\n * Example without specifying the fractional digits:\r\n *\r\n *     import {createStringXY} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var stringifyFunc = createStringXY();\r\n *     var out = stringifyFunc(coord);\r\n *     // out is now '8, 48'\r\n *\r\n * Example with explicitly specifying 2 fractional digits:\r\n *\r\n *     import {createStringXY} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var stringifyFunc = createStringXY(2);\r\n *     var out = stringifyFunc(coord);\r\n *     // out is now '7.85, 47.98'\r\n *\r\n * @param {number=} opt_fractionDigits The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {CoordinateFormat} Coordinate format.\r\n * @api\r\n */\r\nexport function createStringXY(opt_fractionDigits) {\r\n    return (\r\n    /**\r\n     * @param {Coordinate} coordinate Coordinate.\r\n     * @return {string} String XY.\r\n     */\r\n    function (coordinate) {\r\n        return toStringXY(coordinate, opt_fractionDigits);\r\n    });\r\n}\r\n/**\r\n * @param {string} hemispheres Hemispheres.\r\n * @param {number} degrees Degrees.\r\n * @param {number=} opt_fractionDigits The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {string} String.\r\n */\r\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\r\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\r\n    var x = Math.abs(3600 * normalizedDegrees);\r\n    var dflPrecision = opt_fractionDigits || 0;\r\n    var precision = Math.pow(10, dflPrecision);\r\n    var deg = Math.floor(x / 3600);\r\n    var min = Math.floor((x - deg * 3600) / 60);\r\n    var sec = x - (deg * 3600) - (min * 60);\r\n    sec = Math.ceil(sec * precision) / precision;\r\n    if (sec >= 60) {\r\n        sec = 0;\r\n        min += 1;\r\n    }\r\n    if (min >= 60) {\r\n        min = 0;\r\n        deg += 1;\r\n    }\r\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\r\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\r\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\r\n}\r\n/**\r\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\r\n * using the given string template. The strings `{x}` and `{y}` in the template\r\n * will be replaced with the first and second coordinate values respectively.\r\n *\r\n * Example without specifying the fractional digits:\r\n *\r\n *     import {format} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var template = 'Coordinate is ({x}|{y}).';\r\n *     var out = format(coord, template);\r\n *     // out is now 'Coordinate is (8|48).'\r\n *\r\n * Example explicitly specifying the fractional digits:\r\n *\r\n *     import {format} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var template = 'Coordinate is ({x}|{y}).';\r\n *     var out = format(coord, template, 2);\r\n *     // out is now 'Coordinate is (7.85|47.98).'\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {string} template A template string with `{x}` and `{y}` placeholders\r\n *     that will be replaced by first and second coordinate values.\r\n * @param {number=} opt_fractionDigits The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {string} Formatted coordinate.\r\n * @api\r\n */\r\nexport function format(coordinate, template, opt_fractionDigits) {\r\n    if (coordinate) {\r\n        return template\r\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\r\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * @param {Coordinate} coordinate1 First coordinate.\r\n * @param {Coordinate} coordinate2 Second coordinate.\r\n * @return {boolean} The two coordinates are equal.\r\n */\r\nexport function equals(coordinate1, coordinate2) {\r\n    var equals = true;\r\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\r\n        if (coordinate1[i] != coordinate2[i]) {\r\n            equals = false;\r\n            break;\r\n        }\r\n    }\r\n    return equals;\r\n}\r\n/**\r\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\r\n * returned by the function.\r\n *\r\n * Example:\r\n *\r\n *     import {rotate} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var rotateRadians = Math.PI / 2; // 90 degrees\r\n *     rotate(coord, rotateRadians);\r\n *     // coord is now [-47.983333, 7.85]\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {number} angle Angle in radian.\r\n * @return {Coordinate} Coordinate.\r\n * @api\r\n */\r\nexport function rotate(coordinate, angle) {\r\n    var cosAngle = Math.cos(angle);\r\n    var sinAngle = Math.sin(angle);\r\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\r\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\r\n    coordinate[0] = x;\r\n    coordinate[1] = y;\r\n    return coordinate;\r\n}\r\n/**\r\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\r\n * by the function.\r\n *\r\n * Example:\r\n *\r\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var scale = 1.2;\r\n *     scaleCoordinate(coord, scale);\r\n *     // coord is now [9.42, 57.5799996]\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {number} scale Scale factor.\r\n * @return {Coordinate} Coordinate.\r\n */\r\nexport function scale(coordinate, scale) {\r\n    coordinate[0] *= scale;\r\n    coordinate[1] *= scale;\r\n    return coordinate;\r\n}\r\n/**\r\n * @param {Coordinate} coord1 First coordinate.\r\n * @param {Coordinate} coord2 Second coordinate.\r\n * @return {number} Squared distance between coord1 and coord2.\r\n */\r\nexport function squaredDistance(coord1, coord2) {\r\n    var dx = coord1[0] - coord2[0];\r\n    var dy = coord1[1] - coord2[1];\r\n    return dx * dx + dy * dy;\r\n}\r\n/**\r\n * @param {Coordinate} coord1 First coordinate.\r\n * @param {Coordinate} coord2 Second coordinate.\r\n * @return {number} Distance between coord1 and coord2.\r\n */\r\nexport function distance(coord1, coord2) {\r\n    return Math.sqrt(squaredDistance(coord1, coord2));\r\n}\r\n/**\r\n * Calculate the squared distance from a coordinate to a line segment.\r\n *\r\n * @param {Coordinate} coordinate Coordinate of the point.\r\n * @param {Array<Coordinate>} segment Line segment (2\r\n * coordinates).\r\n * @return {number} Squared distance from the point to the line segment.\r\n */\r\nexport function squaredDistanceToSegment(coordinate, segment) {\r\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\r\n}\r\n/**\r\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\r\n * seconds.\r\n *\r\n * Example without specifying fractional digits:\r\n *\r\n *     import {toStringHDMS} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var out = toStringHDMS(coord);\r\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\r\n *\r\n * Example explicitly specifying 1 fractional digit:\r\n *\r\n *     import {toStringHDMS} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var out = toStringHDMS(coord, 1);\r\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {number=} opt_fractionDigits The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {string} Hemisphere, degrees, minutes and seconds.\r\n * @api\r\n */\r\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\r\n    if (coordinate) {\r\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\r\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Format a coordinate as a comma delimited string.\r\n *\r\n * Example without specifying fractional digits:\r\n *\r\n *     import {toStringXY} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var out = toStringXY(coord);\r\n *     // out is now '8, 48'\r\n *\r\n * Example explicitly specifying 1 fractional digit:\r\n *\r\n *     import {toStringXY} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var out = toStringXY(coord, 1);\r\n *     // out is now '7.8, 48.0'\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {number=} opt_fractionDigits The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {string} XY.\r\n * @api\r\n */\r\nexport function toStringXY(coordinate, opt_fractionDigits) {\r\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\r\n}\r\n//# sourceMappingURL=coordinate.js.map","/**\r\n * @module ol/easing\r\n */\r\n/**\r\n * Start slow and speed up.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function easeIn(t) {\r\n    return Math.pow(t, 3);\r\n}\r\n/**\r\n * Start fast and slow down.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function easeOut(t) {\r\n    return 1 - easeIn(1 - t);\r\n}\r\n/**\r\n * Start slow, speed up, and then slow down again.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function inAndOut(t) {\r\n    return 3 * t * t - 2 * t * t * t;\r\n}\r\n/**\r\n * Maintain a constant speed over time.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function linear(t) {\r\n    return t;\r\n}\r\n/**\r\n * Start slow, speed up, and at the very end slow down again.  This has the\r\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\r\n * slowdown is delayed.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function upAndDown(t) {\r\n    if (t < 0.5) {\r\n        return inAndOut(2 * t);\r\n    }\r\n    else {\r\n        return 1 - inAndOut(2 * (t - 0.5));\r\n    }\r\n}\r\n//# sourceMappingURL=easing.js.map","/**\r\n * @module ol/geom/GeometryLayout\r\n */\r\n/**\r\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\r\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\r\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\r\n * @enum {string}\r\n */\r\nexport default {\r\n    XY: 'XY',\r\n    XYZ: 'XYZ',\r\n    XYM: 'XYM',\r\n    XYZM: 'XYZM'\r\n};\r\n//# sourceMappingURL=GeometryLayout.js.map","/**\r\n * @module ol/geom/flat/transform\r\n */\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Transformed coordinates.\r\n */\r\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\r\n    var dest = opt_dest ? opt_dest : [];\r\n    var i = 0;\r\n    for (var j = offset; j < end; j += stride) {\r\n        var x = flatCoordinates[j];\r\n        var y = flatCoordinates[j + 1];\r\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\r\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\r\n    }\r\n    if (opt_dest && dest.length != i) {\r\n        dest.length = i;\r\n    }\r\n    return dest;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} angle Angle.\r\n * @param {Array<number>} anchor Rotation anchor point.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Transformed coordinates.\r\n */\r\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\r\n    var dest = opt_dest ? opt_dest : [];\r\n    var cos = Math.cos(angle);\r\n    var sin = Math.sin(angle);\r\n    var anchorX = anchor[0];\r\n    var anchorY = anchor[1];\r\n    var i = 0;\r\n    for (var j = offset; j < end; j += stride) {\r\n        var deltaX = flatCoordinates[j] - anchorX;\r\n        var deltaY = flatCoordinates[j + 1] - anchorY;\r\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\r\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\r\n        for (var k = j + 2; k < j + stride; ++k) {\r\n            dest[i++] = flatCoordinates[k];\r\n        }\r\n    }\r\n    if (opt_dest && dest.length != i) {\r\n        dest.length = i;\r\n    }\r\n    return dest;\r\n}\r\n/**\r\n * Scale the coordinates.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} sx Scale factor in the x-direction.\r\n * @param {number} sy Scale factor in the y-direction.\r\n * @param {Array<number>} anchor Scale anchor point.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Transformed coordinates.\r\n */\r\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\r\n    var dest = opt_dest ? opt_dest : [];\r\n    var anchorX = anchor[0];\r\n    var anchorY = anchor[1];\r\n    var i = 0;\r\n    for (var j = offset; j < end; j += stride) {\r\n        var deltaX = flatCoordinates[j] - anchorX;\r\n        var deltaY = flatCoordinates[j + 1] - anchorY;\r\n        dest[i++] = anchorX + sx * deltaX;\r\n        dest[i++] = anchorY + sy * deltaY;\r\n        for (var k = j + 2; k < j + stride; ++k) {\r\n            dest[i++] = flatCoordinates[k];\r\n        }\r\n    }\r\n    if (opt_dest && dest.length != i) {\r\n        dest.length = i;\r\n    }\r\n    return dest;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} deltaX Delta X.\r\n * @param {number} deltaY Delta Y.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Transformed coordinates.\r\n */\r\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\r\n    var dest = opt_dest ? opt_dest : [];\r\n    var i = 0;\r\n    for (var j = offset; j < end; j += stride) {\r\n        dest[i++] = flatCoordinates[j] + deltaX;\r\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\r\n        for (var k = j + 2; k < j + stride; ++k) {\r\n            dest[i++] = flatCoordinates[k];\r\n        }\r\n    }\r\n    if (opt_dest && dest.length != i) {\r\n        dest.length = i;\r\n    }\r\n    return dest;\r\n}\r\n//# sourceMappingURL=transform.js.map","/**\r\n * @module ol/transform\r\n */\r\nimport { assert } from './asserts.js';\r\n/**\r\n * An array representing an affine 2d transformation for use with\r\n * {@link module:ol/transform} functions. The array has 6 elements.\r\n * @typedef {!Array<number>} Transform\r\n */\r\n/**\r\n * Collection of affine 2d transformation functions. The functions work on an\r\n * array of 6 elements. The element order is compatible with the [SVGMatrix\r\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\r\n * a subset (elements a to f) of a 3×3 matrix:\r\n * ```\r\n * [ a c e ]\r\n * [ b d f ]\r\n * [ 0 0 1 ]\r\n * ```\r\n */\r\n/**\r\n * @private\r\n * @type {Transform}\r\n */\r\nvar tmp_ = new Array(6);\r\n/**\r\n * Create an identity transform.\r\n * @return {!Transform} Identity transform.\r\n */\r\nexport function create() {\r\n    return [1, 0, 0, 1, 0, 0];\r\n}\r\n/**\r\n * Resets the given transform to an identity transform.\r\n * @param {!Transform} transform Transform.\r\n * @return {!Transform} Transform.\r\n */\r\nexport function reset(transform) {\r\n    return set(transform, 1, 0, 0, 1, 0, 0);\r\n}\r\n/**\r\n * Multiply the underlying matrices of two transforms and return the result in\r\n * the first transform.\r\n * @param {!Transform} transform1 Transform parameters of matrix 1.\r\n * @param {!Transform} transform2 Transform parameters of matrix 2.\r\n * @return {!Transform} transform1 multiplied with transform2.\r\n */\r\nexport function multiply(transform1, transform2) {\r\n    var a1 = transform1[0];\r\n    var b1 = transform1[1];\r\n    var c1 = transform1[2];\r\n    var d1 = transform1[3];\r\n    var e1 = transform1[4];\r\n    var f1 = transform1[5];\r\n    var a2 = transform2[0];\r\n    var b2 = transform2[1];\r\n    var c2 = transform2[2];\r\n    var d2 = transform2[3];\r\n    var e2 = transform2[4];\r\n    var f2 = transform2[5];\r\n    transform1[0] = a1 * a2 + c1 * b2;\r\n    transform1[1] = b1 * a2 + d1 * b2;\r\n    transform1[2] = a1 * c2 + c1 * d2;\r\n    transform1[3] = b1 * c2 + d1 * d2;\r\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\r\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\r\n    return transform1;\r\n}\r\n/**\r\n * Set the transform components a-f on a given transform.\r\n * @param {!Transform} transform Transform.\r\n * @param {number} a The a component of the transform.\r\n * @param {number} b The b component of the transform.\r\n * @param {number} c The c component of the transform.\r\n * @param {number} d The d component of the transform.\r\n * @param {number} e The e component of the transform.\r\n * @param {number} f The f component of the transform.\r\n * @return {!Transform} Matrix with transform applied.\r\n */\r\nexport function set(transform, a, b, c, d, e, f) {\r\n    transform[0] = a;\r\n    transform[1] = b;\r\n    transform[2] = c;\r\n    transform[3] = d;\r\n    transform[4] = e;\r\n    transform[5] = f;\r\n    return transform;\r\n}\r\n/**\r\n * Set transform on one matrix from another matrix.\r\n * @param {!Transform} transform1 Matrix to set transform to.\r\n * @param {!Transform} transform2 Matrix to set transform from.\r\n * @return {!Transform} transform1 with transform from transform2 applied.\r\n */\r\nexport function setFromArray(transform1, transform2) {\r\n    transform1[0] = transform2[0];\r\n    transform1[1] = transform2[1];\r\n    transform1[2] = transform2[2];\r\n    transform1[3] = transform2[3];\r\n    transform1[4] = transform2[4];\r\n    transform1[5] = transform2[5];\r\n    return transform1;\r\n}\r\n/**\r\n * Transforms the given coordinate with the given transform returning the\r\n * resulting, transformed coordinate. The coordinate will be modified in-place.\r\n *\r\n * @param {Transform} transform The transformation.\r\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\r\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\r\n *     chained together.\r\n */\r\nexport function apply(transform, coordinate) {\r\n    var x = coordinate[0];\r\n    var y = coordinate[1];\r\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\r\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\r\n    return coordinate;\r\n}\r\n/**\r\n * Applies rotation to the given transform.\r\n * @param {!Transform} transform Transform.\r\n * @param {number} angle Angle in radians.\r\n * @return {!Transform} The rotated transform.\r\n */\r\nexport function rotate(transform, angle) {\r\n    var cos = Math.cos(angle);\r\n    var sin = Math.sin(angle);\r\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\r\n}\r\n/**\r\n * Applies scale to a given transform.\r\n * @param {!Transform} transform Transform.\r\n * @param {number} x Scale factor x.\r\n * @param {number} y Scale factor y.\r\n * @return {!Transform} The scaled transform.\r\n */\r\nexport function scale(transform, x, y) {\r\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\r\n}\r\n/**\r\n * Creates a scale transform.\r\n * @param {!Transform} target Transform to overwrite.\r\n * @param {number} x Scale factor x.\r\n * @param {number} y Scale factor y.\r\n * @return {!Transform} The scale transform.\r\n */\r\nexport function makeScale(target, x, y) {\r\n    return set(target, x, 0, 0, y, 0, 0);\r\n}\r\n/**\r\n * Applies translation to the given transform.\r\n * @param {!Transform} transform Transform.\r\n * @param {number} dx Translation x.\r\n * @param {number} dy Translation y.\r\n * @return {!Transform} The translated transform.\r\n */\r\nexport function translate(transform, dx, dy) {\r\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\r\n}\r\n/**\r\n * Creates a composite transform given an initial translation, scale, rotation, and\r\n * final translation (in that order only, not commutative).\r\n * @param {!Transform} transform The transform (will be modified in place).\r\n * @param {number} dx1 Initial translation x.\r\n * @param {number} dy1 Initial translation y.\r\n * @param {number} sx Scale factor x.\r\n * @param {number} sy Scale factor y.\r\n * @param {number} angle Rotation (in counter-clockwise radians).\r\n * @param {number} dx2 Final translation x.\r\n * @param {number} dy2 Final translation y.\r\n * @return {!Transform} The composite transform.\r\n */\r\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\r\n    var sin = Math.sin(angle);\r\n    var cos = Math.cos(angle);\r\n    transform[0] = sx * cos;\r\n    transform[1] = sy * sin;\r\n    transform[2] = -sx * sin;\r\n    transform[3] = sy * cos;\r\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\r\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\r\n    return transform;\r\n}\r\n/**\r\n * Invert the given transform.\r\n * @param {!Transform} source The source transform to invert.\r\n * @return {!Transform} The inverted (source) transform.\r\n */\r\nexport function invert(source) {\r\n    return makeInverse(source, source);\r\n}\r\n/**\r\n * Invert the given transform.\r\n * @param {!Transform} target Transform to be set as the inverse of\r\n *     the source transform.\r\n * @param {!Transform} source The source transform to invert.\r\n * @return {!Transform} The inverted (target) transform.\r\n */\r\nexport function makeInverse(target, source) {\r\n    var det = determinant(source);\r\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\r\n    var a = source[0];\r\n    var b = source[1];\r\n    var c = source[2];\r\n    var d = source[3];\r\n    var e = source[4];\r\n    var f = source[5];\r\n    target[0] = d / det;\r\n    target[1] = -b / det;\r\n    target[2] = -c / det;\r\n    target[3] = a / det;\r\n    target[4] = (c * f - d * e) / det;\r\n    target[5] = -(a * f - b * e) / det;\r\n    return target;\r\n}\r\n/**\r\n * Returns the determinant of the given matrix.\r\n * @param {!Transform} mat Matrix.\r\n * @return {number} Determinant.\r\n */\r\nexport function determinant(mat) {\r\n    return mat[0] * mat[3] - mat[1] * mat[2];\r\n}\r\n/**\r\n * A string version of the transform.  This can be used\r\n * for CSS transforms.\r\n * @param {!Transform} mat Matrix.\r\n * @return {string} The transform as a string.\r\n */\r\nexport function toString(mat) {\r\n    return 'matrix(' + mat.join(', ') + ')';\r\n}\r\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/geom/Geometry\r\n */\r\nimport { abstract } from '../util.js';\r\nimport BaseObject from '../Object.js';\r\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\r\nimport { transform2D } from './flat/transform.js';\r\nimport { get as getProjection, getTransform } from '../proj.js';\r\nimport Units from '../proj/Units.js';\r\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\r\n/**\r\n * @type {import(\"../transform.js\").Transform}\r\n */\r\nvar tmpTransform = createTransform();\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for vector geometries.\r\n *\r\n * To get notified of changes to the geometry, register a listener for the\r\n * generic `change` event on your geometry instance.\r\n *\r\n * @abstract\r\n * @api\r\n */\r\nvar Geometry = /** @class */ (function (_super) {\r\n    __extends(Geometry, _super);\r\n    function Geometry() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../extent.js\").Extent}\r\n         */\r\n        _this.extent_ = createEmpty();\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.extentRevision_ = -1;\r\n        /**\r\n         * @protected\r\n         * @type {Object<string, Geometry>}\r\n         */\r\n        _this.simplifiedGeometryCache = {};\r\n        /**\r\n         * @protected\r\n         * @type {number}\r\n         */\r\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\r\n        /**\r\n         * @protected\r\n         * @type {number}\r\n         */\r\n        _this.simplifiedGeometryRevision = 0;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Make a complete copy of the geometry.\r\n     * @abstract\r\n     * @return {!Geometry} Clone.\r\n     */\r\n    Geometry.prototype.clone = function () {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {number} x X.\r\n     * @param {number} y Y.\r\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\r\n     * @param {number} minSquaredDistance Minimum squared distance.\r\n     * @return {number} Minimum squared distance.\r\n     */\r\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * @param {number} x X.\r\n     * @param {number} y Y.\r\n     * @return {boolean} Contains (x, y).\r\n     */\r\n    Geometry.prototype.containsXY = function (x, y) {\r\n        var coord = this.getClosestPoint([x, y]);\r\n        return coord[0] === x && coord[1] === y;\r\n    };\r\n    /**\r\n     * Return the closest point of the geometry to the passed point as\r\n     * {@link module:ol/coordinate~Coordinate coordinate}.\r\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\r\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\r\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\r\n     * @api\r\n     */\r\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\r\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\r\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\r\n        return closestPoint;\r\n    };\r\n    /**\r\n     * Returns true if this geometry includes the specified coordinate. If the\r\n     * coordinate is on the boundary of the geometry, returns false.\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @return {boolean} Contains coordinate.\r\n     * @api\r\n     */\r\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\r\n        return this.containsXY(coordinate[0], coordinate[1]);\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @protected\r\n     * @return {import(\"../extent.js\").Extent} extent Extent.\r\n     */\r\n    Geometry.prototype.computeExtent = function (extent) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Get the extent of the geometry.\r\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\r\n     * @return {import(\"../extent.js\").Extent} extent Extent.\r\n     * @api\r\n     */\r\n    Geometry.prototype.getExtent = function (opt_extent) {\r\n        if (this.extentRevision_ != this.getRevision()) {\r\n            this.extent_ = this.computeExtent(this.extent_);\r\n            this.extentRevision_ = this.getRevision();\r\n        }\r\n        return returnOrUpdate(this.extent_, opt_extent);\r\n    };\r\n    /**\r\n     * Rotate the geometry around a given coordinate. This modifies the geometry\r\n     * coordinates in place.\r\n     * @abstract\r\n     * @param {number} angle Rotation angle in radians.\r\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\r\n     * @api\r\n     */\r\n    Geometry.prototype.rotate = function (angle, anchor) {\r\n        abstract();\r\n    };\r\n    /**\r\n     * Scale the geometry (with an optional origin).  This modifies the geometry\r\n     * coordinates in place.\r\n     * @abstract\r\n     * @param {number} sx The scaling factor in the x-direction.\r\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\r\n     *     sx).\r\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\r\n     *     of the geometry extent).\r\n     * @api\r\n     */\r\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\r\n        abstract();\r\n    };\r\n    /**\r\n     * Create a simplified version of this geometry.  For linestrings, this uses\r\n     * the the {@link\r\n     * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\r\n     * Douglas Peucker} algorithm.  For polygons, a quantization-based\r\n     * simplification is used to preserve topology.\r\n     * @param {number} tolerance The tolerance distance for simplification.\r\n     * @return {Geometry} A new, simplified version of the original geometry.\r\n     * @api\r\n     */\r\n    Geometry.prototype.simplify = function (tolerance) {\r\n        return this.getSimplifiedGeometry(tolerance * tolerance);\r\n    };\r\n    /**\r\n     * Create a simplified version of this geometry using the Douglas Peucker\r\n     * algorithm.\r\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\r\n     * @abstract\r\n     * @param {number} squaredTolerance Squared tolerance.\r\n     * @return {Geometry} Simplified geometry.\r\n     */\r\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Get the type of this geometry.\r\n     * @abstract\r\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\r\n     */\r\n    Geometry.prototype.getType = function () {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Apply a transform function to each coordinate of the geometry.\r\n     * The geometry is modified in place.\r\n     * If you do not want the geometry modified in place, first `clone()` it and\r\n     * then use this function on the clone.\r\n     * @abstract\r\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\r\n     */\r\n    Geometry.prototype.applyTransform = function (transformFn) {\r\n        abstract();\r\n    };\r\n    /**\r\n     * Test if the geometry and the passed extent intersect.\r\n     * @abstract\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @return {boolean} `true` if the geometry and the extent intersect.\r\n     */\r\n    Geometry.prototype.intersectsExtent = function (extent) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\r\n     * instead you want a new geometry, first `clone()` this geometry.\r\n     * @abstract\r\n     * @param {number} deltaX Delta X.\r\n     * @param {number} deltaY Delta Y.\r\n     * @api\r\n     */\r\n    Geometry.prototype.translate = function (deltaX, deltaY) {\r\n        abstract();\r\n    };\r\n    /**\r\n     * Transform each coordinate of the geometry from one coordinate reference\r\n     * system to another. The geometry is modified in place.\r\n     * For example, a line will be transformed to a line and a circle to a circle.\r\n     * If you do not want the geometry modified in place, first `clone()` it and\r\n     * then use this function on the clone.\r\n     *\r\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\r\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\r\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\r\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\r\n     * @return {Geometry} This geometry.  Note that original geometry is\r\n     *     modified in place.\r\n     * @api\r\n     */\r\n    Geometry.prototype.transform = function (source, destination) {\r\n        /** @type {import(\"../proj/Projection.js\").default} */\r\n        var sourceProj = getProjection(source);\r\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\r\n            function (inCoordinates, outCoordinates, stride) {\r\n                var pixelExtent = sourceProj.getExtent();\r\n                var projectedExtent = sourceProj.getWorldExtent();\r\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\r\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\r\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\r\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\r\n            } :\r\n            getTransform(sourceProj, destination);\r\n        this.applyTransform(transformFn);\r\n        return this;\r\n    };\r\n    return Geometry;\r\n}(BaseObject));\r\nexport default Geometry;\r\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/geom/SimpleGeometry\r\n */\r\nimport { abstract } from '../util.js';\r\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\r\nimport Geometry from './Geometry.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\r\nimport { clear } from '../obj.js';\r\n/**\r\n * @classdesc\r\n * Abstract base class; only used for creating subclasses; do not instantiate\r\n * in apps, as cannot be rendered.\r\n *\r\n * @abstract\r\n * @api\r\n */\r\nvar SimpleGeometry = /** @class */ (function (_super) {\r\n    __extends(SimpleGeometry, _super);\r\n    function SimpleGeometry() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @protected\r\n         * @type {GeometryLayout}\r\n         */\r\n        _this.layout = GeometryLayout.XY;\r\n        /**\r\n         * @protected\r\n         * @type {number}\r\n         */\r\n        _this.stride = 2;\r\n        /**\r\n         * @protected\r\n         * @type {Array<number>}\r\n         */\r\n        _this.flatCoordinates = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    SimpleGeometry.prototype.computeExtent = function (extent) {\r\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @return {Array<*>} Coordinates.\r\n     */\r\n    SimpleGeometry.prototype.getCoordinates = function () {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Return the first coordinate of the geometry.\r\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\r\n     * @api\r\n     */\r\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\r\n        return this.flatCoordinates.slice(0, this.stride);\r\n    };\r\n    /**\r\n     * @return {Array<number>} Flat coordinates.\r\n     */\r\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\r\n        return this.flatCoordinates;\r\n    };\r\n    /**\r\n     * Return the last coordinate of the geometry.\r\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\r\n     * @api\r\n     */\r\n    SimpleGeometry.prototype.getLastCoordinate = function () {\r\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\r\n    };\r\n    /**\r\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\r\n     * @return {GeometryLayout} Layout.\r\n     * @api\r\n     */\r\n    SimpleGeometry.prototype.getLayout = function () {\r\n        return this.layout;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\r\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\r\n            clear(this.simplifiedGeometryCache);\r\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\r\n            this.simplifiedGeometryRevision = this.getRevision();\r\n        }\r\n        // If squaredTolerance is negative or if we know that simplification will not\r\n        // have any effect then just return this.\r\n        if (squaredTolerance < 0 ||\r\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\r\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\r\n            return this;\r\n        }\r\n        var key = squaredTolerance.toString();\r\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\r\n            return this.simplifiedGeometryCache[key];\r\n        }\r\n        else {\r\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\r\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\r\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\r\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\r\n                return simplifiedGeometry;\r\n            }\r\n            else {\r\n                // Simplification did not actually remove any coordinates.  We now know\r\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\r\n                // than or equal to the current squaredTolerance will also not have any\r\n                // effect.  This allows us to short circuit simplification (saving CPU\r\n                // cycles) and prevents the cache of simplified geometries from filling\r\n                // up with useless identical copies of this geometry (saving memory).\r\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} squaredTolerance Squared tolerance.\r\n     * @return {SimpleGeometry} Simplified geometry.\r\n     * @protected\r\n     */\r\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} Stride.\r\n     */\r\n    SimpleGeometry.prototype.getStride = function () {\r\n        return this.stride;\r\n    };\r\n    /**\r\n     * @param {GeometryLayout} layout Layout.\r\n     * @param {Array<number>} flatCoordinates Flat coordinates.\r\n     */\r\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\r\n        this.stride = getStrideForLayout(layout);\r\n        this.layout = layout;\r\n        this.flatCoordinates = flatCoordinates;\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {!Array<*>} coordinates Coordinates.\r\n     * @param {GeometryLayout=} opt_layout Layout.\r\n     */\r\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\r\n        abstract();\r\n    };\r\n    /**\r\n     * @param {GeometryLayout|undefined} layout Layout.\r\n     * @param {Array<*>} coordinates Coordinates.\r\n     * @param {number} nesting Nesting.\r\n     * @protected\r\n     */\r\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\r\n        /** @type {number} */\r\n        var stride;\r\n        if (layout) {\r\n            stride = getStrideForLayout(layout);\r\n        }\r\n        else {\r\n            for (var i = 0; i < nesting; ++i) {\r\n                if (coordinates.length === 0) {\r\n                    this.layout = GeometryLayout.XY;\r\n                    this.stride = 2;\r\n                    return;\r\n                }\r\n                else {\r\n                    coordinates = /** @type {Array} */ (coordinates[0]);\r\n                }\r\n            }\r\n            stride = coordinates.length;\r\n            layout = getLayoutForStride(stride);\r\n        }\r\n        this.layout = layout;\r\n        this.stride = stride;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\r\n        if (this.flatCoordinates) {\r\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\r\n            this.changed();\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\r\n        var flatCoordinates = this.getFlatCoordinates();\r\n        if (flatCoordinates) {\r\n            var stride = this.getStride();\r\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\r\n            this.changed();\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\r\n        var sy = opt_sy;\r\n        if (sy === undefined) {\r\n            sy = sx;\r\n        }\r\n        var anchor = opt_anchor;\r\n        if (!anchor) {\r\n            anchor = getCenter(this.getExtent());\r\n        }\r\n        var flatCoordinates = this.getFlatCoordinates();\r\n        if (flatCoordinates) {\r\n            var stride = this.getStride();\r\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\r\n            this.changed();\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\r\n        var flatCoordinates = this.getFlatCoordinates();\r\n        if (flatCoordinates) {\r\n            var stride = this.getStride();\r\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\r\n            this.changed();\r\n        }\r\n    };\r\n    return SimpleGeometry;\r\n}(Geometry));\r\n/**\r\n * @param {number} stride Stride.\r\n * @return {GeometryLayout} layout Layout.\r\n */\r\nfunction getLayoutForStride(stride) {\r\n    var layout;\r\n    if (stride == 2) {\r\n        layout = GeometryLayout.XY;\r\n    }\r\n    else if (stride == 3) {\r\n        layout = GeometryLayout.XYZ;\r\n    }\r\n    else if (stride == 4) {\r\n        layout = GeometryLayout.XYZM;\r\n    }\r\n    return (\r\n    /** @type {GeometryLayout} */ (layout));\r\n}\r\n/**\r\n * @param {GeometryLayout} layout Layout.\r\n * @return {number} Stride.\r\n */\r\nexport function getStrideForLayout(layout) {\r\n    var stride;\r\n    if (layout == GeometryLayout.XY) {\r\n        stride = 2;\r\n    }\r\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\r\n        stride = 3;\r\n    }\r\n    else if (layout == GeometryLayout.XYZM) {\r\n        stride = 4;\r\n    }\r\n    return /** @type {number} */ (stride);\r\n}\r\n/**\r\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\r\n * @param {import(\"../transform.js\").Transform} transform Transform.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Transformed flat coordinates.\r\n */\r\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\r\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\r\n    if (!flatCoordinates) {\r\n        return null;\r\n    }\r\n    else {\r\n        var stride = simpleGeometry.getStride();\r\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\r\n    }\r\n}\r\nexport default SimpleGeometry;\r\n//# sourceMappingURL=SimpleGeometry.js.map","/**\r\n * @module ol/geom/flat/area\r\n */\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {number} Area.\r\n */\r\nexport function linearRing(flatCoordinates, offset, end, stride) {\r\n    var twiceArea = 0;\r\n    var x1 = flatCoordinates[end - stride];\r\n    var y1 = flatCoordinates[end - stride + 1];\r\n    for (; offset < end; offset += stride) {\r\n        var x2 = flatCoordinates[offset];\r\n        var y2 = flatCoordinates[offset + 1];\r\n        twiceArea += y1 * x2 - x1 * y2;\r\n        x1 = x2;\r\n        y1 = y2;\r\n    }\r\n    return twiceArea / 2;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @return {number} Area.\r\n */\r\nexport function linearRings(flatCoordinates, offset, ends, stride) {\r\n    var area = 0;\r\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n        var end = ends[i];\r\n        area += linearRing(flatCoordinates, offset, end, stride);\r\n        offset = end;\r\n    }\r\n    return area;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @return {number} Area.\r\n */\r\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\r\n    var area = 0;\r\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n        var ends = endss[i];\r\n        area += linearRings(flatCoordinates, offset, ends, stride);\r\n        offset = ends[ends.length - 1];\r\n    }\r\n    return area;\r\n}\r\n//# sourceMappingURL=area.js.map","/**\r\n * @module ol/geom/flat/closest\r\n */\r\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\r\n/**\r\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\r\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\r\n * dimensions are linearly interpolated.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset1 Offset 1.\r\n * @param {number} offset2 Offset 2.\r\n * @param {number} stride Stride.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {Array<number>} closestPoint Closest point.\r\n */\r\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\r\n    var x1 = flatCoordinates[offset1];\r\n    var y1 = flatCoordinates[offset1 + 1];\r\n    var dx = flatCoordinates[offset2] - x1;\r\n    var dy = flatCoordinates[offset2 + 1] - y1;\r\n    var offset;\r\n    if (dx === 0 && dy === 0) {\r\n        offset = offset1;\r\n    }\r\n    else {\r\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\r\n        if (t > 1) {\r\n            offset = offset2;\r\n        }\r\n        else if (t > 0) {\r\n            for (var i = 0; i < stride; ++i) {\r\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\r\n            }\r\n            closestPoint.length = stride;\r\n            return;\r\n        }\r\n        else {\r\n            offset = offset1;\r\n        }\r\n    }\r\n    for (var i = 0; i < stride; ++i) {\r\n        closestPoint[i] = flatCoordinates[offset + i];\r\n    }\r\n    closestPoint.length = stride;\r\n}\r\n/**\r\n * Return the squared of the largest distance between any pair of consecutive\r\n * coordinates.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} max Max squared delta.\r\n * @return {number} Max squared delta.\r\n */\r\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\r\n    var x1 = flatCoordinates[offset];\r\n    var y1 = flatCoordinates[offset + 1];\r\n    for (offset += stride; offset < end; offset += stride) {\r\n        var x2 = flatCoordinates[offset];\r\n        var y2 = flatCoordinates[offset + 1];\r\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\r\n        if (squaredDelta > max) {\r\n            max = squaredDelta;\r\n        }\r\n        x1 = x2;\r\n        y1 = y2;\r\n    }\r\n    return max;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} max Max squared delta.\r\n * @return {number} Max squared delta.\r\n */\r\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\r\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n        var end = ends[i];\r\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\r\n        offset = end;\r\n    }\r\n    return max;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} max Max squared delta.\r\n * @return {number} Max squared delta.\r\n */\r\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\r\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n        var ends = endss[i];\r\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\r\n        offset = ends[ends.length - 1];\r\n    }\r\n    return max;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} maxDelta Max delta.\r\n * @param {boolean} isRing Is ring.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {Array<number>} closestPoint Closest point.\r\n * @param {number} minSquaredDistance Minimum squared distance.\r\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\r\n * @return {number} Minimum squared distance.\r\n */\r\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\r\n    if (offset == end) {\r\n        return minSquaredDistance;\r\n    }\r\n    var i, squaredDistance;\r\n    if (maxDelta === 0) {\r\n        // All points are identical, so just test the first point.\r\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\r\n        if (squaredDistance < minSquaredDistance) {\r\n            for (i = 0; i < stride; ++i) {\r\n                closestPoint[i] = flatCoordinates[offset + i];\r\n            }\r\n            closestPoint.length = stride;\r\n            return squaredDistance;\r\n        }\r\n        else {\r\n            return minSquaredDistance;\r\n        }\r\n    }\r\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\r\n    var index = offset + stride;\r\n    while (index < end) {\r\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\r\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\r\n        if (squaredDistance < minSquaredDistance) {\r\n            minSquaredDistance = squaredDistance;\r\n            for (i = 0; i < stride; ++i) {\r\n                closestPoint[i] = tmpPoint[i];\r\n            }\r\n            closestPoint.length = stride;\r\n            index += stride;\r\n        }\r\n        else {\r\n            // Skip ahead multiple points, because we know that all the skipped\r\n            // points cannot be any closer than the closest point we have found so\r\n            // far.  We know this because we know how close the current point is, how\r\n            // close the closest point we have found so far is, and the maximum\r\n            // distance between consecutive points.  For example, if we're currently\r\n            // at distance 10, the best we've found so far is 3, and that the maximum\r\n            // distance between consecutive points is 2, then we'll need to skip at\r\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\r\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\r\n            // always advance at least one point, to avoid an infinite loop.\r\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\r\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\r\n        }\r\n    }\r\n    if (isRing) {\r\n        // Check the closing segment.\r\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\r\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\r\n        if (squaredDistance < minSquaredDistance) {\r\n            minSquaredDistance = squaredDistance;\r\n            for (i = 0; i < stride; ++i) {\r\n                closestPoint[i] = tmpPoint[i];\r\n            }\r\n            closestPoint.length = stride;\r\n        }\r\n    }\r\n    return minSquaredDistance;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} maxDelta Max delta.\r\n * @param {boolean} isRing Is ring.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {Array<number>} closestPoint Closest point.\r\n * @param {number} minSquaredDistance Minimum squared distance.\r\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\r\n * @return {number} Minimum squared distance.\r\n */\r\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\r\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\r\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n        var end = ends[i];\r\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\r\n        offset = end;\r\n    }\r\n    return minSquaredDistance;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} maxDelta Max delta.\r\n * @param {boolean} isRing Is ring.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {Array<number>} closestPoint Closest point.\r\n * @param {number} minSquaredDistance Minimum squared distance.\r\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\r\n * @return {number} Minimum squared distance.\r\n */\r\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\r\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\r\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n        var ends = endss[i];\r\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\r\n        offset = ends[ends.length - 1];\r\n    }\r\n    return minSquaredDistance;\r\n}\r\n//# sourceMappingURL=closest.js.map","/**\r\n * @module ol/geom/flat/deflate\r\n */\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {number} stride Stride.\r\n * @return {number} offset Offset.\r\n */\r\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\r\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\r\n        flatCoordinates[offset++] = coordinate[i];\r\n    }\r\n    return offset;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\r\n * @param {number} stride Stride.\r\n * @return {number} offset Offset.\r\n */\r\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\r\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        var coordinate = coordinates[i];\r\n        for (var j = 0; j < stride; ++j) {\r\n            flatCoordinates[offset++] = coordinate[j];\r\n        }\r\n    }\r\n    return offset;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\r\n * @param {number} stride Stride.\r\n * @param {Array<number>=} opt_ends Ends.\r\n * @return {Array<number>} Ends.\r\n */\r\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\r\n    var ends = opt_ends ? opt_ends : [];\r\n    var i = 0;\r\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\r\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\r\n        ends[i++] = end;\r\n        offset = end;\r\n    }\r\n    ends.length = i;\r\n    return ends;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\r\n * @param {number} stride Stride.\r\n * @param {Array<Array<number>>=} opt_endss Endss.\r\n * @return {Array<Array<number>>} Endss.\r\n */\r\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\r\n    var endss = opt_endss ? opt_endss : [];\r\n    var i = 0;\r\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\r\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\r\n        endss[i++] = ends;\r\n        offset = ends[ends.length - 1];\r\n    }\r\n    endss.length = i;\r\n    return endss;\r\n}\r\n//# sourceMappingURL=deflate.js.map","/**\r\n * @module ol/geom/flat/inflate\r\n */\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\r\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\r\n */\r\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\r\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\r\n    var i = 0;\r\n    for (var j = offset; j < end; j += stride) {\r\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\r\n    }\r\n    coordinates.length = i;\r\n    return coordinates;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\r\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\r\n */\r\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\r\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\r\n    var i = 0;\r\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\r\n        var end = ends[j];\r\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\r\n        offset = end;\r\n    }\r\n    coordinatess.length = i;\r\n    return coordinatess;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\r\n *     Coordinatesss.\r\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\r\n */\r\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\r\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\r\n    var i = 0;\r\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\r\n        var ends = endss[j];\r\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\r\n        offset = ends[ends.length - 1];\r\n    }\r\n    coordinatesss.length = i;\r\n    return coordinatesss;\r\n}\r\n//# sourceMappingURL=inflate.js.map","/**\r\n * @module ol/geom/flat/simplify\r\n */\r\n// Based on simplify-js https://github.com/mourner/simplify-js\r\n// Copyright (c) 2012, Vladimir Agafonkin\r\n// All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are met:\r\n//\r\n//    1. Redistributions of source code must retain the above copyright notice,\r\n//       this list of conditions and the following disclaimer.\r\n//\r\n//    2. Redistributions in binary form must reproduce the above copyright\r\n//       notice, this list of conditions and the following disclaimer in the\r\n//       documentation and/or other materials provided with the distribution.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n// POSSIBILITY OF SUCH DAMAGE.\r\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {boolean} highQuality Highest quality.\r\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @return {Array<number>} Simplified line string.\r\n */\r\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\r\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\r\n        opt_simplifiedFlatCoordinates : [];\r\n    if (!highQuality) {\r\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\r\n        flatCoordinates = simplifiedFlatCoordinates;\r\n        offset = 0;\r\n        stride = 2;\r\n    }\r\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\r\n    return simplifiedFlatCoordinates;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\r\n    var n = (end - offset) / stride;\r\n    if (n < 3) {\r\n        for (; offset < end; offset += stride) {\r\n            simplifiedFlatCoordinates[simplifiedOffset++] =\r\n                flatCoordinates[offset];\r\n            simplifiedFlatCoordinates[simplifiedOffset++] =\r\n                flatCoordinates[offset + 1];\r\n        }\r\n        return simplifiedOffset;\r\n    }\r\n    /** @type {Array<number>} */\r\n    var markers = new Array(n);\r\n    markers[0] = 1;\r\n    markers[n - 1] = 1;\r\n    /** @type {Array<number>} */\r\n    var stack = [offset, end - stride];\r\n    var index = 0;\r\n    while (stack.length > 0) {\r\n        var last = stack.pop();\r\n        var first = stack.pop();\r\n        var maxSquaredDistance = 0;\r\n        var x1 = flatCoordinates[first];\r\n        var y1 = flatCoordinates[first + 1];\r\n        var x2 = flatCoordinates[last];\r\n        var y2 = flatCoordinates[last + 1];\r\n        for (var i = first + stride; i < last; i += stride) {\r\n            var x = flatCoordinates[i];\r\n            var y = flatCoordinates[i + 1];\r\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\r\n            if (squaredDistance_1 > maxSquaredDistance) {\r\n                index = i;\r\n                maxSquaredDistance = squaredDistance_1;\r\n            }\r\n        }\r\n        if (maxSquaredDistance > squaredTolerance) {\r\n            markers[(index - offset) / stride] = 1;\r\n            if (first + stride < index) {\r\n                stack.push(first, index);\r\n            }\r\n            if (index + stride < last) {\r\n                stack.push(index, last);\r\n            }\r\n        }\r\n    }\r\n    for (var i = 0; i < n; ++i) {\r\n        if (markers[i]) {\r\n            simplifiedFlatCoordinates[simplifiedOffset++] =\r\n                flatCoordinates[offset + i * stride];\r\n            simplifiedFlatCoordinates[simplifiedOffset++] =\r\n                flatCoordinates[offset + i * stride + 1];\r\n        }\r\n    }\r\n    return simplifiedOffset;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @param {Array<number>} simplifiedEnds Simplified ends.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\r\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n        var end = ends[i];\r\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\r\n        simplifiedEnds.push(simplifiedOffset);\r\n        offset = end;\r\n    }\r\n    return simplifiedOffset;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\r\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n        var ends = endss[i];\r\n        var simplifiedEnds = [];\r\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\r\n        simplifiedEndss.push(simplifiedEnds);\r\n        offset = ends[ends.length - 1];\r\n    }\r\n    return simplifiedOffset;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\r\n    if (end <= offset + stride) {\r\n        // zero or one point, no simplification possible, so copy and return\r\n        for (; offset < end; offset += stride) {\r\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\r\n            simplifiedFlatCoordinates[simplifiedOffset++] =\r\n                flatCoordinates[offset + 1];\r\n        }\r\n        return simplifiedOffset;\r\n    }\r\n    var x1 = flatCoordinates[offset];\r\n    var y1 = flatCoordinates[offset + 1];\r\n    // copy first point\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\r\n    var x2 = x1;\r\n    var y2 = y1;\r\n    for (offset += stride; offset < end; offset += stride) {\r\n        x2 = flatCoordinates[offset];\r\n        y2 = flatCoordinates[offset + 1];\r\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\r\n            // copy point at offset\r\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n            x1 = x2;\r\n            y1 = y2;\r\n        }\r\n    }\r\n    if (x2 != x1 || y2 != y1) {\r\n        // copy last point\r\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n    }\r\n    return simplifiedOffset;\r\n}\r\n/**\r\n * @param {number} value Value.\r\n * @param {number} tolerance Tolerance.\r\n * @return {number} Rounded value.\r\n */\r\nexport function snap(value, tolerance) {\r\n    return tolerance * Math.round(value / tolerance);\r\n}\r\n/**\r\n * Simplifies a line string using an algorithm designed by Tim Schaub.\r\n * Coordinates are snapped to the nearest value in a virtual grid and\r\n * consecutive duplicate coordinates are discarded.  This effectively preserves\r\n * topology as the simplification of any subsection of a line string is\r\n * independent of the rest of the line string.  This means that, for examples,\r\n * the common edge between two polygons will be simplified to the same line\r\n * string independently in both polygons.  This implementation uses a single\r\n * pass over the coordinates and eliminates intermediate collinear points.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} tolerance Tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\r\n    // do nothing if the line is empty\r\n    if (offset == end) {\r\n        return simplifiedOffset;\r\n    }\r\n    // snap the first coordinate (P1)\r\n    var x1 = snap(flatCoordinates[offset], tolerance);\r\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\r\n    offset += stride;\r\n    // add the first coordinate to the output\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\r\n    // find the next coordinate that does not snap to the same value as the first\r\n    // coordinate (P2)\r\n    var x2, y2;\r\n    do {\r\n        x2 = snap(flatCoordinates[offset], tolerance);\r\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\r\n        offset += stride;\r\n        if (offset == end) {\r\n            // all coordinates snap to the same value, the line collapses to a point\r\n            // push the last snapped value anyway to ensure that the output contains\r\n            // at least two points\r\n            // FIXME should we really return at least two points anyway?\r\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n            return simplifiedOffset;\r\n        }\r\n    } while (x2 == x1 && y2 == y1);\r\n    while (offset < end) {\r\n        // snap the next coordinate (P3)\r\n        var x3 = snap(flatCoordinates[offset], tolerance);\r\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\r\n        offset += stride;\r\n        // skip P3 if it is equal to P2\r\n        if (x3 == x2 && y3 == y2) {\r\n            continue;\r\n        }\r\n        // calculate the delta between P1 and P2\r\n        var dx1 = x2 - x1;\r\n        var dy1 = y2 - y1;\r\n        // calculate the delta between P3 and P1\r\n        var dx2 = x3 - x1;\r\n        var dy2 = y3 - y1;\r\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\r\n        // P1 in the same direction then P2 is on the straight line between P1 and\r\n        // P3\r\n        if ((dx1 * dy2 == dy1 * dx2) &&\r\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\r\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\r\n            // discard P2 and set P2 = P3\r\n            x2 = x3;\r\n            y2 = y3;\r\n            continue;\r\n        }\r\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\r\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\r\n        // and continue with P1 = P2 and P2 = P3\r\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n        x1 = x2;\r\n        y1 = y2;\r\n        x2 = x3;\r\n        y2 = y3;\r\n    }\r\n    // add the last point (P2)\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n    return simplifiedOffset;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} tolerance Tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @param {Array<number>} simplifiedEnds Simplified ends.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\r\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n        var end = ends[i];\r\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\r\n        simplifiedEnds.push(simplifiedOffset);\r\n        offset = end;\r\n    }\r\n    return simplifiedOffset;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} tolerance Tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\r\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n        var ends = endss[i];\r\n        var simplifiedEnds = [];\r\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\r\n        simplifiedEndss.push(simplifiedEnds);\r\n        offset = ends[ends.length - 1];\r\n    }\r\n    return simplifiedOffset;\r\n}\r\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/geom/LinearRing\r\n */\r\nimport { closestSquaredDistanceXY } from '../extent.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport { linearRing as linearRingArea } from './flat/area.js';\r\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\r\nimport { deflateCoordinates } from './flat/deflate.js';\r\nimport { inflateCoordinates } from './flat/inflate.js';\r\nimport { douglasPeucker } from './flat/simplify.js';\r\n/**\r\n * @classdesc\r\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\r\n * on its own.\r\n *\r\n * @api\r\n */\r\nvar LinearRing = /** @class */ (function (_super) {\r\n    __extends(LinearRing, _super);\r\n    /**\r\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\r\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\r\n     * @param {GeometryLayout=} opt_layout Layout.\r\n     */\r\n    function LinearRing(coordinates, opt_layout) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.maxDelta_ = -1;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.maxDeltaRevision_ = -1;\r\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\r\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n        }\r\n        else {\r\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Make a complete copy of the geometry.\r\n     * @return {!LinearRing} Clone.\r\n     * @override\r\n     * @api\r\n     */\r\n    LinearRing.prototype.clone = function () {\r\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\r\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n            return minSquaredDistance;\r\n        }\r\n        if (this.maxDeltaRevision_ != this.getRevision()) {\r\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\r\n            this.maxDeltaRevision_ = this.getRevision();\r\n        }\r\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\r\n    };\r\n    /**\r\n     * Return the area of the linear ring on projected plane.\r\n     * @return {number} Area (on projected plane).\r\n     * @api\r\n     */\r\n    LinearRing.prototype.getArea = function () {\r\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n    };\r\n    /**\r\n     * Return the coordinates of the linear ring.\r\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\r\n     * @override\r\n     * @api\r\n     */\r\n    LinearRing.prototype.getCoordinates = function () {\r\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\r\n        var simplifiedFlatCoordinates = [];\r\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\r\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    LinearRing.prototype.getType = function () {\r\n        return GeometryType.LINEAR_RING;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LinearRing.prototype.intersectsExtent = function (extent) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Set the coordinates of the linear ring.\r\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\r\n     * @param {GeometryLayout=} opt_layout Layout.\r\n     * @override\r\n     * @api\r\n     */\r\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\r\n        this.setLayout(opt_layout, coordinates, 1);\r\n        if (!this.flatCoordinates) {\r\n            this.flatCoordinates = [];\r\n        }\r\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\r\n        this.changed();\r\n    };\r\n    return LinearRing;\r\n}(SimpleGeometry));\r\nexport default LinearRing;\r\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/geom/Point\r\n */\r\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport { deflateCoordinate } from './flat/deflate.js';\r\nimport { squaredDistance as squaredDx } from '../math.js';\r\n/**\r\n * @classdesc\r\n * Point geometry.\r\n *\r\n * @api\r\n */\r\nvar Point = /** @class */ (function (_super) {\r\n    __extends(Point, _super);\r\n    /**\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\r\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\r\n     */\r\n    function Point(coordinates, opt_layout) {\r\n        var _this = _super.call(this) || this;\r\n        _this.setCoordinates(coordinates, opt_layout);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Make a complete copy of the geometry.\r\n     * @return {!Point} Clone.\r\n     * @override\r\n     * @api\r\n     */\r\n    Point.prototype.clone = function () {\r\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\r\n        return point;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\r\n        var flatCoordinates = this.flatCoordinates;\r\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\r\n        if (squaredDistance < minSquaredDistance) {\r\n            var stride = this.stride;\r\n            for (var i = 0; i < stride; ++i) {\r\n                closestPoint[i] = flatCoordinates[i];\r\n            }\r\n            closestPoint.length = stride;\r\n            return squaredDistance;\r\n        }\r\n        else {\r\n            return minSquaredDistance;\r\n        }\r\n    };\r\n    /**\r\n     * Return the coordinate of the point.\r\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\r\n     * @override\r\n     * @api\r\n     */\r\n    Point.prototype.getCoordinates = function () {\r\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Point.prototype.computeExtent = function (extent) {\r\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    Point.prototype.getType = function () {\r\n        return GeometryType.POINT;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    Point.prototype.intersectsExtent = function (extent) {\r\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\r\n        this.setLayout(opt_layout, coordinates, 0);\r\n        if (!this.flatCoordinates) {\r\n            this.flatCoordinates = [];\r\n        }\r\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\r\n        this.changed();\r\n    };\r\n    return Point;\r\n}(SimpleGeometry));\r\nexport default Point;\r\n//# sourceMappingURL=Point.js.map","/**\r\n * @module ol/geom/flat/contains\r\n */\r\nimport { forEachCorner } from '../../extent.js';\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} Contains extent.\r\n */\r\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\r\n    var outside = forEachCorner(extent, \r\n    /**\r\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @return {boolean} Contains (x, y).\r\n     */\r\n    function (coordinate) {\r\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\r\n    });\r\n    return !outside;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {boolean} Contains (x, y).\r\n */\r\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\r\n    // http://geomalgorithms.com/a03-_inclusion.html\r\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\r\n    // This code may be freely used and modified for any purpose\r\n    // providing that this copyright notice is included with it.\r\n    // SoftSurfer makes no warranty for this code, and cannot be held\r\n    // liable for any real or imagined damage resulting from its use.\r\n    // Users of this code must verify correctness for their application.\r\n    var wn = 0;\r\n    var x1 = flatCoordinates[end - stride];\r\n    var y1 = flatCoordinates[end - stride + 1];\r\n    for (; offset < end; offset += stride) {\r\n        var x2 = flatCoordinates[offset];\r\n        var y2 = flatCoordinates[offset + 1];\r\n        if (y1 <= y) {\r\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\r\n                wn++;\r\n            }\r\n        }\r\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\r\n            wn--;\r\n        }\r\n        x1 = x2;\r\n        y1 = y2;\r\n    }\r\n    return wn !== 0;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {boolean} Contains (x, y).\r\n */\r\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\r\n    if (ends.length === 0) {\r\n        return false;\r\n    }\r\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\r\n        return false;\r\n    }\r\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\r\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {boolean} Contains (x, y).\r\n */\r\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\r\n    if (endss.length === 0) {\r\n        return false;\r\n    }\r\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n        var ends = endss[i];\r\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\r\n            return true;\r\n        }\r\n        offset = ends[ends.length - 1];\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=contains.js.map","/**\r\n * @module ol/geom/flat/interiorpoint\r\n */\r\nimport { numberSafeCompareFunction } from '../../array.js';\r\nimport { linearRingsContainsXY } from './contains.js';\r\n/**\r\n * Calculates a point that is likely to lie in the interior of the linear rings.\r\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {Array<number>} flatCenters Flat centers.\r\n * @param {number} flatCentersOffset Flat center offset.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\r\n * length of the horizontal intersection that the point belongs to.\r\n */\r\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\r\n    var i, ii, x, x1, x2, y1, y2;\r\n    var y = flatCenters[flatCentersOffset + 1];\r\n    /** @type {Array<number>} */\r\n    var intersections = [];\r\n    // Calculate intersections with the horizontal line\r\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\r\n        var end = ends[r];\r\n        x1 = flatCoordinates[end - stride];\r\n        y1 = flatCoordinates[end - stride + 1];\r\n        for (i = offset; i < end; i += stride) {\r\n            x2 = flatCoordinates[i];\r\n            y2 = flatCoordinates[i + 1];\r\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\r\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\r\n                intersections.push(x);\r\n            }\r\n            x1 = x2;\r\n            y1 = y2;\r\n        }\r\n    }\r\n    // Find the longest segment of the horizontal line that has its center point\r\n    // inside the linear ring.\r\n    var pointX = NaN;\r\n    var maxSegmentLength = -Infinity;\r\n    intersections.sort(numberSafeCompareFunction);\r\n    x1 = intersections[0];\r\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\r\n        x2 = intersections[i];\r\n        var segmentLength = Math.abs(x2 - x1);\r\n        if (segmentLength > maxSegmentLength) {\r\n            x = (x1 + x2) / 2;\r\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\r\n                pointX = x;\r\n                maxSegmentLength = segmentLength;\r\n            }\r\n        }\r\n        x1 = x2;\r\n    }\r\n    if (isNaN(pointX)) {\r\n        // There is no horizontal line that has its center point inside the linear\r\n        // ring.  Use the center of the the linear ring's extent.\r\n        pointX = flatCenters[flatCentersOffset];\r\n    }\r\n    if (opt_dest) {\r\n        opt_dest.push(pointX, y, maxSegmentLength);\r\n        return opt_dest;\r\n    }\r\n    else {\r\n        return [pointX, y, maxSegmentLength];\r\n    }\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {Array<number>} flatCenters Flat centers.\r\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\r\n * length of the horizontal intersection that the point belongs to.\r\n */\r\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\r\n    var interiorPoints = [];\r\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n        var ends = endss[i];\r\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\r\n        offset = ends[ends.length - 1];\r\n    }\r\n    return interiorPoints;\r\n}\r\n//# sourceMappingURL=interiorpoint.js.map","/**\r\n * @module ol/geom/flat/segments\r\n */\r\n/**\r\n * This function calls `callback` for each segment of the flat coordinates\r\n * array. If the callback returns a truthy value the function returns that\r\n * value immediately. Otherwise the function returns `false`.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\r\n *     called for each segment.\r\n * @param {S=} opt_this The object to be used as the value of 'this'\r\n *     within callback.\r\n * @return {T|boolean} Value.\r\n * @template T,S\r\n */\r\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\r\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\r\n    var point2 = [];\r\n    var ret;\r\n    for (; (offset + stride) < end; offset += stride) {\r\n        point2[0] = flatCoordinates[offset + stride];\r\n        point2[1] = flatCoordinates[offset + stride + 1];\r\n        ret = callback.call(opt_this, point1, point2);\r\n        if (ret) {\r\n            return ret;\r\n        }\r\n        point1[0] = point2[0];\r\n        point1[1] = point2[1];\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=segments.js.map","/**\r\n * @module ol/geom/flat/intersectsextent\r\n */\r\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\r\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\r\nimport { forEach as forEachSegment } from './segments.js';\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\r\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\r\n    if (!intersects(extent, coordinatesExtent)) {\r\n        return false;\r\n    }\r\n    if (containsExtent(extent, coordinatesExtent)) {\r\n        return true;\r\n    }\r\n    if (coordinatesExtent[0] >= extent[0] &&\r\n        coordinatesExtent[2] <= extent[2]) {\r\n        return true;\r\n    }\r\n    if (coordinatesExtent[1] >= extent[1] &&\r\n        coordinatesExtent[3] <= extent[3]) {\r\n        return true;\r\n    }\r\n    return forEachSegment(flatCoordinates, offset, end, stride, \r\n    /**\r\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\r\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\r\n     * @return {boolean} `true` if the segment and the extent intersect,\r\n     *     `false` otherwise.\r\n     */\r\n    function (point1, point2) {\r\n        return intersectsSegment(extent, point1, point2);\r\n    });\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\r\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\r\n            return true;\r\n        }\r\n        offset = ends[i];\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\r\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\r\n        return true;\r\n    }\r\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\r\n        return true;\r\n    }\r\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\r\n        return true;\r\n    }\r\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\r\n        return true;\r\n    }\r\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\r\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\r\n        return false;\r\n    }\r\n    if (ends.length === 1) {\r\n        return true;\r\n    }\r\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\r\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\r\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\r\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n        var ends = endss[i];\r\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\r\n            return true;\r\n        }\r\n        offset = ends[ends.length - 1];\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=intersectsextent.js.map","/**\r\n * @module ol/geom/flat/reverse\r\n */\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n */\r\nexport function coordinates(flatCoordinates, offset, end, stride) {\r\n    while (offset < end - stride) {\r\n        for (var i = 0; i < stride; ++i) {\r\n            var tmp = flatCoordinates[offset + i];\r\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\r\n            flatCoordinates[end - stride + i] = tmp;\r\n        }\r\n        offset += stride;\r\n        end -= stride;\r\n    }\r\n}\r\n//# sourceMappingURL=reverse.js.map","/**\r\n * @module ol/geom/flat/orient\r\n */\r\nimport { coordinates as reverseCoordinates } from './reverse.js';\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {boolean} Is clockwise.\r\n */\r\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\r\n    // http://tinyurl.com/clockwise-method\r\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\r\n    var edge = 0;\r\n    var x1 = flatCoordinates[end - stride];\r\n    var y1 = flatCoordinates[end - stride + 1];\r\n    for (; offset < end; offset += stride) {\r\n        var x2 = flatCoordinates[offset];\r\n        var y2 = flatCoordinates[offset + 1];\r\n        edge += (x2 - x1) * (y2 + y1);\r\n        x1 = x2;\r\n        y1 = y2;\r\n    }\r\n    return edge > 0;\r\n}\r\n/**\r\n * Determines if linear rings are oriented.  By default, left-hand orientation\r\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\r\n * To test for right-hand orientation, use the `opt_right` argument.\r\n *\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Array of end indexes.\r\n * @param {number} stride Stride.\r\n * @param {boolean=} opt_right Test for right-hand orientation\r\n *     (counter-clockwise exterior ring and clockwise interior rings).\r\n * @return {boolean} Rings are correctly oriented.\r\n */\r\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\r\n    var right = opt_right !== undefined ? opt_right : false;\r\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n        var end = ends[i];\r\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\r\n        if (i === 0) {\r\n            if ((right && isClockwise) || (!right && !isClockwise)) {\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            if ((right && !isClockwise) || (!right && isClockwise)) {\r\n                return false;\r\n            }\r\n        }\r\n        offset = end;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Determines if linear rings are oriented.  By default, left-hand orientation\r\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\r\n * To test for right-hand orientation, use the `opt_right` argument.\r\n *\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Array of array of end indexes.\r\n * @param {number} stride Stride.\r\n * @param {boolean=} opt_right Test for right-hand orientation\r\n *     (counter-clockwise exterior ring and clockwise interior rings).\r\n * @return {boolean} Rings are correctly oriented.\r\n */\r\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\r\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n        if (!linearRingIsOriented(flatCoordinates, offset, endss[i], stride, opt_right)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Orient coordinates in a flat array of linear rings.  By default, rings\r\n * are oriented following the left-hand rule (clockwise for exterior and\r\n * counter-clockwise for interior rings).  To orient according to the\r\n * right-hand rule, use the `opt_right` argument.\r\n *\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\r\n * @return {number} End.\r\n */\r\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\r\n    var right = opt_right !== undefined ? opt_right : false;\r\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n        var end = ends[i];\r\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\r\n        var reverse = i === 0 ?\r\n            (right && isClockwise) || (!right && !isClockwise) :\r\n            (right && !isClockwise) || (!right && isClockwise);\r\n        if (reverse) {\r\n            reverseCoordinates(flatCoordinates, offset, end, stride);\r\n        }\r\n        offset = end;\r\n    }\r\n    return offset;\r\n}\r\n/**\r\n * Orient coordinates in a flat array of linear rings.  By default, rings\r\n * are oriented following the left-hand rule (clockwise for exterior and\r\n * counter-clockwise for interior rings).  To orient according to the\r\n * right-hand rule, use the `opt_right` argument.\r\n *\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Array of array of end indexes.\r\n * @param {number} stride Stride.\r\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\r\n * @return {number} End.\r\n */\r\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\r\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\r\n    }\r\n    return offset;\r\n}\r\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/geom/Polygon\r\n */\r\nimport { extend } from '../array.js';\r\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport LinearRing from './LinearRing.js';\r\nimport Point from './Point.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport { offset as sphereOffset } from '../sphere.js';\r\nimport { linearRings as linearRingsArea } from './flat/area.js';\r\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\r\nimport { linearRingsContainsXY } from './flat/contains.js';\r\nimport { deflateCoordinatesArray } from './flat/deflate.js';\r\nimport { inflateCoordinatesArray } from './flat/inflate.js';\r\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\r\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\r\nimport { linearRingIsOriented, orientLinearRings } from './flat/orient.js';\r\nimport { quantizeArray } from './flat/simplify.js';\r\nimport { modulo } from '../math.js';\r\n/**\r\n * @classdesc\r\n * Polygon geometry.\r\n *\r\n * @api\r\n */\r\nvar Polygon = /** @class */ (function (_super) {\r\n    __extends(Polygon, _super);\r\n    /**\r\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\r\n     *     Array of linear rings that define the polygon. The first linear ring of the\r\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\r\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\r\n     *     an array of vertices' coordinates where the first coordinate and the last are\r\n     *     equivalent. (For internal use, flat coordinates in combination with\r\n     *     `opt_layout` and `opt_ends` are also accepted.)\r\n     * @param {GeometryLayout=} opt_layout Layout.\r\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\r\n     */\r\n    function Polygon(coordinates, opt_layout, opt_ends) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @type {Array<number>}\r\n         * @private\r\n         */\r\n        _this.ends_ = [];\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.flatInteriorPointRevision_ = -1;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../coordinate.js\").Coordinate}\r\n         */\r\n        _this.flatInteriorPoint_ = null;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.maxDelta_ = -1;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.maxDeltaRevision_ = -1;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.orientedRevision_ = -1;\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        _this.orientedFlatCoordinates_ = null;\r\n        if (opt_layout !== undefined && opt_ends) {\r\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n            _this.ends_ = opt_ends;\r\n        }\r\n        else {\r\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Append the passed linear ring to this polygon.\r\n     * @param {LinearRing} linearRing Linear ring.\r\n     * @api\r\n     */\r\n    Polygon.prototype.appendLinearRing = function (linearRing) {\r\n        if (!this.flatCoordinates) {\r\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\r\n        }\r\n        else {\r\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\r\n        }\r\n        this.ends_.push(this.flatCoordinates.length);\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Make a complete copy of the geometry.\r\n     * @return {!Polygon} Clone.\r\n     * @override\r\n     * @api\r\n     */\r\n    Polygon.prototype.clone = function () {\r\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\r\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n            return minSquaredDistance;\r\n        }\r\n        if (this.maxDeltaRevision_ != this.getRevision()) {\r\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\r\n            this.maxDeltaRevision_ = this.getRevision();\r\n        }\r\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Polygon.prototype.containsXY = function (x, y) {\r\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\r\n    };\r\n    /**\r\n     * Return the area of the polygon on projected plane.\r\n     * @return {number} Area (on projected plane).\r\n     * @api\r\n     */\r\n    Polygon.prototype.getArea = function () {\r\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\r\n    };\r\n    /**\r\n     * Get the coordinate array for this geometry.  This array has the structure\r\n     * of a GeoJSON coordinate array for polygons.\r\n     *\r\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\r\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\r\n     *     If `false`, coordinates will be oriented according to the left-hand rule\r\n     *     (clockwise for exterior and counter-clockwise for interior rings).\r\n     *     By default, coordinate orientation will depend on how the geometry was\r\n     *     constructed.\r\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\r\n     * @override\r\n     * @api\r\n     */\r\n    Polygon.prototype.getCoordinates = function (opt_right) {\r\n        var flatCoordinates;\r\n        if (opt_right !== undefined) {\r\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\r\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\r\n        }\r\n        else {\r\n            flatCoordinates = this.flatCoordinates;\r\n        }\r\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\r\n    };\r\n    /**\r\n     * @return {Array<number>} Ends.\r\n     */\r\n    Polygon.prototype.getEnds = function () {\r\n        return this.ends_;\r\n    };\r\n    /**\r\n     * @return {Array<number>} Interior point.\r\n     */\r\n    Polygon.prototype.getFlatInteriorPoint = function () {\r\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\r\n            var flatCenter = getCenter(this.getExtent());\r\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\r\n            this.flatInteriorPointRevision_ = this.getRevision();\r\n        }\r\n        return this.flatInteriorPoint_;\r\n    };\r\n    /**\r\n     * Return an interior point of the polygon.\r\n     * @return {Point} Interior point as XYM coordinate, where M is the\r\n     * length of the horizontal intersection that the point belongs to.\r\n     * @api\r\n     */\r\n    Polygon.prototype.getInteriorPoint = function () {\r\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\r\n    };\r\n    /**\r\n     * Return the number of rings of the polygon,  this includes the exterior\r\n     * ring and any interior rings.\r\n     *\r\n     * @return {number} Number of rings.\r\n     * @api\r\n     */\r\n    Polygon.prototype.getLinearRingCount = function () {\r\n        return this.ends_.length;\r\n    };\r\n    /**\r\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\r\n     * given index is out of range.\r\n     * The exterior linear ring is available at index `0` and the interior rings\r\n     * at index `1` and beyond.\r\n     *\r\n     * @param {number} index Index.\r\n     * @return {LinearRing} Linear ring.\r\n     * @api\r\n     */\r\n    Polygon.prototype.getLinearRing = function (index) {\r\n        if (index < 0 || this.ends_.length <= index) {\r\n            return null;\r\n        }\r\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\r\n    };\r\n    /**\r\n     * Return the linear rings of the polygon.\r\n     * @return {Array<LinearRing>} Linear rings.\r\n     * @api\r\n     */\r\n    Polygon.prototype.getLinearRings = function () {\r\n        var layout = this.layout;\r\n        var flatCoordinates = this.flatCoordinates;\r\n        var ends = this.ends_;\r\n        var linearRings = [];\r\n        var offset = 0;\r\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n            var end = ends[i];\r\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\r\n            linearRings.push(linearRing);\r\n            offset = end;\r\n        }\r\n        return linearRings;\r\n    };\r\n    /**\r\n     * @return {Array<number>} Oriented flat coordinates.\r\n     */\r\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\r\n        if (this.orientedRevision_ != this.getRevision()) {\r\n            var flatCoordinates = this.flatCoordinates;\r\n            if (linearRingIsOriented(flatCoordinates, 0, this.ends_, this.stride)) {\r\n                this.orientedFlatCoordinates_ = flatCoordinates;\r\n            }\r\n            else {\r\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\r\n                this.orientedFlatCoordinates_.length =\r\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\r\n            }\r\n            this.orientedRevision_ = this.getRevision();\r\n        }\r\n        return this.orientedFlatCoordinates_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\r\n        var simplifiedFlatCoordinates = [];\r\n        var simplifiedEnds = [];\r\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\r\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    Polygon.prototype.getType = function () {\r\n        return GeometryType.POLYGON;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    Polygon.prototype.intersectsExtent = function (extent) {\r\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\r\n    };\r\n    /**\r\n     * Set the coordinates of the polygon.\r\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\r\n     * @param {GeometryLayout=} opt_layout Layout.\r\n     * @override\r\n     * @api\r\n     */\r\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\r\n        this.setLayout(opt_layout, coordinates, 2);\r\n        if (!this.flatCoordinates) {\r\n            this.flatCoordinates = [];\r\n        }\r\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\r\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\r\n        this.changed();\r\n    };\r\n    return Polygon;\r\n}(SimpleGeometry));\r\nexport default Polygon;\r\n/**\r\n * Create an approximation of a circle on the surface of a sphere.\r\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\r\n * @param {number} radius The great-circle distance from the center to\r\n *     the polygon vertices.\r\n * @param {number=} opt_n Optional number of vertices for the resulting\r\n *     polygon. Default is `32`.\r\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\r\n *     the Earth's mean radius using the WGS84 ellipsoid).\r\n * @return {Polygon} The \"circular\" polygon.\r\n * @api\r\n */\r\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\r\n    var n = opt_n ? opt_n : 32;\r\n    /** @type {Array<number>} */\r\n    var flatCoordinates = [];\r\n    for (var i = 0; i < n; ++i) {\r\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\r\n    }\r\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\r\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\r\n}\r\n/**\r\n * Create a polygon from an extent. The layout used is `XY`.\r\n * @param {import(\"../extent.js\").Extent} extent The extent.\r\n * @return {Polygon} The polygon.\r\n * @api\r\n */\r\nexport function fromExtent(extent) {\r\n    var minX = extent[0];\r\n    var minY = extent[1];\r\n    var maxX = extent[2];\r\n    var maxY = extent[3];\r\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\r\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\r\n}\r\n/**\r\n * Create a regular polygon from a circle.\r\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\r\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\r\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\r\n *     radians. Default is 0.\r\n * @return {Polygon} Polygon geometry.\r\n * @api\r\n */\r\nexport function fromCircle(circle, opt_sides, opt_angle) {\r\n    var sides = opt_sides ? opt_sides : 32;\r\n    var stride = circle.getStride();\r\n    var layout = circle.getLayout();\r\n    var center = circle.getCenter();\r\n    var arrayLength = stride * (sides + 1);\r\n    var flatCoordinates = new Array(arrayLength);\r\n    for (var i = 0; i < arrayLength; i += stride) {\r\n        flatCoordinates[i] = 0;\r\n        flatCoordinates[i + 1] = 0;\r\n        for (var j = 2; j < stride; j++) {\r\n            flatCoordinates[i + j] = center[j];\r\n        }\r\n    }\r\n    var ends = [flatCoordinates.length];\r\n    var polygon = new Polygon(flatCoordinates, layout, ends);\r\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\r\n    return polygon;\r\n}\r\n/**\r\n * Modify the coordinates of a polygon to make it a regular polygon.\r\n * @param {Polygon} polygon Polygon geometry.\r\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\r\n * @param {number} radius Radius of the regular polygon.\r\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\r\n *     radians. Default is 0.\r\n */\r\nexport function makeRegular(polygon, center, radius, opt_angle) {\r\n    var flatCoordinates = polygon.getFlatCoordinates();\r\n    var stride = polygon.getStride();\r\n    var sides = flatCoordinates.length / stride - 1;\r\n    var startAngle = opt_angle ? opt_angle : 0;\r\n    for (var i = 0; i <= sides; ++i) {\r\n        var offset = i * stride;\r\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\r\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\r\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\r\n    }\r\n    polygon.changed();\r\n}\r\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/View\r\n */\r\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\r\nimport { getUid } from './util.js';\r\nimport { VOID } from './functions.js';\r\nimport { createExtent, none as centerNone } from './centerconstraint.js';\r\nimport BaseObject from './Object.js';\r\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\r\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\r\nimport ViewHint from './ViewHint.js';\r\nimport ViewProperty from './ViewProperty.js';\r\nimport { linearFindNearest } from './array.js';\r\nimport { assert } from './asserts.js';\r\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\r\nimport { inAndOut } from './easing.js';\r\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\r\nimport GeometryType from './geom/GeometryType.js';\r\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\r\nimport { clamp, modulo } from './math.js';\r\nimport { assign } from './obj.js';\r\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\r\nimport Units from './proj/Units.js';\r\n/**\r\n * An animation configuration\r\n *\r\n * @typedef {Object} Animation\r\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\r\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\r\n * @property {number} [sourceResolution]\r\n * @property {number} [targetResolution]\r\n * @property {number} [sourceRotation]\r\n * @property {number} [targetRotation]\r\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\r\n * @property {number} start\r\n * @property {number} duration\r\n * @property {boolean} complete\r\n * @property {function(number):number} easing\r\n * @property {function(boolean)} callback\r\n */\r\n/**\r\n * @typedef {Object} Constraints\r\n * @property {import(\"./centerconstraint.js\").Type} center\r\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\r\n * @property {import(\"./rotationconstraint.js\").Type} rotation\r\n */\r\n/**\r\n * @typedef {Object} FitOptions\r\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\r\n * the extent into. Default is the current size of the first map in the DOM that\r\n * uses this view, or `[100, 100]` if no such map is found.\r\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\r\n * cleared inside the view. Values in the array are top, right, bottom and left\r\n * padding.\r\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\r\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\r\n * the nearest extent instead of the closest that actually fits the view.\r\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\r\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\r\n * `minResolution` is given, this property is ignored.\r\n * @property {number} [duration] The duration of the animation in milliseconds.\r\n * By default, there is no animation to the target extent.\r\n * @property {function(number):number} [easing] The easing function used during\r\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\r\n * The function will be called for each frame with a number representing a\r\n * fraction of the animation's duration.  The function should return a number\r\n * between 0 and 1 representing the progress toward the destination state.\r\n * @property {function(boolean)} [callback] Function called when the view is in\r\n * its final position. The callback will be called with `true` if the animation\r\n * series completed on its own or `false` if it was cancelled.\r\n */\r\n/**\r\n * @typedef {Object} ViewOptions\r\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\r\n * the view. The coordinate system for the center is specified with the\r\n * `projection` option. Layer sources will not be fetched if this is not set,\r\n * but the center can be set later with {@link #setCenter}.\r\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\r\n * `false` means no constraint. `true` means no constraint, but snap to zero\r\n * near zero. A number constrains the rotation to that number of values. For\r\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\r\n * @property {boolean} [enableRotation=true] Enable rotation.\r\n * If `false`, a rotation constraint that always sets the rotation to zero is\r\n * used. The `constrainRotation` option has no effect if `enableRotation` is\r\n * `false`.\r\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\r\n * center, in other words, center cannot be set outside this extent.\r\n * @property {number} [maxResolution] The maximum resolution used to determine\r\n * the resolution constraint. It is used together with `minResolution` (or\r\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\r\n * that the projection's validity extent fits in a 256x256 px tile. If the\r\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\r\n * to `40075016.68557849 / 256 = 156543.03392804097`.\r\n * @property {number} [minResolution] The minimum resolution used to determine\r\n * the resolution constraint.  It is used together with `maxResolution` (or\r\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\r\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\r\n * (the default) then `minResolution` defaults to\r\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\r\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\r\n * resolution constraint. It is used together with `minZoom` (or\r\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\r\n * provided, it is given precedence over `maxZoom`.\r\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\r\n * resolution constraint. It is used together with `maxZoom` (or\r\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\r\n * provided, it is given precedence over `minZoom`.\r\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\r\n * projection. The default is Spherical Mercator.\r\n * @property {number} [resolution] The initial resolution for the view. The\r\n * units are `projection` units per pixel (e.g. meters per pixel). An\r\n * alternative to setting this is to set `zoom`. Layer sources will not be\r\n * fetched if neither this nor `zoom` are defined, but they can be set later\r\n * with {@link #setZoom} or {@link #setResolution}.\r\n * @property {Array<number>} [resolutions] Resolutions to determine the\r\n * resolution constraint. If set the `maxResolution`, `minResolution`,\r\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\r\n * @property {number} [rotation=0] The initial rotation for the view in radians\r\n * (positive rotation clockwise, 0 means North).\r\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\r\n * level used to calculate the initial resolution for the view. The initial\r\n * resolution is determined using the {@link #constrainResolution} method.\r\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\r\n * resolution constraint.\r\n */\r\n/**\r\n * @typedef {Object} AnimationOptions\r\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\r\n * the animation.\r\n * @property {number} [zoom] The zoom level of the view at the end of the\r\n * animation. This takes precedence over `resolution`.\r\n * @property {number} [resolution] The resolution of the view at the end\r\n * of the animation.  If `zoom` is also provided, this option will be ignored.\r\n * @property {number} [rotation] The rotation of the view at the end of\r\n * the animation.\r\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\r\n * during a rotation or resolution animation.\r\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\r\n * @property {function(number):number} [easing] The easing function used\r\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\r\n * The function will be called for each frame with a number representing a\r\n * fraction of the animation's duration.  The function should return a number\r\n * between 0 and 1 representing the progress toward the destination state.\r\n */\r\n/**\r\n * @typedef {Object} State\r\n * @property {import(\"./coordinate.js\").Coordinate} center\r\n * @property {import(\"./proj/Projection.js\").default} projection\r\n * @property {number} resolution\r\n * @property {number} rotation\r\n * @property {number} zoom\r\n */\r\n/**\r\n * Default min zoom level for the map view.\r\n * @type {number}\r\n */\r\nvar DEFAULT_MIN_ZOOM = 0;\r\n/**\r\n * @classdesc\r\n * A View object represents a simple 2D view of the map.\r\n *\r\n * This is the object to act upon to change the center, resolution,\r\n * and rotation of the map.\r\n *\r\n * ### The view states\r\n *\r\n * An View is determined by three states: `center`, `resolution`,\r\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\r\n * `getCenter` and `setCenter` for the `center` state.\r\n *\r\n * An View has a `projection`. The projection determines the\r\n * coordinate system of the center, and its units determine the units of the\r\n * resolution (projection units per pixel). The default projection is\r\n * Spherical Mercator (EPSG:3857).\r\n *\r\n * ### The constraints\r\n *\r\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\r\n * states of the view. Any value can be passed to the setters. And the value\r\n * that is passed to a setter will effectively be the value set in the view,\r\n * and returned by the corresponding getter.\r\n *\r\n * But a View object also has a *resolution constraint*, a\r\n * *rotation constraint* and a *center constraint*.\r\n *\r\n * As said above, no constraints are applied when the setters are used to set\r\n * new states for the view. Applying constraints is done explicitly through\r\n * the use of the `constrain*` functions (`constrainResolution` and\r\n * `constrainRotation` and `constrainCenter`).\r\n *\r\n * The main users of the constraints are the interactions and the\r\n * controls. For example, double-clicking on the map changes the view to\r\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\r\n * snaps to the closest resolution (with an animation).\r\n *\r\n * The *resolution constraint* snaps to specific resolutions. It is\r\n * determined by the following options: `resolutions`, `maxResolution`,\r\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\r\n * options are ignored. See documentation for each option for more\r\n * information.\r\n *\r\n * The *rotation constraint* snaps to specific angles. It is determined\r\n * by the following options: `enableRotation` and `constrainRotation`.\r\n * By default the rotation value is snapped to zero when approaching the\r\n * horizontal.\r\n *\r\n * The *center constraint* is determined by the `extent` option. By\r\n * default the center is not constrained at all.\r\n *\r\n  * @api\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    __extends(View, _super);\r\n    /**\r\n     * @param {ViewOptions=} opt_options View options.\r\n     */\r\n    function View(opt_options) {\r\n        var _this = _super.call(this) || this;\r\n        var options = assign({}, opt_options);\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        _this.hints_ = [0, 0];\r\n        /**\r\n         * @private\r\n         * @type {Array<Array<Animation>>}\r\n         */\r\n        _this.animations_ = [];\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.updateAnimationKey_;\r\n        _this.updateAnimations_ = _this.updateAnimations_.bind(_this);\r\n        /**\r\n         * @private\r\n         * @const\r\n         * @type {import(\"./proj/Projection.js\").default}\r\n         */\r\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\r\n        _this.applyOptions_(options);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Set up the view with the given options.\r\n     * @param {ViewOptions} options View options.\r\n     */\r\n    View.prototype.applyOptions_ = function (options) {\r\n        /**\r\n         * @type {Object<string, *>}\r\n         */\r\n        var properties = {};\r\n        properties[ViewProperty.CENTER] = options.center !== undefined ?\r\n            options.center : null;\r\n        var resolutionConstraintInfo = createResolutionConstraint(options);\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\r\n        /**\r\n         * @private\r\n         * @type {Array<number>|undefined}\r\n         */\r\n        this.resolutions_ = options.resolutions;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\r\n        var centerConstraint = createCenterConstraint(options);\r\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\r\n        var rotationConstraint = createRotationConstraint(options);\r\n        /**\r\n         * @private\r\n         * @type {Constraints}\r\n         */\r\n        this.constraints_ = {\r\n            center: centerConstraint,\r\n            resolution: resolutionConstraint,\r\n            rotation: rotationConstraint\r\n        };\r\n        if (options.resolution !== undefined) {\r\n            properties[ViewProperty.RESOLUTION] = options.resolution;\r\n        }\r\n        else if (options.zoom !== undefined) {\r\n            properties[ViewProperty.RESOLUTION] = this.constrainResolution(this.maxResolution_, options.zoom - this.minZoom_);\r\n            if (this.resolutions_) { // in case map zoom is out of min/max zoom range\r\n                properties[ViewProperty.RESOLUTION] = clamp(Number(this.getResolution() || properties[ViewProperty.RESOLUTION]), this.minResolution_, this.maxResolution_);\r\n            }\r\n        }\r\n        properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\r\n        this.setProperties(properties);\r\n        /**\r\n         * @private\r\n         * @type {ViewOptions}\r\n         */\r\n        this.options_ = options;\r\n    };\r\n    /**\r\n     * Get an updated version of the view options used to construct the view.  The\r\n     * current resolution (or zoom), center, and rotation are applied to any stored\r\n     * options.  The provided options can be used to apply new min/max zoom or\r\n     * resolution limits.\r\n     * @param {ViewOptions} newOptions New options to be applied.\r\n     * @return {ViewOptions} New options updated with the current view state.\r\n     */\r\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\r\n        var options = assign({}, this.options_);\r\n        // preserve resolution (or zoom)\r\n        if (options.resolution !== undefined) {\r\n            options.resolution = this.getResolution();\r\n        }\r\n        else {\r\n            options.zoom = this.getZoom();\r\n        }\r\n        // preserve center\r\n        options.center = this.getCenter();\r\n        // preserve rotation\r\n        options.rotation = this.getRotation();\r\n        return assign({}, options, newOptions);\r\n    };\r\n    /**\r\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\r\n     * can be animated for smooth transitions between view states.  For example,\r\n     * to animate the view to a new zoom level:\r\n     *\r\n     *     view.animate({zoom: view.getZoom() + 1});\r\n     *\r\n     * By default, the animation lasts one second and uses in-and-out easing.  You\r\n     * can customize this behavior by including `duration` (in milliseconds) and\r\n     * `easing` options (see {@link module:ol/easing}).\r\n     *\r\n     * To chain together multiple animations, call the method with multiple\r\n     * animation objects.  For example, to first zoom and then pan:\r\n     *\r\n     *     view.animate({zoom: 10}, {center: [0, 0]});\r\n     *\r\n     * If you provide a function as the last argument to the animate method, it\r\n     * will get called at the end of an animation series.  The callback will be\r\n     * called with `true` if the animation series completed on its own or `false`\r\n     * if it was cancelled.\r\n     *\r\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\r\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\r\n     * (or another method that calls one of these).\r\n     *\r\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\r\n     *     options.  Multiple animations can be run in series by passing multiple\r\n     *     options objects.  To run multiple animations in parallel, call the method\r\n     *     multiple times.  An optional callback can be provided as a final\r\n     *     argument.  The callback will be called with a boolean indicating whether\r\n     *     the animation completed without being cancelled.\r\n     * @api\r\n     */\r\n    View.prototype.animate = function (var_args) {\r\n        var animationCount = arguments.length;\r\n        var callback;\r\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\r\n            callback = arguments[animationCount - 1];\r\n            --animationCount;\r\n        }\r\n        if (!this.isDef()) {\r\n            // if view properties are not yet set, shortcut to the final state\r\n            var state = arguments[animationCount - 1];\r\n            if (state.center) {\r\n                this.setCenter(state.center);\r\n            }\r\n            if (state.zoom !== undefined) {\r\n                this.setZoom(state.zoom);\r\n            }\r\n            if (state.rotation !== undefined) {\r\n                this.setRotation(state.rotation);\r\n            }\r\n            if (callback) {\r\n                animationCallback(callback, true);\r\n            }\r\n            return;\r\n        }\r\n        var start = Date.now();\r\n        var center = this.getCenter().slice();\r\n        var resolution = this.getResolution();\r\n        var rotation = this.getRotation();\r\n        var series = [];\r\n        for (var i = 0; i < animationCount; ++i) {\r\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\r\n            var animation = {\r\n                start: start,\r\n                complete: false,\r\n                anchor: options.anchor,\r\n                duration: options.duration !== undefined ? options.duration : 1000,\r\n                easing: options.easing || inAndOut,\r\n                callback: callback\r\n            };\r\n            if (options.center) {\r\n                animation.sourceCenter = center;\r\n                animation.targetCenter = options.center;\r\n                center = animation.targetCenter;\r\n            }\r\n            if (options.zoom !== undefined) {\r\n                animation.sourceResolution = resolution;\r\n                animation.targetResolution = this.constrainResolution(this.maxResolution_, options.zoom - this.minZoom_, 0);\r\n                resolution = animation.targetResolution;\r\n            }\r\n            else if (options.resolution) {\r\n                animation.sourceResolution = resolution;\r\n                animation.targetResolution = options.resolution;\r\n                resolution = animation.targetResolution;\r\n            }\r\n            if (options.rotation !== undefined) {\r\n                animation.sourceRotation = rotation;\r\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\r\n                animation.targetRotation = rotation + delta;\r\n                rotation = animation.targetRotation;\r\n            }\r\n            // check if animation is a no-op\r\n            if (isNoopAnimation(animation)) {\r\n                animation.complete = true;\r\n                // we still push it onto the series for callback handling\r\n            }\r\n            else {\r\n                start += animation.duration;\r\n            }\r\n            series.push(animation);\r\n        }\r\n        this.animations_.push(series);\r\n        this.setHint(ViewHint.ANIMATING, 1);\r\n        this.updateAnimations_();\r\n    };\r\n    /**\r\n     * Determine if the view is being animated.\r\n     * @return {boolean} The view is being animated.\r\n     * @api\r\n     */\r\n    View.prototype.getAnimating = function () {\r\n        return this.hints_[ViewHint.ANIMATING] > 0;\r\n    };\r\n    /**\r\n     * Determine if the user is interacting with the view, such as panning or zooming.\r\n     * @return {boolean} The view is being interacted with.\r\n     * @api\r\n     */\r\n    View.prototype.getInteracting = function () {\r\n        return this.hints_[ViewHint.INTERACTING] > 0;\r\n    };\r\n    /**\r\n     * Cancel any ongoing animations.\r\n     * @api\r\n     */\r\n    View.prototype.cancelAnimations = function () {\r\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\r\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\r\n            var series = this.animations_[i];\r\n            if (series[0].callback) {\r\n                animationCallback(series[0].callback, false);\r\n            }\r\n        }\r\n        this.animations_.length = 0;\r\n    };\r\n    /**\r\n     * Update all animations.\r\n     */\r\n    View.prototype.updateAnimations_ = function () {\r\n        if (this.updateAnimationKey_ !== undefined) {\r\n            cancelAnimationFrame(this.updateAnimationKey_);\r\n            this.updateAnimationKey_ = undefined;\r\n        }\r\n        if (!this.getAnimating()) {\r\n            return;\r\n        }\r\n        var now = Date.now();\r\n        var more = false;\r\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\r\n            var series = this.animations_[i];\r\n            var seriesComplete = true;\r\n            for (var j = 0, jj = series.length; j < jj; ++j) {\r\n                var animation = series[j];\r\n                if (animation.complete) {\r\n                    continue;\r\n                }\r\n                var elapsed = now - animation.start;\r\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\r\n                if (fraction >= 1) {\r\n                    animation.complete = true;\r\n                    fraction = 1;\r\n                }\r\n                else {\r\n                    seriesComplete = false;\r\n                }\r\n                var progress = animation.easing(fraction);\r\n                if (animation.sourceCenter) {\r\n                    var x0 = animation.sourceCenter[0];\r\n                    var y0 = animation.sourceCenter[1];\r\n                    var x1 = animation.targetCenter[0];\r\n                    var y1 = animation.targetCenter[1];\r\n                    var x = x0 + progress * (x1 - x0);\r\n                    var y = y0 + progress * (y1 - y0);\r\n                    this.set(ViewProperty.CENTER, [x, y]);\r\n                }\r\n                if (animation.sourceResolution && animation.targetResolution) {\r\n                    var resolution = progress === 1 ?\r\n                        animation.targetResolution :\r\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\r\n                    if (animation.anchor) {\r\n                        this.set(ViewProperty.CENTER, this.calculateCenterZoom(resolution, animation.anchor));\r\n                    }\r\n                    this.set(ViewProperty.RESOLUTION, resolution);\r\n                }\r\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\r\n                    var rotation = progress === 1 ?\r\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\r\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\r\n                    if (animation.anchor) {\r\n                        this.set(ViewProperty.CENTER, this.calculateCenterRotate(rotation, animation.anchor));\r\n                    }\r\n                    this.set(ViewProperty.ROTATION, rotation);\r\n                }\r\n                more = true;\r\n                if (!animation.complete) {\r\n                    break;\r\n                }\r\n            }\r\n            if (seriesComplete) {\r\n                this.animations_[i] = null;\r\n                this.setHint(ViewHint.ANIMATING, -1);\r\n                var callback = series[0].callback;\r\n                if (callback) {\r\n                    animationCallback(callback, true);\r\n                }\r\n            }\r\n        }\r\n        // prune completed series\r\n        this.animations_ = this.animations_.filter(Boolean);\r\n        if (more && this.updateAnimationKey_ === undefined) {\r\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} rotation Target rotation.\r\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\r\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\r\n     */\r\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\r\n        var center;\r\n        var currentCenter = this.getCenter();\r\n        if (currentCenter !== undefined) {\r\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\r\n            rotateCoordinate(center, rotation - this.getRotation());\r\n            addCoordinate(center, anchor);\r\n        }\r\n        return center;\r\n    };\r\n    /**\r\n     * @param {number} resolution Target resolution.\r\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\r\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\r\n     */\r\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\r\n        var center;\r\n        var currentCenter = this.getCenter();\r\n        var currentResolution = this.getResolution();\r\n        if (currentCenter !== undefined && currentResolution !== undefined) {\r\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\r\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\r\n            center = [x, y];\r\n        }\r\n        return center;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\r\n     */\r\n    View.prototype.getSizeFromViewport_ = function () {\r\n        var size = [100, 100];\r\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\r\n        var element = document.querySelector(selector);\r\n        if (element) {\r\n            var metrics = getComputedStyle(element);\r\n            size[0] = parseInt(metrics.width, 10);\r\n            size[1] = parseInt(metrics.height, 10);\r\n        }\r\n        return size;\r\n    };\r\n    /**\r\n     * Get the constrained center of this view.\r\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\r\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\r\n     * @api\r\n     */\r\n    View.prototype.constrainCenter = function (center) {\r\n        return this.constraints_.center(center);\r\n    };\r\n    /**\r\n     * Get the constrained resolution of this view.\r\n     * @param {number|undefined} resolution Resolution.\r\n     * @param {number=} opt_delta Delta. Default is `0`.\r\n     * @param {number=} opt_direction Direction. Default is `0`.\r\n     * @return {number|undefined} Constrained resolution.\r\n     * @api\r\n     */\r\n    View.prototype.constrainResolution = function (resolution, opt_delta, opt_direction) {\r\n        var delta = opt_delta || 0;\r\n        var direction = opt_direction || 0;\r\n        return this.constraints_.resolution(resolution, delta, direction);\r\n    };\r\n    /**\r\n     * Get the constrained rotation of this view.\r\n     * @param {number|undefined} rotation Rotation.\r\n     * @param {number=} opt_delta Delta. Default is `0`.\r\n     * @return {number|undefined} Constrained rotation.\r\n     * @api\r\n     */\r\n    View.prototype.constrainRotation = function (rotation, opt_delta) {\r\n        var delta = opt_delta || 0;\r\n        return this.constraints_.rotation(rotation, delta);\r\n    };\r\n    /**\r\n     * Get the view center.\r\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\r\n     * @observable\r\n     * @api\r\n     */\r\n    View.prototype.getCenter = function () {\r\n        return (\r\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\r\n    };\r\n    /**\r\n     * @return {Constraints} Constraints.\r\n     */\r\n    View.prototype.getConstraints = function () {\r\n        return this.constraints_;\r\n    };\r\n    /**\r\n     * @param {Array<number>=} opt_hints Destination array.\r\n     * @return {Array<number>} Hint.\r\n     */\r\n    View.prototype.getHints = function (opt_hints) {\r\n        if (opt_hints !== undefined) {\r\n            opt_hints[0] = this.hints_[0];\r\n            opt_hints[1] = this.hints_[1];\r\n            return opt_hints;\r\n        }\r\n        else {\r\n            return this.hints_.slice();\r\n        }\r\n    };\r\n    /**\r\n     * Calculate the extent for the current view state and the passed size.\r\n     * The size is the pixel dimensions of the box into which the calculated extent\r\n     * should fit. In most cases you want to get the extent of the entire map,\r\n     * that is `map.getSize()`.\r\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\r\n     * first map that uses this view will be used.\r\n     * @return {import(\"./extent.js\").Extent} Extent.\r\n     * @api\r\n     */\r\n    View.prototype.calculateExtent = function (opt_size) {\r\n        var size = opt_size || this.getSizeFromViewport_();\r\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\r\n        assert(center, 1); // The view center is not defined\r\n        var resolution = /** @type {!number} */ (this.getResolution());\r\n        assert(resolution !== undefined, 2); // The view resolution is not defined\r\n        var rotation = /** @type {!number} */ (this.getRotation());\r\n        assert(rotation !== undefined, 3); // The view rotation is not defined\r\n        return getForViewAndSize(center, resolution, rotation, size);\r\n    };\r\n    /**\r\n     * Get the maximum resolution of the view.\r\n     * @return {number} The maximum resolution of the view.\r\n     * @api\r\n     */\r\n    View.prototype.getMaxResolution = function () {\r\n        return this.maxResolution_;\r\n    };\r\n    /**\r\n     * Get the minimum resolution of the view.\r\n     * @return {number} The minimum resolution of the view.\r\n     * @api\r\n     */\r\n    View.prototype.getMinResolution = function () {\r\n        return this.minResolution_;\r\n    };\r\n    /**\r\n     * Get the maximum zoom level for the view.\r\n     * @return {number} The maximum zoom level.\r\n     * @api\r\n     */\r\n    View.prototype.getMaxZoom = function () {\r\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\r\n    };\r\n    /**\r\n     * Set a new maximum zoom level for the view.\r\n     * @param {number} zoom The maximum zoom level.\r\n     * @api\r\n     */\r\n    View.prototype.setMaxZoom = function (zoom) {\r\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\r\n    };\r\n    /**\r\n     * Get the minimum zoom level for the view.\r\n     * @return {number} The minimum zoom level.\r\n     * @api\r\n     */\r\n    View.prototype.getMinZoom = function () {\r\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\r\n    };\r\n    /**\r\n     * Set a new minimum zoom level for the view.\r\n     * @param {number} zoom The minimum zoom level.\r\n     * @api\r\n     */\r\n    View.prototype.setMinZoom = function (zoom) {\r\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\r\n    };\r\n    /**\r\n     * Get the view projection.\r\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\r\n     * @api\r\n     */\r\n    View.prototype.getProjection = function () {\r\n        return this.projection_;\r\n    };\r\n    /**\r\n     * Get the view resolution.\r\n     * @return {number|undefined} The resolution of the view.\r\n     * @observable\r\n     * @api\r\n     */\r\n    View.prototype.getResolution = function () {\r\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\r\n    };\r\n    /**\r\n     * Get the resolutions for the view. This returns the array of resolutions\r\n     * passed to the constructor of the View, or undefined if none were given.\r\n     * @return {Array<number>|undefined} The resolutions of the view.\r\n     * @api\r\n     */\r\n    View.prototype.getResolutions = function () {\r\n        return this.resolutions_;\r\n    };\r\n    /**\r\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\r\n     * @param {import(\"./extent.js\").Extent} extent Extent.\r\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\r\n     * @return {number} The resolution at which the provided extent will render at\r\n     *     the given size.\r\n     * @api\r\n     */\r\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\r\n        var size = opt_size || this.getSizeFromViewport_();\r\n        var xResolution = getWidth(extent) / size[0];\r\n        var yResolution = getHeight(extent) / size[1];\r\n        return Math.max(xResolution, yResolution);\r\n    };\r\n    /**\r\n     * Return a function that returns a value between 0 and 1 for a\r\n     * resolution. Exponential scaling is assumed.\r\n     * @param {number=} opt_power Power.\r\n     * @return {function(number): number} Resolution for value function.\r\n     */\r\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\r\n        var power = opt_power || 2;\r\n        var maxResolution = this.maxResolution_;\r\n        var minResolution = this.minResolution_;\r\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\r\n        return (\r\n        /**\r\n         * @param {number} value Value.\r\n         * @return {number} Resolution.\r\n         */\r\n        function (value) {\r\n            var resolution = maxResolution / Math.pow(power, value * max);\r\n            return resolution;\r\n        });\r\n    };\r\n    /**\r\n     * Get the view rotation.\r\n     * @return {number} The rotation of the view in radians.\r\n     * @observable\r\n     * @api\r\n     */\r\n    View.prototype.getRotation = function () {\r\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\r\n    };\r\n    /**\r\n     * Return a function that returns a resolution for a value between\r\n     * 0 and 1. Exponential scaling is assumed.\r\n     * @param {number=} opt_power Power.\r\n     * @return {function(number): number} Value for resolution function.\r\n     */\r\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\r\n        var power = opt_power || 2;\r\n        var maxResolution = this.maxResolution_;\r\n        var minResolution = this.minResolution_;\r\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\r\n        return (\r\n        /**\r\n         * @param {number} resolution Resolution.\r\n         * @return {number} Value.\r\n         */\r\n        function (resolution) {\r\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\r\n            return value;\r\n        });\r\n    };\r\n    /**\r\n     * @param {number} pixelRatio Pixel ratio for center rounding.\r\n     * @return {State} View state.\r\n     */\r\n    View.prototype.getState = function (pixelRatio) {\r\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\r\n        var projection = this.getProjection();\r\n        var resolution = /** @type {number} */ (this.getResolution());\r\n        var pixelResolution = resolution / pixelRatio;\r\n        var rotation = this.getRotation();\r\n        return {\r\n            center: [\r\n                Math.round(center[0] / pixelResolution) * pixelResolution,\r\n                Math.round(center[1] / pixelResolution) * pixelResolution\r\n            ],\r\n            projection: projection !== undefined ? projection : null,\r\n            resolution: resolution,\r\n            rotation: rotation,\r\n            zoom: this.getZoom()\r\n        };\r\n    };\r\n    /**\r\n     * Get the current zoom level.  If you configured your view with a resolutions\r\n     * array (this is rare), this method may return non-integer zoom levels (so\r\n     * the zoom level is not safe to use as an index into a resolutions array).\r\n     * @return {number|undefined} Zoom.\r\n     * @api\r\n     */\r\n    View.prototype.getZoom = function () {\r\n        var zoom;\r\n        var resolution = this.getResolution();\r\n        if (resolution !== undefined) {\r\n            zoom = this.getZoomForResolution(resolution);\r\n        }\r\n        return zoom;\r\n    };\r\n    /**\r\n     * Get the zoom level for a resolution.\r\n     * @param {number} resolution The resolution.\r\n     * @return {number|undefined} The zoom level for the provided resolution.\r\n     * @api\r\n     */\r\n    View.prototype.getZoomForResolution = function (resolution) {\r\n        var offset = this.minZoom_ || 0;\r\n        var max, zoomFactor;\r\n        if (this.resolutions_) {\r\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\r\n            offset = nearest;\r\n            max = this.resolutions_[nearest];\r\n            if (nearest == this.resolutions_.length - 1) {\r\n                zoomFactor = 2;\r\n            }\r\n            else {\r\n                zoomFactor = max / this.resolutions_[nearest + 1];\r\n            }\r\n        }\r\n        else {\r\n            max = this.maxResolution_;\r\n            zoomFactor = this.zoomFactor_;\r\n        }\r\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\r\n    };\r\n    /**\r\n     * Get the resolution for a zoom level.\r\n     * @param {number} zoom Zoom level.\r\n     * @return {number} The view resolution for the provided zoom level.\r\n     * @api\r\n     */\r\n    View.prototype.getResolutionForZoom = function (zoom) {\r\n        return /** @type {number} */ (this.constrainResolution(this.maxResolution_, zoom - this.minZoom_, 0));\r\n    };\r\n    /**\r\n     * Fit the given geometry or extent based on the given map size and border.\r\n     * The size is pixel dimensions of the box to fit the extent into.\r\n     * In most cases you will want to use the map size, that is `map.getSize()`.\r\n     * Takes care of the map angle.\r\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\r\n     *     extent to fit the view to.\r\n     * @param {FitOptions=} opt_options Options.\r\n     * @api\r\n     */\r\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\r\n        var options = opt_options || {};\r\n        var size = options.size;\r\n        if (!size) {\r\n            size = this.getSizeFromViewport_();\r\n        }\r\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\r\n        var geometry;\r\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\r\n        if (Array.isArray(geometryOrExtent)) {\r\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\r\n            geometry = polygonFromExtent(geometryOrExtent);\r\n        }\r\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\r\n            geometryOrExtent = geometryOrExtent.getExtent();\r\n            geometry = polygonFromExtent(geometryOrExtent);\r\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\r\n        }\r\n        else {\r\n            geometry = geometryOrExtent;\r\n        }\r\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\r\n        var constrainResolution = options.constrainResolution !== undefined ?\r\n            options.constrainResolution : true;\r\n        var nearest = options.nearest !== undefined ? options.nearest : false;\r\n        var minResolution;\r\n        if (options.minResolution !== undefined) {\r\n            minResolution = options.minResolution;\r\n        }\r\n        else if (options.maxZoom !== undefined) {\r\n            minResolution = this.constrainResolution(this.maxResolution_, options.maxZoom - this.minZoom_, 0);\r\n        }\r\n        else {\r\n            minResolution = 0;\r\n        }\r\n        var coords = geometry.getFlatCoordinates();\r\n        // calculate rotated extent\r\n        var rotation = this.getRotation();\r\n        var cosAngle = Math.cos(-rotation);\r\n        var sinAngle = Math.sin(-rotation);\r\n        var minRotX = +Infinity;\r\n        var minRotY = +Infinity;\r\n        var maxRotX = -Infinity;\r\n        var maxRotY = -Infinity;\r\n        var stride = geometry.getStride();\r\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\r\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\r\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\r\n            minRotX = Math.min(minRotX, rotX);\r\n            minRotY = Math.min(minRotY, rotY);\r\n            maxRotX = Math.max(maxRotX, rotX);\r\n            maxRotY = Math.max(maxRotY, rotY);\r\n        }\r\n        // calculate resolution\r\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\r\n        resolution = isNaN(resolution) ? minResolution :\r\n            Math.max(resolution, minResolution);\r\n        if (constrainResolution) {\r\n            var constrainedResolution = this.constrainResolution(resolution, 0, 0);\r\n            if (!nearest && constrainedResolution < resolution) {\r\n                constrainedResolution = this.constrainResolution(constrainedResolution, -1, 0);\r\n            }\r\n            resolution = constrainedResolution;\r\n        }\r\n        // calculate center\r\n        sinAngle = -sinAngle; // go back to original rotation\r\n        var centerRotX = (minRotX + maxRotX) / 2;\r\n        var centerRotY = (minRotY + maxRotY) / 2;\r\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\r\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\r\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\r\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\r\n        var center = [centerX, centerY];\r\n        var callback = options.callback ? options.callback : VOID;\r\n        if (options.duration !== undefined) {\r\n            this.animate({\r\n                resolution: resolution,\r\n                center: center,\r\n                duration: options.duration,\r\n                easing: options.easing\r\n            }, callback);\r\n        }\r\n        else {\r\n            this.setResolution(resolution);\r\n            this.setCenter(center);\r\n            animationCallback(callback, true);\r\n        }\r\n    };\r\n    /**\r\n     * Center on coordinate and view position.\r\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @param {import(\"./size.js\").Size} size Box pixel size.\r\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\r\n     * @api\r\n     */\r\n    View.prototype.centerOn = function (coordinate, size, position) {\r\n        // calculate rotated position\r\n        var rotation = this.getRotation();\r\n        var cosAngle = Math.cos(-rotation);\r\n        var sinAngle = Math.sin(-rotation);\r\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\r\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\r\n        var resolution = this.getResolution();\r\n        rotX += (size[0] / 2 - position[0]) * resolution;\r\n        rotY += (position[1] - size[1] / 2) * resolution;\r\n        // go back to original angle\r\n        sinAngle = -sinAngle; // go back to original rotation\r\n        var centerX = rotX * cosAngle - rotY * sinAngle;\r\n        var centerY = rotY * cosAngle + rotX * sinAngle;\r\n        this.setCenter([centerX, centerY]);\r\n    };\r\n    /**\r\n     * @return {boolean} Is defined.\r\n     */\r\n    View.prototype.isDef = function () {\r\n        return !!this.getCenter() && this.getResolution() !== undefined;\r\n    };\r\n    /**\r\n     * Rotate the view around a given coordinate.\r\n     * @param {number} rotation New rotation value for the view.\r\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\r\n     * @api\r\n     */\r\n    View.prototype.rotate = function (rotation, opt_anchor) {\r\n        if (opt_anchor !== undefined) {\r\n            var center = this.calculateCenterRotate(rotation, opt_anchor);\r\n            this.setCenter(center);\r\n        }\r\n        this.setRotation(rotation);\r\n    };\r\n    /**\r\n     * Set the center of the current view.\r\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\r\n     * @observable\r\n     * @api\r\n     */\r\n    View.prototype.setCenter = function (center) {\r\n        this.set(ViewProperty.CENTER, center);\r\n        if (this.getAnimating()) {\r\n            this.cancelAnimations();\r\n        }\r\n    };\r\n    /**\r\n     * @param {ViewHint} hint Hint.\r\n     * @param {number} delta Delta.\r\n     * @return {number} New value.\r\n     */\r\n    View.prototype.setHint = function (hint, delta) {\r\n        this.hints_[hint] += delta;\r\n        this.changed();\r\n        return this.hints_[hint];\r\n    };\r\n    /**\r\n     * Set the resolution for this view.\r\n     * @param {number|undefined} resolution The resolution of the view.\r\n     * @observable\r\n     * @api\r\n     */\r\n    View.prototype.setResolution = function (resolution) {\r\n        this.set(ViewProperty.RESOLUTION, resolution);\r\n        if (this.getAnimating()) {\r\n            this.cancelAnimations();\r\n        }\r\n    };\r\n    /**\r\n     * Set the rotation for this view.\r\n     * @param {number} rotation The rotation of the view in radians.\r\n     * @observable\r\n     * @api\r\n     */\r\n    View.prototype.setRotation = function (rotation) {\r\n        this.set(ViewProperty.ROTATION, rotation);\r\n        if (this.getAnimating()) {\r\n            this.cancelAnimations();\r\n        }\r\n    };\r\n    /**\r\n     * Zoom to a specific zoom level.\r\n     * @param {number} zoom Zoom level.\r\n     * @api\r\n     */\r\n    View.prototype.setZoom = function (zoom) {\r\n        this.setResolution(this.getResolutionForZoom(zoom));\r\n    };\r\n    return View;\r\n}(BaseObject));\r\n/**\r\n * @param {Function} callback Callback.\r\n * @param {*} returnValue Return value.\r\n */\r\nfunction animationCallback(callback, returnValue) {\r\n    setTimeout(function () {\r\n        callback(returnValue);\r\n    }, 0);\r\n}\r\n/**\r\n * @param {ViewOptions} options View options.\r\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\r\n */\r\nexport function createCenterConstraint(options) {\r\n    if (options.extent !== undefined) {\r\n        return createExtent(options.extent);\r\n    }\r\n    else {\r\n        return centerNone;\r\n    }\r\n}\r\n/**\r\n * @param {ViewOptions} options View options.\r\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\r\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\r\n */\r\nexport function createResolutionConstraint(options) {\r\n    var resolutionConstraint;\r\n    var maxResolution;\r\n    var minResolution;\r\n    // TODO: move these to be ol constants\r\n    // see https://github.com/openlayers/openlayers/issues/2076\r\n    var defaultMaxZoom = 28;\r\n    var defaultZoomFactor = 2;\r\n    var minZoom = options.minZoom !== undefined ?\r\n        options.minZoom : DEFAULT_MIN_ZOOM;\r\n    var maxZoom = options.maxZoom !== undefined ?\r\n        options.maxZoom : defaultMaxZoom;\r\n    var zoomFactor = options.zoomFactor !== undefined ?\r\n        options.zoomFactor : defaultZoomFactor;\r\n    if (options.resolutions !== undefined) {\r\n        var resolutions = options.resolutions;\r\n        maxResolution = resolutions[minZoom];\r\n        minResolution = resolutions[maxZoom] !== undefined ?\r\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\r\n        resolutionConstraint = createSnapToResolutions(resolutions);\r\n    }\r\n    else {\r\n        // calculate the default min and max resolution\r\n        var projection = createProjection(options.projection, 'EPSG:3857');\r\n        var extent = projection.getExtent();\r\n        var size = !extent ?\r\n            // use an extent that can fit the whole world if need be\r\n            360 * METERS_PER_UNIT[Units.DEGREES] /\r\n                projection.getMetersPerUnit() :\r\n            Math.max(getWidth(extent), getHeight(extent));\r\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\r\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\r\n        // user provided maxResolution takes precedence\r\n        maxResolution = options.maxResolution;\r\n        if (maxResolution !== undefined) {\r\n            minZoom = 0;\r\n        }\r\n        else {\r\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\r\n        }\r\n        // user provided minResolution takes precedence\r\n        minResolution = options.minResolution;\r\n        if (minResolution === undefined) {\r\n            if (options.maxZoom !== undefined) {\r\n                if (options.maxResolution !== undefined) {\r\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\r\n                }\r\n                else {\r\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\r\n                }\r\n            }\r\n            else {\r\n                minResolution = defaultMinResolution;\r\n            }\r\n        }\r\n        // given discrete zoom levels, minResolution may be different than provided\r\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\r\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\r\n        resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, maxZoom - minZoom);\r\n    }\r\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\r\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\r\n}\r\n/**\r\n * @param {ViewOptions} options View options.\r\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\r\n */\r\nexport function createRotationConstraint(options) {\r\n    var enableRotation = options.enableRotation !== undefined ?\r\n        options.enableRotation : true;\r\n    if (enableRotation) {\r\n        var constrainRotation = options.constrainRotation;\r\n        if (constrainRotation === undefined || constrainRotation === true) {\r\n            return createSnapToZero();\r\n        }\r\n        else if (constrainRotation === false) {\r\n            return rotationNone;\r\n        }\r\n        else if (typeof constrainRotation === 'number') {\r\n            return createSnapToN(constrainRotation);\r\n        }\r\n        else {\r\n            return rotationNone;\r\n        }\r\n    }\r\n    else {\r\n        return disable;\r\n    }\r\n}\r\n/**\r\n * Determine if an animation involves no view change.\r\n * @param {Animation} animation The animation.\r\n * @return {boolean} The animation involves no view change.\r\n */\r\nexport function isNoopAnimation(animation) {\r\n    if (animation.sourceCenter && animation.targetCenter) {\r\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\r\n            return false;\r\n        }\r\n    }\r\n    if (animation.sourceResolution !== animation.targetResolution) {\r\n        return false;\r\n    }\r\n    if (animation.sourceRotation !== animation.targetRotation) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexport default View;\r\n//# sourceMappingURL=View.js.map","/**\r\n * @module ol/resolutionconstraint\r\n */\r\nimport { linearFindNearest } from './array.js';\r\nimport { clamp } from './math.js';\r\n/**\r\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\r\n */\r\n/**\r\n * @param {Array<number>} resolutions Resolutions.\r\n * @return {Type} Zoom function.\r\n */\r\nexport function createSnapToResolutions(resolutions) {\r\n    return (\r\n    /**\r\n     * @param {number|undefined} resolution Resolution.\r\n     * @param {number} delta Delta.\r\n     * @param {number} direction Direction.\r\n     * @return {number|undefined} Resolution.\r\n     */\r\n    function (resolution, delta, direction) {\r\n        if (resolution !== undefined) {\r\n            var z = linearFindNearest(resolutions, resolution, direction);\r\n            z = clamp(z + delta, 0, resolutions.length - 1);\r\n            var index = Math.floor(z);\r\n            if (z != index && index < resolutions.length - 1) {\r\n                var power = resolutions[index] / resolutions[index + 1];\r\n                return resolutions[index] / Math.pow(power, z - index);\r\n            }\r\n            else {\r\n                return resolutions[index];\r\n            }\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    });\r\n}\r\n/**\r\n * @param {number} power Power.\r\n * @param {number} maxResolution Maximum resolution.\r\n * @param {number=} opt_maxLevel Maximum level.\r\n * @return {Type} Zoom function.\r\n */\r\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\r\n    return (\r\n    /**\r\n     * @param {number|undefined} resolution Resolution.\r\n     * @param {number} delta Delta.\r\n     * @param {number} direction Direction.\r\n     * @return {number|undefined} Resolution.\r\n     */\r\n    function (resolution, delta, direction) {\r\n        if (resolution !== undefined) {\r\n            var offset = -direction / 2 + 0.5;\r\n            var oldLevel = Math.floor(Math.log(maxResolution / resolution) / Math.log(power) + offset);\r\n            var newLevel = Math.max(oldLevel + delta, 0);\r\n            if (opt_maxLevel !== undefined) {\r\n                newLevel = Math.min(newLevel, opt_maxLevel);\r\n            }\r\n            return maxResolution / Math.pow(power, newLevel);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=resolutionconstraint.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/layer/Group\r\n */\r\nimport { getUid } from '../util.js';\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport { getChangeEventType } from '../Object.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport { assert } from '../asserts.js';\r\nimport { listen, unlistenByKey } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { getIntersection } from '../extent.js';\r\nimport BaseLayer from './Base.js';\r\nimport { assign, clear } from '../obj.js';\r\nimport SourceState from '../source/State.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\r\n */\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nvar Property = {\r\n    LAYERS: 'layers'\r\n};\r\n/**\r\n * @classdesc\r\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\r\n *\r\n * A generic `change` event is triggered when the group/Collection changes.\r\n *\r\n * @api\r\n */\r\nvar LayerGroup = /** @class */ (function (_super) {\r\n    __extends(LayerGroup, _super);\r\n    /**\r\n     * @param {Options=} opt_options Layer options.\r\n     */\r\n    function LayerGroup(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options || {};\r\n        var baseOptions = /** @type {Options} */ (assign({}, options));\r\n        delete baseOptions.layers;\r\n        var layers = options.layers;\r\n        _this = _super.call(this, baseOptions) || this;\r\n        /**\r\n         * @private\r\n         * @type {Array<import(\"../events.js\").EventsKey>}\r\n         */\r\n        _this.layersListenerKeys_ = [];\r\n        /**\r\n         * @private\r\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\r\n         */\r\n        _this.listenerKeys_ = {};\r\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\r\n        if (layers) {\r\n            if (Array.isArray(layers)) {\r\n                layers = new Collection(layers.slice(), { unique: true });\r\n            }\r\n            else {\r\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\r\n            }\r\n        }\r\n        else {\r\n            layers = new Collection(undefined, { unique: true });\r\n        }\r\n        _this.setLayers(layers);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    LayerGroup.prototype.handleLayerChange_ = function () {\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    LayerGroup.prototype.handleLayersChanged_ = function () {\r\n        this.layersListenerKeys_.forEach(unlistenByKey);\r\n        this.layersListenerKeys_.length = 0;\r\n        var layers = this.getLayers();\r\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\r\n        for (var id in this.listenerKeys_) {\r\n            this.listenerKeys_[id].forEach(unlistenByKey);\r\n        }\r\n        clear(this.listenerKeys_);\r\n        var layersArray = layers.getArray();\r\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\r\n            var layer = layersArray[i];\r\n            this.listenerKeys_[getUid(layer)] = [\r\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\r\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\r\n            ];\r\n        }\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\r\n     * @private\r\n     */\r\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\r\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\r\n        this.listenerKeys_[getUid(layer)] = [\r\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\r\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\r\n        ];\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\r\n     * @private\r\n     */\r\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\r\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\r\n        var key = getUid(layer);\r\n        this.listenerKeys_[key].forEach(unlistenByKey);\r\n        delete this.listenerKeys_[key];\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\r\n     * in this group.\r\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\r\n     *   {@link module:ol/layer/Base layers} that are part of this group.\r\n     * @observable\r\n     * @api\r\n     */\r\n    LayerGroup.prototype.getLayers = function () {\r\n        return (\r\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\r\n    };\r\n    /**\r\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\r\n     * in this group.\r\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\r\n     *   {@link module:ol/layer/Base layers} that are part of this group.\r\n     * @observable\r\n     * @api\r\n     */\r\n    LayerGroup.prototype.setLayers = function (layers) {\r\n        this.set(Property.LAYERS, layers);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\r\n        var array = opt_array !== undefined ? opt_array : [];\r\n        this.getLayers().forEach(function (layer) {\r\n            layer.getLayersArray(array);\r\n        });\r\n        return array;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\r\n        var states = opt_states !== undefined ? opt_states : [];\r\n        var pos = states.length;\r\n        this.getLayers().forEach(function (layer) {\r\n            layer.getLayerStatesArray(states);\r\n        });\r\n        var ownLayerState = this.getLayerState();\r\n        for (var i = pos, ii = states.length; i < ii; i++) {\r\n            var layerState = states[i];\r\n            layerState.opacity *= ownLayerState.opacity;\r\n            layerState.visible = layerState.visible && ownLayerState.visible;\r\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\r\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\r\n            if (ownLayerState.extent !== undefined) {\r\n                if (layerState.extent !== undefined) {\r\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\r\n                }\r\n                else {\r\n                    layerState.extent = ownLayerState.extent;\r\n                }\r\n            }\r\n        }\r\n        return states;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LayerGroup.prototype.getSourceState = function () {\r\n        return SourceState.READY;\r\n    };\r\n    return LayerGroup;\r\n}(BaseLayer));\r\nexport default LayerGroup;\r\n//# sourceMappingURL=Group.js.map","/**\r\n * @module ol/size\r\n */\r\n/**\r\n * An array of numbers representing a size: `[width, height]`.\r\n * @typedef {Array<number>} Size\r\n * @api\r\n */\r\n/**\r\n * Returns a buffered size.\r\n * @param {Size} size Size.\r\n * @param {number} num The amount by which to buffer.\r\n * @param {Size=} opt_size Optional reusable size array.\r\n * @return {Size} The buffered size.\r\n */\r\nexport function buffer(size, num, opt_size) {\r\n    if (opt_size === undefined) {\r\n        opt_size = [0, 0];\r\n    }\r\n    opt_size[0] = size[0] + 2 * num;\r\n    opt_size[1] = size[1] + 2 * num;\r\n    return opt_size;\r\n}\r\n/**\r\n * Determines if a size has a positive area.\r\n * @param {Size} size The size to test.\r\n * @return {boolean} The size has a positive area.\r\n */\r\nexport function hasArea(size) {\r\n    return size[0] > 0 && size[1] > 0;\r\n}\r\n/**\r\n * Returns a size scaled by a ratio. The result will be an array of integers.\r\n * @param {Size} size Size.\r\n * @param {number} ratio Ratio.\r\n * @param {Size=} opt_size Optional reusable size array.\r\n * @return {Size} The scaled size.\r\n */\r\nexport function scale(size, ratio, opt_size) {\r\n    if (opt_size === undefined) {\r\n        opt_size = [0, 0];\r\n    }\r\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\r\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\r\n    return opt_size;\r\n}\r\n/**\r\n * Returns an `Size` array for the passed in number (meaning: square) or\r\n * `Size` array.\r\n * (meaning: non-square),\r\n * @param {number|Size} size Width and height.\r\n * @param {Size=} opt_size Optional reusable size array.\r\n * @return {Size} Size.\r\n * @api\r\n */\r\nexport function toSize(size, opt_size) {\r\n    if (Array.isArray(size)) {\r\n        return size;\r\n    }\r\n    else {\r\n        if (opt_size === undefined) {\r\n            opt_size = [size, size];\r\n        }\r\n        else {\r\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\r\n        }\r\n        return opt_size;\r\n    }\r\n}\r\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/PluggableMap\r\n */\r\nimport { getUid } from './util.js';\r\nimport Collection from './Collection.js';\r\nimport CollectionEventType from './CollectionEventType.js';\r\nimport MapBrowserEvent from './MapBrowserEvent.js';\r\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\r\nimport MapBrowserEventType from './MapBrowserEventType.js';\r\nimport MapEvent from './MapEvent.js';\r\nimport MapEventType from './MapEventType.js';\r\nimport MapProperty from './MapProperty.js';\r\nimport RenderEventType from './render/EventType.js';\r\nimport BaseObject, { getChangeEventType } from './Object.js';\r\nimport ObjectEventType from './ObjectEventType.js';\r\nimport TileQueue from './TileQueue.js';\r\nimport View from './View.js';\r\nimport ViewHint from './ViewHint.js';\r\nimport { assert } from './asserts.js';\r\nimport { removeNode } from './dom.js';\r\nimport { listen, unlistenByKey, unlisten } from './events.js';\r\nimport EventType from './events/EventType.js';\r\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\r\nimport { TRUE } from './functions.js';\r\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\r\nimport LayerGroup from './layer/Group.js';\r\nimport { hasArea } from './size.js';\r\nimport { DROP } from './structs/PriorityQueue.js';\r\nimport { create as createTransform, apply as applyTransform } from './transform.js';\r\n/**\r\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\r\n * be used in applications.\r\n * @typedef {Object} FrameState\r\n * @property {number} pixelRatio The pixel ratio of the frame.\r\n * @property {number} time The time when rendering of the frame was requested.\r\n * @property {import(\"./View.js\").State} viewState The state of the current view.\r\n * @property {boolean} animate\r\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\r\n * @property {null|import(\"./extent.js\").Extent} extent\r\n * @property {import(\"./coordinate.js\").Coordinate} focus\r\n * @property {number} index\r\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\r\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\r\n * @property {Array<PostRenderFunction>} postRenderFunctions\r\n * @property {import(\"./size.js\").Size} size\r\n * @property {!Object<string, boolean>} skippedFeatureUids\r\n * @property {TileQueue} tileQueue\r\n * @property {!Object<string, Object<string, boolean>>} usedTiles\r\n * @property {Array<number>} viewHints\r\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\r\n */\r\n/**\r\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\r\n */\r\n/**\r\n * @typedef {Object} AtPixelOptions\r\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n * function. The filter function will receive one argument, the\r\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\r\n * Only layers which are visible and for which this function returns `true`\r\n * will be tested for features. By default, all visible layers will be tested.\r\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\r\n * inside the radius around the given position will be checked for features.\r\n */\r\n/**\r\n * @typedef {Object} MapOptionsInternal\r\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\r\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\r\n * @property {HTMLElement|Document} keyboardEventTarget\r\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\r\n * @property {Object<string, *>} values\r\n */\r\n/**\r\n * Object literal with config options for the map.\r\n * @typedef {Object} MapOptions\r\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\r\n * Controls initially added to the map. If not specified,\r\n * {@link module:ol/control~defaults} is used.\r\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\r\n * physical pixels and device-independent pixels (dips) on the device.\r\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\r\n * Interactions that are initially added to the map. If not specified,\r\n * {@link module:ol/interaction~defaults} is used.\r\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\r\n * listen to keyboard events on. This determines when the `KeyboardPan` and\r\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\r\n * `document` the keyboard interactions will always trigger. If this option is\r\n * not specified, the element the library listens to keyboard events on is the\r\n * map target (i.e. the user-provided div for the map). If this is not\r\n * `document`, the target element needs to be focused for key events to be\r\n * emitted, requiring that the target element has a `tabindex` attribute.\r\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\r\n * Layers. If this is not defined, a map with no layers will be rendered. Note\r\n * that layers are rendered in the order supplied, so if you want, for example,\r\n * a vector layer to appear on top of a tile layer, it must come after the tile\r\n * layer.\r\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\r\n * simultaneously.\r\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\r\n * cursor must move to be detected as a map move event instead of a click.\r\n * Increasing this value can make it easier to click on the map.\r\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\r\n * Overlays initially added to the map. By default, no overlays are added.\r\n * @property {HTMLElement|string} [target] The container for the map, either the\r\n * element itself or the `id` of the element. If not specified at construction\r\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\r\n * rendered.\r\n * @property {View} [view] The map's view.  No layer sources will be\r\n * fetched unless this is specified at construction time or through\r\n * {@link module:ol/Map~Map#setView}.\r\n */\r\n/**\r\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\r\n * @fires import(\"./MapEvent.js\").MapEvent\r\n * @fires import(\"./render/Event.js\").default#precompose\r\n * @fires import(\"./render/Event.js\").default#postcompose\r\n * @fires import(\"./render/Event.js\").default#rendercomplete\r\n * @api\r\n */\r\nvar PluggableMap = /** @class */ (function (_super) {\r\n    __extends(PluggableMap, _super);\r\n    /**\r\n     * @param {MapOptions} options Map options.\r\n     */\r\n    function PluggableMap(options) {\r\n        var _this = _super.call(this) || this;\r\n        var optionsInternal = createOptionsInternal(options);\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\r\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.animationDelayKey_;\r\n        /**\r\n         * @private\r\n         */\r\n        _this.animationDelay_ = function () {\r\n            this.animationDelayKey_ = undefined;\r\n            this.renderFrame_(Date.now());\r\n        }.bind(_this);\r\n        /**\r\n         * @private\r\n         * @type {import(\"./transform.js\").Transform}\r\n         */\r\n        _this.coordinateToPixelTransform_ = createTransform();\r\n        /**\r\n         * @private\r\n         * @type {import(\"./transform.js\").Transform}\r\n         */\r\n        _this.pixelToCoordinateTransform_ = createTransform();\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.frameIndex_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {?FrameState}\r\n         */\r\n        _this.frameState_ = null;\r\n        /**\r\n         * The extent at the previous 'moveend' event.\r\n         * @private\r\n         * @type {import(\"./extent.js\").Extent}\r\n         */\r\n        _this.previousExtent_ = null;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"./events.js\").EventsKey}\r\n         */\r\n        _this.viewPropertyListenerKey_ = null;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"./events.js\").EventsKey}\r\n         */\r\n        _this.viewChangeListenerKey_ = null;\r\n        /**\r\n         * @private\r\n         * @type {Array<import(\"./events.js\").EventsKey>}\r\n         */\r\n        _this.layerGroupPropertyListenerKeys_ = null;\r\n        /**\r\n         * @private\r\n         * @type {!HTMLElement}\r\n         */\r\n        _this.viewport_ = document.createElement('div');\r\n        _this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\r\n        _this.viewport_.style.position = 'relative';\r\n        _this.viewport_.style.overflow = 'hidden';\r\n        _this.viewport_.style.width = '100%';\r\n        _this.viewport_.style.height = '100%';\r\n        // prevent page zoom on IE >= 10 browsers\r\n        _this.viewport_.style.msTouchAction = 'none';\r\n        _this.viewport_.style.touchAction = 'none';\r\n        /**\r\n         * @private\r\n         * @type {!HTMLElement}\r\n         */\r\n        _this.overlayContainer_ = document.createElement('div');\r\n        _this.overlayContainer_.style.position = 'absolute';\r\n        _this.overlayContainer_.style.zIndex = '0';\r\n        _this.overlayContainer_.style.width = '100%';\r\n        _this.overlayContainer_.style.height = '100%';\r\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\r\n        _this.viewport_.appendChild(_this.overlayContainer_);\r\n        /**\r\n         * @private\r\n         * @type {!HTMLElement}\r\n         */\r\n        _this.overlayContainerStopEvent_ = document.createElement('div');\r\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\r\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\r\n        _this.overlayContainerStopEvent_.style.width = '100%';\r\n        _this.overlayContainerStopEvent_.style.height = '100%';\r\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\r\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\r\n        /**\r\n         * @private\r\n         * @type {MapBrowserEventHandler}\r\n         */\r\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\r\n        for (var key in MapBrowserEventType) {\r\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\r\n        }\r\n        /**\r\n         * @private\r\n         * @type {HTMLElement|Document}\r\n         */\r\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\r\n        /**\r\n         * @private\r\n         * @type {Array<import(\"./events.js\").EventsKey>}\r\n         */\r\n        _this.keyHandlerKeys_ = null;\r\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\r\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\r\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\r\n        /**\r\n         * @type {Collection<import(\"./control/Control.js\").default>}\r\n         * @protected\r\n         */\r\n        _this.controls = optionsInternal.controls || new Collection();\r\n        /**\r\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\r\n         * @protected\r\n         */\r\n        _this.interactions = optionsInternal.interactions || new Collection();\r\n        /**\r\n         * @type {Collection<import(\"./Overlay.js\").default>}\r\n         * @private\r\n         */\r\n        _this.overlays_ = optionsInternal.overlays;\r\n        /**\r\n         * A lookup of overlays by id.\r\n         * @private\r\n         * @type {Object<string, import(\"./Overlay.js\").default>}\r\n         */\r\n        _this.overlayIdIndex_ = {};\r\n        /**\r\n         * @type {import(\"./renderer/Map.js\").default}\r\n         * @private\r\n         */\r\n        _this.renderer_ = _this.createRenderer();\r\n        /**\r\n         * @type {function(Event): void|undefined}\r\n         * @private\r\n         */\r\n        _this.handleResize_;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./coordinate.js\").Coordinate}\r\n         */\r\n        _this.focus_ = null;\r\n        /**\r\n         * @private\r\n         * @type {!Array<PostRenderFunction>}\r\n         */\r\n        _this.postRenderFunctions_ = [];\r\n        /**\r\n         * @private\r\n         * @type {TileQueue}\r\n         */\r\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\r\n        /**\r\n         * Uids of features to skip at rendering time.\r\n         * @type {Object<string, boolean>}\r\n         * @private\r\n         */\r\n        _this.skippedFeatureUids_ = {};\r\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\r\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\r\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\r\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\r\n        // setProperties will trigger the rendering of the map if the map\r\n        // is \"defined\" already.\r\n        _this.setProperties(optionsInternal.values);\r\n        _this.controls.forEach(\r\n        /**\r\n         * @param {import(\"./control/Control.js\").default} control Control.\r\n         * @this {PluggableMap}\r\n         */\r\n        (function (control) {\r\n            control.setMap(this);\r\n        }).bind(_this));\r\n        listen(_this.controls, CollectionEventType.ADD, \r\n        /**\r\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n         */\r\n        function (event) {\r\n            event.element.setMap(this);\r\n        }, _this);\r\n        listen(_this.controls, CollectionEventType.REMOVE, \r\n        /**\r\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n         */\r\n        function (event) {\r\n            event.element.setMap(null);\r\n        }, _this);\r\n        _this.interactions.forEach(\r\n        /**\r\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\r\n         * @this {PluggableMap}\r\n         */\r\n        (function (interaction) {\r\n            interaction.setMap(this);\r\n        }).bind(_this));\r\n        listen(_this.interactions, CollectionEventType.ADD, \r\n        /**\r\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n         */\r\n        function (event) {\r\n            event.element.setMap(this);\r\n        }, _this);\r\n        listen(_this.interactions, CollectionEventType.REMOVE, \r\n        /**\r\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n         */\r\n        function (event) {\r\n            event.element.setMap(null);\r\n        }, _this);\r\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\r\n        listen(_this.overlays_, CollectionEventType.ADD, \r\n        /**\r\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n         */\r\n        function (event) {\r\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\r\n        }, _this);\r\n        listen(_this.overlays_, CollectionEventType.REMOVE, \r\n        /**\r\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n         */\r\n        function (event) {\r\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\r\n            var id = overlay.getId();\r\n            if (id !== undefined) {\r\n                delete this.overlayIdIndex_[id.toString()];\r\n            }\r\n            event.element.setMap(null);\r\n        }, _this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @abstract\r\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\r\n     */\r\n    PluggableMap.prototype.createRenderer = function () {\r\n        throw new Error('Use a map type that has a createRenderer method');\r\n    };\r\n    /**\r\n     * Add the given control to the map.\r\n     * @param {import(\"./control/Control.js\").default} control Control.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.addControl = function (control) {\r\n        this.getControls().push(control);\r\n    };\r\n    /**\r\n     * Add the given interaction to the map. If you want to add an interaction\r\n     * at another point of the collection use `getInteraction()` and the methods\r\n     * available on {@link module:ol/Collection~Collection}. This can be used to\r\n     * stop the event propagation from the handleEvent function. The interactions\r\n     * get to handle the events in the reverse order of this collection.\r\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.addInteraction = function (interaction) {\r\n        this.getInteractions().push(interaction);\r\n    };\r\n    /**\r\n     * Adds the given layer to the top of this map. If you want to add a layer\r\n     * elsewhere in the stack, use `getLayers()` and the methods available on\r\n     * {@link module:ol/Collection~Collection}.\r\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.addLayer = function (layer) {\r\n        var layers = this.getLayerGroup().getLayers();\r\n        layers.push(layer);\r\n    };\r\n    /**\r\n     * Add the given overlay to the map.\r\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.addOverlay = function (overlay) {\r\n        this.getOverlays().push(overlay);\r\n    };\r\n    /**\r\n     * This deals with map's overlay collection changes.\r\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n     * @private\r\n     */\r\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\r\n        var id = overlay.getId();\r\n        if (id !== undefined) {\r\n            this.overlayIdIndex_[id.toString()] = overlay;\r\n        }\r\n        overlay.setMap(this);\r\n    };\r\n    /**\r\n     *\r\n     * @inheritDoc\r\n     */\r\n    PluggableMap.prototype.disposeInternal = function () {\r\n        this.mapBrowserEventHandler_.dispose();\r\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\r\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\r\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\r\n        if (this.handleResize_ !== undefined) {\r\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\r\n            this.handleResize_ = undefined;\r\n        }\r\n        if (this.animationDelayKey_) {\r\n            cancelAnimationFrame(this.animationDelayKey_);\r\n            this.animationDelayKey_ = undefined;\r\n        }\r\n        this.setTarget(null);\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    /**\r\n     * Detect features that intersect a pixel on the viewport, and execute a\r\n     * callback with each intersecting feature. Layers included in the detection can\r\n     * be configured through the `layerFilter` option in `opt_options`.\r\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\r\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\r\n     *     called with two arguments. The first argument is one\r\n     *     {@link module:ol/Feature feature} or\r\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\r\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\r\n     *     unmanaged layers. To stop detection, callback functions can return a\r\n     *     truthy value.\r\n     * @param {AtPixelOptions=} opt_options Optional options.\r\n     * @return {T|undefined} Callback result, i.e. the return value of last\r\n     * callback execution, or the first truthy callback return value.\r\n     * @template S,T\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\r\n        if (!this.frameState_) {\r\n            return;\r\n        }\r\n        var coordinate = this.getCoordinateFromPixel(pixel);\r\n        opt_options = opt_options !== undefined ? opt_options :\r\n            /** @type {AtPixelOptions} */ ({});\r\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\r\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\r\n        var layerFilter = opt_options.layerFilter !== undefined ?\r\n            opt_options.layerFilter : TRUE;\r\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\r\n    };\r\n    /**\r\n     * Get all features that intersect a pixel on the viewport.\r\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n     * @param {AtPixelOptions=} opt_options Optional options.\r\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\r\n     * `null` if none were found.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\r\n        var features = null;\r\n        this.forEachFeatureAtPixel(pixel, function (feature) {\r\n            if (!features) {\r\n                features = [];\r\n            }\r\n            features.push(feature);\r\n        }, opt_options);\r\n        return features;\r\n    };\r\n    /**\r\n     * Detect layers that have a color value at a pixel on the viewport, and\r\n     * execute a callback with each matching layer. Layers included in the\r\n     * detection can be configured through `opt_layerFilter`.\r\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\r\n     *     Layer callback. This callback will receive two arguments: first is the\r\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\r\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\r\n     *     that do not currently support this argument. To stop detection, callback\r\n     *     functions can return a truthy value.\r\n     * @param {AtPixelOptions=} opt_options Configuration options.\r\n     * @return {T|undefined} Callback result, i.e. the return value of last\r\n     * callback execution, or the first truthy callback return value.\r\n     * @template S,T\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\r\n        if (!this.frameState_) {\r\n            return;\r\n        }\r\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\r\n        var hitTolerance = options.hitTolerance !== undefined ?\r\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\r\n        var layerFilter = options.layerFilter || TRUE;\r\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\r\n    };\r\n    /**\r\n     * Detect if features intersect a pixel on the viewport. Layers included in the\r\n     * detection can be configured through `opt_layerFilter`.\r\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n     * @param {AtPixelOptions=} opt_options Optional options.\r\n     * @return {boolean} Is there a feature at the given pixel?\r\n     * @template U\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\r\n        if (!this.frameState_) {\r\n            return false;\r\n        }\r\n        var coordinate = this.getCoordinateFromPixel(pixel);\r\n        opt_options = opt_options !== undefined ? opt_options :\r\n            /** @type {AtPixelOptions} */ ({});\r\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\r\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\r\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\r\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\r\n    };\r\n    /**\r\n     * Returns the coordinate in view projection for a browser event.\r\n     * @param {Event} event Event.\r\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.getEventCoordinate = function (event) {\r\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\r\n    };\r\n    /**\r\n     * Returns the map pixel position for a browser event relative to the viewport.\r\n     * @param {Event|TouchEvent} event Event.\r\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.getEventPixel = function (event) {\r\n        var viewportPosition = this.viewport_.getBoundingClientRect();\r\n        var eventPosition = 'changedTouches' in event ?\r\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\r\n            /** @type {MouseEvent} */ (event);\r\n        return [\r\n            eventPosition.clientX - viewportPosition.left,\r\n            eventPosition.clientY - viewportPosition.top\r\n        ];\r\n    };\r\n    /**\r\n     * Get the target in which this map is rendered.\r\n     * Note that this returns what is entered as an option or in setTarget:\r\n     * if that was an element, it returns an element; if a string, it returns that.\r\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\r\n     *     map is rendered in.\r\n     * @observable\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.getTarget = function () {\r\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\r\n    };\r\n    /**\r\n     * Get the DOM element into which this map is rendered. In contrast to\r\n     * `getTarget` this method always return an `Element`, or `null` if the\r\n     * map has no target.\r\n     * @return {HTMLElement} The element that the map is rendered in.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.getTargetElement = function () {\r\n        var target = this.getTarget();\r\n        if (target !== undefined) {\r\n            return typeof target === 'string' ? document.getElementById(target) : target;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\r\n     * map view projection.\r\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\r\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\r\n        var frameState = this.frameState_;\r\n        if (!frameState) {\r\n            return null;\r\n        }\r\n        else {\r\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\r\n        }\r\n    };\r\n    /**\r\n     * Get the map controls. Modifying this collection changes the controls\r\n     * associated with the map.\r\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.getControls = function () {\r\n        return this.controls;\r\n    };\r\n    /**\r\n     * Get the map overlays. Modifying this collection changes the overlays\r\n     * associated with the map.\r\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.getOverlays = function () {\r\n        return this.overlays_;\r\n    };\r\n    /**\r\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\r\n     * Note that the index treats string and numeric identifiers as the same. So\r\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\r\n     * @param {string|number} id Overlay identifier.\r\n     * @return {import(\"./Overlay.js\").default} Overlay.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.getOverlayById = function (id) {\r\n        var overlay = this.overlayIdIndex_[id.toString()];\r\n        return overlay !== undefined ? overlay : null;\r\n    };\r\n    /**\r\n     * Get the map interactions. Modifying this collection changes the interactions\r\n     * associated with the map.\r\n     *\r\n     * Interactions are used for e.g. pan, zoom and rotate.\r\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.getInteractions = function () {\r\n        return this.interactions;\r\n    };\r\n    /**\r\n     * Get the layergroup associated with this map.\r\n     * @return {LayerGroup} A layer group containing the layers in this map.\r\n     * @observable\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.getLayerGroup = function () {\r\n        return (\r\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\r\n    };\r\n    /**\r\n     * Get the collection of layers associated with this map.\r\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.getLayers = function () {\r\n        var layers = this.getLayerGroup().getLayers();\r\n        return layers;\r\n    };\r\n    /**\r\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\r\n     * projection and returns the corresponding pixel.\r\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\r\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\r\n        var frameState = this.frameState_;\r\n        if (!frameState) {\r\n            return null;\r\n        }\r\n        else {\r\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\r\n        }\r\n    };\r\n    /**\r\n     * Get the map renderer.\r\n     * @return {import(\"./renderer/Map.js\").default} Renderer\r\n     */\r\n    PluggableMap.prototype.getRenderer = function () {\r\n        return this.renderer_;\r\n    };\r\n    /**\r\n     * Get the size of this map.\r\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\r\n     * @observable\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.getSize = function () {\r\n        return (\r\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\r\n    };\r\n    /**\r\n     * Get the view associated with this map. A view manages properties such as\r\n     * center and resolution.\r\n     * @return {View} The view that controls this map.\r\n     * @observable\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.getView = function () {\r\n        return (\r\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\r\n    };\r\n    /**\r\n     * Get the element that serves as the map viewport.\r\n     * @return {HTMLElement} Viewport.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.getViewport = function () {\r\n        return this.viewport_;\r\n    };\r\n    /**\r\n     * Get the element that serves as the container for overlays.  Elements added to\r\n     * this container will let mousedown and touchstart events through to the map,\r\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\r\n     * events.\r\n     * @return {!HTMLElement} The map's overlay container.\r\n     */\r\n    PluggableMap.prototype.getOverlayContainer = function () {\r\n        return this.overlayContainer_;\r\n    };\r\n    /**\r\n     * Get the element that serves as a container for overlays that don't allow\r\n     * event propagation. Elements added to this container won't let mousedown and\r\n     * touchstart events through to the map, so clicks and gestures on an overlay\r\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\r\n     * @return {!HTMLElement} The map's overlay container that stops events.\r\n     */\r\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\r\n        return this.overlayContainerStopEvent_;\r\n    };\r\n    /**\r\n     * @param {import(\"./Tile.js\").default} tile Tile.\r\n     * @param {string} tileSourceKey Tile source key.\r\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\r\n     * @param {number} tileResolution Tile resolution.\r\n     * @return {number} Tile priority.\r\n     */\r\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\r\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\r\n        // are outside the visible extent.\r\n        var frameState = this.frameState_;\r\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\r\n            return DROP;\r\n        }\r\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\r\n            return DROP;\r\n        }\r\n        // Prioritize the highest zoom level tiles closest to the focus.\r\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\r\n        // Within a zoom level, tiles are prioritized by the distance in pixels\r\n        // between the center of the tile and the focus.  The factor of 65536 means\r\n        // that the prioritization should behave as desired for tiles up to\r\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\r\n        var deltaX = tileCenter[0] - frameState.focus[0];\r\n        var deltaY = tileCenter[1] - frameState.focus[1];\r\n        return 65536 * Math.log(tileResolution) +\r\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\r\n    };\r\n    /**\r\n     * @param {Event} browserEvent Browser event.\r\n     * @param {string=} opt_type Type.\r\n     */\r\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\r\n        var type = opt_type || browserEvent.type;\r\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\r\n        this.handleMapBrowserEvent(mapBrowserEvent);\r\n    };\r\n    /**\r\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\r\n     */\r\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\r\n        if (!this.frameState_) {\r\n            // With no view defined, we cannot translate pixels into geographical\r\n            // coordinates so interactions cannot be used.\r\n            return;\r\n        }\r\n        var target = mapBrowserEvent.originalEvent.target;\r\n        while (target instanceof HTMLElement) {\r\n            if (target.parentElement === this.overlayContainerStopEvent_) {\r\n                return;\r\n            }\r\n            target = target.parentElement;\r\n        }\r\n        this.focus_ = mapBrowserEvent.coordinate;\r\n        mapBrowserEvent.frameState = this.frameState_;\r\n        var interactionsArray = this.getInteractions().getArray();\r\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\r\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\r\n                var interaction = interactionsArray[i];\r\n                if (!interaction.getActive()) {\r\n                    continue;\r\n                }\r\n                var cont = interaction.handleEvent(mapBrowserEvent);\r\n                if (!cont) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    PluggableMap.prototype.handlePostRender = function () {\r\n        var frameState = this.frameState_;\r\n        // Manage the tile queue\r\n        // Image loads are expensive and a limited resource, so try to use them\r\n        // efficiently:\r\n        // * When the view is static we allow a large number of parallel tile loads\r\n        //   to complete the frame as quickly as possible.\r\n        // * When animating or interacting, image loads can cause janks, so we reduce\r\n        //   the maximum number of loads per frame and limit the number of parallel\r\n        //   tile loads to remain reactive to view changes and to reduce the chance of\r\n        //   loading tiles that will quickly disappear from view.\r\n        var tileQueue = this.tileQueue_;\r\n        if (!tileQueue.isEmpty()) {\r\n            var maxTotalLoading = this.maxTilesLoading_;\r\n            var maxNewLoads = maxTotalLoading;\r\n            if (frameState) {\r\n                var hints = frameState.viewHints;\r\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\r\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\r\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\r\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\r\n                }\r\n            }\r\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\r\n                tileQueue.reprioritize(); // FIXME only call if view has changed\r\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\r\n            }\r\n        }\r\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\r\n            !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\r\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\r\n        }\r\n        var postRenderFunctions = this.postRenderFunctions_;\r\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\r\n            postRenderFunctions[i](this, frameState);\r\n        }\r\n        postRenderFunctions.length = 0;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PluggableMap.prototype.handleSizeChanged_ = function () {\r\n        this.render();\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PluggableMap.prototype.handleTargetChanged_ = function () {\r\n        // target may be undefined, null, a string or an Element.\r\n        // If it's a string we convert it to an Element before proceeding.\r\n        // If it's not now an Element we remove the viewport from the DOM.\r\n        // If it's an Element we append the viewport element to it.\r\n        var targetElement;\r\n        if (this.getTarget()) {\r\n            targetElement = this.getTargetElement();\r\n        }\r\n        if (this.keyHandlerKeys_) {\r\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\r\n                unlistenByKey(this.keyHandlerKeys_[i]);\r\n            }\r\n            this.keyHandlerKeys_ = null;\r\n        }\r\n        if (!targetElement) {\r\n            this.renderer_.removeLayerRenderers();\r\n            removeNode(this.viewport_);\r\n            if (this.handleResize_ !== undefined) {\r\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\r\n                this.handleResize_ = undefined;\r\n            }\r\n        }\r\n        else {\r\n            targetElement.appendChild(this.viewport_);\r\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\r\n                targetElement : this.keyboardEventTarget_;\r\n            this.keyHandlerKeys_ = [\r\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\r\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\r\n            ];\r\n            if (!this.handleResize_) {\r\n                this.handleResize_ = this.updateSize.bind(this);\r\n                addEventListener(EventType.RESIZE, this.handleResize_, false);\r\n            }\r\n        }\r\n        this.updateSize();\r\n        // updateSize calls setSize, so no need to call this.render\r\n        // ourselves here.\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PluggableMap.prototype.handleTileChange_ = function () {\r\n        this.render();\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\r\n        this.render();\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PluggableMap.prototype.handleViewChanged_ = function () {\r\n        if (this.viewPropertyListenerKey_) {\r\n            unlistenByKey(this.viewPropertyListenerKey_);\r\n            this.viewPropertyListenerKey_ = null;\r\n        }\r\n        if (this.viewChangeListenerKey_) {\r\n            unlistenByKey(this.viewChangeListenerKey_);\r\n            this.viewChangeListenerKey_ = null;\r\n        }\r\n        var view = this.getView();\r\n        if (view) {\r\n            this.viewport_.setAttribute('data-view', getUid(view));\r\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\r\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\r\n        }\r\n        this.render();\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\r\n        if (this.layerGroupPropertyListenerKeys_) {\r\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\r\n            this.layerGroupPropertyListenerKeys_ = null;\r\n        }\r\n        var layerGroup = this.getLayerGroup();\r\n        if (layerGroup) {\r\n            this.layerGroupPropertyListenerKeys_ = [\r\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\r\n                listen(layerGroup, EventType.CHANGE, this.render, this)\r\n            ];\r\n        }\r\n        this.render();\r\n    };\r\n    /**\r\n     * @return {boolean} Is rendered.\r\n     */\r\n    PluggableMap.prototype.isRendered = function () {\r\n        return !!this.frameState_;\r\n    };\r\n    /**\r\n     * Requests an immediate render in a synchronous manner.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.renderSync = function () {\r\n        if (this.animationDelayKey_) {\r\n            cancelAnimationFrame(this.animationDelayKey_);\r\n        }\r\n        this.animationDelay_();\r\n    };\r\n    /**\r\n     * Request a map rendering (at the next animation frame).\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.render = function () {\r\n        if (this.animationDelayKey_ === undefined) {\r\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\r\n        }\r\n    };\r\n    /**\r\n     * Remove the given control from the map.\r\n     * @param {import(\"./control/Control.js\").default} control Control.\r\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\r\n     *     if the control was not found).\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.removeControl = function (control) {\r\n        return this.getControls().remove(control);\r\n    };\r\n    /**\r\n     * Remove the given interaction from the map.\r\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\r\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\r\n     *     undefined if the interaction was not found).\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.removeInteraction = function (interaction) {\r\n        return this.getInteractions().remove(interaction);\r\n    };\r\n    /**\r\n     * Removes the given layer from the map.\r\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\r\n     *     layer was not found).\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.removeLayer = function (layer) {\r\n        var layers = this.getLayerGroup().getLayers();\r\n        return layers.remove(layer);\r\n    };\r\n    /**\r\n     * Remove the given overlay from the map.\r\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\r\n     *     if the overlay was not found).\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.removeOverlay = function (overlay) {\r\n        return this.getOverlays().remove(overlay);\r\n    };\r\n    /**\r\n     * @param {number} time Time.\r\n     * @private\r\n     */\r\n    PluggableMap.prototype.renderFrame_ = function (time) {\r\n        var viewState;\r\n        var size = this.getSize();\r\n        var view = this.getView();\r\n        var extent = createEmpty();\r\n        var previousFrameState = this.frameState_;\r\n        /** @type {?FrameState} */\r\n        var frameState = null;\r\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\r\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\r\n            viewState = view.getState(this.pixelRatio_);\r\n            frameState = /** @type {FrameState} */ ({\r\n                animate: false,\r\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\r\n                extent: extent,\r\n                focus: this.focus_ ? this.focus_ : viewState.center,\r\n                index: this.frameIndex_++,\r\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\r\n                pixelRatio: this.pixelRatio_,\r\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\r\n                postRenderFunctions: [],\r\n                size: size,\r\n                skippedFeatureUids: this.skippedFeatureUids_,\r\n                tileQueue: this.tileQueue_,\r\n                time: time,\r\n                usedTiles: {},\r\n                viewState: viewState,\r\n                viewHints: viewHints,\r\n                wantedTiles: {}\r\n            });\r\n        }\r\n        if (frameState) {\r\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\r\n        }\r\n        this.frameState_ = frameState;\r\n        this.renderer_.renderFrame(frameState);\r\n        if (frameState) {\r\n            if (frameState.animate) {\r\n                this.render();\r\n            }\r\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\r\n            if (previousFrameState) {\r\n                var moveStart = !this.previousExtent_ ||\r\n                    (!isEmpty(this.previousExtent_) &&\r\n                        !equals(frameState.extent, this.previousExtent_));\r\n                if (moveStart) {\r\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\r\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\r\n                }\r\n            }\r\n            var idle = this.previousExtent_ &&\r\n                !frameState.viewHints[ViewHint.ANIMATING] &&\r\n                !frameState.viewHints[ViewHint.INTERACTING] &&\r\n                !equals(frameState.extent, this.previousExtent_);\r\n            if (idle) {\r\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\r\n                clone(frameState.extent, this.previousExtent_);\r\n            }\r\n        }\r\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\r\n        setTimeout(this.handlePostRender.bind(this), 0);\r\n    };\r\n    /**\r\n     * Sets the layergroup of this map.\r\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\r\n     * @observable\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\r\n        this.set(MapProperty.LAYERGROUP, layerGroup);\r\n    };\r\n    /**\r\n     * Set the size of this map.\r\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\r\n     * @observable\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.setSize = function (size) {\r\n        this.set(MapProperty.SIZE, size);\r\n    };\r\n    /**\r\n     * Set the target element to render this map into.\r\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\r\n     *     that the map is rendered in.\r\n     * @observable\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.setTarget = function (target) {\r\n        this.set(MapProperty.TARGET, target);\r\n    };\r\n    /**\r\n     * Set the view for this map.\r\n     * @param {View} view The view that controls this map.\r\n     * @observable\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.setView = function (view) {\r\n        this.set(MapProperty.VIEW, view);\r\n    };\r\n    /**\r\n     * @param {import(\"./Feature.js\").default} feature Feature.\r\n     */\r\n    PluggableMap.prototype.skipFeature = function (feature) {\r\n        this.skippedFeatureUids_[getUid(feature)] = true;\r\n        this.render();\r\n    };\r\n    /**\r\n     * Force a recalculation of the map viewport size.  This should be called when\r\n     * third-party code changes the size of the map viewport.\r\n     * @api\r\n     */\r\n    PluggableMap.prototype.updateSize = function () {\r\n        var targetElement = this.getTargetElement();\r\n        if (!targetElement) {\r\n            this.setSize(undefined);\r\n        }\r\n        else {\r\n            var computedStyle = getComputedStyle(targetElement);\r\n            this.setSize([\r\n                targetElement.offsetWidth -\r\n                    parseFloat(computedStyle['borderLeftWidth']) -\r\n                    parseFloat(computedStyle['paddingLeft']) -\r\n                    parseFloat(computedStyle['paddingRight']) -\r\n                    parseFloat(computedStyle['borderRightWidth']),\r\n                targetElement.offsetHeight -\r\n                    parseFloat(computedStyle['borderTopWidth']) -\r\n                    parseFloat(computedStyle['paddingTop']) -\r\n                    parseFloat(computedStyle['paddingBottom']) -\r\n                    parseFloat(computedStyle['borderBottomWidth'])\r\n            ]);\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"./Feature.js\").default} feature Feature.\r\n     */\r\n    PluggableMap.prototype.unskipFeature = function (feature) {\r\n        delete this.skippedFeatureUids_[getUid(feature)];\r\n        this.render();\r\n    };\r\n    return PluggableMap;\r\n}(BaseObject));\r\n/**\r\n * @param {MapOptions} options Map options.\r\n * @return {MapOptionsInternal} Internal map options.\r\n */\r\nfunction createOptionsInternal(options) {\r\n    /**\r\n     * @type {HTMLElement|Document}\r\n     */\r\n    var keyboardEventTarget = null;\r\n    if (options.keyboardEventTarget !== undefined) {\r\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\r\n            document.getElementById(options.keyboardEventTarget) :\r\n            options.keyboardEventTarget;\r\n    }\r\n    /**\r\n     * @type {Object<string, *>}\r\n     */\r\n    var values = {};\r\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\r\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\r\n    values[MapProperty.LAYERGROUP] = layerGroup;\r\n    values[MapProperty.TARGET] = options.target;\r\n    values[MapProperty.VIEW] = options.view !== undefined ?\r\n        options.view : new View();\r\n    var controls;\r\n    if (options.controls !== undefined) {\r\n        if (Array.isArray(options.controls)) {\r\n            controls = new Collection(options.controls.slice());\r\n        }\r\n        else {\r\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\r\n            controls = /** @type {Collection} */ (options.controls);\r\n        }\r\n    }\r\n    var interactions;\r\n    if (options.interactions !== undefined) {\r\n        if (Array.isArray(options.interactions)) {\r\n            interactions = new Collection(options.interactions.slice());\r\n        }\r\n        else {\r\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\r\n            interactions = /** @type {Collection} */ (options.interactions);\r\n        }\r\n    }\r\n    var overlays;\r\n    if (options.overlays !== undefined) {\r\n        if (Array.isArray(options.overlays)) {\r\n            overlays = new Collection(options.overlays.slice());\r\n        }\r\n        else {\r\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\r\n            overlays = options.overlays;\r\n        }\r\n    }\r\n    else {\r\n        overlays = new Collection();\r\n    }\r\n    return {\r\n        controls: controls,\r\n        interactions: interactions,\r\n        keyboardEventTarget: keyboardEventTarget,\r\n        overlays: overlays,\r\n        values: values\r\n    };\r\n}\r\nexport default PluggableMap;\r\n/**\r\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\r\n * @return {boolean} Layers have sources that are still loading.\r\n */\r\nfunction getLoading(layers) {\r\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\r\n        var layer = layers[i];\r\n        if (typeof /** @type {?} */ (layer).getLayers === 'function') {\r\n            return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\r\n        }\r\n        else {\r\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\r\n            if (source && source.loading) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/control/Rotate\r\n */\r\nimport Control from './Control.js';\r\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\r\nimport { easeOut } from '../easing.js';\r\nimport { listen } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-rotate'] CSS class name.\r\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\r\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n * @property {function()} [resetNorth] Function called when the control is clicked.\r\n * This will override the default `resetNorth`.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\r\n * rendered outside of the map's viewport.\r\n */\r\n/**\r\n * @classdesc\r\n * A button control to reset rotation to 0.\r\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\r\n * selector is added to the button when the rotation is 0.\r\n *\r\n * @api\r\n */\r\nvar Rotate = /** @class */ (function (_super) {\r\n    __extends(Rotate, _super);\r\n    /**\r\n     * @param {Options=} opt_options Rotate options.\r\n     */\r\n    function Rotate(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        _this = _super.call(this, {\r\n            element: document.createElement('div'),\r\n            render: options.render || render,\r\n            target: options.target\r\n        }) || this;\r\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\r\n        var label = options.label !== undefined ? options.label : '\\u21E7';\r\n        /**\r\n         * @type {HTMLElement}\r\n         * @private\r\n         */\r\n        _this.label_ = null;\r\n        if (typeof label === 'string') {\r\n            _this.label_ = document.createElement('span');\r\n            _this.label_.className = 'ol-compass';\r\n            _this.label_.textContent = label;\r\n        }\r\n        else {\r\n            _this.label_ = label;\r\n            _this.label_.classList.add('ol-compass');\r\n        }\r\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\r\n        var button = document.createElement('button');\r\n        button.className = className + '-reset';\r\n        button.setAttribute('type', 'button');\r\n        button.title = tipLabel;\r\n        button.appendChild(_this.label_);\r\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\r\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n        var element = _this.element;\r\n        element.className = cssClasses;\r\n        element.appendChild(button);\r\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n        /**\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.rotation_ = undefined;\r\n        if (_this.autoHide_) {\r\n            _this.element.classList.add(CLASS_HIDDEN);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {MouseEvent} event The event to handle\r\n     * @private\r\n     */\r\n    Rotate.prototype.handleClick_ = function (event) {\r\n        event.preventDefault();\r\n        if (this.callResetNorth_ !== undefined) {\r\n            this.callResetNorth_();\r\n        }\r\n        else {\r\n            this.resetNorth_();\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    Rotate.prototype.resetNorth_ = function () {\r\n        var map = this.getMap();\r\n        var view = map.getView();\r\n        if (!view) {\r\n            // the map does not have a view, so we can't act\r\n            // upon it\r\n            return;\r\n        }\r\n        if (view.getRotation() !== undefined) {\r\n            if (this.duration_ > 0) {\r\n                view.animate({\r\n                    rotation: 0,\r\n                    duration: this.duration_,\r\n                    easing: easeOut\r\n                });\r\n            }\r\n            else {\r\n                view.setRotation(0);\r\n            }\r\n        }\r\n    };\r\n    return Rotate;\r\n}(Control));\r\n/**\r\n * Update the rotate control element.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {Rotate}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n    var frameState = mapEvent.frameState;\r\n    if (!frameState) {\r\n        return;\r\n    }\r\n    var rotation = frameState.viewState.rotation;\r\n    if (rotation != this.rotation_) {\r\n        var transform = 'rotate(' + rotation + 'rad)';\r\n        if (this.autoHide_) {\r\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\r\n            if (!contains && rotation === 0) {\r\n                this.element.classList.add(CLASS_HIDDEN);\r\n            }\r\n            else if (contains && rotation !== 0) {\r\n                this.element.classList.remove(CLASS_HIDDEN);\r\n            }\r\n        }\r\n        this.label_.style.msTransform = transform;\r\n        this.label_.style.webkitTransform = transform;\r\n        this.label_.style.transform = transform;\r\n    }\r\n    this.rotation_ = rotation;\r\n}\r\nexport default Rotate;\r\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/control/Zoom\r\n */\r\nimport { listen } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport Control from './Control.js';\r\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\r\nimport { easeOut } from '../easing.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {string} [className='ol-zoom'] CSS class name.\r\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\r\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\r\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\r\n * @property {number} [delta=1] The zoom delta applied on each click.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\r\n * rendered outside of the map's viewport.\r\n */\r\n/**\r\n * @classdesc\r\n * A control with 2 buttons, one for zoom in and one for zoom out.\r\n * This control is one of the default controls of a map. To style this control\r\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\r\n *\r\n * @api\r\n */\r\nvar Zoom = /** @class */ (function (_super) {\r\n    __extends(Zoom, _super);\r\n    /**\r\n     * @param {Options=} opt_options Zoom options.\r\n     */\r\n    function Zoom(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        _this = _super.call(this, {\r\n            element: document.createElement('div'),\r\n            target: options.target\r\n        }) || this;\r\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\r\n        var delta = options.delta !== undefined ? options.delta : 1;\r\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\r\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\r\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\r\n            options.zoomInTipLabel : 'Zoom in';\r\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\r\n            options.zoomOutTipLabel : 'Zoom out';\r\n        var inElement = document.createElement('button');\r\n        inElement.className = className + '-in';\r\n        inElement.setAttribute('type', 'button');\r\n        inElement.title = zoomInTipLabel;\r\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\r\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\r\n        var outElement = document.createElement('button');\r\n        outElement.className = className + '-out';\r\n        outElement.setAttribute('type', 'button');\r\n        outElement.title = zoomOutTipLabel;\r\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\r\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\r\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n        var element = _this.element;\r\n        element.className = cssClasses;\r\n        element.appendChild(inElement);\r\n        element.appendChild(outElement);\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {number} delta Zoom delta.\r\n     * @param {MouseEvent} event The event to handle\r\n     * @private\r\n     */\r\n    Zoom.prototype.handleClick_ = function (delta, event) {\r\n        event.preventDefault();\r\n        this.zoomByDelta_(delta);\r\n    };\r\n    /**\r\n     * @param {number} delta Zoom delta.\r\n     * @private\r\n     */\r\n    Zoom.prototype.zoomByDelta_ = function (delta) {\r\n        var map = this.getMap();\r\n        var view = map.getView();\r\n        if (!view) {\r\n            // the map does not have a view, so we can't act\r\n            // upon it\r\n            return;\r\n        }\r\n        var currentResolution = view.getResolution();\r\n        if (currentResolution) {\r\n            var newResolution = view.constrainResolution(currentResolution, delta);\r\n            if (this.duration_ > 0) {\r\n                if (view.getAnimating()) {\r\n                    view.cancelAnimations();\r\n                }\r\n                view.animate({\r\n                    resolution: newResolution,\r\n                    duration: this.duration_,\r\n                    easing: easeOut\r\n                });\r\n            }\r\n            else {\r\n                view.setResolution(newResolution);\r\n            }\r\n        }\r\n    };\r\n    return Zoom;\r\n}(Control));\r\nexport default Zoom;\r\n//# sourceMappingURL=Zoom.js.map","/**\r\n * @module ol/control/util\r\n */\r\nimport Collection from '../Collection.js';\r\nimport Attribution from './Attribution.js';\r\nimport Rotate from './Rotate.js';\r\nimport Zoom from './Zoom.js';\r\n/**\r\n * @typedef {Object} DefaultsOptions\r\n * @property {boolean} [attribution=true] Include\r\n * {@link module:ol/control/Attribution~Attribution}.\r\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\r\n * Options for {@link module:ol/control/Attribution~Attribution}.\r\n * @property {boolean} [rotate=true] Include\r\n * {@link module:ol/control/Rotate~Rotate}.\r\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\r\n * for {@link module:ol/control/Rotate~Rotate}.\r\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\r\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\r\n * {@link module:ol/control/Zoom~Zoom}.\r\n * @api\r\n */\r\n/**\r\n * Set of controls included in maps by default. Unless configured otherwise,\r\n * this returns a collection containing an instance of each of the following\r\n * controls:\r\n * * {@link module:ol/control/Zoom~Zoom}\r\n * * {@link module:ol/control/Rotate~Rotate}\r\n * * {@link module:ol/control/Attribution~Attribution}\r\n *\r\n * @param {DefaultsOptions=} opt_options\r\n * Defaults options.\r\n * @return {Collection<import(\"./Control.js\").default>}\r\n * Controls.\r\n * @function module:ol/control.defaults\r\n * @api\r\n */\r\nexport function defaults(opt_options) {\r\n    var options = opt_options ? opt_options : {};\r\n    var controls = new Collection();\r\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\r\n    if (zoomControl) {\r\n        controls.push(new Zoom(options.zoomOptions));\r\n    }\r\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\r\n    if (rotateControl) {\r\n        controls.push(new Rotate(options.rotateOptions));\r\n    }\r\n    var attributionControl = options.attribution !== undefined ?\r\n        options.attribution : true;\r\n    if (attributionControl) {\r\n        controls.push(new Attribution(options.attributionOptions));\r\n    }\r\n    return controls;\r\n}\r\n//# sourceMappingURL=util.js.map","/**\r\n * @module ol/Kinetic\r\n */\r\n/**\r\n * @classdesc\r\n * Implementation of inertial deceleration for map movement.\r\n *\r\n * @api\r\n */\r\nvar Kinetic = /** @class */ (function () {\r\n    /**\r\n     * @param {number} decay Rate of decay (must be negative).\r\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\r\n     * @param {number} delay Delay to consider to calculate the kinetic\r\n     *     initial values (milliseconds).\r\n     */\r\n    function Kinetic(decay, minVelocity, delay) {\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.decay_ = decay;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.minVelocity_ = minVelocity;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.delay_ = delay;\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        this.points_ = [];\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.angle_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.initialVelocity_ = 0;\r\n    }\r\n    /**\r\n     * FIXME empty description for jsdoc\r\n     */\r\n    Kinetic.prototype.begin = function () {\r\n        this.points_.length = 0;\r\n        this.angle_ = 0;\r\n        this.initialVelocity_ = 0;\r\n    };\r\n    /**\r\n     * @param {number} x X.\r\n     * @param {number} y Y.\r\n     */\r\n    Kinetic.prototype.update = function (x, y) {\r\n        this.points_.push(x, y, Date.now());\r\n    };\r\n    /**\r\n     * @return {boolean} Whether we should do kinetic animation.\r\n     */\r\n    Kinetic.prototype.end = function () {\r\n        if (this.points_.length < 6) {\r\n            // at least 2 points are required (i.e. there must be at least 6 elements\r\n            // in the array)\r\n            return false;\r\n        }\r\n        var delay = Date.now() - this.delay_;\r\n        var lastIndex = this.points_.length - 3;\r\n        if (this.points_[lastIndex + 2] < delay) {\r\n            // the last tracked point is too old, which means that the user stopped\r\n            // panning before releasing the map\r\n            return false;\r\n        }\r\n        // get the first point which still falls into the delay time\r\n        var firstIndex = lastIndex - 3;\r\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\r\n            firstIndex -= 3;\r\n        }\r\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\r\n        // we don't want a duration of 0 (divide by zero)\r\n        // we also make sure the user panned for a duration of at least one frame\r\n        // (1/60s) to compute sane displacement values\r\n        if (duration < 1000 / 60) {\r\n            return false;\r\n        }\r\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\r\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\r\n        this.angle_ = Math.atan2(dy, dx);\r\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\r\n        return this.initialVelocity_ > this.minVelocity_;\r\n    };\r\n    /**\r\n     * @return {number} Total distance travelled (pixels).\r\n     */\r\n    Kinetic.prototype.getDistance = function () {\r\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\r\n    };\r\n    /**\r\n     * @return {number} Angle of the kinetic panning animation (radians).\r\n     */\r\n    Kinetic.prototype.getAngle = function () {\r\n        return this.angle_;\r\n    };\r\n    return Kinetic;\r\n}());\r\nexport default Kinetic;\r\n//# sourceMappingURL=Kinetic.js.map","/**\r\n * @module ol/interaction/Property\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n    ACTIVE: 'active'\r\n};\r\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/Interaction\r\n */\r\nimport BaseObject from '../Object.js';\r\nimport { easeOut, linear } from '../easing.js';\r\nimport InteractionProperty from './Property.js';\r\nimport { clamp } from '../math.js';\r\n/**\r\n * Object literal with config options for interactions.\r\n * @typedef {Object} InteractionOptions\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\r\n * Method called by the map to notify the interaction that a browser event was\r\n * dispatched to the map. If the function returns a falsy value, propagation of\r\n * the event to other interactions in the map's interactions chain will be\r\n * prevented (this includes functions with no explicit return). The interactions\r\n * are traversed in reverse order of the interactions collection of the map.\r\n */\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * User actions that change the state of the map. Some are similar to controls,\r\n * but are not associated with a DOM element.\r\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\r\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\r\n * by a keyboard event not a button element event.\r\n * Although interactions do not have a DOM element, some of them do render\r\n * vectors and so are visible on the screen.\r\n * @api\r\n */\r\nvar Interaction = /** @class */ (function (_super) {\r\n    __extends(Interaction, _super);\r\n    /**\r\n     * @param {InteractionOptions} options Options.\r\n     */\r\n    function Interaction(options) {\r\n        var _this = _super.call(this) || this;\r\n        if (options.handleEvent) {\r\n            _this.handleEvent = options.handleEvent;\r\n        }\r\n        /**\r\n         * @private\r\n         * @type {import(\"../PluggableMap.js\").default}\r\n         */\r\n        _this.map_ = null;\r\n        _this.setActive(true);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return whether the interaction is currently active.\r\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Interaction.prototype.getActive = function () {\r\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\r\n    };\r\n    /**\r\n     * Get the map associated with this interaction.\r\n     * @return {import(\"../PluggableMap.js\").default} Map.\r\n     * @api\r\n     */\r\n    Interaction.prototype.getMap = function () {\r\n        return this.map_;\r\n    };\r\n    /**\r\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\r\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n     * @return {boolean} `false` to stop event propagation.\r\n     * @api\r\n     */\r\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\r\n        return true;\r\n    };\r\n    /**\r\n     * Activate or deactivate the interaction.\r\n     * @param {boolean} active Active.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Interaction.prototype.setActive = function (active) {\r\n        this.set(InteractionProperty.ACTIVE, active);\r\n    };\r\n    /**\r\n     * Remove the interaction from its current map and attach it to the new map.\r\n     * Subclasses may set up event handlers to get notified about changes to\r\n     * the map here.\r\n     * @param {import(\"../PluggableMap.js\").default} map Map.\r\n     */\r\n    Interaction.prototype.setMap = function (map) {\r\n        this.map_ = map;\r\n    };\r\n    return Interaction;\r\n}(BaseObject));\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function pan(view, delta, opt_duration) {\r\n    var currentCenter = view.getCenter();\r\n    if (currentCenter) {\r\n        var center = view.constrainCenter([currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\r\n        if (opt_duration) {\r\n            view.animate({\r\n                duration: opt_duration,\r\n                easing: linear,\r\n                center: center\r\n            });\r\n        }\r\n        else {\r\n            view.setCenter(center);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {number|undefined} rotation Rotation.\r\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\r\n    rotation = view.constrainRotation(rotation, 0);\r\n    rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\r\n}\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {number|undefined} rotation Rotation.\r\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\r\n    if (rotation !== undefined) {\r\n        var currentRotation = view.getRotation();\r\n        var currentCenter = view.getCenter();\r\n        if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\r\n            view.animate({\r\n                rotation: rotation,\r\n                anchor: opt_anchor,\r\n                duration: opt_duration,\r\n                easing: easeOut\r\n            });\r\n        }\r\n        else {\r\n            view.rotate(rotation, opt_anchor);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {number|undefined} resolution Resolution to go to.\r\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\r\n * @param {number=} opt_duration Duration.\r\n * @param {number=} opt_direction Zooming direction; > 0 indicates\r\n *     zooming out, in which case the constraints system will select\r\n *     the largest nearest resolution; < 0 indicates zooming in, in\r\n *     which case the constraints system will select the smallest\r\n *     nearest resolution; == 0 indicates that the zooming direction\r\n *     is unknown/not relevant, in which case the constraints system\r\n *     will select the nearest resolution. If not defined 0 is\r\n *     assumed.\r\n */\r\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\r\n    resolution = view.constrainResolution(resolution, 0, opt_direction);\r\n    zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\r\n}\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {number} delta Delta from previous zoom level.\r\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\r\n    var currentResolution = view.getResolution();\r\n    var resolution = view.constrainResolution(currentResolution, delta, 0);\r\n    if (resolution !== undefined) {\r\n        var resolutions = view.getResolutions();\r\n        resolution = clamp(resolution, view.getMinResolution() || resolutions[resolutions.length - 1], view.getMaxResolution() || resolutions[0]);\r\n    }\r\n    // If we have a constraint on center, we need to change the anchor so that the\r\n    // new center is within the extent. We first calculate the new center, apply\r\n    // the constraint to it, and then calculate back the anchor\r\n    if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\r\n        var currentCenter = view.getCenter();\r\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\r\n        center = view.constrainCenter(center);\r\n        opt_anchor = [\r\n            (resolution * currentCenter[0] - currentResolution * center[0]) /\r\n                (resolution - currentResolution),\r\n            (resolution * currentCenter[1] - currentResolution * center[1]) /\r\n                (resolution - currentResolution)\r\n        ];\r\n    }\r\n    zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\r\n}\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {number|undefined} resolution Resolution to go to.\r\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\r\n    if (resolution) {\r\n        var currentResolution = view.getResolution();\r\n        var currentCenter = view.getCenter();\r\n        if (currentResolution !== undefined && currentCenter &&\r\n            resolution !== currentResolution && opt_duration) {\r\n            view.animate({\r\n                resolution: resolution,\r\n                anchor: opt_anchor,\r\n                duration: opt_duration,\r\n                easing: easeOut\r\n            });\r\n        }\r\n        else {\r\n            if (opt_anchor) {\r\n                var center = view.calculateCenterZoom(resolution, opt_anchor);\r\n                view.setCenter(center);\r\n            }\r\n            view.setResolution(resolution);\r\n        }\r\n    }\r\n}\r\nexport default Interaction;\r\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/DoubleClickZoom\r\n */\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport Interaction, { zoomByDelta } from './Interaction.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {number} [delta=1] The zoom delta applied on each double click.\r\n */\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom by double-clicking on the map.\r\n * @api\r\n */\r\nvar DoubleClickZoom = /** @class */ (function (_super) {\r\n    __extends(DoubleClickZoom, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function DoubleClickZoom(opt_options) {\r\n        var _this = _super.call(this, {\r\n            handleEvent: handleEvent\r\n        }) || this;\r\n        var options = opt_options ? opt_options : {};\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.delta_ = options.delta ? options.delta : 1;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n        return _this;\r\n    }\r\n    return DoubleClickZoom;\r\n}(Interaction));\r\n/**\r\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\r\n * doubleclick) and eventually zooms the map.\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} `false` to stop event propagation.\r\n * @this {DoubleClickZoom}\r\n */\r\nfunction handleEvent(mapBrowserEvent) {\r\n    var stopEvent = false;\r\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\r\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\r\n        var map = mapBrowserEvent.map;\r\n        var anchor = mapBrowserEvent.coordinate;\r\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\r\n        var view = map.getView();\r\n        zoomByDelta(view, delta, anchor, this.duration_);\r\n        mapBrowserEvent.preventDefault();\r\n        stopEvent = true;\r\n    }\r\n    return !stopEvent;\r\n}\r\nexport default DoubleClickZoom;\r\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\r\n * @module ol/events/condition\r\n */\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport { assert } from '../asserts.js';\r\nimport { TRUE, FALSE } from '../functions.js';\r\nimport { WEBKIT, MAC } from '../has.js';\r\n/**\r\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\r\n * `{boolean}`. If the condition is met, true should be returned.\r\n *\r\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\r\n */\r\n/**\r\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\r\n * additionally the shift-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the alt key is pressed.\r\n * @api\r\n */\r\nexport var altKeyOnly = function (mapBrowserEvent) {\r\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\r\n    return (originalEvent.altKey &&\r\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n        !originalEvent.shiftKey);\r\n};\r\n/**\r\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\r\n * (e.g. when additionally the platform-modifier-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the alt and shift keys are pressed.\r\n * @api\r\n */\r\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\r\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\r\n    return (originalEvent.altKey &&\r\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n        originalEvent.shiftKey);\r\n};\r\n/**\r\n * Return `true` if the map has the focus. This condition requires a map target\r\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\r\n * @return {boolean} The map has the focus.\r\n * @api\r\n */\r\nexport var focus = function (event) {\r\n    return event.target.getTargetElement() === document.activeElement;\r\n};\r\n/**\r\n * Return always true.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True.\r\n * @api\r\n */\r\nexport var always = TRUE;\r\n/**\r\n * Return `true` if the event is a `click` event, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event is a map `click` event.\r\n * @api\r\n */\r\nexport var click = function (mapBrowserEvent) {\r\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\r\n};\r\n/**\r\n * Return `true` if the event has an \"action\"-producing mouse button.\r\n *\r\n * By definition, this includes left-click on windows/linux, and left-click\r\n * without the ctrl key on Macs.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} The result.\r\n */\r\nexport var mouseActionButton = function (mapBrowserEvent) {\r\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\r\n    return originalEvent.button == 0 &&\r\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\r\n};\r\n/**\r\n * Return always false.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} False.\r\n * @api\r\n */\r\nexport var never = FALSE;\r\n/**\r\n * Return `true` if the browser event is a `pointermove` event, `false`\r\n * otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the browser event is a `pointermove` event.\r\n * @api\r\n */\r\nexport var pointerMove = function (mapBrowserEvent) {\r\n    return mapBrowserEvent.type == 'pointermove';\r\n};\r\n/**\r\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event is a map `singleclick` event.\r\n * @api\r\n */\r\nexport var singleClick = function (mapBrowserEvent) {\r\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\r\n};\r\n/**\r\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event is a map `dblclick` event.\r\n * @api\r\n */\r\nexport var doubleClick = function (mapBrowserEvent) {\r\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\r\n};\r\n/**\r\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\r\n * pressed.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True only if there no modifier keys are pressed.\r\n * @api\r\n */\r\nexport var noModifierKeys = function (mapBrowserEvent) {\r\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\r\n    return (!originalEvent.altKey &&\r\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n        !originalEvent.shiftKey);\r\n};\r\n/**\r\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\r\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\r\n * the shift-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the platform modifier key is pressed.\r\n * @api\r\n */\r\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\r\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\r\n    return !originalEvent.altKey &&\r\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\r\n        !originalEvent.shiftKey;\r\n};\r\n/**\r\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\r\n * additionally the alt-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the shift key is pressed.\r\n * @api\r\n */\r\nexport var shiftKeyOnly = function (mapBrowserEvent) {\r\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\r\n    return (!originalEvent.altKey &&\r\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n        originalEvent.shiftKey);\r\n};\r\n/**\r\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\r\n * `<select>`- or `<textarea>`-element, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True only if the target element is not editable.\r\n * @api\r\n */\r\nexport var targetNotEditable = function (mapBrowserEvent) {\r\n    var target = mapBrowserEvent.originalEvent.target;\r\n    var tagName = /** @type {Element} */ (target).tagName;\r\n    return (tagName !== 'INPUT' &&\r\n        tagName !== 'SELECT' &&\r\n        tagName !== 'TEXTAREA');\r\n};\r\n/**\r\n * Return `true` if the event originates from a mouse device.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event originates from a mouse device.\r\n * @api\r\n */\r\nexport var mouseOnly = function (mapBrowserEvent) {\r\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\r\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\r\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\r\n    return pointerEvent.pointerType == 'mouse';\r\n};\r\n/**\r\n * Return `true` if the event originates from a primary pointer in\r\n * contact with the surface or if the left mouse button is pressed.\r\n * See http://www.w3.org/TR/pointerevents/#button-states.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event originates from a primary pointer.\r\n * @api\r\n */\r\nexport var primaryAction = function (mapBrowserEvent) {\r\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\r\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\r\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\r\n};\r\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/Pointer\r\n */\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport Interaction from './Interaction.js';\r\nimport { getValues } from '../obj.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\r\n * Function handling \"down\" events. If the function returns `true` then a drag\r\n * sequence is started.\r\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\r\n * Function handling \"drag\" events. This function is called on \"move\" events\r\n * during a drag sequence.\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\r\n * Method called by the map to notify the interaction that a browser event was\r\n * dispatched to the map. The function may return `false` to prevent the\r\n * propagation of the event to other interactions in the map's interactions\r\n * chain.\r\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\r\n * Function handling \"move\" events. This function is called on \"move\" events,\r\n * also during a drag sequence (so during a drag sequence both the\r\n * `handleDragEvent` function and this function are called).\r\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\r\n *  Function handling \"up\" events. If the function returns `false` then the\r\n * current drag sequence is stopped.\r\n * @property {function(boolean):boolean} [stopDown]\r\n * Should the down event be propagated to other interactions, or should be\r\n * stopped?\r\n */\r\n/**\r\n * @classdesc\r\n * Base class that calls user-defined functions on `down`, `move` and `up`\r\n * events. This class also manages \"drag sequences\".\r\n *\r\n * When the `handleDownEvent` user function returns `true` a drag sequence is\r\n * started. During a drag sequence the `handleDragEvent` user function is\r\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\r\n * user function is called and returns `false`.\r\n * @api\r\n */\r\nvar PointerInteraction = /** @class */ (function (_super) {\r\n    __extends(PointerInteraction, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function PointerInteraction(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\r\n        if (options.handleDownEvent) {\r\n            _this.handleDownEvent = options.handleDownEvent;\r\n        }\r\n        if (options.handleDragEvent) {\r\n            _this.handleDragEvent = options.handleDragEvent;\r\n        }\r\n        if (options.handleMoveEvent) {\r\n            _this.handleMoveEvent = options.handleMoveEvent;\r\n        }\r\n        if (options.handleUpEvent) {\r\n            _this.handleUpEvent = options.handleUpEvent;\r\n        }\r\n        if (options.stopDown) {\r\n            _this.stopDown = options.stopDown;\r\n        }\r\n        /**\r\n         * @type {boolean}\r\n         * @protected\r\n         */\r\n        _this.handlingDownUpSequence = false;\r\n        /**\r\n         * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\r\n         * @private\r\n         */\r\n        _this.trackedPointers_ = {};\r\n        /**\r\n         * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\r\n         * @protected\r\n         */\r\n        _this.targetPointers = [];\r\n        return _this;\r\n    }\r\n    /**\r\n     * Handle pointer down events.\r\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n     * @return {boolean} If the event was consumed.\r\n     * @protected\r\n     */\r\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Handle pointer drag events.\r\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n     * @protected\r\n     */\r\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\r\n    /**\r\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\r\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\r\n     * detected.\r\n     * @override\r\n     * @api\r\n     */\r\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\r\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\r\n            return true;\r\n        }\r\n        var stopEvent = false;\r\n        this.updateTrackedPointers_(mapBrowserEvent);\r\n        if (this.handlingDownUpSequence) {\r\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\r\n                this.handleDragEvent(mapBrowserEvent);\r\n            }\r\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\r\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\r\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\r\n            }\r\n        }\r\n        else {\r\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\r\n                var handled = this.handleDownEvent(mapBrowserEvent);\r\n                if (handled) {\r\n                    mapBrowserEvent.preventDefault();\r\n                }\r\n                this.handlingDownUpSequence = handled;\r\n                stopEvent = this.stopDown(handled);\r\n            }\r\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\r\n                this.handleMoveEvent(mapBrowserEvent);\r\n            }\r\n        }\r\n        return !stopEvent;\r\n    };\r\n    /**\r\n     * Handle pointer move events.\r\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n     * @protected\r\n     */\r\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\r\n    /**\r\n     * Handle pointer up events.\r\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n     * @return {boolean} If the event was consumed.\r\n     * @protected\r\n     */\r\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\r\n        return false;\r\n    };\r\n    /**\r\n     * This function is used to determine if \"down\" events should be propagated\r\n     * to other interactions or should be stopped.\r\n     * @param {boolean} handled Was the event handled by the interaction?\r\n     * @return {boolean} Should the `down` event be stopped?\r\n     */\r\n    PointerInteraction.prototype.stopDown = function (handled) {\r\n        return handled;\r\n    };\r\n    /**\r\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n     * @private\r\n     */\r\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\r\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\r\n            var event_1 = mapBrowserEvent.pointerEvent;\r\n            var id = event_1.pointerId.toString();\r\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\r\n                delete this.trackedPointers_[id];\r\n            }\r\n            else if (mapBrowserEvent.type ==\r\n                MapBrowserEventType.POINTERDOWN) {\r\n                this.trackedPointers_[id] = event_1;\r\n            }\r\n            else if (id in this.trackedPointers_) {\r\n                // update only when there was a pointerdown event for this pointer\r\n                this.trackedPointers_[id] = event_1;\r\n            }\r\n            this.targetPointers = getValues(this.trackedPointers_);\r\n        }\r\n    };\r\n    return PointerInteraction;\r\n}(Interaction));\r\n/**\r\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\r\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\r\n */\r\nexport function centroid(pointerEvents) {\r\n    var length = pointerEvents.length;\r\n    var clientX = 0;\r\n    var clientY = 0;\r\n    for (var i = 0; i < length; i++) {\r\n        clientX += pointerEvents[i].clientX;\r\n        clientY += pointerEvents[i].clientY;\r\n    }\r\n    return [clientX / length, clientY / length];\r\n}\r\n/**\r\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\r\n *     or pointerup event.\r\n */\r\nfunction isPointerDraggingEvent(mapBrowserEvent) {\r\n    var type = mapBrowserEvent.type;\r\n    return type === MapBrowserEventType.POINTERDOWN ||\r\n        type === MapBrowserEventType.POINTERDRAG ||\r\n        type === MapBrowserEventType.POINTERUP;\r\n}\r\nexport default PointerInteraction;\r\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/DragPan\r\n */\r\nimport ViewHint from '../ViewHint.js';\r\nimport { scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate } from '../coordinate.js';\r\nimport { easeOut } from '../easing.js';\r\nimport { noModifierKeys } from '../events/condition.js';\r\nimport { FALSE } from '../functions.js';\r\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition~noModifierKeys}.\r\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\r\n */\r\n/**\r\n * @classdesc\r\n * Allows the user to pan the map by dragging the map.\r\n * @api\r\n */\r\nvar DragPan = /** @class */ (function (_super) {\r\n    __extends(DragPan, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function DragPan(opt_options) {\r\n        var _this = _super.call(this, {\r\n            stopDown: FALSE\r\n        }) || this;\r\n        var options = opt_options ? opt_options : {};\r\n        /**\r\n         * @private\r\n         * @type {import(\"../Kinetic.js\").default|undefined}\r\n         */\r\n        _this.kinetic_ = options.kinetic;\r\n        /**\r\n         * @type {import(\"../pixel.js\").Pixel}\r\n         */\r\n        _this.lastCentroid = null;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.lastPointersCount_;\r\n        /**\r\n         * @type {boolean}\r\n         */\r\n        _this.panning_ = false;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         */\r\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.noKinetic_ = false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\r\n        if (!this.panning_) {\r\n            this.panning_ = true;\r\n            this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\r\n        }\r\n        var targetPointers = this.targetPointers;\r\n        var centroid = centroidFromPointers(targetPointers);\r\n        if (targetPointers.length == this.lastPointersCount_) {\r\n            if (this.kinetic_) {\r\n                this.kinetic_.update(centroid[0], centroid[1]);\r\n            }\r\n            if (this.lastCentroid) {\r\n                var deltaX = this.lastCentroid[0] - centroid[0];\r\n                var deltaY = centroid[1] - this.lastCentroid[1];\r\n                var map = mapBrowserEvent.map;\r\n                var view = map.getView();\r\n                var center = [deltaX, deltaY];\r\n                scaleCoordinate(center, view.getResolution());\r\n                rotateCoordinate(center, view.getRotation());\r\n                addCoordinate(center, view.getCenter());\r\n                center = view.constrainCenter(center);\r\n                view.setCenter(center);\r\n            }\r\n        }\r\n        else if (this.kinetic_) {\r\n            // reset so we don't overestimate the kinetic energy after\r\n            // after one finger down, tiny drag, second finger down\r\n            this.kinetic_.begin();\r\n        }\r\n        this.lastCentroid = centroid;\r\n        this.lastPointersCount_ = targetPointers.length;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\r\n        var map = mapBrowserEvent.map;\r\n        var view = map.getView();\r\n        if (this.targetPointers.length === 0) {\r\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\r\n                var distance = this.kinetic_.getDistance();\r\n                var angle = this.kinetic_.getAngle();\r\n                var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\r\n                var centerpx = map.getPixelFromCoordinate(center);\r\n                var dest = map.getCoordinateFromPixel([\r\n                    centerpx[0] - distance * Math.cos(angle),\r\n                    centerpx[1] - distance * Math.sin(angle)\r\n                ]);\r\n                view.animate({\r\n                    center: view.constrainCenter(dest),\r\n                    duration: 500,\r\n                    easing: easeOut\r\n                });\r\n            }\r\n            if (this.panning_) {\r\n                this.panning_ = false;\r\n                view.setHint(ViewHint.INTERACTING, -1);\r\n            }\r\n            return false;\r\n        }\r\n        else {\r\n            if (this.kinetic_) {\r\n                // reset so we don't overestimate the kinetic energy after\r\n                // after one finger up, tiny drag, second finger up\r\n                this.kinetic_.begin();\r\n            }\r\n            this.lastCentroid = null;\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\r\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\r\n            var map = mapBrowserEvent.map;\r\n            var view = map.getView();\r\n            this.lastCentroid = null;\r\n            // stop any current animation\r\n            if (view.getAnimating()) {\r\n                view.setCenter(mapBrowserEvent.frameState.viewState.center);\r\n            }\r\n            if (this.kinetic_) {\r\n                this.kinetic_.begin();\r\n            }\r\n            // No kinetic as soon as more than one pointer on the screen is\r\n            // detected. This is to prevent nasty pans after pinch.\r\n            this.noKinetic_ = this.targetPointers.length > 1;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    return DragPan;\r\n}(PointerInteraction));\r\nexport default DragPan;\r\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/DragRotate\r\n */\r\nimport { disable } from '../rotationconstraint.js';\r\nimport ViewHint from '../ViewHint.js';\r\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\r\nimport { FALSE } from '../functions.js';\r\nimport { rotate, rotateWithoutConstraints } from './Interaction.js';\r\nimport PointerInteraction from './Pointer.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\r\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n */\r\n/**\r\n * @classdesc\r\n * Allows the user to rotate the map by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when the alt and shift keys are held down.\r\n *\r\n * This interaction is only supported for mouse devices.\r\n * @api\r\n */\r\nvar DragRotate = /** @class */ (function (_super) {\r\n    __extends(DragRotate, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function DragRotate(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        _this = _super.call(this, {\r\n            stopDown: FALSE\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         */\r\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.lastAngle_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\r\n        if (!mouseOnly(mapBrowserEvent)) {\r\n            return;\r\n        }\r\n        var map = mapBrowserEvent.map;\r\n        var view = map.getView();\r\n        if (view.getConstraints().rotation === disable) {\r\n            return;\r\n        }\r\n        var size = map.getSize();\r\n        var offset = mapBrowserEvent.pixel;\r\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\r\n        if (this.lastAngle_ !== undefined) {\r\n            var delta = theta - this.lastAngle_;\r\n            var rotation = view.getRotation();\r\n            rotateWithoutConstraints(view, rotation - delta);\r\n        }\r\n        this.lastAngle_ = theta;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\r\n        if (!mouseOnly(mapBrowserEvent)) {\r\n            return true;\r\n        }\r\n        var map = mapBrowserEvent.map;\r\n        var view = map.getView();\r\n        view.setHint(ViewHint.INTERACTING, -1);\r\n        var rotation = view.getRotation();\r\n        rotate(view, rotation, undefined, this.duration_);\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\r\n        if (!mouseOnly(mapBrowserEvent)) {\r\n            return false;\r\n        }\r\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\r\n            var map = mapBrowserEvent.map;\r\n            map.getView().setHint(ViewHint.INTERACTING, 1);\r\n            this.lastAngle_ = undefined;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    return DragRotate;\r\n}(PointerInteraction));\r\nexport default DragRotate;\r\n//# sourceMappingURL=DragRotate.js.map","/**\r\n * @module ol/render/Box\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport Disposable from '../Disposable.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nvar RenderBox = /** @class */ (function (_super) {\r\n    __extends(RenderBox, _super);\r\n    /**\r\n     * @param {string} className CSS class name.\r\n     */\r\n    function RenderBox(className) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @type {import(\"../geom/Polygon.js\").default}\r\n         * @private\r\n         */\r\n        _this.geometry_ = null;\r\n        /**\r\n         * @type {HTMLDivElement}\r\n         * @private\r\n         */\r\n        _this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\r\n        _this.element_.style.position = 'absolute';\r\n        _this.element_.className = 'ol-box ' + className;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../PluggableMap.js\").default}\r\n         */\r\n        _this.map_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../pixel.js\").Pixel}\r\n         */\r\n        _this.startPixel_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../pixel.js\").Pixel}\r\n         */\r\n        _this.endPixel_ = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RenderBox.prototype.disposeInternal = function () {\r\n        this.setMap(null);\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    RenderBox.prototype.render_ = function () {\r\n        var startPixel = this.startPixel_;\r\n        var endPixel = this.endPixel_;\r\n        var px = 'px';\r\n        var style = this.element_.style;\r\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\r\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\r\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\r\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\r\n    };\r\n    /**\r\n     * @param {import(\"../PluggableMap.js\").default} map Map.\r\n     */\r\n    RenderBox.prototype.setMap = function (map) {\r\n        if (this.map_) {\r\n            this.map_.getOverlayContainer().removeChild(this.element_);\r\n            var style = this.element_.style;\r\n            style.left = style.top = style.width = style.height = 'inherit';\r\n        }\r\n        this.map_ = map;\r\n        if (this.map_) {\r\n            this.map_.getOverlayContainer().appendChild(this.element_);\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\r\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\r\n     */\r\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\r\n        this.startPixel_ = startPixel;\r\n        this.endPixel_ = endPixel;\r\n        this.createOrUpdateGeometry();\r\n        this.render_();\r\n    };\r\n    /**\r\n     * Creates or updates the cached geometry.\r\n     */\r\n    RenderBox.prototype.createOrUpdateGeometry = function () {\r\n        var startPixel = this.startPixel_;\r\n        var endPixel = this.endPixel_;\r\n        var pixels = [\r\n            startPixel,\r\n            [startPixel[0], endPixel[1]],\r\n            endPixel,\r\n            [endPixel[0], startPixel[1]]\r\n        ];\r\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\r\n        // close the polygon\r\n        coordinates[4] = coordinates[0].slice();\r\n        if (!this.geometry_) {\r\n            this.geometry_ = new Polygon([coordinates]);\r\n        }\r\n        else {\r\n            this.geometry_.setCoordinates([coordinates]);\r\n        }\r\n    };\r\n    /**\r\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\r\n     */\r\n    RenderBox.prototype.getGeometry = function () {\r\n        return this.geometry_;\r\n    };\r\n    return RenderBox;\r\n}(Disposable));\r\nexport default RenderBox;\r\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/DragBox\r\n */\r\n// FIXME draw drag box\r\nimport Event from '../events/Event.js';\r\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\r\nimport { VOID } from '../functions.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport RenderBox from '../render/Box.js';\r\n/**\r\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\r\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\r\n * true should be returned.\r\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\r\n */\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link ol/events/condition~always}.\r\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\r\n * `boxEndCondition` function.\r\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\r\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\r\n * Default is `true` if the area of the box is bigger than the `minArea` option.\r\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\r\n * before `boxend` is fired.\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nvar DragBoxEventType = {\r\n    /**\r\n     * Triggered upon drag box start.\r\n     * @event DragBoxEvent#boxstart\r\n     * @api\r\n     */\r\n    BOXSTART: 'boxstart',\r\n    /**\r\n     * Triggered on drag when box is active.\r\n     * @event DragBoxEvent#boxdrag\r\n     * @api\r\n     */\r\n    BOXDRAG: 'boxdrag',\r\n    /**\r\n     * Triggered upon drag box end.\r\n     * @event DragBoxEvent#boxend\r\n     * @api\r\n     */\r\n    BOXEND: 'boxend'\r\n};\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\r\n * this type.\r\n */\r\nvar DragBoxEvent = /** @class */ (function (_super) {\r\n    __extends(DragBoxEvent, _super);\r\n    /**\r\n     * @param {string} type The event type.\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\r\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\r\n     */\r\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\r\n        var _this = _super.call(this, type) || this;\r\n        /**\r\n         * The coordinate of the drag event.\r\n         * @const\r\n         * @type {import(\"../coordinate.js\").Coordinate}\r\n         * @api\r\n         */\r\n        _this.coordinate = coordinate;\r\n        /**\r\n         * @const\r\n         * @type {import(\"../MapBrowserEvent.js\").default}\r\n         * @api\r\n         */\r\n        _this.mapBrowserEvent = mapBrowserEvent;\r\n        return _this;\r\n    }\r\n    return DragBoxEvent;\r\n}(Event));\r\n/**\r\n * @classdesc\r\n * Allows the user to draw a vector box by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when the shift or other key is held down. This is used, for example,\r\n * for zooming to a specific area of the map\r\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\r\n * {@link module:ol/interaction/DragRotateAndZoom}).\r\n *\r\n * This interaction is only supported for mouse devices.\r\n *\r\n * @fires DragBoxEvent\r\n * @api\r\n */\r\nvar DragBox = /** @class */ (function (_super) {\r\n    __extends(DragBox, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function DragBox(opt_options) {\r\n        var _this = _super.call(this) || this;\r\n        var options = opt_options ? opt_options : {};\r\n        /**\r\n         * @type {import(\"../render/Box.js\").default}\r\n         * @private\r\n         */\r\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\r\n        /**\r\n         * Function to execute just before `onboxend` is fired\r\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\r\n         * @private\r\n         */\r\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\r\n        /**\r\n         * @type {import(\"../pixel.js\").Pixel}\r\n         * @private\r\n         */\r\n        _this.startPixel_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         */\r\n        _this.condition_ = options.condition ? options.condition : always;\r\n        /**\r\n         * @private\r\n         * @type {EndCondition}\r\n         */\r\n        _this.boxEndCondition_ = options.boxEndCondition ?\r\n            options.boxEndCondition : _this.defaultBoxEndCondition;\r\n        return _this;\r\n    }\r\n    /**\r\n     * The default condition for determining whether the boxend event\r\n     * should fire.\r\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\r\n     *     leading to the box end.\r\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\r\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\r\n     * @return {boolean} Whether or not the boxend condition should be fired.\r\n     */\r\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\r\n        var width = endPixel[0] - startPixel[0];\r\n        var height = endPixel[1] - startPixel[1];\r\n        return width * width + height * height >= this.minArea_;\r\n    };\r\n    /**\r\n     * Returns geometry of last drawn box.\r\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\r\n     * @api\r\n     */\r\n    DragBox.prototype.getGeometry = function () {\r\n        return this.box_.getGeometry();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\r\n        if (!mouseOnly(mapBrowserEvent)) {\r\n            return;\r\n        }\r\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\r\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\r\n        if (!mouseOnly(mapBrowserEvent)) {\r\n            return true;\r\n        }\r\n        this.box_.setMap(null);\r\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\r\n            this.onBoxEnd_(mapBrowserEvent);\r\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\r\n        if (!mouseOnly(mapBrowserEvent)) {\r\n            return false;\r\n        }\r\n        if (mouseActionButton(mapBrowserEvent) &&\r\n            this.condition_(mapBrowserEvent)) {\r\n            this.startPixel_ = mapBrowserEvent.pixel;\r\n            this.box_.setMap(mapBrowserEvent.map);\r\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\r\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    return DragBox;\r\n}(PointerInteraction));\r\nexport default DragBox;\r\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/DragZoom\r\n */\r\nimport { easeOut } from '../easing.js';\r\nimport { shiftKeyOnly } from '../events/condition.js';\r\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\r\nimport DragBox from './DragBox.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\r\n * box.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\r\n * @property {number} [duration=200] Animation duration in milliseconds.\r\n * @property {boolean} [out=false] Use interaction for zooming out.\r\n */\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when a key, shift by default, is held down.\r\n *\r\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\r\n * your custom one configured with `className`.\r\n * @api\r\n */\r\nvar DragZoom = /** @class */ (function (_super) {\r\n    __extends(DragZoom, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function DragZoom(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        var condition = options.condition ? options.condition : shiftKeyOnly;\r\n        _this = _super.call(this, {\r\n            condition: condition,\r\n            className: options.className || 'ol-dragzoom',\r\n            onBoxEnd: onBoxEnd\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.out_ = options.out !== undefined ? options.out : false;\r\n        return _this;\r\n    }\r\n    return DragZoom;\r\n}(DragBox));\r\n/**\r\n * @this {DragZoom}\r\n */\r\nfunction onBoxEnd() {\r\n    var map = this.getMap();\r\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\r\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\r\n    var extent = this.getGeometry().getExtent();\r\n    if (this.out_) {\r\n        var mapExtent = view.calculateExtent(size);\r\n        var boxPixelExtent = createOrUpdateFromCoordinates([\r\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\r\n            map.getPixelFromCoordinate(getTopRight(extent))\r\n        ]);\r\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\r\n        scaleFromCenter(mapExtent, 1 / factor);\r\n        extent = mapExtent;\r\n    }\r\n    var resolution = view.constrainResolution(view.getResolutionForExtent(extent, size));\r\n    var center = getCenter(extent);\r\n    center = view.constrainCenter(center);\r\n    view.animate({\r\n        resolution: resolution,\r\n        center: center,\r\n        duration: this.duration_,\r\n        easing: easeOut\r\n    });\r\n}\r\nexport default DragZoom;\r\n//# sourceMappingURL=DragZoom.js.map","/**\r\n * @module ol/events/KeyCode\r\n */\r\n/**\r\n * @enum {number}\r\n * @const\r\n */\r\nexport default {\r\n    LEFT: 37,\r\n    UP: 38,\r\n    RIGHT: 39,\r\n    DOWN: 40\r\n};\r\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/KeyboardPan\r\n */\r\nimport { rotate as rotateCoordinate } from '../coordinate.js';\r\nimport EventType from '../events/EventType.js';\r\nimport KeyCode from '../events/KeyCode.js';\r\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\r\nimport Interaction, { pan } from './Interaction.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition~noModifierKeys} and\r\n * {@link module:ol/events/condition~targetNotEditable}.\r\n * @property {number} [duration=100] Animation duration in milliseconds.\r\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\r\n * press.\r\n */\r\n/**\r\n * @classdesc\r\n * Allows the user to pan the map using keyboard arrows.\r\n * Note that, although this interaction is by default included in maps,\r\n * the keys can only be used when browser focus is on the element to which\r\n * the keyboard events are attached. By default, this is the map div,\r\n * though you can change this with the `keyboardEventTarget` in\r\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\r\n * element, focus will have to be on, and returned to, this element if the keys\r\n * are to function.\r\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\r\n * @api\r\n */\r\nvar KeyboardPan = /** @class */ (function (_super) {\r\n    __extends(KeyboardPan, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function KeyboardPan(opt_options) {\r\n        var _this = _super.call(this, {\r\n            handleEvent: handleEvent\r\n        }) || this;\r\n        var options = opt_options || {};\r\n        /**\r\n         * @private\r\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\r\n         * @return {boolean} Combined condition result.\r\n         */\r\n        _this.defaultCondition_ = function (mapBrowserEvent) {\r\n            return noModifierKeys(mapBrowserEvent) &&\r\n                targetNotEditable(mapBrowserEvent);\r\n        };\r\n        /**\r\n         * @private\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         */\r\n        _this.condition_ = options.condition !== undefined ?\r\n            options.condition : _this.defaultCondition_;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\r\n            options.pixelDelta : 128;\r\n        return _this;\r\n    }\r\n    return KeyboardPan;\r\n}(Interaction));\r\n/**\r\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\r\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\r\n * pressed).\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} `false` to stop event propagation.\r\n * @this {KeyboardPan}\r\n */\r\nfunction handleEvent(mapBrowserEvent) {\r\n    var stopEvent = false;\r\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\r\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\r\n        var keyCode = keyEvent.keyCode;\r\n        if (this.condition_(mapBrowserEvent) &&\r\n            (keyCode == KeyCode.DOWN ||\r\n                keyCode == KeyCode.LEFT ||\r\n                keyCode == KeyCode.RIGHT ||\r\n                keyCode == KeyCode.UP)) {\r\n            var map = mapBrowserEvent.map;\r\n            var view = map.getView();\r\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\r\n            var deltaX = 0, deltaY = 0;\r\n            if (keyCode == KeyCode.DOWN) {\r\n                deltaY = -mapUnitsDelta;\r\n            }\r\n            else if (keyCode == KeyCode.LEFT) {\r\n                deltaX = -mapUnitsDelta;\r\n            }\r\n            else if (keyCode == KeyCode.RIGHT) {\r\n                deltaX = mapUnitsDelta;\r\n            }\r\n            else {\r\n                deltaY = mapUnitsDelta;\r\n            }\r\n            var delta = [deltaX, deltaY];\r\n            rotateCoordinate(delta, view.getRotation());\r\n            pan(view, delta, this.duration_);\r\n            mapBrowserEvent.preventDefault();\r\n            stopEvent = true;\r\n        }\r\n    }\r\n    return !stopEvent;\r\n}\r\nexport default KeyboardPan;\r\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/KeyboardZoom\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport { targetNotEditable } from '../events/condition.js';\r\nimport Interaction, { zoomByDelta } from './Interaction.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=100] Animation duration in milliseconds.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition~targetNotEditable}.\r\n * @property {number} [delta=1] The zoom level delta on each key press.\r\n */\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map using keyboard + and -.\r\n * Note that, although this interaction is by default included in maps,\r\n * the keys can only be used when browser focus is on the element to which\r\n * the keyboard events are attached. By default, this is the map div,\r\n * though you can change this with the `keyboardEventTarget` in\r\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\r\n * element, focus will have to be on, and returned to, this element if the keys\r\n * are to function.\r\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\r\n * @api\r\n */\r\nvar KeyboardZoom = /** @class */ (function (_super) {\r\n    __extends(KeyboardZoom, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function KeyboardZoom(opt_options) {\r\n        var _this = _super.call(this, {\r\n            handleEvent: handleEvent\r\n        }) || this;\r\n        var options = opt_options ? opt_options : {};\r\n        /**\r\n         * @private\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         */\r\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.delta_ = options.delta ? options.delta : 1;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\r\n        return _this;\r\n    }\r\n    return KeyboardZoom;\r\n}(Interaction));\r\n/**\r\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\r\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\r\n * key pressed was '+' or '-').\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} `false` to stop event propagation.\r\n * @this {KeyboardZoom}\r\n */\r\nfunction handleEvent(mapBrowserEvent) {\r\n    var stopEvent = false;\r\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\r\n        mapBrowserEvent.type == EventType.KEYPRESS) {\r\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\r\n        var charCode = keyEvent.charCode;\r\n        if (this.condition_(mapBrowserEvent) &&\r\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\r\n            var map = mapBrowserEvent.map;\r\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\r\n            var view = map.getView();\r\n            zoomByDelta(view, delta, undefined, this.duration_);\r\n            mapBrowserEvent.preventDefault();\r\n            stopEvent = true;\r\n        }\r\n    }\r\n    return !stopEvent;\r\n}\r\nexport default KeyboardZoom;\r\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/MouseWheelZoom\r\n */\r\nimport ViewHint from '../ViewHint.js';\r\nimport { always } from '../events/condition.js';\r\nimport { easeOut } from '../easing.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\r\nimport Interaction, { zoomByDelta } from './Interaction.js';\r\nimport { clamp } from '../math.js';\r\n/**\r\n * Maximum mouse wheel delta.\r\n * @type {number}\r\n */\r\nvar MAX_DELTA = 1;\r\n/**\r\n * @enum {string}\r\n */\r\nexport var Mode = {\r\n    TRACKPAD: 'trackpad',\r\n    WHEEL: 'wheel'\r\n};\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition~always}.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\r\n * @property {boolean} [constrainResolution=false] When using a trackpad or\r\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\r\n * ends.\r\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\r\n * location as the anchor. When set to `false`, zooming in and out will zoom to\r\n * the center of the screen instead of zooming on the mouse's location.\r\n */\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by scrolling the mouse wheel.\r\n * @api\r\n */\r\nvar MouseWheelZoom = /** @class */ (function (_super) {\r\n    __extends(MouseWheelZoom, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function MouseWheelZoom(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.delta_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.constrainResolution_ = options.constrainResolution || false;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         */\r\n        _this.condition_ = options.condition ? options.condition : always;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../coordinate.js\").Coordinate}\r\n         */\r\n        _this.lastAnchor_ = null;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.startTime_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {?}\r\n         */\r\n        _this.timeoutId_;\r\n        /**\r\n         * @private\r\n         * @type {Mode|undefined}\r\n         */\r\n        _this.mode_ = undefined;\r\n        /**\r\n         * Trackpad events separated by this delay will be considered separate\r\n         * interactions.\r\n         * @type {number}\r\n         */\r\n        _this.trackpadEventGap_ = 400;\r\n        /**\r\n         * @type {?}\r\n         */\r\n        _this.trackpadTimeoutId_;\r\n        /**\r\n         * The number of delta values per zoom level\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.trackpadDeltaPerZoom_ = 300;\r\n        /**\r\n         * The zoom factor by which scroll zooming is allowed to exceed the limits.\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.trackpadZoomBuffer_ = 1.5;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    MouseWheelZoom.prototype.decrementInteractingHint_ = function () {\r\n        this.trackpadTimeoutId_ = undefined;\r\n        var view = this.getMap().getView();\r\n        view.setHint(ViewHint.INTERACTING, -1);\r\n    };\r\n    /**\r\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\r\n     * zooms the map.\r\n     * @override\r\n     */\r\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\r\n        if (!this.condition_(mapBrowserEvent)) {\r\n            return true;\r\n        }\r\n        var type = mapBrowserEvent.type;\r\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\r\n            return true;\r\n        }\r\n        mapBrowserEvent.preventDefault();\r\n        var map = mapBrowserEvent.map;\r\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\r\n        if (this.useAnchor_) {\r\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\r\n        }\r\n        // Delta normalisation inspired by\r\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\r\n        var delta;\r\n        if (mapBrowserEvent.type == EventType.WHEEL) {\r\n            delta = wheelEvent.deltaY;\r\n            if (FIREFOX &&\r\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\r\n                delta /= DEVICE_PIXEL_RATIO;\r\n            }\r\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\r\n                delta *= 40;\r\n            }\r\n        }\r\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\r\n            delta = -wheelEvent.wheelDeltaY;\r\n            if (SAFARI) {\r\n                delta /= 3;\r\n            }\r\n        }\r\n        if (delta === 0) {\r\n            return false;\r\n        }\r\n        var now = Date.now();\r\n        if (this.startTime_ === undefined) {\r\n            this.startTime_ = now;\r\n        }\r\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\r\n            this.mode_ = Math.abs(delta) < 4 ?\r\n                Mode.TRACKPAD :\r\n                Mode.WHEEL;\r\n        }\r\n        if (this.mode_ === Mode.TRACKPAD) {\r\n            var view = map.getView();\r\n            if (this.trackpadTimeoutId_) {\r\n                clearTimeout(this.trackpadTimeoutId_);\r\n            }\r\n            else {\r\n                view.setHint(ViewHint.INTERACTING, 1);\r\n            }\r\n            this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\r\n            var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\r\n            var minResolution = view.getMinResolution();\r\n            var maxResolution = view.getMaxResolution();\r\n            var rebound = 0;\r\n            if (resolution < minResolution) {\r\n                resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\r\n                rebound = 1;\r\n            }\r\n            else if (resolution > maxResolution) {\r\n                resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\r\n                rebound = -1;\r\n            }\r\n            if (this.lastAnchor_) {\r\n                var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\r\n                view.setCenter(view.constrainCenter(center));\r\n            }\r\n            view.setResolution(resolution);\r\n            if (rebound === 0 && this.constrainResolution_) {\r\n                view.animate({\r\n                    resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\r\n                    easing: easeOut,\r\n                    anchor: this.lastAnchor_,\r\n                    duration: this.duration_\r\n                });\r\n            }\r\n            if (rebound > 0) {\r\n                view.animate({\r\n                    resolution: minResolution,\r\n                    easing: easeOut,\r\n                    anchor: this.lastAnchor_,\r\n                    duration: 500\r\n                });\r\n            }\r\n            else if (rebound < 0) {\r\n                view.animate({\r\n                    resolution: maxResolution,\r\n                    easing: easeOut,\r\n                    anchor: this.lastAnchor_,\r\n                    duration: 500\r\n                });\r\n            }\r\n            this.startTime_ = now;\r\n            return false;\r\n        }\r\n        this.delta_ += delta;\r\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\r\n        clearTimeout(this.timeoutId_);\r\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\r\n        return false;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {import(\"../PluggableMap.js\").default} map Map.\r\n     */\r\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\r\n        var view = map.getView();\r\n        if (view.getAnimating()) {\r\n            view.cancelAnimations();\r\n        }\r\n        var maxDelta = MAX_DELTA;\r\n        var delta = clamp(this.delta_, -maxDelta, maxDelta);\r\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\r\n        this.mode_ = undefined;\r\n        this.delta_ = 0;\r\n        this.lastAnchor_ = null;\r\n        this.startTime_ = undefined;\r\n        this.timeoutId_ = undefined;\r\n    };\r\n    /**\r\n     * Enable or disable using the mouse's location as an anchor when zooming\r\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\r\n     * to zoom to the center of the map\r\n     * @api\r\n     */\r\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\r\n        this.useAnchor_ = useAnchor;\r\n        if (!useAnchor) {\r\n            this.lastAnchor_ = null;\r\n        }\r\n    };\r\n    return MouseWheelZoom;\r\n}(Interaction));\r\nexport default MouseWheelZoom;\r\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/PinchRotate\r\n */\r\nimport ViewHint from '../ViewHint.js';\r\nimport { FALSE } from '../functions.js';\r\nimport { rotate, rotateWithoutConstraints } from './Interaction.js';\r\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\r\nimport { disable } from '../rotationconstraint.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] The duration of the animation in\r\n * milliseconds.\r\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\r\n */\r\n/**\r\n * @classdesc\r\n * Allows the user to rotate the map by twisting with two fingers\r\n * on a touch screen.\r\n * @api\r\n */\r\nvar PinchRotate = /** @class */ (function (_super) {\r\n    __extends(PinchRotate, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function PinchRotate(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\r\n        if (!pointerOptions.stopDown) {\r\n            pointerOptions.stopDown = FALSE;\r\n        }\r\n        _this = _super.call(this, pointerOptions) || this;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../coordinate.js\").Coordinate}\r\n         */\r\n        _this.anchor_ = null;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.lastAngle_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.rotating_ = false;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.rotationDelta_ = 0.0;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\r\n        var rotationDelta = 0.0;\r\n        var touch0 = this.targetPointers[0];\r\n        var touch1 = this.targetPointers[1];\r\n        // angle between touches\r\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\r\n        if (this.lastAngle_ !== undefined) {\r\n            var delta = angle - this.lastAngle_;\r\n            this.rotationDelta_ += delta;\r\n            if (!this.rotating_ &&\r\n                Math.abs(this.rotationDelta_) > this.threshold_) {\r\n                this.rotating_ = true;\r\n            }\r\n            rotationDelta = delta;\r\n        }\r\n        this.lastAngle_ = angle;\r\n        var map = mapBrowserEvent.map;\r\n        var view = map.getView();\r\n        if (view.getConstraints().rotation === disable) {\r\n            return;\r\n        }\r\n        // rotate anchor point.\r\n        // FIXME: should be the intersection point between the lines:\r\n        //     touch0,touch1 and previousTouch0,previousTouch1\r\n        var viewportPosition = map.getViewport().getBoundingClientRect();\r\n        var centroid = centroidFromPointers(this.targetPointers);\r\n        centroid[0] -= viewportPosition.left;\r\n        centroid[1] -= viewportPosition.top;\r\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\r\n        // rotate\r\n        if (this.rotating_) {\r\n            var rotation = view.getRotation();\r\n            map.render();\r\n            rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\r\n        if (this.targetPointers.length < 2) {\r\n            var map = mapBrowserEvent.map;\r\n            var view = map.getView();\r\n            view.setHint(ViewHint.INTERACTING, -1);\r\n            if (this.rotating_) {\r\n                var rotation = view.getRotation();\r\n                rotate(view, rotation, this.anchor_, this.duration_);\r\n            }\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\r\n        if (this.targetPointers.length >= 2) {\r\n            var map = mapBrowserEvent.map;\r\n            this.anchor_ = null;\r\n            this.lastAngle_ = undefined;\r\n            this.rotating_ = false;\r\n            this.rotationDelta_ = 0.0;\r\n            if (!this.handlingDownUpSequence) {\r\n                map.getView().setHint(ViewHint.INTERACTING, 1);\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    return PinchRotate;\r\n}(PointerInteraction));\r\nexport default PinchRotate;\r\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/PinchZoom\r\n */\r\nimport ViewHint from '../ViewHint.js';\r\nimport { FALSE } from '../functions.js';\r\nimport { zoom, zoomWithoutConstraints } from './Interaction.js';\r\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=400] Animation duration in milliseconds.\r\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\r\n * zoom level after the pinch gesture ends.\r\n */\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by pinching with two fingers\r\n * on a touch screen.\r\n * @api\r\n */\r\nvar PinchZoom = /** @class */ (function (_super) {\r\n    __extends(PinchZoom, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function PinchZoom(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\r\n        if (!pointerOptions.stopDown) {\r\n            pointerOptions.stopDown = FALSE;\r\n        }\r\n        _this = _super.call(this, pointerOptions) || this;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.constrainResolution_ = options.constrainResolution || false;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../coordinate.js\").Coordinate}\r\n         */\r\n        _this.anchor_ = null;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.lastDistance_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.lastScaleDelta_ = 1;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\r\n        var scaleDelta = 1.0;\r\n        var touch0 = this.targetPointers[0];\r\n        var touch1 = this.targetPointers[1];\r\n        var dx = touch0.clientX - touch1.clientX;\r\n        var dy = touch0.clientY - touch1.clientY;\r\n        // distance between touches\r\n        var distance = Math.sqrt(dx * dx + dy * dy);\r\n        if (this.lastDistance_ !== undefined) {\r\n            scaleDelta = this.lastDistance_ / distance;\r\n        }\r\n        this.lastDistance_ = distance;\r\n        var map = mapBrowserEvent.map;\r\n        var view = map.getView();\r\n        var resolution = view.getResolution();\r\n        var maxResolution = view.getMaxResolution();\r\n        var minResolution = view.getMinResolution();\r\n        var newResolution = resolution * scaleDelta;\r\n        if (newResolution > maxResolution) {\r\n            scaleDelta = maxResolution / resolution;\r\n            newResolution = maxResolution;\r\n        }\r\n        else if (newResolution < minResolution) {\r\n            scaleDelta = minResolution / resolution;\r\n            newResolution = minResolution;\r\n        }\r\n        if (scaleDelta != 1.0) {\r\n            this.lastScaleDelta_ = scaleDelta;\r\n        }\r\n        // scale anchor point.\r\n        var viewportPosition = map.getViewport().getBoundingClientRect();\r\n        var centroid = centroidFromPointers(this.targetPointers);\r\n        centroid[0] -= viewportPosition.left;\r\n        centroid[1] -= viewportPosition.top;\r\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\r\n        // scale, bypass the resolution constraint\r\n        map.render();\r\n        zoomWithoutConstraints(view, newResolution, this.anchor_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\r\n        if (this.targetPointers.length < 2) {\r\n            var map = mapBrowserEvent.map;\r\n            var view = map.getView();\r\n            view.setHint(ViewHint.INTERACTING, -1);\r\n            var resolution = view.getResolution();\r\n            if (this.constrainResolution_ ||\r\n                resolution < view.getMinResolution() ||\r\n                resolution > view.getMaxResolution()) {\r\n                // Zoom to final resolution, with an animation, and provide a\r\n                // direction not to zoom out/in if user was pinching in/out.\r\n                // Direction is > 0 if pinching out, and < 0 if pinching in.\r\n                var direction = this.lastScaleDelta_ - 1;\r\n                zoom(view, resolution, this.anchor_, this.duration_, direction);\r\n            }\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\r\n        if (this.targetPointers.length >= 2) {\r\n            var map = mapBrowserEvent.map;\r\n            this.anchor_ = null;\r\n            this.lastDistance_ = undefined;\r\n            this.lastScaleDelta_ = 1;\r\n            if (!this.handlingDownUpSequence) {\r\n                map.getView().setHint(ViewHint.INTERACTING, 1);\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    return PinchZoom;\r\n}(PointerInteraction));\r\nexport default PinchZoom;\r\n//# sourceMappingURL=PinchZoom.js.map","/**\r\n * @module ol/interaction\r\n */\r\nimport Collection from './Collection.js';\r\nimport Kinetic from './Kinetic.js';\r\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\r\nimport DragPan from './interaction/DragPan.js';\r\nimport DragRotate from './interaction/DragRotate.js';\r\nimport DragZoom from './interaction/DragZoom.js';\r\nimport KeyboardPan from './interaction/KeyboardPan.js';\r\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\r\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\r\nimport PinchRotate from './interaction/PinchRotate.js';\r\nimport PinchZoom from './interaction/PinchZoom.js';\r\nimport { focus } from './events/condition.js';\r\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\r\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\r\nexport { default as DragBox } from './interaction/DragBox.js';\r\nexport { default as DragPan } from './interaction/DragPan.js';\r\nexport { default as DragRotate } from './interaction/DragRotate.js';\r\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\r\nexport { default as DragZoom } from './interaction/DragZoom.js';\r\nexport { default as Draw } from './interaction/Draw.js';\r\nexport { default as Extent } from './interaction/Extent.js';\r\nexport { default as Interaction } from './interaction/Interaction.js';\r\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\r\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\r\nexport { default as Modify } from './interaction/Modify.js';\r\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\r\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\r\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\r\nexport { default as Pointer } from './interaction/Pointer.js';\r\nexport { default as Select } from './interaction/Select.js';\r\nexport { default as Snap } from './interaction/Snap.js';\r\nexport { default as Translate } from './interaction/Translate.js';\r\n/**\r\n * @typedef {Object} DefaultsOptions\r\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\r\n * desired.\r\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\r\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\r\n * useful when page scroll is desired for maps that do not have the browser's\r\n * focus.\r\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\r\n * zoom level after the wheel/trackpad or pinch gesture ends.\r\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\r\n * desired.\r\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\r\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\r\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\r\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\r\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\r\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\r\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\r\n * mousewheel zoom.\r\n * @property {number} [zoomDuration] Duration of the zoom animation in\r\n * milliseconds.\r\n */\r\n/**\r\n * Set of interactions included in maps by default. Specific interactions can be\r\n * excluded by setting the appropriate option to false in the constructor\r\n * options, but the order of the interactions is fixed.  If you want to specify\r\n * a different order for interactions, you will need to create your own\r\n * {@link module:ol/interaction/Interaction} instances and insert\r\n * them into a {@link module:ol/Collection} in the order you want\r\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\r\n * be of interest if the event propagation needs to be stopped at a point.\r\n * The default set of interactions, in sequence, is:\r\n * * {@link module:ol/interaction/DragRotate~DragRotate}\r\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\r\n * * {@link module:ol/interaction/DragPan~DragPan}\r\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\r\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\r\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\r\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\r\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\r\n * * {@link module:ol/interaction/DragZoom~DragZoom}\r\n *\r\n * @param {DefaultsOptions=} opt_options Defaults options.\r\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\r\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\r\n * constructor's `interactions` option.\r\n * @api\r\n */\r\nexport function defaults(opt_options) {\r\n    var options = opt_options ? opt_options : {};\r\n    var interactions = new Collection();\r\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\r\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\r\n        options.altShiftDragRotate : true;\r\n    if (altShiftDragRotate) {\r\n        interactions.push(new DragRotate());\r\n    }\r\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\r\n        options.doubleClickZoom : true;\r\n    if (doubleClickZoom) {\r\n        interactions.push(new DoubleClickZoom({\r\n            delta: options.zoomDelta,\r\n            duration: options.zoomDuration\r\n        }));\r\n    }\r\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\r\n    if (dragPan) {\r\n        interactions.push(new DragPan({\r\n            condition: options.onFocusOnly ? focus : undefined,\r\n            kinetic: kinetic\r\n        }));\r\n    }\r\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\r\n        true;\r\n    if (pinchRotate) {\r\n        interactions.push(new PinchRotate());\r\n    }\r\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\r\n    if (pinchZoom) {\r\n        interactions.push(new PinchZoom({\r\n            constrainResolution: options.constrainResolution,\r\n            duration: options.zoomDuration\r\n        }));\r\n    }\r\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\r\n    if (keyboard) {\r\n        interactions.push(new KeyboardPan());\r\n        interactions.push(new KeyboardZoom({\r\n            delta: options.zoomDelta,\r\n            duration: options.zoomDuration\r\n        }));\r\n    }\r\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\r\n        options.mouseWheelZoom : true;\r\n    if (mouseWheelZoom) {\r\n        interactions.push(new MouseWheelZoom({\r\n            condition: options.onFocusOnly ? focus : undefined,\r\n            constrainResolution: options.constrainResolution,\r\n            duration: options.zoomDuration\r\n        }));\r\n    }\r\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\r\n        options.shiftDragZoom : true;\r\n    if (shiftDragZoom) {\r\n        interactions.push(new DragZoom({\r\n            duration: options.zoomDuration\r\n        }));\r\n    }\r\n    return interactions;\r\n}\r\n//# sourceMappingURL=interaction.js.map","/**\r\n * @module ol/render/Event\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport Event from '../events/Event.js';\r\nvar RenderEvent = /** @class */ (function (_super) {\r\n    __extends(RenderEvent, _super);\r\n    /**\r\n     * @param {import(\"./EventType.js\").default} type Type.\r\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\r\n     *     CSS pixels to rendered pixels.\r\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\r\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\r\n     * @param {?import(\"../webgl/Helper.js\").default=} opt_glContext WebGL Context.\r\n     */\r\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\r\n        var _this = _super.call(this, type) || this;\r\n        /**\r\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\r\n         * to rendered pixels on this event's `context`.\r\n         * @type {import(\"../transform.js\").Transform|undefined}\r\n         * @api\r\n         */\r\n        _this.inversePixelTransform = opt_inversePixelTransform;\r\n        /**\r\n         * An object representing the current render frame state.\r\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\r\n         * @api\r\n         */\r\n        _this.frameState = opt_frameState;\r\n        /**\r\n         * Canvas context. Only available when a Canvas renderer is used, null\r\n         * otherwise.\r\n         * @type {CanvasRenderingContext2D|null|undefined}\r\n         * @api\r\n         */\r\n        _this.context = opt_context;\r\n        /**\r\n         * WebGL context. Only available when a WebGL renderer is used, null\r\n         * otherwise.\r\n         * @type {import(\"../webgl/Helper.js\").default|null|undefined}\r\n         * @api\r\n         */\r\n        _this.glContext = opt_glContext;\r\n        return _this;\r\n    }\r\n    return RenderEvent;\r\n}(Event));\r\nexport default RenderEvent;\r\n//# sourceMappingURL=Event.js.map","/**\r\n * @module ol/style/IconImageCache\r\n */\r\nimport { asString } from '../color.js';\r\n/**\r\n * @classdesc\r\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\r\n */\r\nvar IconImageCache = /** @class */ (function () {\r\n    function IconImageCache() {\r\n        /**\r\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\r\n        * @private\r\n        */\r\n        this.cache_ = {};\r\n        /**\r\n        * @type {number}\r\n        * @private\r\n        */\r\n        this.cacheSize_ = 0;\r\n        /**\r\n        * @type {number}\r\n        * @private\r\n        */\r\n        this.maxCacheSize_ = 32;\r\n    }\r\n    /**\r\n    * FIXME empty description for jsdoc\r\n    */\r\n    IconImageCache.prototype.clear = function () {\r\n        this.cache_ = {};\r\n        this.cacheSize_ = 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Can expire cache.\r\n     */\r\n    IconImageCache.prototype.canExpireCache = function () {\r\n        return this.cacheSize_ > this.maxCacheSize_;\r\n    };\r\n    /**\r\n    * FIXME empty description for jsdoc\r\n    */\r\n    IconImageCache.prototype.expire = function () {\r\n        if (this.canExpireCache()) {\r\n            var i = 0;\r\n            for (var key in this.cache_) {\r\n                var iconImage = this.cache_[key];\r\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\r\n                    delete this.cache_[key];\r\n                    --this.cacheSize_;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n    * @param {string} src Src.\r\n    * @param {?string} crossOrigin Cross origin.\r\n    * @param {import(\"../color.js\").Color} color Color.\r\n    * @return {import(\"./IconImage.js\").default} Icon image.\r\n    */\r\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\r\n        var key = getKey(src, crossOrigin, color);\r\n        return key in this.cache_ ? this.cache_[key] : null;\r\n    };\r\n    /**\r\n    * @param {string} src Src.\r\n    * @param {?string} crossOrigin Cross origin.\r\n    * @param {import(\"../color.js\").Color} color Color.\r\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\r\n    */\r\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\r\n        var key = getKey(src, crossOrigin, color);\r\n        this.cache_[key] = iconImage;\r\n        ++this.cacheSize_;\r\n    };\r\n    /**\r\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\r\n    * your map uses more than 32 different icon images and you are not caching icon\r\n    * styles on the application level.\r\n    * @param {number} maxCacheSize Cache max size.\r\n    * @api\r\n    */\r\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\r\n        this.maxCacheSize_ = maxCacheSize;\r\n        this.expire();\r\n    };\r\n    return IconImageCache;\r\n}());\r\n/**\r\n * @param {string} src Src.\r\n * @param {?string} crossOrigin Cross origin.\r\n * @param {import(\"../color.js\").Color} color Color.\r\n * @return {string} Cache key.\r\n */\r\nfunction getKey(src, crossOrigin, color) {\r\n    var colorString = color ? asString(color) : 'null';\r\n    return crossOrigin + ':' + src + ':' + colorString;\r\n}\r\nexport default IconImageCache;\r\n/**\r\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\r\n * {@link module:ol/style/Icon~Icon} images.\r\n * @api\r\n */\r\nexport var shared = new IconImageCache();\r\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/renderer/Map\r\n */\r\nimport { abstract, getUid } from '../util.js';\r\nimport Disposable from '../Disposable.js';\r\nimport { listen, unlistenByKey } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { getWidth } from '../extent.js';\r\nimport { TRUE } from '../functions.js';\r\nimport { visibleAtResolution } from '../layer/Layer.js';\r\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\r\nimport { compose as composeTransform, makeInverse } from '../transform.js';\r\n/**\r\n * @abstract\r\n */\r\nvar MapRenderer = /** @class */ (function (_super) {\r\n    __extends(MapRenderer, _super);\r\n    /**\r\n     * @param {import(\"../PluggableMap.js\").default} map Map.\r\n     */\r\n    function MapRenderer(map) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../PluggableMap.js\").default}\r\n         */\r\n        _this.map_ = map;\r\n        /**\r\n         * @private\r\n         * @type {!Object<string, import(\"./Layer.js\").default>}\r\n         */\r\n        _this.layerRenderers_ = {};\r\n        /**\r\n         * @private\r\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\r\n         */\r\n        _this.layerRendererListeners_ = {};\r\n        return _this;\r\n    }\r\n    /**\r\n     * @abstract\r\n     * @param {import(\"../render/EventType.js\").default} type Event type.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     */\r\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\r\n        abstract();\r\n    };\r\n    /**\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n     * @protected\r\n     */\r\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\r\n        var viewState = frameState.viewState;\r\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\r\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\r\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\r\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\r\n    };\r\n    /**\r\n     * Removes all layer renderers.\r\n     */\r\n    MapRenderer.prototype.removeLayerRenderers = function () {\r\n        for (var key in this.layerRenderers_) {\r\n            this.removeLayerRendererByKey_(key).dispose();\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n     * @param {number} hitTolerance Hit tolerance in pixels.\r\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\r\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\r\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\r\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n     *     function, only layers which are visible and for which this function\r\n     *     returns `true` will be tested for features.  By default, all visible\r\n     *     layers will be tested.\r\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\r\n     * @return {T|undefined} Callback result.\r\n     * @template S,T,U\r\n     */\r\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\r\n        var result;\r\n        var viewState = frameState.viewState;\r\n        var viewResolution = viewState.resolution;\r\n        /**\r\n         * @param {boolean} managed Managed layer.\r\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n         * @return {?} Callback result.\r\n         */\r\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\r\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\r\n                return callback.call(thisArg, feature, managed ? layer : null);\r\n            }\r\n        }\r\n        var projection = viewState.projection;\r\n        var translatedCoordinate = coordinate;\r\n        if (projection.canWrapX()) {\r\n            var projectionExtent = projection.getExtent();\r\n            var worldWidth = getWidth(projectionExtent);\r\n            var x = coordinate[0];\r\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\r\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\r\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\r\n            }\r\n        }\r\n        var layerStates = frameState.layerStatesArray;\r\n        var numLayers = layerStates.length;\r\n        var i;\r\n        for (i = numLayers - 1; i >= 0; --i) {\r\n            var layerState = layerStates[i];\r\n            var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\r\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\r\n                var layerRenderer = this.getLayerRenderer(layer);\r\n                var source = layer.getSource();\r\n                if (layerRenderer && source) {\r\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\r\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1);\r\n                }\r\n                if (result) {\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n     * @param {number} hitTolerance Hit tolerance in pixels.\r\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\r\n     *     callback.\r\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n     *     function, only layers which are visible and for which this function\r\n     *     returns `true` will be tested for features.  By default, all visible\r\n     *     layers will be tested.\r\n     * @return {T|undefined} Callback result.\r\n     * @template S,T,U\r\n     */\r\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n     * @param {number} hitTolerance Hit tolerance in pixels.\r\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n     *     function, only layers which are visible and for which this function\r\n     *     returns `true` will be tested for features.  By default, all visible\r\n     *     layers will be tested.\r\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\r\n     * @return {boolean} Is there a feature at the given coordinate?\r\n     * @template U\r\n     */\r\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\r\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\r\n        return hasFeature !== undefined;\r\n    };\r\n    /**\r\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n     * @protected\r\n     * @return {import(\"./Layer.js\").default} Layer renderer. May return null.\r\n     */\r\n    MapRenderer.prototype.getLayerRenderer = function (layer) {\r\n        var layerKey = getUid(layer);\r\n        if (layerKey in this.layerRenderers_) {\r\n            return this.layerRenderers_[layerKey];\r\n        }\r\n        var renderer = layer.getRenderer();\r\n        if (!renderer) {\r\n            return null;\r\n        }\r\n        this.layerRenderers_[layerKey] = renderer;\r\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\r\n        return renderer;\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\r\n     */\r\n    MapRenderer.prototype.getLayerRenderers = function () {\r\n        return this.layerRenderers_;\r\n    };\r\n    /**\r\n     * @return {import(\"../PluggableMap.js\").default} Map.\r\n     */\r\n    MapRenderer.prototype.getMap = function () {\r\n        return this.map_;\r\n    };\r\n    /**\r\n     * Handle changes in a layer renderer.\r\n     * @private\r\n     */\r\n    MapRenderer.prototype.handleLayerRendererChange_ = function () {\r\n        this.map_.render();\r\n    };\r\n    /**\r\n     * @param {string} layerKey Layer key.\r\n     * @return {import(\"./Layer.js\").default} Layer renderer.\r\n     * @private\r\n     */\r\n    MapRenderer.prototype.removeLayerRendererByKey_ = function (layerKey) {\r\n        var layerRenderer = this.layerRenderers_[layerKey];\r\n        delete this.layerRenderers_[layerKey];\r\n        unlistenByKey(this.layerRendererListeners_[layerKey]);\r\n        delete this.layerRendererListeners_[layerKey];\r\n        return layerRenderer;\r\n    };\r\n    /**\r\n     * Render.\r\n     * @abstract\r\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     */\r\n    MapRenderer.prototype.renderFrame = function (frameState) {\r\n        abstract();\r\n    };\r\n    /**\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @protected\r\n     */\r\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\r\n        if (iconImageCache.canExpireCache()) {\r\n            frameState.postRenderFunctions.push(expireIconCache);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @protected\r\n     */\r\n    MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function (frameState) {\r\n        var layerStatesMap = getLayerStatesMap(frameState.layerStatesArray);\r\n        var _loop_1 = function (layerKey) {\r\n            if (!(layerKey in layerStatesMap)) {\r\n                frameState.postRenderFunctions.push(function () {\r\n                    this.removeLayerRendererByKey_(layerKey).dispose();\r\n                }.bind(this_1));\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var layerKey in this.layerRenderers_) {\r\n            _loop_1(layerKey);\r\n        }\r\n    };\r\n    return MapRenderer;\r\n}(Disposable));\r\n/**\r\n * @param {import(\"../PluggableMap.js\").default} map Map.\r\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n */\r\nfunction expireIconCache(map, frameState) {\r\n    iconImageCache.expire();\r\n}\r\n/**\r\n * @param {Array<import(\"../layer/Layer.js\").State>} layerStatesArray Layer states array.\r\n * @return {Object<string, import(\"../layer/Layer.js\").State>} States mapped by layer uid.\r\n */\r\nfunction getLayerStatesMap(layerStatesArray) {\r\n    return layerStatesArray.reduce(function (acc, state) {\r\n        acc[getUid(state.layer)] = state;\r\n        return acc;\r\n    }, {});\r\n}\r\n/**\r\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\r\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\r\n * @return {number} The zIndex difference.\r\n */\r\nexport function sortByZIndex(state1, state2) {\r\n    return state1.zIndex - state2.zIndex;\r\n}\r\nexport default MapRenderer;\r\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/renderer/Composite\r\n */\r\nimport { CLASS_UNSELECTABLE } from '../css.js';\r\nimport { visibleAtResolution } from '../layer/Layer.js';\r\nimport RenderEvent from '../render/Event.js';\r\nimport RenderEventType from '../render/EventType.js';\r\nimport MapRenderer from './Map.js';\r\nimport SourceState from '../source/State.js';\r\nimport { replaceChildren } from '../dom.js';\r\n/**\r\n * @classdesc\r\n * Canvas map renderer.\r\n * @api\r\n */\r\nvar CompositeMapRenderer = /** @class */ (function (_super) {\r\n    __extends(CompositeMapRenderer, _super);\r\n    /**\r\n     * @param {import(\"../PluggableMap.js\").default} map Map.\r\n     */\r\n    function CompositeMapRenderer(map) {\r\n        var _this = _super.call(this, map) || this;\r\n        /**\r\n         * @private\r\n         * @type {HTMLDivElement}\r\n         */\r\n        _this.element_ = document.createElement('div');\r\n        var style = _this.element_.style;\r\n        style.position = 'absolute';\r\n        style.width = '100%';\r\n        style.height = '100%';\r\n        style.zIndex = '0';\r\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\r\n        var container = map.getViewport();\r\n        container.insertBefore(_this.element_, container.firstChild || null);\r\n        /**\r\n         * @private\r\n         * @type {Array<HTMLElement>}\r\n         */\r\n        _this.children_ = [];\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.renderedVisible_ = true;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {import(\"../render/EventType.js\").default} type Event type.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     */\r\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\r\n        var map = this.getMap();\r\n        if (map.hasListener(type)) {\r\n            var event_1 = new RenderEvent(type, undefined, frameState);\r\n            map.dispatchEvent(event_1);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\r\n        if (!frameState) {\r\n            if (this.renderedVisible_) {\r\n                this.element_.style.display = 'none';\r\n                this.renderedVisible_ = false;\r\n            }\r\n            return;\r\n        }\r\n        this.calculateMatrices2D(frameState);\r\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\r\n        var layerStatesArray = frameState.layerStatesArray;\r\n        var viewResolution = frameState.viewState.resolution;\r\n        this.children_.length = 0;\r\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n            var layerState = layerStatesArray[i];\r\n            if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\r\n                continue;\r\n            }\r\n            var layer = layerState.layer;\r\n            var element = layer.render(frameState);\r\n            if (element) {\r\n                var zIndex = layerState.zIndex;\r\n                if (zIndex !== element.style.zIndex) {\r\n                    element.style.zIndex = zIndex;\r\n                }\r\n                this.children_.push(element);\r\n            }\r\n        }\r\n        replaceChildren(this.element_, this.children_);\r\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\r\n        if (!this.renderedVisible_) {\r\n            this.element_.style.display = '';\r\n            this.renderedVisible_ = true;\r\n        }\r\n        this.scheduleRemoveUnusedLayerRenderers(frameState);\r\n        this.scheduleExpireIconCache(frameState);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\r\n        var viewState = frameState.viewState;\r\n        var viewResolution = viewState.resolution;\r\n        var layerStates = frameState.layerStatesArray;\r\n        var numLayers = layerStates.length;\r\n        for (var i = numLayers - 1; i >= 0; --i) {\r\n            var layerState = layerStates[i];\r\n            var layer = layerState.layer;\r\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\r\n                var layerRenderer = this.getLayerRenderer(layer);\r\n                if (!layerRenderer) {\r\n                    continue;\r\n                }\r\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\r\n                if (data) {\r\n                    var result = callback(layer, data);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    return CompositeMapRenderer;\r\n}(MapRenderer));\r\nexport default CompositeMapRenderer;\r\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/Map\r\n */\r\nimport PluggableMap from './PluggableMap.js';\r\nimport { defaults as defaultControls } from './control/util.js';\r\nimport { defaults as defaultInteractions } from './interaction.js';\r\nimport { assign } from './obj.js';\r\nimport CompositeMapRenderer from './renderer/Composite.js';\r\n/**\r\n * @classdesc\r\n * The map is the core component of OpenLayers. For a map to render, a view,\r\n * one or more layers, and a target container are needed:\r\n *\r\n *     import Map from 'ol/Map';\r\n *     import View from 'ol/View';\r\n *     import TileLayer from 'ol/layer/Tile';\r\n *     import OSM from 'ol/source/OSM';\r\n *\r\n *     var map = new Map({\r\n *       view: new View({\r\n *         center: [0, 0],\r\n *         zoom: 1\r\n *       }),\r\n *       layers: [\r\n *         new TileLayer({\r\n *           source: new OSM()\r\n *         })\r\n *       ],\r\n *       target: 'map'\r\n *     });\r\n *\r\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\r\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\r\n * element with the id `map`.\r\n *\r\n * The constructor places a viewport container (with CSS class name\r\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\r\n * further elements within the viewport: one with CSS class name\r\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\r\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\r\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\r\n * itself is placed in a further element within the viewport.\r\n *\r\n * Layers are stored as a {@link module:ol/Collection~Collection} in\r\n * layerGroups. A top-level group is provided by the library. This is what is\r\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\r\n * options are added to this group, and `addLayer` and `removeLayer` change the\r\n * layer collection in the group. `getLayers` is a convenience function for\r\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\r\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\r\n * options or added with `addLayer` can be groups, which can contain further\r\n * groups, and so on.\r\n *\r\n * @api\r\n */\r\nvar Map = /** @class */ (function (_super) {\r\n    __extends(Map, _super);\r\n    /**\r\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\r\n     */\r\n    function Map(options) {\r\n        var _this = this;\r\n        options = assign({}, options);\r\n        if (!options.controls) {\r\n            options.controls = defaultControls();\r\n        }\r\n        if (!options.interactions) {\r\n            options.interactions = defaultInteractions();\r\n        }\r\n        _this = _super.call(this, options) || this;\r\n        return _this;\r\n    }\r\n    Map.prototype.createRenderer = function () {\r\n        return new CompositeMapRenderer(this);\r\n    };\r\n    return Map;\r\n}(PluggableMap));\r\nexport default Map;\r\n//# sourceMappingURL=Map.js.map","/**\r\n * @module ol/OverlayPositioning\r\n */\r\n/**\r\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\r\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\r\n * `'top-center'`, `'top-right'`\r\n * @enum {string}\r\n */\r\nexport default {\r\n    BOTTOM_LEFT: 'bottom-left',\r\n    BOTTOM_CENTER: 'bottom-center',\r\n    BOTTOM_RIGHT: 'bottom-right',\r\n    CENTER_LEFT: 'center-left',\r\n    CENTER_CENTER: 'center-center',\r\n    CENTER_RIGHT: 'center-right',\r\n    TOP_LEFT: 'top-left',\r\n    TOP_CENTER: 'top-center',\r\n    TOP_RIGHT: 'top-right'\r\n};\r\n//# sourceMappingURL=OverlayPositioning.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/Overlay\r\n */\r\nimport MapEventType from './MapEventType.js';\r\nimport BaseObject, { getChangeEventType } from './Object.js';\r\nimport OverlayPositioning from './OverlayPositioning.js';\r\nimport { CLASS_SELECTABLE } from './css.js';\r\nimport { removeNode, removeChildren, outerWidth, outerHeight } from './dom.js';\r\nimport { listen, unlistenByKey } from './events.js';\r\nimport { containsExtent } from './extent.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\r\n * with the {@link module:ol/Map~Map#getOverlayById} method.\r\n * @property {HTMLElement} [element] The overlay element.\r\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\r\n * the overlay. The first element in the\r\n * array is the horizontal offset. A positive value shifts the overlay right.\r\n * The second element in the array is the vertical offset. A positive value\r\n * shifts the overlay down.\r\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\r\n * in map projection.\r\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\r\n * the overlay is actually positioned with respect to its `position` property.\r\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\r\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\r\n * `'top-center'`, and `'top-right'`.\r\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\r\n * viewport should be stopped. If `true` the overlay is placed in the same\r\n * container as that of the controls (CSS class name\r\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\r\n * with CSS class name specified by the `className` property.\r\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\r\n * in the overlay container, or appended. If the overlay is placed in the same\r\n * container as that of the controls (see the `stopEvent` option) you will\r\n * probably set `insertFirst` to `true` so the overlay is displayed below the\r\n * controls.\r\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\r\n * calling `setPosition`, so that the overlay is entirely visible in the current\r\n * viewport.\r\n * @property {PanOptions} [autoPanAnimation] The\r\n * animation options used to pan the overlay into view. This animation is only\r\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\r\n * customize the animation.\r\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\r\n * overlay and the borders of the map when autopanning.\r\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\r\n * name.\r\n */\r\n/**\r\n * @typedef {Object} PanOptions\r\n * @property {number} [duration=1000] The duration of the animation in\r\n * milliseconds.\r\n * @property {function(number):number} [easing] The easing function to use. Can\r\n * be one from {@link module:ol/easing} or a custom function.\r\n * Default is {@link module:ol/easing~inAndOut}.\r\n */\r\n/**\r\n * @enum {string}\r\n * @protected\r\n */\r\nvar Property = {\r\n    ELEMENT: 'element',\r\n    MAP: 'map',\r\n    OFFSET: 'offset',\r\n    POSITION: 'position',\r\n    POSITIONING: 'positioning'\r\n};\r\n/**\r\n * @classdesc\r\n * An element to be displayed over the map and attached to a single map\r\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\r\n * visible widgets. Unlike Controls, they are not in a fixed position on the\r\n * screen, but are tied to a geographical coordinate, so panning the map will\r\n * move an Overlay but not a Control.\r\n *\r\n * Example:\r\n *\r\n *     import Overlay from 'ol/Overlay';\r\n *\r\n *     var popup = new Overlay({\r\n *       element: document.getElementById('popup')\r\n *     });\r\n *     popup.setPosition(coordinate);\r\n *     map.addOverlay(popup);\r\n *\r\n * @api\r\n */\r\nvar Overlay = /** @class */ (function (_super) {\r\n    __extends(Overlay, _super);\r\n    /**\r\n     * @param {Options} options Overlay options.\r\n     */\r\n    function Overlay(options) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @protected\r\n         * @type {Options}\r\n         */\r\n        _this.options = options;\r\n        /**\r\n         * @protected\r\n         * @type {number|string|undefined}\r\n         */\r\n        _this.id = options.id;\r\n        /**\r\n         * @protected\r\n         * @type {boolean}\r\n         */\r\n        _this.insertFirst = options.insertFirst !== undefined ?\r\n            options.insertFirst : true;\r\n        /**\r\n         * @protected\r\n         * @type {boolean}\r\n         */\r\n        _this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\r\n        /**\r\n         * @protected\r\n         * @type {HTMLElement}\r\n         */\r\n        _this.element = document.createElement('div');\r\n        _this.element.className = options.className !== undefined ?\r\n            options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\r\n        _this.element.style.position = 'absolute';\r\n        /**\r\n         * @protected\r\n         * @type {boolean}\r\n         */\r\n        _this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\r\n        /**\r\n         * @protected\r\n         * @type {PanOptions}\r\n         */\r\n        _this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\r\n        /**\r\n         * @protected\r\n         * @type {number}\r\n         */\r\n        _this.autoPanMargin = options.autoPanMargin !== undefined ?\r\n            options.autoPanMargin : 20;\r\n        /**\r\n         * @protected\r\n         * @type {{bottom_: string,\r\n         *         left_: string,\r\n         *         right_: string,\r\n         *         top_: string,\r\n         *         visible: boolean}}\r\n         */\r\n        _this.rendered = {\r\n            bottom_: '',\r\n            left_: '',\r\n            right_: '',\r\n            top_: '',\r\n            visible: true\r\n        };\r\n        /**\r\n         * @protected\r\n         * @type {?import(\"./events.js\").EventsKey}\r\n         */\r\n        _this.mapPostrenderListenerKey = null;\r\n        listen(_this, getChangeEventType(Property.ELEMENT), _this.handleElementChanged, _this);\r\n        listen(_this, getChangeEventType(Property.MAP), _this.handleMapChanged, _this);\r\n        listen(_this, getChangeEventType(Property.OFFSET), _this.handleOffsetChanged, _this);\r\n        listen(_this, getChangeEventType(Property.POSITION), _this.handlePositionChanged, _this);\r\n        listen(_this, getChangeEventType(Property.POSITIONING), _this.handlePositioningChanged, _this);\r\n        if (options.element !== undefined) {\r\n            _this.setElement(options.element);\r\n        }\r\n        _this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\r\n        _this.setPositioning(options.positioning !== undefined ?\r\n            /** @type {OverlayPositioning} */ (options.positioning) :\r\n            OverlayPositioning.TOP_LEFT);\r\n        if (options.position !== undefined) {\r\n            _this.setPosition(options.position);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get the DOM element of this overlay.\r\n     * @return {HTMLElement|undefined} The Element containing the overlay.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Overlay.prototype.getElement = function () {\r\n        return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\r\n    };\r\n    /**\r\n     * Get the overlay identifier which is set on constructor.\r\n     * @return {number|string|undefined} Id.\r\n     * @api\r\n     */\r\n    Overlay.prototype.getId = function () {\r\n        return this.id;\r\n    };\r\n    /**\r\n     * Get the map associated with this overlay.\r\n     * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\r\n     * overlay is part of.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Overlay.prototype.getMap = function () {\r\n        return (\r\n        /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP)));\r\n    };\r\n    /**\r\n     * Get the offset of this overlay.\r\n     * @return {Array<number>} The offset.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Overlay.prototype.getOffset = function () {\r\n        return /** @type {Array<number>} */ (this.get(Property.OFFSET));\r\n    };\r\n    /**\r\n     * Get the current position of this overlay.\r\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\r\n     *     anchored at.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Overlay.prototype.getPosition = function () {\r\n        return (\r\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION)));\r\n    };\r\n    /**\r\n     * Get the current positioning of this overlay.\r\n     * @return {OverlayPositioning} How the overlay is positioned\r\n     *     relative to its point on the map.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Overlay.prototype.getPositioning = function () {\r\n        return (\r\n        /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING)));\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    Overlay.prototype.handleElementChanged = function () {\r\n        removeChildren(this.element);\r\n        var element = this.getElement();\r\n        if (element) {\r\n            this.element.appendChild(element);\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    Overlay.prototype.handleMapChanged = function () {\r\n        if (this.mapPostrenderListenerKey) {\r\n            removeNode(this.element);\r\n            unlistenByKey(this.mapPostrenderListenerKey);\r\n            this.mapPostrenderListenerKey = null;\r\n        }\r\n        var map = this.getMap();\r\n        if (map) {\r\n            this.mapPostrenderListenerKey = listen(map, MapEventType.POSTRENDER, this.render, this);\r\n            this.updatePixelPosition();\r\n            var container = this.stopEvent ?\r\n                map.getOverlayContainerStopEvent() : map.getOverlayContainer();\r\n            if (this.insertFirst) {\r\n                container.insertBefore(this.element, container.childNodes[0] || null);\r\n            }\r\n            else {\r\n                container.appendChild(this.element);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    Overlay.prototype.render = function () {\r\n        this.updatePixelPosition();\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    Overlay.prototype.handleOffsetChanged = function () {\r\n        this.updatePixelPosition();\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    Overlay.prototype.handlePositionChanged = function () {\r\n        this.updatePixelPosition();\r\n        if (this.get(Property.POSITION) && this.autoPan) {\r\n            this.panIntoView();\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    Overlay.prototype.handlePositioningChanged = function () {\r\n        this.updatePixelPosition();\r\n    };\r\n    /**\r\n     * Set the DOM element to be associated with this overlay.\r\n     * @param {HTMLElement|undefined} element The Element containing the overlay.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Overlay.prototype.setElement = function (element) {\r\n        this.set(Property.ELEMENT, element);\r\n    };\r\n    /**\r\n     * Set the map to be associated with this overlay.\r\n     * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\r\n     * overlay is part of.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Overlay.prototype.setMap = function (map) {\r\n        this.set(Property.MAP, map);\r\n    };\r\n    /**\r\n     * Set the offset for this overlay.\r\n     * @param {Array<number>} offset Offset.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Overlay.prototype.setOffset = function (offset) {\r\n        this.set(Property.OFFSET, offset);\r\n    };\r\n    /**\r\n     * Set the position for this overlay. If the position is `undefined` the\r\n     * overlay is hidden.\r\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\r\n     *     is anchored at.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Overlay.prototype.setPosition = function (position) {\r\n        this.set(Property.POSITION, position);\r\n    };\r\n    /**\r\n     * Pan the map so that the overlay is entirely visible in the current viewport\r\n     * (if necessary).\r\n     * @protected\r\n     */\r\n    Overlay.prototype.panIntoView = function () {\r\n        var map = this.getMap();\r\n        if (!map || !map.getTargetElement()) {\r\n            return;\r\n        }\r\n        var mapRect = this.getRect(map.getTargetElement(), map.getSize());\r\n        var element = this.getElement();\r\n        var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\r\n        var margin = this.autoPanMargin;\r\n        if (!containsExtent(mapRect, overlayRect)) {\r\n            // the overlay is not completely inside the viewport, so pan the map\r\n            var offsetLeft = overlayRect[0] - mapRect[0];\r\n            var offsetRight = mapRect[2] - overlayRect[2];\r\n            var offsetTop = overlayRect[1] - mapRect[1];\r\n            var offsetBottom = mapRect[3] - overlayRect[3];\r\n            var delta = [0, 0];\r\n            if (offsetLeft < 0) {\r\n                // move map to the left\r\n                delta[0] = offsetLeft - margin;\r\n            }\r\n            else if (offsetRight < 0) {\r\n                // move map to the right\r\n                delta[0] = Math.abs(offsetRight) + margin;\r\n            }\r\n            if (offsetTop < 0) {\r\n                // move map up\r\n                delta[1] = offsetTop - margin;\r\n            }\r\n            else if (offsetBottom < 0) {\r\n                // move map down\r\n                delta[1] = Math.abs(offsetBottom) + margin;\r\n            }\r\n            if (delta[0] !== 0 || delta[1] !== 0) {\r\n                var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\r\n                var centerPx = map.getPixelFromCoordinate(center);\r\n                var newCenterPx = [\r\n                    centerPx[0] + delta[0],\r\n                    centerPx[1] + delta[1]\r\n                ];\r\n                map.getView().animate({\r\n                    center: map.getCoordinateFromPixel(newCenterPx),\r\n                    duration: this.autoPanAnimation.duration,\r\n                    easing: this.autoPanAnimation.easing\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Get the extent of an element relative to the document\r\n     * @param {HTMLElement|undefined} element The element.\r\n     * @param {import(\"./size.js\").Size|undefined} size The size of the element.\r\n     * @return {import(\"./extent.js\").Extent} The extent.\r\n     * @protected\r\n     */\r\n    Overlay.prototype.getRect = function (element, size) {\r\n        var box = element.getBoundingClientRect();\r\n        var offsetX = box.left + window.pageXOffset;\r\n        var offsetY = box.top + window.pageYOffset;\r\n        return [\r\n            offsetX,\r\n            offsetY,\r\n            offsetX + size[0],\r\n            offsetY + size[1]\r\n        ];\r\n    };\r\n    /**\r\n     * Set the positioning for this overlay.\r\n     * @param {OverlayPositioning} positioning how the overlay is\r\n     *     positioned relative to its point on the map.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Overlay.prototype.setPositioning = function (positioning) {\r\n        this.set(Property.POSITIONING, positioning);\r\n    };\r\n    /**\r\n     * Modify the visibility of the element.\r\n     * @param {boolean} visible Element visibility.\r\n     * @protected\r\n     */\r\n    Overlay.prototype.setVisible = function (visible) {\r\n        if (this.rendered.visible !== visible) {\r\n            this.element.style.display = visible ? '' : 'none';\r\n            this.rendered.visible = visible;\r\n        }\r\n    };\r\n    /**\r\n     * Update pixel position.\r\n     * @protected\r\n     */\r\n    Overlay.prototype.updatePixelPosition = function () {\r\n        var map = this.getMap();\r\n        var position = this.getPosition();\r\n        if (!map || !map.isRendered() || !position) {\r\n            this.setVisible(false);\r\n            return;\r\n        }\r\n        var pixel = map.getPixelFromCoordinate(position);\r\n        var mapSize = map.getSize();\r\n        this.updateRenderedPosition(pixel, mapSize);\r\n    };\r\n    /**\r\n     * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\r\n     * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\r\n     * @protected\r\n     */\r\n    Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\r\n        var style = this.element.style;\r\n        var offset = this.getOffset();\r\n        var positioning = this.getPositioning();\r\n        this.setVisible(true);\r\n        var offsetX = offset[0];\r\n        var offsetY = offset[1];\r\n        if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\r\n            positioning == OverlayPositioning.CENTER_RIGHT ||\r\n            positioning == OverlayPositioning.TOP_RIGHT) {\r\n            if (this.rendered.left_ !== '') {\r\n                this.rendered.left_ = style.left = '';\r\n            }\r\n            var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\r\n            if (this.rendered.right_ != right) {\r\n                this.rendered.right_ = style.right = right;\r\n            }\r\n        }\r\n        else {\r\n            if (this.rendered.right_ !== '') {\r\n                this.rendered.right_ = style.right = '';\r\n            }\r\n            if (positioning == OverlayPositioning.BOTTOM_CENTER ||\r\n                positioning == OverlayPositioning.CENTER_CENTER ||\r\n                positioning == OverlayPositioning.TOP_CENTER) {\r\n                offsetX -= this.element.offsetWidth / 2;\r\n            }\r\n            var left = Math.round(pixel[0] + offsetX) + 'px';\r\n            if (this.rendered.left_ != left) {\r\n                this.rendered.left_ = style.left = left;\r\n            }\r\n        }\r\n        if (positioning == OverlayPositioning.BOTTOM_LEFT ||\r\n            positioning == OverlayPositioning.BOTTOM_CENTER ||\r\n            positioning == OverlayPositioning.BOTTOM_RIGHT) {\r\n            if (this.rendered.top_ !== '') {\r\n                this.rendered.top_ = style.top = '';\r\n            }\r\n            var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\r\n            if (this.rendered.bottom_ != bottom) {\r\n                this.rendered.bottom_ = style.bottom = bottom;\r\n            }\r\n        }\r\n        else {\r\n            if (this.rendered.bottom_ !== '') {\r\n                this.rendered.bottom_ = style.bottom = '';\r\n            }\r\n            if (positioning == OverlayPositioning.CENTER_LEFT ||\r\n                positioning == OverlayPositioning.CENTER_CENTER ||\r\n                positioning == OverlayPositioning.CENTER_RIGHT) {\r\n                offsetY -= this.element.offsetHeight / 2;\r\n            }\r\n            var top_1 = Math.round(pixel[1] + offsetY) + 'px';\r\n            if (this.rendered.top_ != top_1) {\r\n                this.rendered.top_ = style.top = top_1;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * returns the options this Overlay has been created with\r\n     * @return {Options} overlay options\r\n     */\r\n    Overlay.prototype.getOptions = function () {\r\n        return this.options;\r\n    };\r\n    return Overlay;\r\n}(BaseObject));\r\nexport default Overlay;\r\n//# sourceMappingURL=Overlay.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/control/OverviewMap\r\n */\r\nimport Collection from '../Collection.js';\r\nimport Map from '../Map.js';\r\nimport MapEventType from '../MapEventType.js';\r\nimport MapProperty from '../MapProperty.js';\r\nimport { getChangeEventType } from '../Object.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport Overlay from '../Overlay.js';\r\nimport OverlayPositioning from '../OverlayPositioning.js';\r\nimport ViewProperty from '../ViewProperty.js';\r\nimport Control from './Control.js';\r\nimport { rotate as rotateCoordinate, add as addCoordinate } from '../coordinate.js';\r\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\r\nimport { replaceNode } from '../dom.js';\r\nimport { listen, listenOnce, unlisten } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter } from '../extent.js';\r\n/**\r\n * Maximum width and/or height extent ratio that determines when the overview\r\n * map should be zoomed out.\r\n * @type {number}\r\n */\r\nvar MAX_RATIO = 0.75;\r\n/**\r\n * Minimum width and/or height extent ratio that determines when the overview\r\n * map should be zoomed in.\r\n * @type {number}\r\n */\r\nvar MIN_RATIO = 0.1;\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-overviewmap'] CSS class name.\r\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\r\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\r\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\r\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\r\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} layers\r\n * Layers for the overview map (mandatory).\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\r\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control\r\n * to be rendered outside of the map's viewport.\r\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\r\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\r\n * a default view with an EPSG:3857 projection will be used.\r\n */\r\n/**\r\n * Create a new control with a map acting as an overview map for an other\r\n * defined map.\r\n *\r\n * @api\r\n */\r\nvar OverviewMap = /** @class */ (function (_super) {\r\n    __extends(OverviewMap, _super);\r\n    /**\r\n     * @param {Options=} opt_options OverviewMap options.\r\n     */\r\n    function OverviewMap(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        _this = _super.call(this, {\r\n            element: document.createElement('div'),\r\n            render: options.render || render,\r\n            target: options.target\r\n        }) || this;\r\n        /**\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.collapsible_ = options.collapsible !== undefined ?\r\n            options.collapsible : true;\r\n        if (!_this.collapsible_) {\r\n            _this.collapsed_ = false;\r\n        }\r\n        var className = options.className !== undefined ? options.className : 'ol-overviewmap';\r\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\r\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\r\n        if (typeof collapseLabel === 'string') {\r\n            /**\r\n             * @private\r\n             * @type {HTMLElement}\r\n             */\r\n            _this.collapseLabel_ = document.createElement('span');\r\n            _this.collapseLabel_.textContent = collapseLabel;\r\n        }\r\n        else {\r\n            _this.collapseLabel_ = collapseLabel;\r\n        }\r\n        var label = options.label !== undefined ? options.label : '\\u00BB';\r\n        if (typeof label === 'string') {\r\n            /**\r\n             * @private\r\n             * @type {HTMLElement}\r\n             */\r\n            _this.label_ = document.createElement('span');\r\n            _this.label_.textContent = label;\r\n        }\r\n        else {\r\n            _this.label_ = label;\r\n        }\r\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\r\n            _this.collapseLabel_ : _this.label_;\r\n        var button = document.createElement('button');\r\n        button.setAttribute('type', 'button');\r\n        button.title = tipLabel;\r\n        button.appendChild(activeLabel);\r\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\r\n        /**\r\n         * @type {HTMLElement}\r\n         * @private\r\n         */\r\n        _this.ovmapDiv_ = document.createElement('div');\r\n        _this.ovmapDiv_.className = 'ol-overviewmap-map';\r\n        /**\r\n         * @type {import(\"../Map.js\").default}\r\n         * @private\r\n         */\r\n        _this.ovmap_ = new Map({\r\n            controls: new Collection(),\r\n            interactions: new Collection(),\r\n            view: options.view\r\n        });\r\n        var ovmap = _this.ovmap_;\r\n        if (options.layers) {\r\n            /** @type {Array<import(\"../layer/Layer.js\").default>} */ (options.layers).forEach(\r\n            /**\r\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n             */\r\n            (function (layer) {\r\n                ovmap.addLayer(layer);\r\n            }).bind(_this));\r\n        }\r\n        var box = document.createElement('div');\r\n        box.className = 'ol-overviewmap-box';\r\n        box.style.boxSizing = 'border-box';\r\n        /**\r\n         * @type {import(\"../Overlay.js\").default}\r\n         * @private\r\n         */\r\n        _this.boxOverlay_ = new Overlay({\r\n            position: [0, 0],\r\n            positioning: OverlayPositioning.BOTTOM_LEFT,\r\n            element: box\r\n        });\r\n        _this.ovmap_.addOverlay(_this.boxOverlay_);\r\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\r\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\r\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\r\n        var element = _this.element;\r\n        element.className = cssClasses;\r\n        element.appendChild(_this.ovmapDiv_);\r\n        element.appendChild(button);\r\n        /* Interactive map */\r\n        var scope = _this;\r\n        var overlay = _this.boxOverlay_;\r\n        var overlayBox = _this.boxOverlay_.getElement();\r\n        /* Functions definition */\r\n        var computeDesiredMousePosition = function (mousePosition) {\r\n            return {\r\n                clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\r\n                clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\r\n            };\r\n        };\r\n        var move = function (event) {\r\n            var position = /** @type {?} */ (computeDesiredMousePosition(event));\r\n            var coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\r\n            overlay.setPosition(coordinates);\r\n        };\r\n        var endMoving = function (event) {\r\n            var coordinates = ovmap.getEventCoordinate(event);\r\n            scope.getMap().getView().setCenter(coordinates);\r\n            window.removeEventListener('mousemove', move);\r\n            window.removeEventListener('mouseup', endMoving);\r\n        };\r\n        /* Binding */\r\n        overlayBox.addEventListener('mousedown', function () {\r\n            window.addEventListener('mousemove', move);\r\n            window.addEventListener('mouseup', endMoving);\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    OverviewMap.prototype.setMap = function (map) {\r\n        var oldMap = this.getMap();\r\n        if (map === oldMap) {\r\n            return;\r\n        }\r\n        if (oldMap) {\r\n            var oldView = oldMap.getView();\r\n            if (oldView) {\r\n                this.unbindView_(oldView);\r\n            }\r\n            this.ovmap_.setTarget(null);\r\n        }\r\n        _super.prototype.setMap.call(this, map);\r\n        if (map) {\r\n            this.ovmap_.setTarget(this.ovmapDiv_);\r\n            this.listenerKeys.push(listen(map, ObjectEventType.PROPERTYCHANGE, this.handleMapPropertyChange_, this));\r\n            var view = map.getView();\r\n            if (view) {\r\n                this.bindView_(view);\r\n                if (view.isDef()) {\r\n                    this.ovmap_.updateSize();\r\n                    this.resetExtent_();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Handle map property changes.  This only deals with changes to the map's view.\r\n     * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\r\n     * @private\r\n     */\r\n    OverviewMap.prototype.handleMapPropertyChange_ = function (event) {\r\n        if (event.key === MapProperty.VIEW) {\r\n            var oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\r\n            if (oldView) {\r\n                this.unbindView_(oldView);\r\n            }\r\n            var newView = this.getMap().getView();\r\n            this.bindView_(newView);\r\n        }\r\n    };\r\n    /**\r\n     * Register listeners for view property changes.\r\n     * @param {import(\"../View.js\").default} view The view.\r\n     * @private\r\n     */\r\n    OverviewMap.prototype.bindView_ = function (view) {\r\n        listen(view, getChangeEventType(ViewProperty.ROTATION), this.handleRotationChanged_, this);\r\n    };\r\n    /**\r\n     * Unregister listeners for view property changes.\r\n     * @param {import(\"../View.js\").default} view The view.\r\n     * @private\r\n     */\r\n    OverviewMap.prototype.unbindView_ = function (view) {\r\n        unlisten(view, getChangeEventType(ViewProperty.ROTATION), this.handleRotationChanged_, this);\r\n    };\r\n    /**\r\n     * Handle rotation changes to the main map.\r\n     * TODO: This should rotate the extent rectrangle instead of the\r\n     * overview map's view.\r\n     * @private\r\n     */\r\n    OverviewMap.prototype.handleRotationChanged_ = function () {\r\n        this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\r\n    };\r\n    /**\r\n     * Reset the overview map extent if the box size (width or\r\n     * height) is less than the size of the overview map size times minRatio\r\n     * or is greater than the size of the overview size times maxRatio.\r\n     *\r\n     * If the map extent was not reset, the box size can fits in the defined\r\n     * ratio sizes. This method then checks if is contained inside the overview\r\n     * map current extent. If not, recenter the overview map to the current\r\n     * main map center location.\r\n     * @private\r\n     */\r\n    OverviewMap.prototype.validateExtent_ = function () {\r\n        var map = this.getMap();\r\n        var ovmap = this.ovmap_;\r\n        if (!map.isRendered() || !ovmap.isRendered()) {\r\n            return;\r\n        }\r\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\r\n        var view = map.getView();\r\n        var extent = view.calculateExtent(mapSize);\r\n        var ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\r\n        var ovview = ovmap.getView();\r\n        var ovextent = ovview.calculateExtent(ovmapSize);\r\n        var topLeftPixel = ovmap.getPixelFromCoordinate(getTopLeft(extent));\r\n        var bottomRightPixel = ovmap.getPixelFromCoordinate(getBottomRight(extent));\r\n        var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\r\n        var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\r\n        var ovmapWidth = ovmapSize[0];\r\n        var ovmapHeight = ovmapSize[1];\r\n        if (boxWidth < ovmapWidth * MIN_RATIO ||\r\n            boxHeight < ovmapHeight * MIN_RATIO ||\r\n            boxWidth > ovmapWidth * MAX_RATIO ||\r\n            boxHeight > ovmapHeight * MAX_RATIO) {\r\n            this.resetExtent_();\r\n        }\r\n        else if (!containsExtent(ovextent, extent)) {\r\n            this.recenter_();\r\n        }\r\n    };\r\n    /**\r\n     * Reset the overview map extent to half calculated min and max ratio times\r\n     * the extent of the main map.\r\n     * @private\r\n     */\r\n    OverviewMap.prototype.resetExtent_ = function () {\r\n        if (MAX_RATIO === 0 || MIN_RATIO === 0) {\r\n            return;\r\n        }\r\n        var map = this.getMap();\r\n        var ovmap = this.ovmap_;\r\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\r\n        var view = map.getView();\r\n        var extent = view.calculateExtent(mapSize);\r\n        var ovview = ovmap.getView();\r\n        // get how many times the current map overview could hold different\r\n        // box sizes using the min and max ratio, pick the step in the middle used\r\n        // to calculate the extent from the main map to set it to the overview map,\r\n        var steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\r\n        var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\r\n        scaleFromCenter(extent, ratio);\r\n        ovview.fit(extent);\r\n    };\r\n    /**\r\n     * Set the center of the overview map to the map center without changing its\r\n     * resolution.\r\n     * @private\r\n     */\r\n    OverviewMap.prototype.recenter_ = function () {\r\n        var map = this.getMap();\r\n        var ovmap = this.ovmap_;\r\n        var view = map.getView();\r\n        var ovview = ovmap.getView();\r\n        ovview.setCenter(view.getCenter());\r\n    };\r\n    /**\r\n     * Update the box using the main map extent\r\n     * @private\r\n     */\r\n    OverviewMap.prototype.updateBox_ = function () {\r\n        var map = this.getMap();\r\n        var ovmap = this.ovmap_;\r\n        if (!map.isRendered() || !ovmap.isRendered()) {\r\n            return;\r\n        }\r\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\r\n        var view = map.getView();\r\n        var ovview = ovmap.getView();\r\n        var rotation = view.getRotation();\r\n        var overlay = this.boxOverlay_;\r\n        var box = this.boxOverlay_.getElement();\r\n        var extent = view.calculateExtent(mapSize);\r\n        var ovresolution = ovview.getResolution();\r\n        var bottomLeft = getBottomLeft(extent);\r\n        var topRight = getTopRight(extent);\r\n        // set position using bottom left coordinates\r\n        var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\r\n        overlay.setPosition(rotateBottomLeft);\r\n        // set box size calculated from map extent size and overview map resolution\r\n        if (box) {\r\n            box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\r\n            box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} rotation Target rotation.\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\r\n     * @private\r\n     */\r\n    OverviewMap.prototype.calculateCoordinateRotate_ = function (rotation, coordinate) {\r\n        var coordinateRotate;\r\n        var map = this.getMap();\r\n        var view = map.getView();\r\n        var currentCenter = view.getCenter();\r\n        if (currentCenter) {\r\n            coordinateRotate = [\r\n                coordinate[0] - currentCenter[0],\r\n                coordinate[1] - currentCenter[1]\r\n            ];\r\n            rotateCoordinate(coordinateRotate, rotation);\r\n            addCoordinate(coordinateRotate, currentCenter);\r\n        }\r\n        return coordinateRotate;\r\n    };\r\n    /**\r\n     * @param {MouseEvent} event The event to handle\r\n     * @private\r\n     */\r\n    OverviewMap.prototype.handleClick_ = function (event) {\r\n        event.preventDefault();\r\n        this.handleToggle_();\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    OverviewMap.prototype.handleToggle_ = function () {\r\n        this.element.classList.toggle(CLASS_COLLAPSED);\r\n        if (this.collapsed_) {\r\n            replaceNode(this.collapseLabel_, this.label_);\r\n        }\r\n        else {\r\n            replaceNode(this.label_, this.collapseLabel_);\r\n        }\r\n        this.collapsed_ = !this.collapsed_;\r\n        // manage overview map if it had not been rendered before and control\r\n        // is expanded\r\n        var ovmap = this.ovmap_;\r\n        if (!this.collapsed_ && !ovmap.isRendered()) {\r\n            ovmap.updateSize();\r\n            this.resetExtent_();\r\n            listenOnce(ovmap, MapEventType.POSTRENDER, function (event) {\r\n                this.updateBox_();\r\n            }, this);\r\n        }\r\n    };\r\n    /**\r\n     * Return `true` if the overview map is collapsible, `false` otherwise.\r\n     * @return {boolean} True if the widget is collapsible.\r\n     * @api\r\n     */\r\n    OverviewMap.prototype.getCollapsible = function () {\r\n        return this.collapsible_;\r\n    };\r\n    /**\r\n     * Set whether the overview map should be collapsible.\r\n     * @param {boolean} collapsible True if the widget is collapsible.\r\n     * @api\r\n     */\r\n    OverviewMap.prototype.setCollapsible = function (collapsible) {\r\n        if (this.collapsible_ === collapsible) {\r\n            return;\r\n        }\r\n        this.collapsible_ = collapsible;\r\n        this.element.classList.toggle('ol-uncollapsible');\r\n        if (!collapsible && this.collapsed_) {\r\n            this.handleToggle_();\r\n        }\r\n    };\r\n    /**\r\n     * Collapse or expand the overview map according to the passed parameter. Will\r\n     * not do anything if the overview map isn't collapsible or if the current\r\n     * collapsed state is already the one requested.\r\n     * @param {boolean} collapsed True if the widget is collapsed.\r\n     * @api\r\n     */\r\n    OverviewMap.prototype.setCollapsed = function (collapsed) {\r\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\r\n            return;\r\n        }\r\n        this.handleToggle_();\r\n    };\r\n    /**\r\n     * Determine if the overview map is collapsed.\r\n     * @return {boolean} The overview map is collapsed.\r\n     * @api\r\n     */\r\n    OverviewMap.prototype.getCollapsed = function () {\r\n        return this.collapsed_;\r\n    };\r\n    /**\r\n     * Return the overview map.\r\n     * @return {import(\"../PluggableMap.js\").default} Overview map.\r\n     * @api\r\n     */\r\n    OverviewMap.prototype.getOverviewMap = function () {\r\n        return this.ovmap_;\r\n    };\r\n    return OverviewMap;\r\n}(Control));\r\n/**\r\n * Update the overview map element.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {OverviewMap}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n    this.validateExtent_();\r\n    this.updateBox_();\r\n}\r\nexport default OverviewMap;\r\n//# sourceMappingURL=OverviewMap.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/control/ScaleLine\r\n */\r\nimport { getChangeEventType } from '../Object.js';\r\nimport { assert } from '../asserts.js';\r\nimport Control from './Control.js';\r\nimport { CLASS_UNSELECTABLE } from '../css.js';\r\nimport { listen } from '../events.js';\r\nimport { getPointResolution, METERS_PER_UNIT } from '../proj.js';\r\nimport ProjUnits from '../proj/Units.js';\r\n/**\r\n * @type {string}\r\n */\r\nvar UNITS_PROP = 'units';\r\n/**\r\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\r\n * `'nautical'`, `'metric'`, `'us'`.\r\n * @enum {string}\r\n */\r\nexport var Units = {\r\n    DEGREES: 'degrees',\r\n    IMPERIAL: 'imperial',\r\n    NAUTICAL: 'nautical',\r\n    METRIC: 'metric',\r\n    US: 'us'\r\n};\r\n/**\r\n * @const\r\n * @type {Array<number>}\r\n */\r\nvar LEADING_DIGITS = [1, 2, 5];\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-scale-line'] CSS Class name.\r\n * @property {number} [minWidth=64] Minimum width in pixels.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\r\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control\r\n * to be rendered outside of the map's viewport.\r\n * @property {Units|string} [units='metric'] Units.\r\n * @property {boolean} [bar=false] Render scalebars instead of a line.\r\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\r\n * for best results. Only applies when `bar` is `true`.\r\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\r\n * when `bar` is `true`.\r\n */\r\n/**\r\n * @classdesc\r\n * A control displaying rough y-axis distances, calculated for the center of the\r\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\r\n * projection in OpenLayers), the scale is valid for all directions.\r\n * No scale line will be shown when the y-axis distance of a pixel at the\r\n * viewport center cannot be calculated in the view projection.\r\n * By default the scale line will show in the bottom left portion of the map,\r\n * but this can be changed by using the css selector `.ol-scale-line`.\r\n * When specifying `bar` as `true`, a scalebar will be rendered instead\r\n * of a scaleline.\r\n *\r\n * @api\r\n */\r\nvar ScaleLine = /** @class */ (function (_super) {\r\n    __extends(ScaleLine, _super);\r\n    /**\r\n     * @param {Options=} opt_options Scale line options.\r\n     */\r\n    function ScaleLine(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        var className = options.className !== undefined ? options.className :\r\n            options.bar ? 'ol-scale-bar' : 'ol-scale-line';\r\n        _this = _super.call(this, {\r\n            element: document.createElement('div'),\r\n            render: options.render || render,\r\n            target: options.target\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {HTMLElement}\r\n         */\r\n        _this.innerElement_ = document.createElement('div');\r\n        _this.innerElement_.className = className + '-inner';\r\n        _this.element.className = className + ' ' + CLASS_UNSELECTABLE;\r\n        _this.element.appendChild(_this.innerElement_);\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../View.js\").State}\r\n         */\r\n        _this.viewState_ = null;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.renderedVisible_ = false;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.renderedWidth_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.renderedHTML_ = '';\r\n        listen(_this, getChangeEventType(UNITS_PROP), _this.handleUnitsChanged_, _this);\r\n        _this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.scaleBar_ = options.bar || false;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.scaleBarSteps_ = options.steps || 4;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.scaleBarText_ = options.text || false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return the units to use in the scale line.\r\n     * @return {Units} The units\r\n     * to use in the scale line.\r\n     * @observable\r\n     * @api\r\n     */\r\n    ScaleLine.prototype.getUnits = function () {\r\n        return this.get(UNITS_PROP);\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    ScaleLine.prototype.handleUnitsChanged_ = function () {\r\n        this.updateElement_();\r\n    };\r\n    /**\r\n     * Set the units to use in the scale line.\r\n     * @param {Units} units The units to use in the scale line.\r\n     * @observable\r\n     * @api\r\n     */\r\n    ScaleLine.prototype.setUnits = function (units) {\r\n        this.set(UNITS_PROP, units);\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    ScaleLine.prototype.updateElement_ = function () {\r\n        var viewState = this.viewState_;\r\n        if (!viewState) {\r\n            if (this.renderedVisible_) {\r\n                this.element.style.display = 'none';\r\n                this.renderedVisible_ = false;\r\n            }\r\n            return;\r\n        }\r\n        var center = viewState.center;\r\n        var projection = viewState.projection;\r\n        var units = this.getUnits();\r\n        var pointResolutionUnits = units == Units.DEGREES ?\r\n            ProjUnits.DEGREES :\r\n            ProjUnits.METERS;\r\n        var pointResolution = getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\r\n        if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\r\n            && pointResolutionUnits == ProjUnits.METERS) {\r\n            pointResolution *= projection.getMetersPerUnit();\r\n        }\r\n        var nominalCount = this.minWidth_ * pointResolution;\r\n        var suffix = '';\r\n        if (units == Units.DEGREES) {\r\n            var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\r\n            if (projection.getUnits() == ProjUnits.DEGREES) {\r\n                nominalCount *= metersPerDegree;\r\n            }\r\n            else {\r\n                pointResolution /= metersPerDegree;\r\n            }\r\n            if (nominalCount < metersPerDegree / 60) {\r\n                suffix = '\\u2033'; // seconds\r\n                pointResolution *= 3600;\r\n            }\r\n            else if (nominalCount < metersPerDegree) {\r\n                suffix = '\\u2032'; // minutes\r\n                pointResolution *= 60;\r\n            }\r\n            else {\r\n                suffix = '\\u00b0'; // degrees\r\n            }\r\n        }\r\n        else if (units == Units.IMPERIAL) {\r\n            if (nominalCount < 0.9144) {\r\n                suffix = 'in';\r\n                pointResolution /= 0.0254;\r\n            }\r\n            else if (nominalCount < 1609.344) {\r\n                suffix = 'ft';\r\n                pointResolution /= 0.3048;\r\n            }\r\n            else {\r\n                suffix = 'mi';\r\n                pointResolution /= 1609.344;\r\n            }\r\n        }\r\n        else if (units == Units.NAUTICAL) {\r\n            pointResolution /= 1852;\r\n            suffix = 'nm';\r\n        }\r\n        else if (units == Units.METRIC) {\r\n            if (nominalCount < 0.001) {\r\n                suffix = 'μm';\r\n                pointResolution *= 1000000;\r\n            }\r\n            else if (nominalCount < 1) {\r\n                suffix = 'mm';\r\n                pointResolution *= 1000;\r\n            }\r\n            else if (nominalCount < 1000) {\r\n                suffix = 'm';\r\n            }\r\n            else {\r\n                suffix = 'km';\r\n                pointResolution /= 1000;\r\n            }\r\n        }\r\n        else if (units == Units.US) {\r\n            if (nominalCount < 0.9144) {\r\n                suffix = 'in';\r\n                pointResolution *= 39.37;\r\n            }\r\n            else if (nominalCount < 1609.344) {\r\n                suffix = 'ft';\r\n                pointResolution /= 0.30480061;\r\n            }\r\n            else {\r\n                suffix = 'mi';\r\n                pointResolution /= 1609.3472;\r\n            }\r\n        }\r\n        else {\r\n            assert(false, 33); // Invalid units\r\n        }\r\n        var i = 3 * Math.floor(Math.log(this.minWidth_ * pointResolution) / Math.log(10));\r\n        var count, width;\r\n        while (true) {\r\n            count = LEADING_DIGITS[((i % 3) + 3) % 3] *\r\n                Math.pow(10, Math.floor(i / 3));\r\n            width = Math.round(count / pointResolution);\r\n            if (isNaN(width)) {\r\n                this.element.style.display = 'none';\r\n                this.renderedVisible_ = false;\r\n                return;\r\n            }\r\n            else if (width >= this.minWidth_) {\r\n                break;\r\n            }\r\n            ++i;\r\n        }\r\n        var html;\r\n        if (this.scaleBar_) {\r\n            html = this.createScaleBar(width, count, suffix);\r\n        }\r\n        else {\r\n            html = count + ' ' + suffix;\r\n        }\r\n        if (this.renderedHTML_ != html) {\r\n            this.innerElement_.innerHTML = html;\r\n            this.renderedHTML_ = html;\r\n        }\r\n        if (this.renderedWidth_ != width) {\r\n            this.innerElement_.style.width = width + 'px';\r\n            this.renderedWidth_ = width;\r\n        }\r\n        if (!this.renderedVisible_) {\r\n            this.element.style.display = '';\r\n            this.renderedVisible_ = true;\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {number} width The current width of the scalebar.\r\n     * @param {number} scale The current scale.\r\n     * @param {string} suffix The suffix to append to the scale text.\r\n     * @returns {string} The stringified HTML of the scalebar.\r\n     */\r\n    ScaleLine.prototype.createScaleBar = function (width, scale, suffix) {\r\n        var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\r\n        var scaleSteps = [];\r\n        var stepWidth = width / this.scaleBarSteps_;\r\n        var backgroundColor = '#ffffff';\r\n        for (var i = 0; i < this.scaleBarSteps_; i++) {\r\n            if (i === 0) {\r\n                // create the first marker at position 0\r\n                scaleSteps.push(this.createMarker('absolute', i));\r\n            }\r\n            scaleSteps.push('<div>' +\r\n                '<div ' +\r\n                'class=\"ol-scale-singlebar\" ' +\r\n                'style=' +\r\n                '\"width: ' + stepWidth + 'px;' +\r\n                'background-color: ' + backgroundColor + ';\"' +\r\n                '>' +\r\n                '</div>' +\r\n                this.createMarker('relative', i) +\r\n                /*render text every second step, except when only 2 steps */\r\n                (i % 2 === 0 || this.scaleBarSteps_ === 2 ?\r\n                    this.createStepText(i, width, false, scale, suffix) :\r\n                    '') +\r\n                '</div>');\r\n            if (i === this.scaleBarSteps_ - 1) {\r\n                { /*render text at the end */ }\r\n                scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\r\n            }\r\n            // switch colors of steps between black and white\r\n            if (backgroundColor === '#ffffff') {\r\n                backgroundColor = '#000000';\r\n            }\r\n            else {\r\n                backgroundColor = '#ffffff';\r\n            }\r\n        }\r\n        var scaleBarText;\r\n        if (this.scaleBarText_) {\r\n            scaleBarText = '<div ' +\r\n                'class=\"ol-scale-text\" ' +\r\n                'style=\"width: ' + width + 'px;\">' +\r\n                mapScale +\r\n                '</div>';\r\n        }\r\n        else {\r\n            scaleBarText = '';\r\n        }\r\n        var container = '<div ' +\r\n            'style=\"display: flex;\">' +\r\n            scaleBarText +\r\n            scaleSteps.join('') +\r\n            '</div>';\r\n        return container;\r\n    };\r\n    /**\r\n     * Creates a marker at given position\r\n     * @param {string} position - The position, absolute or relative\r\n     * @param {number} i - The iterator\r\n     * @returns {string} The stringified div containing the marker\r\n     */\r\n    ScaleLine.prototype.createMarker = function (position, i) {\r\n        var top = position === 'absolute' ? 3 : -10;\r\n        return '<div ' +\r\n            'class=\"ol-scale-step-marker\" ' +\r\n            'style=\"position: ' + position + ';' +\r\n            'top: ' + top + 'px;\"' +\r\n            '></div>';\r\n    };\r\n    /**\r\n     * Creates the label for a marker marker at given position\r\n     * @param {number} i - The iterator\r\n     * @param {number} width - The width the scalebar will currently use\r\n     * @param {boolean} isLast - Flag indicating if we add the last step text\r\n     * @param {number} scale - The current scale for the whole scalebar\r\n     * @param {string} suffix - The suffix for the scale\r\n     * @returns {string} The stringified div containing the step text\r\n     */\r\n    ScaleLine.prototype.createStepText = function (i, width, isLast, scale, suffix) {\r\n        var length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_ * i) * 100) / 100;\r\n        var lengthString = length + (i === 0 ? '' : ' ' + suffix);\r\n        var margin = i === 0 ? -3 : width / this.scaleBarSteps_ * -1;\r\n        var minWidth = i === 0 ? 0 : width / this.scaleBarSteps_ * 2;\r\n        return '<div ' +\r\n            'class=\"ol-scale-step-text\" ' +\r\n            'style=\"' +\r\n            'margin-left: ' + margin + 'px;' +\r\n            'text-align: ' + (i === 0 ? 'left' : 'center') + '; ' +\r\n            'min-width: ' + minWidth + 'px;' +\r\n            'left: ' + (isLast ? width + 'px' : 'unset') + ';\"' +\r\n            '>' +\r\n            lengthString +\r\n            '</div>';\r\n    };\r\n    /**\r\n     * Returns the appropriate scale for the given resolution and units.\r\n     * @return {number} The appropriate scale.\r\n     */\r\n    ScaleLine.prototype.getScaleForResolution = function () {\r\n        var resolution = this.getMap().getView().getResolution();\r\n        var dpi = 25.4 / 0.28;\r\n        var mpu = this.viewState_.projection.getMetersPerUnit();\r\n        var inchesPerMeter = 39.37;\r\n        return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\r\n    };\r\n    return ScaleLine;\r\n}(Control));\r\n/**\r\n * Update the scale line element.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {ScaleLine}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n    var frameState = mapEvent.frameState;\r\n    if (!frameState) {\r\n        this.viewState_ = null;\r\n    }\r\n    else {\r\n        this.viewState_ = frameState.viewState;\r\n    }\r\n    this.updateElement_();\r\n}\r\nexport default ScaleLine;\r\n//# sourceMappingURL=ScaleLine.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/control/ZoomSlider\r\n */\r\nimport ViewHint from '../ViewHint.js';\r\nimport Control from './Control.js';\r\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\r\nimport { easeOut } from '../easing.js';\r\nimport { listen, unlistenByKey } from '../events.js';\r\nimport { stopPropagation } from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { clamp } from '../math.js';\r\nimport PointerEventType from '../pointer/EventType.js';\r\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\r\n/**\r\n * The enum for available directions.\r\n *\r\n * @enum {number}\r\n */\r\nvar Direction = {\r\n    VERTICAL: 0,\r\n    HORIZONTAL: 1\r\n};\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-zoomslider'] CSS class name.\r\n * @property {number} [duration=200] Animation duration in milliseconds.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\r\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n */\r\n/**\r\n * @classdesc\r\n * A slider type of control for zooming.\r\n *\r\n * Example:\r\n *\r\n *     map.addControl(new ZoomSlider());\r\n *\r\n * @api\r\n */\r\nvar ZoomSlider = /** @class */ (function (_super) {\r\n    __extends(ZoomSlider, _super);\r\n    /**\r\n     * @param {Options=} opt_options Zoom slider options.\r\n     */\r\n    function ZoomSlider(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        _this = _super.call(this, {\r\n            element: document.createElement('div'),\r\n            render: options.render || render\r\n        }) || this;\r\n        /**\r\n          * @type {!Array.<import(\"../events.js\").EventsKey>}\r\n          * @private\r\n          */\r\n        _this.dragListenerKeys_ = [];\r\n        /**\r\n         * Will hold the current resolution of the view.\r\n         *\r\n         * @type {number|undefined}\r\n         * @private\r\n         */\r\n        _this.currentResolution_ = undefined;\r\n        /**\r\n         * The direction of the slider. Will be determined from actual display of the\r\n         * container and defaults to Direction.VERTICAL.\r\n         *\r\n         * @type {Direction}\r\n         * @private\r\n         */\r\n        _this.direction_ = Direction.VERTICAL;\r\n        /**\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.dragging_;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.heightLimit_ = 0;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.widthLimit_ = 0;\r\n        /**\r\n         * @type {number|undefined}\r\n         * @private\r\n         */\r\n        _this.previousX_;\r\n        /**\r\n         * @type {number|undefined}\r\n         * @private\r\n         */\r\n        _this.previousY_;\r\n        /**\r\n         * The calculated thumb size (border box plus margins).  Set when initSlider_\r\n         * is called.\r\n         * @type {import(\"../size.js\").Size}\r\n         * @private\r\n         */\r\n        _this.thumbSize_ = null;\r\n        /**\r\n         * Whether the slider is initialized.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.sliderInitialized_ = false;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\r\n        var className = options.className !== undefined ? options.className : 'ol-zoomslider';\r\n        var thumbElement = document.createElement('button');\r\n        thumbElement.setAttribute('type', 'button');\r\n        thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\r\n        var containerElement = _this.element;\r\n        containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n        containerElement.appendChild(thumbElement);\r\n        /**\r\n         * @type {PointerEventHandler}\r\n         * @private\r\n         */\r\n        _this.dragger_ = new PointerEventHandler(containerElement);\r\n        listen(_this.dragger_, PointerEventType.POINTERDOWN, _this.handleDraggerStart_, _this);\r\n        listen(_this.dragger_, PointerEventType.POINTERMOVE, _this.handleDraggerDrag_, _this);\r\n        listen(_this.dragger_, PointerEventType.POINTERUP, _this.handleDraggerEnd_, _this);\r\n        listen(containerElement, EventType.CLICK, _this.handleContainerClick_, _this);\r\n        listen(thumbElement, EventType.CLICK, stopPropagation);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ZoomSlider.prototype.disposeInternal = function () {\r\n        this.dragger_.dispose();\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ZoomSlider.prototype.setMap = function (map) {\r\n        _super.prototype.setMap.call(this, map);\r\n        if (map) {\r\n            map.render();\r\n        }\r\n    };\r\n    /**\r\n     * Initializes the slider element. This will determine and set this controls\r\n     * direction_ and also constrain the dragging of the thumb to always be within\r\n     * the bounds of the container.\r\n     *\r\n     * @private\r\n     */\r\n    ZoomSlider.prototype.initSlider_ = function () {\r\n        var container = this.element;\r\n        var containerSize = {\r\n            width: container.offsetWidth, height: container.offsetHeight\r\n        };\r\n        var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\r\n        var computedStyle = getComputedStyle(thumb);\r\n        var thumbWidth = thumb.offsetWidth +\r\n            parseFloat(computedStyle['marginRight']) +\r\n            parseFloat(computedStyle['marginLeft']);\r\n        var thumbHeight = thumb.offsetHeight +\r\n            parseFloat(computedStyle['marginTop']) +\r\n            parseFloat(computedStyle['marginBottom']);\r\n        this.thumbSize_ = [thumbWidth, thumbHeight];\r\n        if (containerSize.width > containerSize.height) {\r\n            this.direction_ = Direction.HORIZONTAL;\r\n            this.widthLimit_ = containerSize.width - thumbWidth;\r\n        }\r\n        else {\r\n            this.direction_ = Direction.VERTICAL;\r\n            this.heightLimit_ = containerSize.height - thumbHeight;\r\n        }\r\n        this.sliderInitialized_ = true;\r\n    };\r\n    /**\r\n     * @param {MouseEvent} event The browser event to handle.\r\n     * @private\r\n     */\r\n    ZoomSlider.prototype.handleContainerClick_ = function (event) {\r\n        var view = this.getMap().getView();\r\n        var relativePosition = this.getRelativePosition_(event.offsetX - this.thumbSize_[0] / 2, event.offsetY - this.thumbSize_[1] / 2);\r\n        var resolution = this.getResolutionForPosition_(relativePosition);\r\n        view.animate({\r\n            resolution: view.constrainResolution(resolution),\r\n            duration: this.duration_,\r\n            easing: easeOut\r\n        });\r\n    };\r\n    /**\r\n     * Handle dragger start events.\r\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\r\n     * @private\r\n     */\r\n    ZoomSlider.prototype.handleDraggerStart_ = function (event) {\r\n        if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\r\n            this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\r\n            this.previousX_ = event.clientX;\r\n            this.previousY_ = event.clientY;\r\n            this.dragging_ = true;\r\n            if (this.dragListenerKeys_.length === 0) {\r\n                var drag = this.handleDraggerDrag_;\r\n                var end = this.handleDraggerEnd_;\r\n                this.dragListenerKeys_.push(listen(document, EventType.MOUSEMOVE, drag, this), listen(document, PointerEventType.POINTERMOVE, drag, this), listen(document, EventType.MOUSEUP, end, this), listen(document, PointerEventType.POINTERUP, end, this));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Handle dragger drag events.\r\n     *\r\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\r\n     * @private\r\n     */\r\n    ZoomSlider.prototype.handleDraggerDrag_ = function (event) {\r\n        if (this.dragging_) {\r\n            var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\r\n            var deltaX = event.clientX - this.previousX_ + parseFloat(element.style.left);\r\n            var deltaY = event.clientY - this.previousY_ + parseFloat(element.style.top);\r\n            var relativePosition = this.getRelativePosition_(deltaX, deltaY);\r\n            this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\r\n            this.getMap().getView().setResolution(this.currentResolution_);\r\n            this.setThumbPosition_(this.currentResolution_);\r\n            this.previousX_ = event.clientX;\r\n            this.previousY_ = event.clientY;\r\n        }\r\n    };\r\n    /**\r\n     * Handle dragger end events.\r\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\r\n     * @private\r\n     */\r\n    ZoomSlider.prototype.handleDraggerEnd_ = function (event) {\r\n        if (this.dragging_) {\r\n            var view = this.getMap().getView();\r\n            view.setHint(ViewHint.INTERACTING, -1);\r\n            view.animate({\r\n                resolution: view.constrainResolution(this.currentResolution_),\r\n                duration: this.duration_,\r\n                easing: easeOut\r\n            });\r\n            this.dragging_ = false;\r\n            this.previousX_ = undefined;\r\n            this.previousY_ = undefined;\r\n            this.dragListenerKeys_.forEach(unlistenByKey);\r\n            this.dragListenerKeys_.length = 0;\r\n        }\r\n    };\r\n    /**\r\n     * Positions the thumb inside its container according to the given resolution.\r\n     *\r\n     * @param {number} res The res.\r\n     * @private\r\n     */\r\n    ZoomSlider.prototype.setThumbPosition_ = function (res) {\r\n        var position = this.getPositionForResolution_(res);\r\n        var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\r\n        if (this.direction_ == Direction.HORIZONTAL) {\r\n            thumb.style.left = this.widthLimit_ * position + 'px';\r\n        }\r\n        else {\r\n            thumb.style.top = this.heightLimit_ * position + 'px';\r\n        }\r\n    };\r\n    /**\r\n     * Calculates the relative position of the thumb given x and y offsets.  The\r\n     * relative position scales from 0 to 1.  The x and y offsets are assumed to be\r\n     * in pixel units within the dragger limits.\r\n     *\r\n     * @param {number} x Pixel position relative to the left of the slider.\r\n     * @param {number} y Pixel position relative to the top of the slider.\r\n     * @return {number} The relative position of the thumb.\r\n     * @private\r\n     */\r\n    ZoomSlider.prototype.getRelativePosition_ = function (x, y) {\r\n        var amount;\r\n        if (this.direction_ === Direction.HORIZONTAL) {\r\n            amount = x / this.widthLimit_;\r\n        }\r\n        else {\r\n            amount = y / this.heightLimit_;\r\n        }\r\n        return clamp(amount, 0, 1);\r\n    };\r\n    /**\r\n     * Calculates the corresponding resolution of the thumb given its relative\r\n     * position (where 0 is the minimum and 1 is the maximum).\r\n     *\r\n     * @param {number} position The relative position of the thumb.\r\n     * @return {number} The corresponding resolution.\r\n     * @private\r\n     */\r\n    ZoomSlider.prototype.getResolutionForPosition_ = function (position) {\r\n        var fn = this.getMap().getView().getResolutionForValueFunction();\r\n        return fn(1 - position);\r\n    };\r\n    /**\r\n     * Determines the relative position of the slider for the given resolution.  A\r\n     * relative position of 0 corresponds to the minimum view resolution.  A\r\n     * relative position of 1 corresponds to the maximum view resolution.\r\n     *\r\n     * @param {number} res The resolution.\r\n     * @return {number} The relative position value (between 0 and 1).\r\n     * @private\r\n     */\r\n    ZoomSlider.prototype.getPositionForResolution_ = function (res) {\r\n        var fn = this.getMap().getView().getValueForResolutionFunction();\r\n        return 1 - fn(res);\r\n    };\r\n    return ZoomSlider;\r\n}(Control));\r\n/**\r\n * Update the zoomslider element.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {ZoomSlider}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n    if (!mapEvent.frameState) {\r\n        return;\r\n    }\r\n    if (!this.sliderInitialized_) {\r\n        this.initSlider_();\r\n    }\r\n    var res = mapEvent.frameState.viewState.resolution;\r\n    if (res !== this.currentResolution_) {\r\n        this.currentResolution_ = res;\r\n        this.setThumbPosition_(res);\r\n    }\r\n}\r\nexport default ZoomSlider;\r\n//# sourceMappingURL=ZoomSlider.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/control/ZoomToExtent\r\n */\r\nimport { listen } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport Control from './Control.js';\r\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-zoom-extent'] Class name.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control\r\n * to be rendered outside of the map's viewport.\r\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\r\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\r\n * extent of the view projection is used.\r\n */\r\n/**\r\n * @classdesc\r\n * A button control which, when pressed, changes the map view to a specific\r\n * extent. To style this control use the css selector `.ol-zoom-extent`.\r\n *\r\n * @api\r\n */\r\nvar ZoomToExtent = /** @class */ (function (_super) {\r\n    __extends(ZoomToExtent, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function ZoomToExtent(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        _this = _super.call(this, {\r\n            element: document.createElement('div'),\r\n            target: options.target\r\n        }) || this;\r\n        /**\r\n         * @type {import(\"../extent.js\").Extent}\r\n         * @protected\r\n         */\r\n        _this.extent = options.extent ? options.extent : null;\r\n        var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\r\n        var label = options.label !== undefined ? options.label : 'E';\r\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\r\n        var button = document.createElement('button');\r\n        button.setAttribute('type', 'button');\r\n        button.title = tipLabel;\r\n        button.appendChild(typeof label === 'string' ? document.createTextNode(label) : label);\r\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\r\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n        var element = _this.element;\r\n        element.className = cssClasses;\r\n        element.appendChild(button);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {MouseEvent} event The event to handle\r\n     * @private\r\n     */\r\n    ZoomToExtent.prototype.handleClick_ = function (event) {\r\n        event.preventDefault();\r\n        this.handleZoomToExtent();\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    ZoomToExtent.prototype.handleZoomToExtent = function () {\r\n        var map = this.getMap();\r\n        var view = map.getView();\r\n        var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\r\n        view.fit(extent);\r\n    };\r\n    return ZoomToExtent;\r\n}(Control));\r\nexport default ZoomToExtent;\r\n//# sourceMappingURL=ZoomToExtent.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/Feature\r\n */\r\nimport { assert } from './asserts.js';\r\nimport { listen, unlisten, unlistenByKey } from './events.js';\r\nimport EventType from './events/EventType.js';\r\nimport BaseObject, { getChangeEventType } from './Object.js';\r\n/**\r\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\r\n */\r\n/**\r\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\r\n */\r\n/**\r\n * @classdesc\r\n * A vector object for geographic features with a geometry and other\r\n * attribute properties, similar to the features in vector file formats like\r\n * GeoJSON.\r\n *\r\n * Features can be styled individually with `setStyle`; otherwise they use the\r\n * style of their vector layer.\r\n *\r\n * Note that attribute properties are set as {@link module:ol/Object} properties on\r\n * the feature object, so they are observable, and have get/set accessors.\r\n *\r\n * Typically, a feature has a single geometry property. You can set the\r\n * geometry using the `setGeometry` method and get it with `getGeometry`.\r\n * It is possible to store more than one geometry on a feature using attribute\r\n * properties. By default, the geometry used for rendering is identified by\r\n * the property name `geometry`. If you want to use another geometry property\r\n * for rendering, use the `setGeometryName` method to change the attribute\r\n * property associated with the geometry for the feature.  For example:\r\n *\r\n * ```js\r\n *\r\n * import Feature from 'ol/Feature';\r\n * import Polygon from 'ol/geom/Polygon';\r\n * import Point from 'ol/geom/Point';\r\n *\r\n * var feature = new Feature({\r\n *   geometry: new Polygon(polyCoords),\r\n *   labelPoint: new Point(labelCoords),\r\n *   name: 'My Polygon'\r\n * });\r\n *\r\n * // get the polygon geometry\r\n * var poly = feature.getGeometry();\r\n *\r\n * // Render the feature as a point using the coordinates from labelPoint\r\n * feature.setGeometryName('labelPoint');\r\n *\r\n * // get the point geometry\r\n * var point = feature.getGeometry();\r\n * ```\r\n *\r\n * @api\r\n */\r\nvar Feature = /** @class */ (function (_super) {\r\n    __extends(Feature, _super);\r\n    /**\r\n     * @param {import(\"./geom/Geometry.js\").default|Object<string, *>=} opt_geometryOrProperties\r\n     *     You may pass a Geometry object directly, or an object literal containing\r\n     *     properties. If you pass an object literal, you may include a Geometry\r\n     *     associated with a `geometry` key.\r\n     */\r\n    function Feature(opt_geometryOrProperties) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @private\r\n         * @type {number|string|undefined}\r\n         */\r\n        _this.id_ = undefined;\r\n        /**\r\n         * @type {string}\r\n         * @private\r\n         */\r\n        _this.geometryName_ = 'geometry';\r\n        /**\r\n         * User provided style.\r\n         * @private\r\n         * @type {import(\"./style/Style.js\").StyleLike}\r\n         */\r\n        _this.style_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\r\n         */\r\n        _this.styleFunction_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"./events.js\").EventsKey}\r\n         */\r\n        _this.geometryChangeKey_ = null;\r\n        listen(_this, getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_, _this);\r\n        if (opt_geometryOrProperties) {\r\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\r\n                var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\r\n                _this.setGeometry(geometry);\r\n            }\r\n            else {\r\n                /** @type {Object<string, *>} */\r\n                var properties = opt_geometryOrProperties;\r\n                _this.setProperties(properties);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Clone this feature. If the original feature has a geometry it\r\n     * is also cloned. The feature id is not set in the clone.\r\n     * @return {Feature} The clone.\r\n     * @api\r\n     */\r\n    Feature.prototype.clone = function () {\r\n        var clone = new Feature(this.getProperties());\r\n        clone.setGeometryName(this.getGeometryName());\r\n        var geometry = this.getGeometry();\r\n        if (geometry) {\r\n            clone.setGeometry(geometry.clone());\r\n        }\r\n        var style = this.getStyle();\r\n        if (style) {\r\n            clone.setStyle(style);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Get the feature's default geometry.  A feature may have any number of named\r\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\r\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\r\n     * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\r\n     * @api\r\n     * @observable\r\n     */\r\n    Feature.prototype.getGeometry = function () {\r\n        return (\r\n        /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_)));\r\n    };\r\n    /**\r\n     * Get the feature identifier.  This is a stable identifier for the feature and\r\n     * is either set when reading data from a remote source or set explicitly by\r\n     * calling {@link module:ol/Feature~Feature#setId}.\r\n     * @return {number|string|undefined} Id.\r\n     * @api\r\n     */\r\n    Feature.prototype.getId = function () {\r\n        return this.id_;\r\n    };\r\n    /**\r\n     * Get the name of the feature's default geometry.  By default, the default\r\n     * geometry is named `geometry`.\r\n     * @return {string} Get the property name associated with the default geometry\r\n     *     for this feature.\r\n     * @api\r\n     */\r\n    Feature.prototype.getGeometryName = function () {\r\n        return this.geometryName_;\r\n    };\r\n    /**\r\n     * Get the feature's style. Will return what was provided to the\r\n     * {@link module:ol/Feature~Feature#setStyle} method.\r\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\r\n     * @api\r\n     */\r\n    Feature.prototype.getStyle = function () {\r\n        return this.style_;\r\n    };\r\n    /**\r\n     * Get the feature's style function.\r\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\r\n     * representing the current style of this feature.\r\n     * @api\r\n     */\r\n    Feature.prototype.getStyleFunction = function () {\r\n        return this.styleFunction_;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    Feature.prototype.handleGeometryChange_ = function () {\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    Feature.prototype.handleGeometryChanged_ = function () {\r\n        if (this.geometryChangeKey_) {\r\n            unlistenByKey(this.geometryChangeKey_);\r\n            this.geometryChangeKey_ = null;\r\n        }\r\n        var geometry = this.getGeometry();\r\n        if (geometry) {\r\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\r\n        }\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Set the default geometry for the feature.  This will update the property\r\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\r\n     * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\r\n     * @api\r\n     * @observable\r\n     */\r\n    Feature.prototype.setGeometry = function (geometry) {\r\n        this.set(this.geometryName_, geometry);\r\n    };\r\n    /**\r\n     * Set the style for the feature.  This can be a single style object, an array\r\n     * of styles, or a function that takes a resolution and returns an array of\r\n     * styles. If it is `null` the feature has no style (a `null` style).\r\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\r\n     * @api\r\n     * @fires module:ol/events/Event~Event#event:change\r\n     */\r\n    Feature.prototype.setStyle = function (style) {\r\n        this.style_ = style;\r\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Set the feature id.  The feature id is considered stable and may be used when\r\n     * requesting features or comparing identifiers returned from a remote source.\r\n     * The feature id can be used with the\r\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\r\n     * @param {number|string|undefined} id The feature id.\r\n     * @api\r\n     * @fires module:ol/events/Event~Event#event:change\r\n     */\r\n    Feature.prototype.setId = function (id) {\r\n        this.id_ = id;\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Set the property name to be used when getting the feature's default geometry.\r\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\r\n     * this name will be returned.\r\n     * @param {string} name The property name of the default geometry.\r\n     * @api\r\n     */\r\n    Feature.prototype.setGeometryName = function (name) {\r\n        unlisten(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\r\n        this.geometryName_ = name;\r\n        listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\r\n        this.handleGeometryChanged_();\r\n    };\r\n    return Feature;\r\n}(BaseObject));\r\n/**\r\n * Convert the provided object into a feature style function.  Functions passed\r\n * through unchanged.  Arrays of Style or single style objects wrapped\r\n * in a new feature style function.\r\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\r\n *     A feature style function, a single style, or an array of styles.\r\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\r\n */\r\nexport function createStyleFunction(obj) {\r\n    if (typeof obj === 'function') {\r\n        return obj;\r\n    }\r\n    else {\r\n        /**\r\n         * @type {Array<import(\"./style/Style.js\").default>}\r\n         */\r\n        var styles_1;\r\n        if (Array.isArray(obj)) {\r\n            styles_1 = obj;\r\n        }\r\n        else {\r\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\r\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\r\n            styles_1 = [style];\r\n        }\r\n        return function () {\r\n            return styles_1;\r\n        };\r\n    }\r\n}\r\nexport default Feature;\r\n//# sourceMappingURL=Feature.js.map","/**\r\n * @module ol/format/FormatType\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n    ARRAY_BUFFER: 'arraybuffer',\r\n    JSON: 'json',\r\n    TEXT: 'text',\r\n    XML: 'xml'\r\n};\r\n//# sourceMappingURL=FormatType.js.map","/**\r\n * @module ol/featureloader\r\n */\r\nimport { VOID } from './functions.js';\r\nimport FormatType from './format/FormatType.js';\r\n/**\r\n * {@link module:ol/source/Vector} sources use a function of this type to\r\n * load features.\r\n *\r\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\r\n * a `{number}` representing the resolution (map units per pixel) and an\r\n * {@link module:ol/proj/Projection} for the projection  as\r\n * arguments. `this` within the function is bound to the\r\n * {@link module:ol/source/Vector} it's called from.\r\n *\r\n * The function is responsible for loading the features and adding them to the\r\n * source.\r\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\r\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\r\n * @api\r\n */\r\n/**\r\n * {@link module:ol/source/Vector} sources use a function of this type to\r\n * get the url to load features from.\r\n *\r\n * This function takes an {@link module:ol/extent~Extent} representing the area\r\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\r\n * and an {@link module:ol/proj/Projection} for the projection  as\r\n * arguments and returns a `{string}` representing the URL.\r\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\r\n * @api\r\n */\r\n/**\r\n * @param {string|FeatureUrlFunction} url Feature URL service.\r\n * @param {import(\"./format/Feature.js\").default} format Feature format.\r\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\r\n *     Function called with the loaded features and optionally with the data\r\n *     projection. Called with the vector tile or source as `this`.\r\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\r\n *     Function called when loading failed. Called with the vector tile or\r\n *     source as `this`.\r\n * @return {FeatureLoader} The feature loader.\r\n */\r\nexport function loadFeaturesXhr(url, format, success, failure) {\r\n    return (\r\n    /**\r\n     * @param {import(\"./extent.js\").Extent} extent Extent.\r\n     * @param {number} resolution Resolution.\r\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\r\n     */\r\n    function (extent, resolution, projection) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\r\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\r\n            xhr.responseType = 'arraybuffer';\r\n        }\r\n        /**\r\n         * @param {Event} event Event.\r\n         * @private\r\n         */\r\n        xhr.onload = function (event) {\r\n            // status will be 0 for file:// urls\r\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\r\n                var type = format.getType();\r\n                /** @type {Document|Node|Object|string|undefined} */\r\n                var source = void 0;\r\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\r\n                    source = xhr.responseText;\r\n                }\r\n                else if (type == FormatType.XML) {\r\n                    source = xhr.responseXML;\r\n                    if (!source) {\r\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\r\n                    }\r\n                }\r\n                else if (type == FormatType.ARRAY_BUFFER) {\r\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\r\n                }\r\n                if (source) {\r\n                    success.call(this, format.readFeatures(source, { featureProjection: projection }), format.readProjection(source), format.getLastExtent());\r\n                }\r\n                else {\r\n                    failure.call(this);\r\n                }\r\n            }\r\n            else {\r\n                failure.call(this);\r\n            }\r\n        }.bind(this);\r\n        /**\r\n         * @private\r\n         */\r\n        xhr.onerror = function () {\r\n            failure.call(this);\r\n        }.bind(this);\r\n        xhr.send();\r\n    });\r\n}\r\n/**\r\n * Create an XHR feature loader for a `url` and `format`. The feature loader\r\n * loads features (with XHR), parses the features, and adds them to the\r\n * vector source.\r\n * @param {string|FeatureUrlFunction} url Feature URL service.\r\n * @param {import(\"./format/Feature.js\").default} format Feature format.\r\n * @return {FeatureLoader} The feature loader.\r\n * @api\r\n */\r\nexport function xhr(url, format) {\r\n    return loadFeaturesXhr(url, format, \r\n    /**\r\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\r\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\r\n     * projection.\r\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\r\n     */\r\n    function (features, dataProjection) {\r\n        var sourceOrTile = /** @type {?} */ (this);\r\n        if (typeof sourceOrTile.addFeatures === 'function') {\r\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\r\n        }\r\n    }, /* FIXME handle error */ VOID);\r\n}\r\n//# sourceMappingURL=featureloader.js.map","/**\r\n * @module ol/format/Feature\r\n */\r\nimport { assign } from '../obj.js';\r\nimport { abstract } from '../util.js';\r\nimport { get as getProjection, equivalent as equivalentProjection, transformExtent } from '../proj.js';\r\n/**\r\n * @typedef {Object} ReadOptions\r\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\r\n * If not provided, the projection will be derived from the data (where possible) or\r\n * the `dataProjection` of the format is assigned (where set). If the projection\r\n * can not be derived from the data and if no `dataProjection` is set for a format,\r\n * the features will not be reprojected.\r\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\r\n * required for {@link module:ol/format/MVT}.\r\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\r\n * created by the format reader. If not provided, features will be returned in the\r\n * `dataProjection`.\r\n */\r\n/**\r\n * @typedef {Object} WriteOptions\r\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\r\n * If not provided, the `dataProjection` of the format is assigned (where set).\r\n * If no `dataProjection` is set for a format, the features will be returned\r\n * in the `featureProjection`.\r\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\r\n * that will be serialized by the format writer. If not provided, geometries are assumed\r\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\r\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\r\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\r\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\r\n * as they are provided at construction.  If `true`, the right-hand rule will\r\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\r\n * exterior and counter-clockwise for interior rings).  Note that not all\r\n * formats support this.  The GeoJSON format does use this property when writing\r\n * geometries.\r\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\r\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\r\n * coordinates with a large number of decimal places, not generally wanted on output.\r\n * Set a number here to round coordinates. Can also be used to ensure that\r\n * coordinates read in can be written back out with the same number of decimals.\r\n * Default is no rounding.\r\n */\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for feature formats.\r\n * {FeatureFormat} subclasses provide the ability to decode and encode\r\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\r\n * file formats.  See the documentation for each format for more details.\r\n *\r\n * @abstract\r\n * @api\r\n */\r\nvar FeatureFormat = /** @class */ (function () {\r\n    function FeatureFormat() {\r\n        /**\r\n         * @protected\r\n         * @type {import(\"../proj/Projection.js\").default}\r\n         */\r\n        this.dataProjection = null;\r\n        /**\r\n         * @protected\r\n         * @type {import(\"../proj/Projection.js\").default}\r\n         */\r\n        this.defaultFeatureProjection = null;\r\n    }\r\n    /**\r\n     * Adds the data projection to the read options.\r\n     * @param {Document|Node|Object|string} source Source.\r\n     * @param {ReadOptions=} opt_options Options.\r\n     * @return {ReadOptions|undefined} Options.\r\n     * @protected\r\n     */\r\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\r\n        var options;\r\n        if (opt_options) {\r\n            options = {\r\n                dataProjection: opt_options.dataProjection ?\r\n                    opt_options.dataProjection : this.readProjection(source),\r\n                featureProjection: opt_options.featureProjection\r\n            };\r\n        }\r\n        return this.adaptOptions(options);\r\n    };\r\n    /**\r\n     * Sets the `dataProjection` on the options, if no `dataProjection`\r\n     * is set.\r\n     * @param {WriteOptions|ReadOptions|undefined} options\r\n     *     Options.\r\n     * @protected\r\n     * @return {WriteOptions|ReadOptions|undefined}\r\n     *     Updated options.\r\n     */\r\n    FeatureFormat.prototype.adaptOptions = function (options) {\r\n        return assign({\r\n            dataProjection: this.dataProjection,\r\n            featureProjection: this.defaultFeatureProjection\r\n        }, options);\r\n    };\r\n    /**\r\n     * Get the extent from the source of the last {@link readFeatures} call.\r\n     * @return {import(\"../extent.js\").Extent} Tile extent.\r\n     */\r\n    FeatureFormat.prototype.getLastExtent = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @return {import(\"./FormatType.js\").default} Format.\r\n     */\r\n    FeatureFormat.prototype.getType = function () {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Read a single feature from a source.\r\n     *\r\n     * @abstract\r\n     * @param {Document|Node|Object|string} source Source.\r\n     * @param {ReadOptions=} opt_options Read options.\r\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\r\n     */\r\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Read all features from a source.\r\n     *\r\n     * @abstract\r\n     * @param {Document|Node|ArrayBuffer|Object|string} source Source.\r\n     * @param {ReadOptions=} opt_options Read options.\r\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\r\n     */\r\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Read a single geometry from a source.\r\n     *\r\n     * @abstract\r\n     * @param {Document|Node|Object|string} source Source.\r\n     * @param {ReadOptions=} opt_options Read options.\r\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n     */\r\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Read the projection from a source.\r\n     *\r\n     * @abstract\r\n     * @param {Document|Node|Object|string} source Source.\r\n     * @return {import(\"../proj/Projection.js\").default} Projection.\r\n     */\r\n    FeatureFormat.prototype.readProjection = function (source) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Encode a feature in this format.\r\n     *\r\n     * @abstract\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     * @param {WriteOptions=} opt_options Write options.\r\n     * @return {string} Result.\r\n     */\r\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Encode an array of features in this format.\r\n     *\r\n     * @abstract\r\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n     * @param {WriteOptions=} opt_options Write options.\r\n     * @return {string} Result.\r\n     */\r\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Write a single geometry in this format.\r\n     *\r\n     * @abstract\r\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n     * @param {WriteOptions=} opt_options Write options.\r\n     * @return {string} Result.\r\n     */\r\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\r\n        return abstract();\r\n    };\r\n    return FeatureFormat;\r\n}());\r\nexport default FeatureFormat;\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {boolean} write Set to true for writing, false for reading.\r\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\r\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\r\n */\r\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\r\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\r\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\r\n    var transformed;\r\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\r\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\r\n    }\r\n    else {\r\n        transformed = geometry;\r\n    }\r\n    if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\r\n        var power_1 = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\r\n        // if decimals option on write, round each coordinate appropriately\r\n        /**\r\n         * @param {Array<number>} coordinates Coordinates.\r\n         * @return {Array<number>} Transformed coordinates.\r\n         */\r\n        var transform = function (coordinates) {\r\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\r\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\r\n            }\r\n            return coordinates;\r\n        };\r\n        if (transformed === geometry) {\r\n            transformed = geometry.clone();\r\n        }\r\n        transformed.applyTransform(transform);\r\n    }\r\n    return transformed;\r\n}\r\n/**\r\n * @param {import(\"../extent.js\").Extent} extent Extent.\r\n * @param {ReadOptions=} opt_options Read options.\r\n * @return {import(\"../extent.js\").Extent} Transformed extent.\r\n */\r\nexport function transformExtentWithOptions(extent, opt_options) {\r\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\r\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\r\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\r\n        return transformExtent(extent, dataProjection, featureProjection);\r\n    }\r\n    else {\r\n        return extent;\r\n    }\r\n}\r\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/JSONFeature\r\n */\r\nimport { abstract } from '../util.js';\r\nimport FeatureFormat from './Feature.js';\r\nimport FormatType from './FormatType.js';\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for JSON feature formats.\r\n *\r\n * @abstract\r\n */\r\nvar JSONFeature = /** @class */ (function (_super) {\r\n    __extends(JSONFeature, _super);\r\n    function JSONFeature() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    JSONFeature.prototype.getType = function () {\r\n        return FormatType.JSON;\r\n    };\r\n    /**\r\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\r\n     * read a feature collection.\r\n     *\r\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n     * @return {import(\"../Feature.js\").default} Feature.\r\n     * @api\r\n     */\r\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\r\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\r\n    };\r\n    /**\r\n     * Read all features.  Works with both a single feature and a feature\r\n     * collection.\r\n     *\r\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n     * @return {Array<import(\"../Feature.js\").default>} Features.\r\n     * @api\r\n     */\r\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\r\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {Object} object Object.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n     * @protected\r\n     * @return {import(\"../Feature.js\").default} Feature.\r\n     */\r\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {Object} object Object.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n     * @protected\r\n     * @return {Array<import(\"../Feature.js\").default>} Features.\r\n     */\r\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Read a geometry.\r\n     *\r\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n     * @api\r\n     */\r\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\r\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {Object} object Object.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n     * @protected\r\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n     */\r\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Read the projection.\r\n     *\r\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\r\n     * @return {import(\"../proj/Projection.js\").default} Projection.\r\n     * @api\r\n     */\r\n    JSONFeature.prototype.readProjection = function (source) {\r\n        return this.readProjectionFromObject(getObject(source));\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {Object} object Object.\r\n     * @protected\r\n     * @return {import(\"../proj/Projection.js\").default} Projection.\r\n     */\r\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Encode a feature as string.\r\n     *\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @return {string} Encoded feature.\r\n     * @api\r\n     */\r\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\r\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @return {Object} Object.\r\n     */\r\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Encode an array of features as string.\r\n     *\r\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @return {string} Encoded features.\r\n     * @api\r\n     */\r\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\r\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @return {Object} Object.\r\n     */\r\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Encode a geometry as string.\r\n     *\r\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @return {string} Encoded geometry.\r\n     * @api\r\n     */\r\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\r\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @return {Object} Object.\r\n     */\r\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\r\n        return abstract();\r\n    };\r\n    return JSONFeature;\r\n}(FeatureFormat));\r\n/**\r\n * @param {Document|Node|Object|string} source Source.\r\n * @return {Object} Object.\r\n */\r\nfunction getObject(source) {\r\n    if (typeof source === 'string') {\r\n        var object = JSON.parse(source);\r\n        return object ? /** @type {Object} */ (object) : null;\r\n    }\r\n    else if (source !== null) {\r\n        return source;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\nexport default JSONFeature;\r\n//# sourceMappingURL=JSONFeature.js.map","/**\r\n * @module ol/geom/flat/interpolate\r\n */\r\nimport { binarySearch } from '../../array.js';\r\nimport { lerp } from '../../math.js';\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} fraction Fraction.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Destination.\r\n */\r\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\r\n    var pointX = NaN;\r\n    var pointY = NaN;\r\n    var n = (end - offset) / stride;\r\n    if (n === 1) {\r\n        pointX = flatCoordinates[offset];\r\n        pointY = flatCoordinates[offset + 1];\r\n    }\r\n    else if (n == 2) {\r\n        pointX = (1 - fraction) * flatCoordinates[offset] +\r\n            fraction * flatCoordinates[offset + stride];\r\n        pointY = (1 - fraction) * flatCoordinates[offset + 1] +\r\n            fraction * flatCoordinates[offset + stride + 1];\r\n    }\r\n    else if (n !== 0) {\r\n        var x1 = flatCoordinates[offset];\r\n        var y1 = flatCoordinates[offset + 1];\r\n        var length_1 = 0;\r\n        var cumulativeLengths = [0];\r\n        for (var i = offset + stride; i < end; i += stride) {\r\n            var x2 = flatCoordinates[i];\r\n            var y2 = flatCoordinates[i + 1];\r\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n            cumulativeLengths.push(length_1);\r\n            x1 = x2;\r\n            y1 = y2;\r\n        }\r\n        var target = fraction * length_1;\r\n        var index = binarySearch(cumulativeLengths, target);\r\n        if (index < 0) {\r\n            var t = (target - cumulativeLengths[-index - 2]) /\r\n                (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\r\n            var o = offset + (-index - 2) * stride;\r\n            pointX = lerp(flatCoordinates[o], flatCoordinates[o + stride], t);\r\n            pointY = lerp(flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\r\n        }\r\n        else {\r\n            pointX = flatCoordinates[offset + index * stride];\r\n            pointY = flatCoordinates[offset + index * stride + 1];\r\n        }\r\n    }\r\n    if (opt_dest) {\r\n        opt_dest[0] = pointX;\r\n        opt_dest[1] = pointY;\r\n        return opt_dest;\r\n    }\r\n    else {\r\n        return [pointX, pointY];\r\n    }\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} m M.\r\n * @param {boolean} extrapolate Extrapolate.\r\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\r\n */\r\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\r\n    if (end == offset) {\r\n        return null;\r\n    }\r\n    var coordinate;\r\n    if (m < flatCoordinates[offset + stride - 1]) {\r\n        if (extrapolate) {\r\n            coordinate = flatCoordinates.slice(offset, offset + stride);\r\n            coordinate[stride - 1] = m;\r\n            return coordinate;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    else if (flatCoordinates[end - 1] < m) {\r\n        if (extrapolate) {\r\n            coordinate = flatCoordinates.slice(end - stride, end);\r\n            coordinate[stride - 1] = m;\r\n            return coordinate;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    // FIXME use O(1) search\r\n    if (m == flatCoordinates[offset + stride - 1]) {\r\n        return flatCoordinates.slice(offset, offset + stride);\r\n    }\r\n    var lo = offset / stride;\r\n    var hi = end / stride;\r\n    while (lo < hi) {\r\n        var mid = (lo + hi) >> 1;\r\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\r\n            hi = mid;\r\n        }\r\n        else {\r\n            lo = mid + 1;\r\n        }\r\n    }\r\n    var m0 = flatCoordinates[lo * stride - 1];\r\n    if (m == m0) {\r\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\r\n    }\r\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\r\n    var t = (m - m0) / (m1 - m0);\r\n    coordinate = [];\r\n    for (var i = 0; i < stride - 1; ++i) {\r\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\r\n    }\r\n    coordinate.push(m);\r\n    return coordinate;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} m M.\r\n * @param {boolean} extrapolate Extrapolate.\r\n * @param {boolean} interpolate Interpolate.\r\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\r\n */\r\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\r\n    if (interpolate) {\r\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\r\n    }\r\n    var coordinate;\r\n    if (m < flatCoordinates[stride - 1]) {\r\n        if (extrapolate) {\r\n            coordinate = flatCoordinates.slice(0, stride);\r\n            coordinate[stride - 1] = m;\r\n            return coordinate;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\r\n        if (extrapolate) {\r\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\r\n            coordinate[stride - 1] = m;\r\n            return coordinate;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n        var end = ends[i];\r\n        if (offset == end) {\r\n            continue;\r\n        }\r\n        if (m < flatCoordinates[offset + stride - 1]) {\r\n            return null;\r\n        }\r\n        else if (m <= flatCoordinates[end - 1]) {\r\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\r\n        }\r\n        offset = end;\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=interpolate.js.map","/**\r\n * @module ol/geom/flat/length\r\n */\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {number} Length.\r\n */\r\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\r\n    var x1 = flatCoordinates[offset];\r\n    var y1 = flatCoordinates[offset + 1];\r\n    var length = 0;\r\n    for (var i = offset + stride; i < end; i += stride) {\r\n        var x2 = flatCoordinates[i];\r\n        var y2 = flatCoordinates[i + 1];\r\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n        x1 = x2;\r\n        y1 = y2;\r\n    }\r\n    return length;\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {number} Perimeter.\r\n */\r\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\r\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\r\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\r\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\r\n    perimeter += Math.sqrt(dx * dx + dy * dy);\r\n    return perimeter;\r\n}\r\n//# sourceMappingURL=length.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/geom/LineString\r\n */\r\nimport { extend } from '../array.js';\r\nimport { closestSquaredDistanceXY } from '../extent.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\r\nimport { deflateCoordinates } from './flat/deflate.js';\r\nimport { inflateCoordinates } from './flat/inflate.js';\r\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\r\nimport { intersectsLineString } from './flat/intersectsextent.js';\r\nimport { lineStringLength } from './flat/length.js';\r\nimport { forEach as forEachSegment } from './flat/segments.js';\r\nimport { douglasPeucker } from './flat/simplify.js';\r\n/**\r\n * @classdesc\r\n * Linestring geometry.\r\n *\r\n * @api\r\n */\r\nvar LineString = /** @class */ (function (_super) {\r\n    __extends(LineString, _super);\r\n    /**\r\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\r\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\r\n     * @param {GeometryLayout=} opt_layout Layout.\r\n     */\r\n    function LineString(coordinates, opt_layout) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../coordinate.js\").Coordinate}\r\n         */\r\n        _this.flatMidpoint_ = null;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.flatMidpointRevision_ = -1;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.maxDelta_ = -1;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.maxDeltaRevision_ = -1;\r\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\r\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n        }\r\n        else {\r\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Append the passed coordinate to the coordinates of the linestring.\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @api\r\n     */\r\n    LineString.prototype.appendCoordinate = function (coordinate) {\r\n        if (!this.flatCoordinates) {\r\n            this.flatCoordinates = coordinate.slice();\r\n        }\r\n        else {\r\n            extend(this.flatCoordinates, coordinate);\r\n        }\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Make a complete copy of the geometry.\r\n     * @return {!LineString} Clone.\r\n     * @override\r\n     * @api\r\n     */\r\n    LineString.prototype.clone = function () {\r\n        return new LineString(this.flatCoordinates.slice(), this.layout);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\r\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n            return minSquaredDistance;\r\n        }\r\n        if (this.maxDeltaRevision_ != this.getRevision()) {\r\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\r\n            this.maxDeltaRevision_ = this.getRevision();\r\n        }\r\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\r\n    };\r\n    /**\r\n     * Iterate over each segment, calling the provided callback.\r\n     * If the callback returns a truthy value the function returns that\r\n     * value immediately. Otherwise the function returns `false`.\r\n     *\r\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\r\n     *     called for each segment.\r\n     * @return {T|boolean} Value.\r\n     * @template T,S\r\n     * @api\r\n     */\r\n    LineString.prototype.forEachSegment = function (callback) {\r\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\r\n    };\r\n    /**\r\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\r\n     * such coordinate exists.\r\n     *\r\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\r\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\r\n     * M will return the first coordinate and Ms greater than the last M will\r\n     * return the last coordinate.\r\n     *\r\n     * @param {number} m M.\r\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\r\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\r\n     * @api\r\n     */\r\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\r\n        if (this.layout != GeometryLayout.XYM &&\r\n            this.layout != GeometryLayout.XYZM) {\r\n            return null;\r\n        }\r\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\r\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\r\n    };\r\n    /**\r\n     * Return the coordinates of the linestring.\r\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\r\n     * @override\r\n     * @api\r\n     */\r\n    LineString.prototype.getCoordinates = function () {\r\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n    };\r\n    /**\r\n     * Return the coordinate at the provided fraction along the linestring.\r\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\r\n     * linestring and 1 is the end.\r\n     * @param {number} fraction Fraction.\r\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\r\n     *     be modified. If not provided, a new coordinate will be returned.\r\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\r\n     * @api\r\n     */\r\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\r\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest);\r\n    };\r\n    /**\r\n     * Return the length of the linestring on projected plane.\r\n     * @return {number} Length (on projected plane).\r\n     * @api\r\n     */\r\n    LineString.prototype.getLength = function () {\r\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n    };\r\n    /**\r\n     * @return {Array<number>} Flat midpoint.\r\n     */\r\n    LineString.prototype.getFlatMidpoint = function () {\r\n        if (this.flatMidpointRevision_ != this.getRevision()) {\r\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\r\n            this.flatMidpointRevision_ = this.getRevision();\r\n        }\r\n        return this.flatMidpoint_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\r\n        var simplifiedFlatCoordinates = [];\r\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\r\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    LineString.prototype.getType = function () {\r\n        return GeometryType.LINE_STRING;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    LineString.prototype.intersectsExtent = function (extent) {\r\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\r\n    };\r\n    /**\r\n     * Set the coordinates of the linestring.\r\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\r\n     * @param {GeometryLayout=} opt_layout Layout.\r\n     * @override\r\n     * @api\r\n     */\r\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\r\n        this.setLayout(opt_layout, coordinates, 1);\r\n        if (!this.flatCoordinates) {\r\n            this.flatCoordinates = [];\r\n        }\r\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\r\n        this.changed();\r\n    };\r\n    return LineString;\r\n}(SimpleGeometry));\r\nexport default LineString;\r\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/geom/MultiLineString\r\n */\r\nimport { extend } from '../array.js';\r\nimport { closestSquaredDistanceXY } from '../extent.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport LineString from './LineString.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\r\nimport { deflateCoordinatesArray } from './flat/deflate.js';\r\nimport { inflateCoordinatesArray } from './flat/inflate.js';\r\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\r\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\r\nimport { douglasPeuckerArray } from './flat/simplify.js';\r\n/**\r\n * @classdesc\r\n * Multi-linestring geometry.\r\n *\r\n * @api\r\n */\r\nvar MultiLineString = /** @class */ (function (_super) {\r\n    __extends(MultiLineString, _super);\r\n    /**\r\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\r\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\r\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\r\n     * @param {GeometryLayout=} opt_layout Layout.\r\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\r\n     */\r\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @type {Array<number>}\r\n         * @private\r\n         */\r\n        _this.ends_ = [];\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.maxDelta_ = -1;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.maxDeltaRevision_ = -1;\r\n        if (Array.isArray(coordinates[0])) {\r\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\r\n        }\r\n        else if (opt_layout !== undefined && opt_ends) {\r\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n            _this.ends_ = opt_ends;\r\n        }\r\n        else {\r\n            var layout = _this.getLayout();\r\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\r\n            var flatCoordinates = [];\r\n            var ends = [];\r\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\r\n                var lineString = lineStrings[i];\r\n                if (i === 0) {\r\n                    layout = lineString.getLayout();\r\n                }\r\n                extend(flatCoordinates, lineString.getFlatCoordinates());\r\n                ends.push(flatCoordinates.length);\r\n            }\r\n            _this.setFlatCoordinates(layout, flatCoordinates);\r\n            _this.ends_ = ends;\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Append the passed linestring to the multilinestring.\r\n     * @param {LineString} lineString LineString.\r\n     * @api\r\n     */\r\n    MultiLineString.prototype.appendLineString = function (lineString) {\r\n        if (!this.flatCoordinates) {\r\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\r\n        }\r\n        else {\r\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\r\n        }\r\n        this.ends_.push(this.flatCoordinates.length);\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Make a complete copy of the geometry.\r\n     * @return {!MultiLineString} Clone.\r\n     * @override\r\n     * @api\r\n     */\r\n    MultiLineString.prototype.clone = function () {\r\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\r\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n            return minSquaredDistance;\r\n        }\r\n        if (this.maxDeltaRevision_ != this.getRevision()) {\r\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\r\n            this.maxDeltaRevision_ = this.getRevision();\r\n        }\r\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\r\n    };\r\n    /**\r\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\r\n     * such coordinate exists.\r\n     *\r\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\r\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\r\n     * M will return the first coordinate and Ms greater than the last M will\r\n     * return the last coordinate.\r\n     *\r\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\r\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\r\n     * will be linearly interpolated between the last coordinate of one LineString\r\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\r\n     * `false` then the function will return `null` for Ms falling between\r\n     * LineStrings.\r\n     *\r\n     * @param {number} m M.\r\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\r\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\r\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\r\n     * @api\r\n     */\r\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\r\n        if ((this.layout != GeometryLayout.XYM &&\r\n            this.layout != GeometryLayout.XYZM) ||\r\n            this.flatCoordinates.length === 0) {\r\n            return null;\r\n        }\r\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\r\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\r\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\r\n    };\r\n    /**\r\n     * Return the coordinates of the multilinestring.\r\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\r\n     * @override\r\n     * @api\r\n     */\r\n    MultiLineString.prototype.getCoordinates = function () {\r\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\r\n    };\r\n    /**\r\n     * @return {Array<number>} Ends.\r\n     */\r\n    MultiLineString.prototype.getEnds = function () {\r\n        return this.ends_;\r\n    };\r\n    /**\r\n     * Return the linestring at the specified index.\r\n     * @param {number} index Index.\r\n     * @return {LineString} LineString.\r\n     * @api\r\n     */\r\n    MultiLineString.prototype.getLineString = function (index) {\r\n        if (index < 0 || this.ends_.length <= index) {\r\n            return null;\r\n        }\r\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\r\n    };\r\n    /**\r\n     * Return the linestrings of this multilinestring.\r\n     * @return {Array<LineString>} LineStrings.\r\n     * @api\r\n     */\r\n    MultiLineString.prototype.getLineStrings = function () {\r\n        var flatCoordinates = this.flatCoordinates;\r\n        var ends = this.ends_;\r\n        var layout = this.layout;\r\n        /** @type {Array<LineString>} */\r\n        var lineStrings = [];\r\n        var offset = 0;\r\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n            var end = ends[i];\r\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\r\n            lineStrings.push(lineString);\r\n            offset = end;\r\n        }\r\n        return lineStrings;\r\n    };\r\n    /**\r\n     * @return {Array<number>} Flat midpoints.\r\n     */\r\n    MultiLineString.prototype.getFlatMidpoints = function () {\r\n        var midpoints = [];\r\n        var flatCoordinates = this.flatCoordinates;\r\n        var offset = 0;\r\n        var ends = this.ends_;\r\n        var stride = this.stride;\r\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n            var end = ends[i];\r\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\r\n            extend(midpoints, midpoint);\r\n            offset = end;\r\n        }\r\n        return midpoints;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\r\n        var simplifiedFlatCoordinates = [];\r\n        var simplifiedEnds = [];\r\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\r\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    MultiLineString.prototype.getType = function () {\r\n        return GeometryType.MULTI_LINE_STRING;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    MultiLineString.prototype.intersectsExtent = function (extent) {\r\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\r\n    };\r\n    /**\r\n     * Set the coordinates of the multilinestring.\r\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\r\n     * @param {GeometryLayout=} opt_layout Layout.\r\n     * @override\r\n     * @api\r\n     */\r\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\r\n        this.setLayout(opt_layout, coordinates, 2);\r\n        if (!this.flatCoordinates) {\r\n            this.flatCoordinates = [];\r\n        }\r\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\r\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\r\n        this.changed();\r\n    };\r\n    return MultiLineString;\r\n}(SimpleGeometry));\r\nexport default MultiLineString;\r\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/geom/MultiPoint\r\n */\r\nimport { extend } from '../array.js';\r\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport Point from './Point.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport { deflateCoordinates } from './flat/deflate.js';\r\nimport { inflateCoordinates } from './flat/inflate.js';\r\nimport { squaredDistance as squaredDx } from '../math.js';\r\n/**\r\n * @classdesc\r\n * Multi-point geometry.\r\n *\r\n * @api\r\n */\r\nvar MultiPoint = /** @class */ (function (_super) {\r\n    __extends(MultiPoint, _super);\r\n    /**\r\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\r\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\r\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\r\n     */\r\n    function MultiPoint(coordinates, opt_layout) {\r\n        var _this = _super.call(this) || this;\r\n        if (opt_layout && !Array.isArray(coordinates[0])) {\r\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n        }\r\n        else {\r\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Append the passed point to this multipoint.\r\n     * @param {Point} point Point.\r\n     * @api\r\n     */\r\n    MultiPoint.prototype.appendPoint = function (point) {\r\n        if (!this.flatCoordinates) {\r\n            this.flatCoordinates = point.getFlatCoordinates().slice();\r\n        }\r\n        else {\r\n            extend(this.flatCoordinates, point.getFlatCoordinates());\r\n        }\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Make a complete copy of the geometry.\r\n     * @return {!MultiPoint} Clone.\r\n     * @override\r\n     * @api\r\n     */\r\n    MultiPoint.prototype.clone = function () {\r\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\r\n        return multiPoint;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\r\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n            return minSquaredDistance;\r\n        }\r\n        var flatCoordinates = this.flatCoordinates;\r\n        var stride = this.stride;\r\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\r\n            if (squaredDistance < minSquaredDistance) {\r\n                minSquaredDistance = squaredDistance;\r\n                for (var j = 0; j < stride; ++j) {\r\n                    closestPoint[j] = flatCoordinates[i + j];\r\n                }\r\n                closestPoint.length = stride;\r\n            }\r\n        }\r\n        return minSquaredDistance;\r\n    };\r\n    /**\r\n     * Return the coordinates of the multipoint.\r\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\r\n     * @override\r\n     * @api\r\n     */\r\n    MultiPoint.prototype.getCoordinates = function () {\r\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n    };\r\n    /**\r\n     * Return the point at the specified index.\r\n     * @param {number} index Index.\r\n     * @return {Point} Point.\r\n     * @api\r\n     */\r\n    MultiPoint.prototype.getPoint = function (index) {\r\n        var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\r\n        if (index < 0 || n <= index) {\r\n            return null;\r\n        }\r\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\r\n    };\r\n    /**\r\n     * Return the points of this multipoint.\r\n     * @return {Array<Point>} Points.\r\n     * @api\r\n     */\r\n    MultiPoint.prototype.getPoints = function () {\r\n        var flatCoordinates = this.flatCoordinates;\r\n        var layout = this.layout;\r\n        var stride = this.stride;\r\n        /** @type {Array<Point>} */\r\n        var points = [];\r\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\r\n            points.push(point);\r\n        }\r\n        return points;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    MultiPoint.prototype.getType = function () {\r\n        return GeometryType.MULTI_POINT;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    MultiPoint.prototype.intersectsExtent = function (extent) {\r\n        var flatCoordinates = this.flatCoordinates;\r\n        var stride = this.stride;\r\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n            var x = flatCoordinates[i];\r\n            var y = flatCoordinates[i + 1];\r\n            if (containsXY(extent, x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Set the coordinates of the multipoint.\r\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\r\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\r\n     * @override\r\n     * @api\r\n     */\r\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\r\n        this.setLayout(opt_layout, coordinates, 1);\r\n        if (!this.flatCoordinates) {\r\n            this.flatCoordinates = [];\r\n        }\r\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\r\n        this.changed();\r\n    };\r\n    return MultiPoint;\r\n}(SimpleGeometry));\r\nexport default MultiPoint;\r\n//# sourceMappingURL=MultiPoint.js.map","/**\r\n * @module ol/geom/flat/center\r\n */\r\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @return {Array<number>} Flat centers.\r\n */\r\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\r\n    var flatCenters = [];\r\n    var extent = createEmpty();\r\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n        var ends = endss[i];\r\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\r\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\r\n        offset = ends[ends.length - 1];\r\n    }\r\n    return flatCenters;\r\n}\r\n//# sourceMappingURL=center.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/geom/MultiPolygon\r\n */\r\nimport { extend } from '../array.js';\r\nimport { closestSquaredDistanceXY } from '../extent.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport MultiPoint from './MultiPoint.js';\r\nimport Polygon from './Polygon.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport { linearRingss as linearRingssArea } from './flat/area.js';\r\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\r\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\r\nimport { linearRingssContainsXY } from './flat/contains.js';\r\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\r\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\r\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\r\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\r\nimport { linearRingsAreOriented, orientLinearRingsArray } from './flat/orient.js';\r\nimport { quantizeMultiArray } from './flat/simplify.js';\r\n/**\r\n * @classdesc\r\n * Multi-polygon geometry.\r\n *\r\n * @api\r\n */\r\nvar MultiPolygon = /** @class */ (function (_super) {\r\n    __extends(MultiPolygon, _super);\r\n    /**\r\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\r\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\r\n     * @param {GeometryLayout=} opt_layout Layout.\r\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\r\n     */\r\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @type {Array<Array<number>>}\r\n         * @private\r\n         */\r\n        _this.endss_ = [];\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.flatInteriorPointsRevision_ = -1;\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        _this.flatInteriorPoints_ = null;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.maxDelta_ = -1;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.maxDeltaRevision_ = -1;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.orientedRevision_ = -1;\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        _this.orientedFlatCoordinates_ = null;\r\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\r\n            var layout = _this.getLayout();\r\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\r\n            var flatCoordinates = [];\r\n            var endss = [];\r\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\r\n                var polygon = polygons[i];\r\n                if (i === 0) {\r\n                    layout = polygon.getLayout();\r\n                }\r\n                var offset = flatCoordinates.length;\r\n                var ends = polygon.getEnds();\r\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\r\n                    ends[j] += offset;\r\n                }\r\n                extend(flatCoordinates, polygon.getFlatCoordinates());\r\n                endss.push(ends);\r\n            }\r\n            opt_layout = layout;\r\n            coordinates = flatCoordinates;\r\n            opt_endss = endss;\r\n        }\r\n        if (opt_layout !== undefined && opt_endss) {\r\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n            _this.endss_ = opt_endss;\r\n        }\r\n        else {\r\n            _this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Append the passed polygon to this multipolygon.\r\n     * @param {Polygon} polygon Polygon.\r\n     * @api\r\n     */\r\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\r\n        /** @type {Array<number>} */\r\n        var ends;\r\n        if (!this.flatCoordinates) {\r\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\r\n            ends = polygon.getEnds().slice();\r\n            this.endss_.push();\r\n        }\r\n        else {\r\n            var offset = this.flatCoordinates.length;\r\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\r\n            ends = polygon.getEnds().slice();\r\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n                ends[i] += offset;\r\n            }\r\n        }\r\n        this.endss_.push(ends);\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Make a complete copy of the geometry.\r\n     * @return {!MultiPolygon} Clone.\r\n     * @override\r\n     * @api\r\n     */\r\n    MultiPolygon.prototype.clone = function () {\r\n        var len = this.endss_.length;\r\n        var newEndss = new Array(len);\r\n        for (var i = 0; i < len; ++i) {\r\n            newEndss[i] = this.endss_[i].slice();\r\n        }\r\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\r\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n            return minSquaredDistance;\r\n        }\r\n        if (this.maxDeltaRevision_ != this.getRevision()) {\r\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\r\n            this.maxDeltaRevision_ = this.getRevision();\r\n        }\r\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    MultiPolygon.prototype.containsXY = function (x, y) {\r\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\r\n    };\r\n    /**\r\n     * Return the area of the multipolygon on projected plane.\r\n     * @return {number} Area (on projected plane).\r\n     * @api\r\n     */\r\n    MultiPolygon.prototype.getArea = function () {\r\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\r\n    };\r\n    /**\r\n     * Get the coordinate array for this geometry.  This array has the structure\r\n     * of a GeoJSON coordinate array for multi-polygons.\r\n     *\r\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\r\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\r\n     *     If `false`, coordinates will be oriented according to the left-hand rule\r\n     *     (clockwise for exterior and counter-clockwise for interior rings).\r\n     *     By default, coordinate orientation will depend on how the geometry was\r\n     *     constructed.\r\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\r\n     * @override\r\n     * @api\r\n     */\r\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\r\n        var flatCoordinates;\r\n        if (opt_right !== undefined) {\r\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\r\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\r\n        }\r\n        else {\r\n            flatCoordinates = this.flatCoordinates;\r\n        }\r\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\r\n    };\r\n    /**\r\n     * @return {Array<Array<number>>} Endss.\r\n     */\r\n    MultiPolygon.prototype.getEndss = function () {\r\n        return this.endss_;\r\n    };\r\n    /**\r\n     * @return {Array<number>} Flat interior points.\r\n     */\r\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\r\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\r\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\r\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\r\n            this.flatInteriorPointsRevision_ = this.getRevision();\r\n        }\r\n        return this.flatInteriorPoints_;\r\n    };\r\n    /**\r\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\r\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\r\n     * the length of the horizontal intersection that the point belongs to.\r\n     * @api\r\n     */\r\n    MultiPolygon.prototype.getInteriorPoints = function () {\r\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\r\n    };\r\n    /**\r\n     * @return {Array<number>} Oriented flat coordinates.\r\n     */\r\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\r\n        if (this.orientedRevision_ != this.getRevision()) {\r\n            var flatCoordinates = this.flatCoordinates;\r\n            if (linearRingsAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\r\n                this.orientedFlatCoordinates_ = flatCoordinates;\r\n            }\r\n            else {\r\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\r\n                this.orientedFlatCoordinates_.length =\r\n                    orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\r\n            }\r\n            this.orientedRevision_ = this.getRevision();\r\n        }\r\n        return this.orientedFlatCoordinates_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\r\n        var simplifiedFlatCoordinates = [];\r\n        var simplifiedEndss = [];\r\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\r\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\r\n    };\r\n    /**\r\n     * Return the polygon at the specified index.\r\n     * @param {number} index Index.\r\n     * @return {Polygon} Polygon.\r\n     * @api\r\n     */\r\n    MultiPolygon.prototype.getPolygon = function (index) {\r\n        if (index < 0 || this.endss_.length <= index) {\r\n            return null;\r\n        }\r\n        var offset;\r\n        if (index === 0) {\r\n            offset = 0;\r\n        }\r\n        else {\r\n            var prevEnds = this.endss_[index - 1];\r\n            offset = prevEnds[prevEnds.length - 1];\r\n        }\r\n        var ends = this.endss_[index].slice();\r\n        var end = ends[ends.length - 1];\r\n        if (offset !== 0) {\r\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n                ends[i] -= offset;\r\n            }\r\n        }\r\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\r\n    };\r\n    /**\r\n     * Return the polygons of this multipolygon.\r\n     * @return {Array<Polygon>} Polygons.\r\n     * @api\r\n     */\r\n    MultiPolygon.prototype.getPolygons = function () {\r\n        var layout = this.layout;\r\n        var flatCoordinates = this.flatCoordinates;\r\n        var endss = this.endss_;\r\n        var polygons = [];\r\n        var offset = 0;\r\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n            var ends = endss[i].slice();\r\n            var end = ends[ends.length - 1];\r\n            if (offset !== 0) {\r\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\r\n                    ends[j] -= offset;\r\n                }\r\n            }\r\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\r\n            polygons.push(polygon);\r\n            offset = end;\r\n        }\r\n        return polygons;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    MultiPolygon.prototype.getType = function () {\r\n        return GeometryType.MULTI_POLYGON;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\r\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\r\n    };\r\n    /**\r\n     * Set the coordinates of the multipolygon.\r\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\r\n     * @param {GeometryLayout=} opt_layout Layout.\r\n     * @override\r\n     * @api\r\n     */\r\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\r\n        this.setLayout(opt_layout, coordinates, 3);\r\n        if (!this.flatCoordinates) {\r\n            this.flatCoordinates = [];\r\n        }\r\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\r\n        if (endss.length === 0) {\r\n            this.flatCoordinates.length = 0;\r\n        }\r\n        else {\r\n            var lastEnds = endss[endss.length - 1];\r\n            this.flatCoordinates.length = lastEnds.length === 0 ?\r\n                0 : lastEnds[lastEnds.length - 1];\r\n        }\r\n        this.changed();\r\n    };\r\n    return MultiPolygon;\r\n}(SimpleGeometry));\r\nexport default MultiPolygon;\r\n//# sourceMappingURL=MultiPolygon.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/EsriJSON\r\n */\r\nimport Feature from '../Feature.js';\r\nimport { assert } from '../asserts.js';\r\nimport { containsExtent } from '../extent.js';\r\nimport { transformGeometryWithOptions } from './Feature.js';\r\nimport JSONFeature from './JSONFeature.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport LinearRing from '../geom/LinearRing.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport { deflateCoordinates } from '../geom/flat/deflate.js';\r\nimport { linearRingIsClockwise } from '../geom/flat/orient.js';\r\nimport { isEmpty } from '../obj.js';\r\nimport { get as getProjection } from '../proj.js';\r\n/**\r\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\r\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\r\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\r\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\r\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\r\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\r\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\r\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\r\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\r\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\r\n */\r\n/**\r\n * @typedef {Object} EsriJSONMultiPolygon\r\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\r\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\r\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\r\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\r\n */\r\n/**\r\n * @const\r\n * @type {Object<import(\"../geom/GeometryType.js\").default, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\r\n */\r\nvar GEOMETRY_READERS = {};\r\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\r\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\r\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\r\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\r\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\r\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\r\n/**\r\n * @const\r\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\r\n */\r\nvar GEOMETRY_WRITERS = {};\r\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\r\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\r\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\r\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\r\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\r\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [geometryName] Geometry name to use when creating features.\r\n */\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the EsriJSON format.\r\n *\r\n * @api\r\n */\r\nvar EsriJSON = /** @class */ (function (_super) {\r\n    __extends(EsriJSON, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function EsriJSON(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        _this = _super.call(this) || this;\r\n        /**\r\n         * Name of the geometry attribute for features.\r\n         * @type {string|undefined}\r\n         * @private\r\n         */\r\n        _this.geometryName_ = options.geometryName;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    EsriJSON.prototype.readFeatureFromObject = function (object, opt_options) {\r\n        var esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\r\n        var geometry = readGeometry(esriJSONFeature.geometry, opt_options);\r\n        var feature = new Feature();\r\n        if (this.geometryName_) {\r\n            feature.setGeometryName(this.geometryName_);\r\n        }\r\n        feature.setGeometry(geometry);\r\n        if (opt_options && opt_options.idField &&\r\n            esriJSONFeature.attributes[opt_options.idField]) {\r\n            feature.setId(/** @type {number} */ (esriJSONFeature.attributes[opt_options.idField]));\r\n        }\r\n        if (esriJSONFeature.attributes) {\r\n            feature.setProperties(esriJSONFeature.attributes, true);\r\n        }\r\n        return feature;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    EsriJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\r\n        var options = opt_options ? opt_options : {};\r\n        if (object['features']) {\r\n            var esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\r\n            /** @type {Array<import(\"../Feature.js\").default>} */\r\n            var features = [];\r\n            var esriJSONFeatures = esriJSONFeatureSet.features;\r\n            options.idField = object.objectIdFieldName;\r\n            for (var i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\r\n                features.push(this.readFeatureFromObject(esriJSONFeatures[i], options));\r\n            }\r\n            return features;\r\n        }\r\n        else {\r\n            return [this.readFeatureFromObject(object, options)];\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    EsriJSON.prototype.readGeometryFromObject = function (object, opt_options) {\r\n        return readGeometry(/** @type {EsriJSONGeometry} */ (object), opt_options);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    EsriJSON.prototype.readProjectionFromObject = function (object) {\r\n        if (object['spatialReference'] && object['spatialReference']['wkid'] !== undefined) {\r\n            var spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (object['spatialReference']);\r\n            var crs = spatialReference.wkid;\r\n            return getProjection('EPSG:' + crs);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Encode a geometry as a EsriJSON object.\r\n     *\r\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @return {EsriJSONGeometry} Object.\r\n     * @override\r\n     * @api\r\n     */\r\n    EsriJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\r\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\r\n    };\r\n    /**\r\n     * Encode a feature as a esriJSON Feature object.\r\n     *\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @return {Object} Object.\r\n     * @override\r\n     * @api\r\n     */\r\n    EsriJSON.prototype.writeFeatureObject = function (feature, opt_options) {\r\n        opt_options = this.adaptOptions(opt_options);\r\n        var object = {};\r\n        var geometry = feature.getGeometry();\r\n        if (geometry) {\r\n            object['geometry'] = writeGeometry(geometry, opt_options);\r\n            if (opt_options && opt_options.featureProjection) {\r\n                object['geometry']['spatialReference'] = /** @type {EsriJSONSpatialReferenceWkid} */ ({\r\n                    wkid: Number(getProjection(opt_options.featureProjection).getCode().split(':').pop())\r\n                });\r\n            }\r\n        }\r\n        var properties = feature.getProperties();\r\n        delete properties[feature.getGeometryName()];\r\n        if (!isEmpty(properties)) {\r\n            object['attributes'] = properties;\r\n        }\r\n        else {\r\n            object['attributes'] = {};\r\n        }\r\n        return object;\r\n    };\r\n    /**\r\n     * Encode an array of features as a EsriJSON object.\r\n     *\r\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @return {EsriJSONFeatureSet} EsriJSON Object.\r\n     * @override\r\n     * @api\r\n     */\r\n    EsriJSON.prototype.writeFeaturesObject = function (features, opt_options) {\r\n        opt_options = this.adaptOptions(opt_options);\r\n        var objects = [];\r\n        for (var i = 0, ii = features.length; i < ii; ++i) {\r\n            objects.push(this.writeFeatureObject(features[i], opt_options));\r\n        }\r\n        return {\r\n            'features': objects\r\n        };\r\n    };\r\n    return EsriJSON;\r\n}(JSONFeature));\r\n/**\r\n * @param {EsriJSONGeometry} object Object.\r\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n */\r\nfunction readGeometry(object, opt_options) {\r\n    if (!object) {\r\n        return null;\r\n    }\r\n    /** @type {import(\"../geom/GeometryType.js\").default} */\r\n    var type;\r\n    if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\r\n        type = GeometryType.POINT;\r\n    }\r\n    else if (object['points']) {\r\n        type = GeometryType.MULTI_POINT;\r\n    }\r\n    else if (object['paths']) {\r\n        var esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\r\n        if (esriJSONPolyline.paths.length === 1) {\r\n            type = GeometryType.LINE_STRING;\r\n        }\r\n        else {\r\n            type = GeometryType.MULTI_LINE_STRING;\r\n        }\r\n    }\r\n    else if (object['rings']) {\r\n        var esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\r\n        var layout = getGeometryLayout(esriJSONPolygon);\r\n        var rings = convertRings(esriJSONPolygon.rings, layout);\r\n        if (rings.length === 1) {\r\n            type = GeometryType.POLYGON;\r\n            object['rings'] = rings[0];\r\n        }\r\n        else {\r\n            type = GeometryType.MULTI_POLYGON;\r\n            object['rings'] = rings;\r\n        }\r\n    }\r\n    var geometryReader = GEOMETRY_READERS[type];\r\n    return transformGeometryWithOptions(geometryReader(object), false, opt_options);\r\n}\r\n/**\r\n * Determines inner and outer rings.\r\n * Checks if any polygons in this array contain any other polygons in this\r\n * array. It is used for checking for holes.\r\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\r\n * @param {Array<!Array<!Array<number>>>} rings Rings.\r\n * @param {import(\"../geom/GeometryLayout.js\").default} layout Geometry layout.\r\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\r\n */\r\nfunction convertRings(rings, layout) {\r\n    var flatRing = [];\r\n    var outerRings = [];\r\n    var holes = [];\r\n    var i, ii;\r\n    for (i = 0, ii = rings.length; i < ii; ++i) {\r\n        flatRing.length = 0;\r\n        deflateCoordinates(flatRing, 0, rings[i], layout.length);\r\n        // is this ring an outer ring? is it clockwise?\r\n        var clockwise = linearRingIsClockwise(flatRing, 0, flatRing.length, layout.length);\r\n        if (clockwise) {\r\n            outerRings.push([rings[i]]);\r\n        }\r\n        else {\r\n            holes.push(rings[i]);\r\n        }\r\n    }\r\n    while (holes.length) {\r\n        var hole = holes.shift();\r\n        var matched = false;\r\n        // loop over all outer rings and see if they contain our hole.\r\n        for (i = outerRings.length - 1; i >= 0; i--) {\r\n            var outerRing = outerRings[i][0];\r\n            var containsHole = containsExtent(new LinearRing(outerRing).getExtent(), new LinearRing(hole).getExtent());\r\n            if (containsHole) {\r\n                // the hole is contained push it into our polygon\r\n                outerRings[i].push(hole);\r\n                matched = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!matched) {\r\n            // no outer rings contain this hole turn it into and outer\r\n            // ring (reverse it)\r\n            outerRings.push([hole.reverse()]);\r\n        }\r\n    }\r\n    return outerRings;\r\n}\r\n/**\r\n * @param {EsriJSONPoint} object Object.\r\n * @return {import(\"../geom/Geometry.js\").default} Point.\r\n */\r\nfunction readPointGeometry(object) {\r\n    var point;\r\n    if (object.m !== undefined && object.z !== undefined) {\r\n        point = new Point([object.x, object.y, object.z, object.m], GeometryLayout.XYZM);\r\n    }\r\n    else if (object.z !== undefined) {\r\n        point = new Point([object.x, object.y, object.z], GeometryLayout.XYZ);\r\n    }\r\n    else if (object.m !== undefined) {\r\n        point = new Point([object.x, object.y, object.m], GeometryLayout.XYM);\r\n    }\r\n    else {\r\n        point = new Point([object.x, object.y]);\r\n    }\r\n    return point;\r\n}\r\n/**\r\n * @param {EsriJSONPolyline} object Object.\r\n * @return {import(\"../geom/Geometry.js\").default} LineString.\r\n */\r\nfunction readLineStringGeometry(object) {\r\n    var layout = getGeometryLayout(object);\r\n    return new LineString(object.paths[0], layout);\r\n}\r\n/**\r\n * @param {EsriJSONPolyline} object Object.\r\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\r\n */\r\nfunction readMultiLineStringGeometry(object) {\r\n    var layout = getGeometryLayout(object);\r\n    return new MultiLineString(object.paths, layout);\r\n}\r\n/**\r\n * @param {EsriJSONHasZM} object Object.\r\n * @return {import(\"../geom/GeometryLayout.js\").default} The geometry layout to use.\r\n */\r\nfunction getGeometryLayout(object) {\r\n    var layout = GeometryLayout.XY;\r\n    if (object.hasZ === true && object.hasM === true) {\r\n        layout = GeometryLayout.XYZM;\r\n    }\r\n    else if (object.hasZ === true) {\r\n        layout = GeometryLayout.XYZ;\r\n    }\r\n    else if (object.hasM === true) {\r\n        layout = GeometryLayout.XYM;\r\n    }\r\n    return layout;\r\n}\r\n/**\r\n * @param {EsriJSONMultipoint} object Object.\r\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\r\n */\r\nfunction readMultiPointGeometry(object) {\r\n    var layout = getGeometryLayout(object);\r\n    return new MultiPoint(object.points, layout);\r\n}\r\n/**\r\n * @param {EsriJSONMultiPolygon} object Object.\r\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\r\n */\r\nfunction readMultiPolygonGeometry(object) {\r\n    var layout = getGeometryLayout(object);\r\n    return new MultiPolygon(object.rings, layout);\r\n}\r\n/**\r\n * @param {EsriJSONPolygon} object Object.\r\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\r\n */\r\nfunction readPolygonGeometry(object) {\r\n    var layout = getGeometryLayout(object);\r\n    return new Polygon(object.rings, layout);\r\n}\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {EsriJSONPoint} EsriJSON geometry.\r\n */\r\nfunction writePointGeometry(geometry, opt_options) {\r\n    var coordinates = /** @type {import(\"../geom/Point.js\").default} */ (geometry).getCoordinates();\r\n    /** @type {EsriJSONPoint} */\r\n    var esriJSON;\r\n    var layout = /** @type {import(\"../geom/Point.js\").default} */ (geometry).getLayout();\r\n    if (layout === GeometryLayout.XYZ) {\r\n        esriJSON = {\r\n            x: coordinates[0],\r\n            y: coordinates[1],\r\n            z: coordinates[2]\r\n        };\r\n    }\r\n    else if (layout === GeometryLayout.XYM) {\r\n        esriJSON = {\r\n            x: coordinates[0],\r\n            y: coordinates[1],\r\n            m: coordinates[2]\r\n        };\r\n    }\r\n    else if (layout === GeometryLayout.XYZM) {\r\n        esriJSON = {\r\n            x: coordinates[0],\r\n            y: coordinates[1],\r\n            z: coordinates[2],\r\n            m: coordinates[3]\r\n        };\r\n    }\r\n    else if (layout === GeometryLayout.XY) {\r\n        esriJSON = {\r\n            x: coordinates[0],\r\n            y: coordinates[1]\r\n        };\r\n    }\r\n    else {\r\n        assert(false, 34); // Invalid geometry layout\r\n    }\r\n    return esriJSON;\r\n}\r\n/**\r\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n * @return {Object} Object with boolean hasZ and hasM keys.\r\n */\r\nfunction getHasZM(geometry) {\r\n    var layout = geometry.getLayout();\r\n    return {\r\n        hasZ: (layout === GeometryLayout.XYZ ||\r\n            layout === GeometryLayout.XYZM),\r\n        hasM: (layout === GeometryLayout.XYM ||\r\n            layout === GeometryLayout.XYZM)\r\n    };\r\n}\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {EsriJSONPolyline} EsriJSON geometry.\r\n */\r\nfunction writeLineStringGeometry(geometry, opt_options) {\r\n    var lineString = /** @type {import(\"../geom/LineString.js\").default} */ (geometry);\r\n    var hasZM = getHasZM(lineString);\r\n    return {\r\n        hasZ: hasZM.hasZ,\r\n        hasM: hasZM.hasM,\r\n        paths: [\r\n            /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates())\r\n        ]\r\n    };\r\n}\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {EsriJSONPolygon} EsriJSON geometry.\r\n */\r\nfunction writePolygonGeometry(geometry, opt_options) {\r\n    var polygon = /** @type {import(\"../geom/Polygon.js\").default} */ (geometry);\r\n    // Esri geometries use the left-hand rule\r\n    var hasZM = getHasZM(polygon);\r\n    return {\r\n        hasZ: hasZM.hasZ,\r\n        hasM: hasZM.hasM,\r\n        rings: /** @type {Array<Array<EsriJSONPosition>>} */ (polygon.getCoordinates(false))\r\n    };\r\n}\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {EsriJSONPolyline} EsriJSON geometry.\r\n */\r\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\r\n    var multiLineString = /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry);\r\n    var hasZM = getHasZM(multiLineString);\r\n    return {\r\n        hasZ: hasZM.hasZ,\r\n        hasM: hasZM.hasM,\r\n        paths: /** @type {Array<Array<EsriJSONPosition>>} */ (multiLineString.getCoordinates())\r\n    };\r\n}\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {EsriJSONMultipoint} EsriJSON geometry.\r\n */\r\nfunction writeMultiPointGeometry(geometry, opt_options) {\r\n    var multiPoint = /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry);\r\n    var hasZM = getHasZM(multiPoint);\r\n    return {\r\n        hasZ: hasZM.hasZ,\r\n        hasM: hasZM.hasM,\r\n        points: /** @type {Array<EsriJSONPosition>} */ (multiPoint.getCoordinates())\r\n    };\r\n}\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {EsriJSONPolygon} EsriJSON geometry.\r\n */\r\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\r\n    var hasZM = getHasZM(/** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry));\r\n    var coordinates = /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry).getCoordinates(false);\r\n    var output = [];\r\n    for (var i = 0; i < coordinates.length; i++) {\r\n        for (var x = coordinates[i].length - 1; x >= 0; x--) {\r\n            output.push(coordinates[i][x]);\r\n        }\r\n    }\r\n    return {\r\n        hasZ: hasZM.hasZ,\r\n        hasM: hasZM.hasM,\r\n        rings: /** @type {Array<Array<EsriJSONPosition>>} */ (output)\r\n    };\r\n}\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {EsriJSONGeometry} EsriJSON geometry.\r\n */\r\nfunction writeGeometry(geometry, opt_options) {\r\n    var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\r\n    return geometryWriter(transformGeometryWithOptions(geometry, true, opt_options), opt_options);\r\n}\r\nexport default EsriJSON;\r\n//# sourceMappingURL=EsriJSON.js.map","/**\r\n * @module ol/format/filter/Filter\r\n */\r\n/**\r\n * @classdesc\r\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\r\n * Base class for WFS GetFeature filters.\r\n *\r\n * @abstract\r\n */\r\nvar Filter = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} tagName The XML tag name for this filter.\r\n     */\r\n    function Filter(tagName) {\r\n        /**\r\n         * @private\r\n         * @type {!string}\r\n         */\r\n        this.tagName_ = tagName;\r\n    }\r\n    /**\r\n     * The XML tag name for a filter.\r\n     * @returns {!string} Name.\r\n     */\r\n    Filter.prototype.getTagName = function () {\r\n        return this.tagName_;\r\n    };\r\n    return Filter;\r\n}());\r\nexport default Filter;\r\n//# sourceMappingURL=Filter.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/Bbox\r\n */\r\nimport Filter from './Filter.js';\r\n/**\r\n * @classdesc\r\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\r\n * intersects a fixed bounding box\r\n *\r\n * @api\r\n */\r\nvar Bbox = /** @class */ (function (_super) {\r\n    __extends(Bbox, _super);\r\n    /**\r\n     * @param {!string} geometryName Geometry name to use.\r\n     * @param {!import(\"../../extent.js\").Extent} extent Extent.\r\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be set\r\n     * on geometries when this is not provided.\r\n     */\r\n    function Bbox(geometryName, extent, opt_srsName) {\r\n        var _this = _super.call(this, 'BBOX') || this;\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        _this.geometryName = geometryName;\r\n        /**\r\n         * @type {import(\"../../extent.js\").Extent}\r\n         */\r\n        _this.extent = extent;\r\n        /**\r\n         * @type {string|undefined}\r\n         */\r\n        _this.srsName = opt_srsName;\r\n        return _this;\r\n    }\r\n    return Bbox;\r\n}(Filter));\r\nexport default Bbox;\r\n//# sourceMappingURL=Bbox.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/Spatial\r\n */\r\nimport Filter from './Filter.js';\r\n/**\r\n * @classdesc\r\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\r\n * Represents a spatial operator to test whether a geometry-valued property\r\n * relates to a given geometry.\r\n *\r\n * @abstract\r\n */\r\nvar Spatial = /** @class */ (function (_super) {\r\n    __extends(Spatial, _super);\r\n    /**\r\n     * @param {!string} tagName The XML tag name for this filter.\r\n     * @param {!string} geometryName Geometry name to use.\r\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\r\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\r\n     *    set on geometries when this is not provided.\r\n     */\r\n    function Spatial(tagName, geometryName, geometry, opt_srsName) {\r\n        var _this = _super.call(this, tagName) || this;\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        _this.geometryName = geometryName || 'the_geom';\r\n        /**\r\n         * @type {import(\"../../geom/Geometry.js\").default}\r\n         */\r\n        _this.geometry = geometry;\r\n        /**\r\n         * @type {string|undefined}\r\n         */\r\n        _this.srsName = opt_srsName;\r\n        return _this;\r\n    }\r\n    return Spatial;\r\n}(Filter));\r\nexport default Spatial;\r\n//# sourceMappingURL=Spatial.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/Contains\r\n */\r\nimport Spatial from './Spatial.js';\r\n/**\r\n * @classdesc\r\n * Represents a `<Contains>` operator to test whether a geometry-valued property\r\n * contains a given geometry.\r\n * @api\r\n */\r\nvar Contains = /** @class */ (function (_super) {\r\n    __extends(Contains, _super);\r\n    /**\r\n     * @param {!string} geometryName Geometry name to use.\r\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\r\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\r\n     *    set on geometries when this is not provided.\r\n     */\r\n    function Contains(geometryName, geometry, opt_srsName) {\r\n        return _super.call(this, 'Contains', geometryName, geometry, opt_srsName) || this;\r\n    }\r\n    return Contains;\r\n}(Spatial));\r\nexport default Contains;\r\n//# sourceMappingURL=Contains.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/Comparison\r\n */\r\nimport Filter from './Filter.js';\r\n/**\r\n * @classdesc\r\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\r\n * Base class for WFS GetFeature property comparison filters.\r\n *\r\n * @abstract\r\n */\r\nvar Comparison = /** @class */ (function (_super) {\r\n    __extends(Comparison, _super);\r\n    /**\r\n     * @param {!string} tagName The XML tag name for this filter.\r\n     * @param {!string} propertyName Name of the context property to compare.\r\n     */\r\n    function Comparison(tagName, propertyName) {\r\n        var _this = _super.call(this, tagName) || this;\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        _this.propertyName = propertyName;\r\n        return _this;\r\n    }\r\n    return Comparison;\r\n}(Filter));\r\nexport default Comparison;\r\n//# sourceMappingURL=Comparison.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/During\r\n */\r\nimport Comparison from './Comparison.js';\r\n/**\r\n * @classdesc\r\n * Represents a `<During>` comparison operator.\r\n * @api\r\n */\r\nvar During = /** @class */ (function (_super) {\r\n    __extends(During, _super);\r\n    /**\r\n     * @param {!string} propertyName Name of the context property to compare.\r\n     * @param {!string} begin The begin date in ISO-8601 format.\r\n     * @param {!string} end The end date in ISO-8601 format.\r\n     */\r\n    function During(propertyName, begin, end) {\r\n        var _this = _super.call(this, 'During', propertyName) || this;\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        _this.begin = begin;\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        _this.end = end;\r\n        return _this;\r\n    }\r\n    return During;\r\n}(Comparison));\r\nexport default During;\r\n//# sourceMappingURL=During.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/ComparisonBinary\r\n */\r\nimport Comparison from './Comparison.js';\r\n/**\r\n * @classdesc\r\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\r\n * Base class for WFS GetFeature property binary comparison filters.\r\n *\r\n * @abstract\r\n */\r\nvar ComparisonBinary = /** @class */ (function (_super) {\r\n    __extends(ComparisonBinary, _super);\r\n    /**\r\n     * @param {!string} tagName The XML tag name for this filter.\r\n     * @param {!string} propertyName Name of the context property to compare.\r\n     * @param {!(string|number)} expression The value to compare.\r\n     * @param {boolean=} opt_matchCase Case-sensitive?\r\n     */\r\n    function ComparisonBinary(tagName, propertyName, expression, opt_matchCase) {\r\n        var _this = _super.call(this, tagName, propertyName) || this;\r\n        /**\r\n         * @type {!(string|number)}\r\n         */\r\n        _this.expression = expression;\r\n        /**\r\n         * @type {boolean|undefined}\r\n         */\r\n        _this.matchCase = opt_matchCase;\r\n        return _this;\r\n    }\r\n    return ComparisonBinary;\r\n}(Comparison));\r\nexport default ComparisonBinary;\r\n//# sourceMappingURL=ComparisonBinary.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/EqualTo\r\n */\r\nimport ComparisonBinary from './ComparisonBinary.js';\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsEqualTo>` comparison operator.\r\n * @api\r\n */\r\nvar EqualTo = /** @class */ (function (_super) {\r\n    __extends(EqualTo, _super);\r\n    /**\r\n     * @param {!string} propertyName Name of the context property to compare.\r\n     * @param {!(string|number)} expression The value to compare.\r\n     * @param {boolean=} opt_matchCase Case-sensitive?\r\n     */\r\n    function EqualTo(propertyName, expression, opt_matchCase) {\r\n        return _super.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase) || this;\r\n    }\r\n    return EqualTo;\r\n}(ComparisonBinary));\r\nexport default EqualTo;\r\n//# sourceMappingURL=EqualTo.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/GreaterThan\r\n */\r\nimport ComparisonBinary from './ComparisonBinary.js';\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\r\n * @api\r\n */\r\nvar GreaterThan = /** @class */ (function (_super) {\r\n    __extends(GreaterThan, _super);\r\n    /**\r\n     * @param {!string} propertyName Name of the context property to compare.\r\n     * @param {!number} expression The value to compare.\r\n     */\r\n    function GreaterThan(propertyName, expression) {\r\n        return _super.call(this, 'PropertyIsGreaterThan', propertyName, expression) || this;\r\n    }\r\n    return GreaterThan;\r\n}(ComparisonBinary));\r\nexport default GreaterThan;\r\n//# sourceMappingURL=GreaterThan.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/GreaterThanOrEqualTo\r\n */\r\nimport ComparisonBinary from './ComparisonBinary.js';\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\r\n * @api\r\n */\r\nvar GreaterThanOrEqualTo = /** @class */ (function (_super) {\r\n    __extends(GreaterThanOrEqualTo, _super);\r\n    /**\r\n     * @param {!string} propertyName Name of the context property to compare.\r\n     * @param {!number} expression The value to compare.\r\n     */\r\n    function GreaterThanOrEqualTo(propertyName, expression) {\r\n        return _super.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression) || this;\r\n    }\r\n    return GreaterThanOrEqualTo;\r\n}(ComparisonBinary));\r\nexport default GreaterThanOrEqualTo;\r\n//# sourceMappingURL=GreaterThanOrEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/Intersects\r\n */\r\nimport Spatial from './Spatial.js';\r\n/**\r\n * @classdesc\r\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\r\n * intersects a given geometry.\r\n * @api\r\n */\r\nvar Intersects = /** @class */ (function (_super) {\r\n    __extends(Intersects, _super);\r\n    /**\r\n     * @param {!string} geometryName Geometry name to use.\r\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\r\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\r\n     *    set on geometries when this is not provided.\r\n     */\r\n    function Intersects(geometryName, geometry, opt_srsName) {\r\n        return _super.call(this, 'Intersects', geometryName, geometry, opt_srsName) || this;\r\n    }\r\n    return Intersects;\r\n}(Spatial));\r\nexport default Intersects;\r\n//# sourceMappingURL=Intersects.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/IsBetween\r\n */\r\nimport Comparison from './Comparison.js';\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsBetween>` comparison operator.\r\n * @api\r\n */\r\nvar IsBetween = /** @class */ (function (_super) {\r\n    __extends(IsBetween, _super);\r\n    /**\r\n     * @param {!string} propertyName Name of the context property to compare.\r\n     * @param {!number} lowerBoundary The lower bound of the range.\r\n     * @param {!number} upperBoundary The upper bound of the range.\r\n     */\r\n    function IsBetween(propertyName, lowerBoundary, upperBoundary) {\r\n        var _this = _super.call(this, 'PropertyIsBetween', propertyName) || this;\r\n        /**\r\n         * @type {!number}\r\n         */\r\n        _this.lowerBoundary = lowerBoundary;\r\n        /**\r\n         * @type {!number}\r\n         */\r\n        _this.upperBoundary = upperBoundary;\r\n        return _this;\r\n    }\r\n    return IsBetween;\r\n}(Comparison));\r\nexport default IsBetween;\r\n//# sourceMappingURL=IsBetween.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/IsLike\r\n */\r\nimport Comparison from './Comparison.js';\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsLike>` comparison operator.\r\n * @api\r\n */\r\nvar IsLike = /** @class */ (function (_super) {\r\n    __extends(IsLike, _super);\r\n    /**\r\n     * [constructor description]\r\n     * @param {!string} propertyName Name of the context property to compare.\r\n     * @param {!string} pattern Text pattern.\r\n     * @param {string=} opt_wildCard Pattern character which matches any sequence of\r\n     *    zero or more string characters. Default is '*'.\r\n     * @param {string=} opt_singleChar pattern character which matches any single\r\n     *    string character. Default is '.'.\r\n     * @param {string=} opt_escapeChar Escape character which can be used to escape\r\n     *    the pattern characters. Default is '!'.\r\n     * @param {boolean=} opt_matchCase Case-sensitive?\r\n     */\r\n    function IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\r\n        var _this = _super.call(this, 'PropertyIsLike', propertyName) || this;\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        _this.pattern = pattern;\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        _this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        _this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        _this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\r\n        /**\r\n         * @type {boolean|undefined}\r\n         */\r\n        _this.matchCase = opt_matchCase;\r\n        return _this;\r\n    }\r\n    return IsLike;\r\n}(Comparison));\r\nexport default IsLike;\r\n//# sourceMappingURL=IsLike.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/IsNull\r\n */\r\nimport Comparison from './Comparison.js';\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsNull>` comparison operator.\r\n * @api\r\n */\r\nvar IsNull = /** @class */ (function (_super) {\r\n    __extends(IsNull, _super);\r\n    /**\r\n     * @param {!string} propertyName Name of the context property to compare.\r\n     */\r\n    function IsNull(propertyName) {\r\n        return _super.call(this, 'PropertyIsNull', propertyName) || this;\r\n    }\r\n    return IsNull;\r\n}(Comparison));\r\nexport default IsNull;\r\n//# sourceMappingURL=IsNull.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/LessThan\r\n */\r\nimport ComparisonBinary from './ComparisonBinary.js';\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsLessThan>` comparison operator.\r\n * @api\r\n */\r\nvar LessThan = /** @class */ (function (_super) {\r\n    __extends(LessThan, _super);\r\n    /**\r\n     * @param {!string} propertyName Name of the context property to compare.\r\n     * @param {!number} expression The value to compare.\r\n     */\r\n    function LessThan(propertyName, expression) {\r\n        return _super.call(this, 'PropertyIsLessThan', propertyName, expression) || this;\r\n    }\r\n    return LessThan;\r\n}(ComparisonBinary));\r\nexport default LessThan;\r\n//# sourceMappingURL=LessThan.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/LessThanOrEqualTo\r\n */\r\nimport ComparisonBinary from './ComparisonBinary.js';\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\r\n * @api\r\n */\r\nvar LessThanOrEqualTo = /** @class */ (function (_super) {\r\n    __extends(LessThanOrEqualTo, _super);\r\n    /**\r\n     * @param {!string} propertyName Name of the context property to compare.\r\n     * @param {!number} expression The value to compare.\r\n     */\r\n    function LessThanOrEqualTo(propertyName, expression) {\r\n        return _super.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression) || this;\r\n    }\r\n    return LessThanOrEqualTo;\r\n}(ComparisonBinary));\r\nexport default LessThanOrEqualTo;\r\n//# sourceMappingURL=LessThanOrEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/Not\r\n */\r\nimport Filter from './Filter.js';\r\n/**\r\n * @classdesc\r\n * Represents a logical `<Not>` operator for a filter condition.\r\n * @api\r\n */\r\nvar Not = /** @class */ (function (_super) {\r\n    __extends(Not, _super);\r\n    /**\r\n     * @param {!import(\"./Filter.js\").default} condition Filter condition.\r\n     */\r\n    function Not(condition) {\r\n        var _this = _super.call(this, 'Not') || this;\r\n        /**\r\n         * @type {!import(\"./Filter.js\").default}\r\n         */\r\n        _this.condition = condition;\r\n        return _this;\r\n    }\r\n    return Not;\r\n}(Filter));\r\nexport default Not;\r\n//# sourceMappingURL=Not.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/NotEqualTo\r\n */\r\nimport ComparisonBinary from './ComparisonBinary.js';\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\r\n * @api\r\n */\r\nvar NotEqualTo = /** @class */ (function (_super) {\r\n    __extends(NotEqualTo, _super);\r\n    /**\r\n     * @param {!string} propertyName Name of the context property to compare.\r\n     * @param {!(string|number)} expression The value to compare.\r\n     * @param {boolean=} opt_matchCase Case-sensitive?\r\n     */\r\n    function NotEqualTo(propertyName, expression, opt_matchCase) {\r\n        return _super.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase) || this;\r\n    }\r\n    return NotEqualTo;\r\n}(ComparisonBinary));\r\nexport default NotEqualTo;\r\n//# sourceMappingURL=NotEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/LogicalNary\r\n */\r\nimport { assert } from '../../asserts.js';\r\nimport Filter from './Filter.js';\r\n/**\r\n * @classdesc\r\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\r\n * Base class for WFS GetFeature n-ary logical filters.\r\n *\r\n * @abstract\r\n */\r\nvar LogicalNary = /** @class */ (function (_super) {\r\n    __extends(LogicalNary, _super);\r\n    /**\r\n     * @param {!string} tagName The XML tag name for this filter.\r\n     * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\r\n     */\r\n    function LogicalNary(tagName, conditions) {\r\n        var _this = _super.call(this, tagName) || this;\r\n        /**\r\n         * @type {Array<import(\"./Filter.js\").default>}\r\n         */\r\n        _this.conditions = conditions;\r\n        assert(_this.conditions.length >= 2, 57); // At least 2 conditions are required.\r\n        return _this;\r\n    }\r\n    return LogicalNary;\r\n}(Filter));\r\nexport default LogicalNary;\r\n//# sourceMappingURL=LogicalNary.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/Or\r\n */\r\nimport LogicalNary from './LogicalNary.js';\r\n/**\r\n * @classdesc\r\n * Represents a logical `<Or>` operator between two ore more filter conditions.\r\n * @api\r\n */\r\nvar Or = /** @class */ (function (_super) {\r\n    __extends(Or, _super);\r\n    /**\r\n     * @param {...import(\"./Filter.js\").default} conditions Conditions.\r\n     */\r\n    function Or(conditions) {\r\n        return _super.call(this, 'Or', Array.prototype.slice.call(arguments)) || this;\r\n    }\r\n    return Or;\r\n}(LogicalNary));\r\nexport default Or;\r\n//# sourceMappingURL=Or.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/Within\r\n */\r\nimport Spatial from './Spatial.js';\r\n/**\r\n * @classdesc\r\n * Represents a `<Within>` operator to test whether a geometry-valued property\r\n * is within a given geometry.\r\n * @api\r\n */\r\nvar Within = /** @class */ (function (_super) {\r\n    __extends(Within, _super);\r\n    /**\r\n     * @param {!string} geometryName Geometry name to use.\r\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\r\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\r\n     *    set on geometries when this is not provided.\r\n     */\r\n    function Within(geometryName, geometry, opt_srsName) {\r\n        return _super.call(this, 'Within', geometryName, geometry, opt_srsName) || this;\r\n    }\r\n    return Within;\r\n}(Spatial));\r\nexport default Within;\r\n//# sourceMappingURL=Within.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/filter/And\r\n */\r\nimport LogicalNary from './LogicalNary.js';\r\n/**\r\n * @classdesc\r\n * Represents a logical `<And>` operator between two or more filter conditions.\r\n *\r\n * @abstract\r\n */\r\nvar And = /** @class */ (function (_super) {\r\n    __extends(And, _super);\r\n    /**\r\n     * @param {...import(\"./Filter.js\").default} conditions Conditions.\r\n     */\r\n    function And(conditions) {\r\n        return _super.call(this, 'And', Array.prototype.slice.call(arguments)) || this;\r\n    }\r\n    return And;\r\n}(LogicalNary));\r\nexport default And;\r\n//# sourceMappingURL=And.js.map","/**\r\n * @module ol/format/filter\r\n */\r\nimport And from './filter/And.js';\r\nimport Bbox from './filter/Bbox.js';\r\nimport Contains from './filter/Contains.js';\r\nimport During from './filter/During.js';\r\nimport EqualTo from './filter/EqualTo.js';\r\nimport GreaterThan from './filter/GreaterThan.js';\r\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\r\nimport Intersects from './filter/Intersects.js';\r\nimport IsBetween from './filter/IsBetween.js';\r\nimport IsLike from './filter/IsLike.js';\r\nimport IsNull from './filter/IsNull.js';\r\nimport LessThan from './filter/LessThan.js';\r\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\r\nimport Not from './filter/Not.js';\r\nimport NotEqualTo from './filter/NotEqualTo.js';\r\nimport Or from './filter/Or.js';\r\nimport Within from './filter/Within.js';\r\n/**\r\n * Create a logical `<And>` operator between two or more filter conditions.\r\n *\r\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\r\n * @returns {!And} `<And>` operator.\r\n * @api\r\n */\r\nexport function and(conditions) {\r\n    var params = [null].concat(Array.prototype.slice.call(arguments));\r\n    return new (Function.prototype.bind.apply(And, params));\r\n}\r\n/**\r\n * Create a logical `<Or>` operator between two or more filter conditions.\r\n *\r\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\r\n * @returns {!Or} `<Or>` operator.\r\n * @api\r\n */\r\nexport function or(conditions) {\r\n    var params = [null].concat(Array.prototype.slice.call(arguments));\r\n    return new (Function.prototype.bind.apply(Or, params));\r\n}\r\n/**\r\n * Represents a logical `<Not>` operator for a filter condition.\r\n *\r\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\r\n * @returns {!Not} `<Not>` operator.\r\n * @api\r\n */\r\nexport function not(condition) {\r\n    return new Not(condition);\r\n}\r\n/**\r\n * Create a `<BBOX>` operator to test whether a geometry-valued property\r\n * intersects a fixed bounding box\r\n *\r\n * @param {!string} geometryName Geometry name to use.\r\n * @param {!import(\"../extent.js\").Extent} extent Extent.\r\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\r\n *    set on geometries when this is not provided.\r\n * @returns {!Bbox} `<BBOX>` operator.\r\n * @api\r\n */\r\nexport function bbox(geometryName, extent, opt_srsName) {\r\n    return new Bbox(geometryName, extent, opt_srsName);\r\n}\r\n/**\r\n * Create a `<Contains>` operator to test whether a geometry-valued property\r\n * contains a given geometry.\r\n *\r\n * @param {!string} geometryName Geometry name to use.\r\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\r\n *    set on geometries when this is not provided.\r\n * @returns {!Contains} `<Contains>` operator.\r\n * @api\r\n */\r\nexport function contains(geometryName, geometry, opt_srsName) {\r\n    return new Contains(geometryName, geometry, opt_srsName);\r\n}\r\n/**\r\n * Create a `<Intersects>` operator to test whether a geometry-valued property\r\n * intersects a given geometry.\r\n *\r\n * @param {!string} geometryName Geometry name to use.\r\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\r\n *    set on geometries when this is not provided.\r\n * @returns {!Intersects} `<Intersects>` operator.\r\n * @api\r\n */\r\nexport function intersects(geometryName, geometry, opt_srsName) {\r\n    return new Intersects(geometryName, geometry, opt_srsName);\r\n}\r\n/**\r\n * Create a `<Within>` operator to test whether a geometry-valued property\r\n * is within a given geometry.\r\n *\r\n * @param {!string} geometryName Geometry name to use.\r\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\r\n *    set on geometries when this is not provided.\r\n * @returns {!Within} `<Within>` operator.\r\n * @api\r\n */\r\nexport function within(geometryName, geometry, opt_srsName) {\r\n    return new Within(geometryName, geometry, opt_srsName);\r\n}\r\n/**\r\n * Creates a `<PropertyIsEqualTo>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!(string|number)} expression The value to compare.\r\n * @param {boolean=} opt_matchCase Case-sensitive?\r\n * @returns {!EqualTo} `<PropertyIsEqualTo>` operator.\r\n * @api\r\n */\r\nexport function equalTo(propertyName, expression, opt_matchCase) {\r\n    return new EqualTo(propertyName, expression, opt_matchCase);\r\n}\r\n/**\r\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!(string|number)} expression The value to compare.\r\n * @param {boolean=} opt_matchCase Case-sensitive?\r\n * @returns {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\r\n * @api\r\n */\r\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\r\n    return new NotEqualTo(propertyName, expression, opt_matchCase);\r\n}\r\n/**\r\n * Creates a `<PropertyIsLessThan>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!number} expression The value to compare.\r\n * @returns {!LessThan} `<PropertyIsLessThan>` operator.\r\n * @api\r\n */\r\nexport function lessThan(propertyName, expression) {\r\n    return new LessThan(propertyName, expression);\r\n}\r\n/**\r\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!number} expression The value to compare.\r\n * @returns {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\r\n * @api\r\n */\r\nexport function lessThanOrEqualTo(propertyName, expression) {\r\n    return new LessThanOrEqualTo(propertyName, expression);\r\n}\r\n/**\r\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!number} expression The value to compare.\r\n * @returns {!GreaterThan} `<PropertyIsGreaterThan>` operator.\r\n * @api\r\n */\r\nexport function greaterThan(propertyName, expression) {\r\n    return new GreaterThan(propertyName, expression);\r\n}\r\n/**\r\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!number} expression The value to compare.\r\n * @returns {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\r\n * @api\r\n */\r\nexport function greaterThanOrEqualTo(propertyName, expression) {\r\n    return new GreaterThanOrEqualTo(propertyName, expression);\r\n}\r\n/**\r\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\r\n * is null.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @returns {!IsNull} `<PropertyIsNull>` operator.\r\n * @api\r\n */\r\nexport function isNull(propertyName) {\r\n    return new IsNull(propertyName);\r\n}\r\n/**\r\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\r\n * value lies within a range given by a lower and upper bound (inclusive).\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!number} lowerBoundary The lower bound of the range.\r\n * @param {!number} upperBoundary The upper bound of the range.\r\n * @returns {!IsBetween} `<PropertyIsBetween>` operator.\r\n * @api\r\n */\r\nexport function between(propertyName, lowerBoundary, upperBoundary) {\r\n    return new IsBetween(propertyName, lowerBoundary, upperBoundary);\r\n}\r\n/**\r\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\r\n * value against a text pattern.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!string} pattern Text pattern.\r\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\r\n *    zero or more string characters. Default is '*'.\r\n * @param {string=} opt_singleChar pattern character which matches any single\r\n *    string character. Default is '.'.\r\n * @param {string=} opt_escapeChar Escape character which can be used to escape\r\n *    the pattern characters. Default is '!'.\r\n * @param {boolean=} opt_matchCase Case-sensitive?\r\n * @returns {!IsLike} `<PropertyIsLike>` operator.\r\n * @api\r\n */\r\nexport function like(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\r\n    return new IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\r\n}\r\n/**\r\n * Create a `<During>` temporal operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!string} begin The begin date in ISO-8601 format.\r\n * @param {!string} end The end date in ISO-8601 format.\r\n * @returns {!During} `<During>` operator.\r\n * @api\r\n */\r\nexport function during(propertyName, begin, end) {\r\n    return new During(propertyName, begin, end);\r\n}\r\n//# sourceMappingURL=filter.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/geom/GeometryCollection\r\n */\r\nimport { listen, unlisten } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter } from '../extent.js';\r\nimport Geometry from './Geometry.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport { clear } from '../obj.js';\r\n/**\r\n * @classdesc\r\n * An array of {@link module:ol/geom/Geometry} objects.\r\n *\r\n * @api\r\n */\r\nvar GeometryCollection = /** @class */ (function (_super) {\r\n    __extends(GeometryCollection, _super);\r\n    /**\r\n     * @param {Array<Geometry>=} opt_geometries Geometries.\r\n     */\r\n    function GeometryCollection(opt_geometries) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @private\r\n         * @type {Array<Geometry>}\r\n         */\r\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\r\n        _this.listenGeometriesChange_();\r\n        return _this;\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\r\n        if (!this.geometries_) {\r\n            return;\r\n        }\r\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\r\n            unlisten(this.geometries_[i], EventType.CHANGE, this.changed, this);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\r\n        if (!this.geometries_) {\r\n            return;\r\n        }\r\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\r\n            listen(this.geometries_[i], EventType.CHANGE, this.changed, this);\r\n        }\r\n    };\r\n    /**\r\n     * Make a complete copy of the geometry.\r\n     * @return {!GeometryCollection} Clone.\r\n     * @override\r\n     * @api\r\n     */\r\n    GeometryCollection.prototype.clone = function () {\r\n        var geometryCollection = new GeometryCollection(null);\r\n        geometryCollection.setGeometries(this.geometries_);\r\n        return geometryCollection;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\r\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n            return minSquaredDistance;\r\n        }\r\n        var geometries = this.geometries_;\r\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\r\n        }\r\n        return minSquaredDistance;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GeometryCollection.prototype.containsXY = function (x, y) {\r\n        var geometries = this.geometries_;\r\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n            if (geometries[i].containsXY(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GeometryCollection.prototype.computeExtent = function (extent) {\r\n        createOrUpdateEmpty(extent);\r\n        var geometries = this.geometries_;\r\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n            extend(extent, geometries[i].getExtent());\r\n        }\r\n        return extent;\r\n    };\r\n    /**\r\n     * Return the geometries that make up this geometry collection.\r\n     * @return {Array<Geometry>} Geometries.\r\n     * @api\r\n     */\r\n    GeometryCollection.prototype.getGeometries = function () {\r\n        return cloneGeometries(this.geometries_);\r\n    };\r\n    /**\r\n     * @return {Array<Geometry>} Geometries.\r\n     */\r\n    GeometryCollection.prototype.getGeometriesArray = function () {\r\n        return this.geometries_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\r\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\r\n            clear(this.simplifiedGeometryCache);\r\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\r\n            this.simplifiedGeometryRevision = this.getRevision();\r\n        }\r\n        if (squaredTolerance < 0 ||\r\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\r\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\r\n            return this;\r\n        }\r\n        var key = squaredTolerance.toString();\r\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\r\n            return this.simplifiedGeometryCache[key];\r\n        }\r\n        else {\r\n            var simplifiedGeometries = [];\r\n            var geometries = this.geometries_;\r\n            var simplified = false;\r\n            for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n                var geometry = geometries[i];\r\n                var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\r\n                simplifiedGeometries.push(simplifiedGeometry);\r\n                if (simplifiedGeometry !== geometry) {\r\n                    simplified = true;\r\n                }\r\n            }\r\n            if (simplified) {\r\n                var simplifiedGeometryCollection = new GeometryCollection(null);\r\n                simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\r\n                this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\r\n                return simplifiedGeometryCollection;\r\n            }\r\n            else {\r\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    GeometryCollection.prototype.getType = function () {\r\n        return GeometryType.GEOMETRY_COLLECTION;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\r\n        var geometries = this.geometries_;\r\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n            if (geometries[i].intersectsExtent(extent)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {boolean} Is empty.\r\n     */\r\n    GeometryCollection.prototype.isEmpty = function () {\r\n        return this.geometries_.length === 0;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\r\n        var geometries = this.geometries_;\r\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n            geometries[i].rotate(angle, anchor);\r\n        }\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\r\n        var anchor = opt_anchor;\r\n        if (!anchor) {\r\n            anchor = getCenter(this.getExtent());\r\n        }\r\n        var geometries = this.geometries_;\r\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n            geometries[i].scale(sx, opt_sy, anchor);\r\n        }\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Set the geometries that make up this geometry collection.\r\n     * @param {Array<Geometry>} geometries Geometries.\r\n     * @api\r\n     */\r\n    GeometryCollection.prototype.setGeometries = function (geometries) {\r\n        this.setGeometriesArray(cloneGeometries(geometries));\r\n    };\r\n    /**\r\n     * @param {Array<Geometry>} geometries Geometries.\r\n     */\r\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\r\n        this.unlistenGeometriesChange_();\r\n        this.geometries_ = geometries;\r\n        this.listenGeometriesChange_();\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\r\n        var geometries = this.geometries_;\r\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n            geometries[i].applyTransform(transformFn);\r\n        }\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\r\n        var geometries = this.geometries_;\r\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n            geometries[i].translate(deltaX, deltaY);\r\n        }\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GeometryCollection.prototype.disposeInternal = function () {\r\n        this.unlistenGeometriesChange_();\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    return GeometryCollection;\r\n}(Geometry));\r\n/**\r\n * @param {Array<Geometry>} geometries Geometries.\r\n * @return {Array<Geometry>} Cloned geometries.\r\n */\r\nfunction cloneGeometries(geometries) {\r\n    var clonedGeometries = [];\r\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n        clonedGeometries.push(geometries[i].clone());\r\n    }\r\n    return clonedGeometries;\r\n}\r\nexport default GeometryCollection;\r\n//# sourceMappingURL=GeometryCollection.js.map","/**\r\n * @module ol/format/GeoJSON\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { assert } from '../asserts.js';\r\nimport Feature from '../Feature.js';\r\nimport { transformGeometryWithOptions } from './Feature.js';\r\nimport JSONFeature from './JSONFeature.js';\r\nimport GeometryCollection from '../geom/GeometryCollection.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport { assign, isEmpty } from '../obj.js';\r\nimport { get as getProjection } from '../proj.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\n/**\r\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\r\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\r\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\r\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\r\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\r\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\r\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\r\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\r\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\r\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\r\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\r\n */\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\r\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\r\n * written by the format.  Options passed to read or write methods will take precedence.\r\n * @property {string} [geometryName] Geometry name to use when creating features.\r\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\r\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\r\n * will look for that field to set the geometry name. If both this field is set to `true`\r\n * and a `geometryName` is provided, the `geometryName` will take precedence.\r\n */\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the GeoJSON format.\r\n *\r\n  * @api\r\n */\r\nvar GeoJSON = /** @class */ (function (_super) {\r\n    __extends(GeoJSON, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function GeoJSON(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        _this = _super.call(this) || this;\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        _this.dataProjection = getProjection(options.dataProjection ?\r\n            options.dataProjection : 'EPSG:4326');\r\n        if (options.featureProjection) {\r\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\r\n        }\r\n        /**\r\n         * Name of the geometry attribute for features.\r\n         * @type {string|undefined}\r\n         * @private\r\n         */\r\n        _this.geometryName_ = options.geometryName;\r\n        /**\r\n         * Look for the geometry name in the feature GeoJSON\r\n         * @type {boolean|undefined}\r\n         * @private\r\n         */\r\n        _this.extractGeometryName_ = options.extractGeometryName;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\r\n        /**\r\n         * @type {GeoJSONFeature}\r\n         */\r\n        var geoJSONFeature = null;\r\n        if (object['type'] === 'Feature') {\r\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\r\n        }\r\n        else {\r\n            geoJSONFeature = {\r\n                'type': 'Feature',\r\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\r\n                'properties': null\r\n            };\r\n        }\r\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\r\n        var feature = new Feature();\r\n        if (this.geometryName_) {\r\n            feature.setGeometryName(this.geometryName_);\r\n        }\r\n        else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\r\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\r\n        }\r\n        feature.setGeometry(geometry);\r\n        if ('id' in geoJSONFeature) {\r\n            feature.setId(geoJSONFeature['id']);\r\n        }\r\n        if (geoJSONFeature['properties']) {\r\n            feature.setProperties(geoJSONFeature['properties'], true);\r\n        }\r\n        return feature;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\r\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\r\n        /** @type {Array<import(\"../Feature.js\").default>} */\r\n        var features = null;\r\n        if (geoJSONObject['type'] === 'FeatureCollection') {\r\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\r\n            features = [];\r\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\r\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\r\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\r\n            }\r\n        }\r\n        else {\r\n            features = [this.readFeatureFromObject(object, opt_options)];\r\n        }\r\n        return features;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\r\n        return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\r\n        var crs = object['crs'];\r\n        var projection;\r\n        if (crs) {\r\n            if (crs['type'] == 'name') {\r\n                projection = getProjection(crs['properties']['name']);\r\n            }\r\n            else {\r\n                assert(false, 36); // Unknown SRS type\r\n            }\r\n        }\r\n        else {\r\n            projection = this.dataProjection;\r\n        }\r\n        return (\r\n        /** @type {import(\"../proj/Projection.js\").default} */ (projection));\r\n    };\r\n    /**\r\n     * Encode a feature as a GeoJSON Feature object.\r\n     *\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @return {GeoJSONFeature} Object.\r\n     * @override\r\n     * @api\r\n     */\r\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\r\n        opt_options = this.adaptOptions(opt_options);\r\n        /** @type {GeoJSONFeature} */\r\n        var object = {\r\n            'type': 'Feature',\r\n            geometry: null,\r\n            properties: null\r\n        };\r\n        var id = feature.getId();\r\n        if (id !== undefined) {\r\n            object.id = id;\r\n        }\r\n        var geometry = feature.getGeometry();\r\n        if (geometry) {\r\n            object.geometry = writeGeometry(geometry, opt_options);\r\n        }\r\n        var properties = feature.getProperties();\r\n        delete properties[feature.getGeometryName()];\r\n        if (!isEmpty(properties)) {\r\n            object.properties = properties;\r\n        }\r\n        return object;\r\n    };\r\n    /**\r\n     * Encode an array of features as a GeoJSON object.\r\n     *\r\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\r\n     * @override\r\n     * @api\r\n     */\r\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\r\n        opt_options = this.adaptOptions(opt_options);\r\n        var objects = [];\r\n        for (var i = 0, ii = features.length; i < ii; ++i) {\r\n            objects.push(this.writeFeatureObject(features[i], opt_options));\r\n        }\r\n        return {\r\n            type: 'FeatureCollection',\r\n            features: objects\r\n        };\r\n    };\r\n    /**\r\n     * Encode a geometry as a GeoJSON object.\r\n     *\r\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\r\n     * @override\r\n     * @api\r\n     */\r\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\r\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\r\n    };\r\n    return GeoJSON;\r\n}(JSONFeature));\r\n/**\r\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\r\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n */\r\nfunction readGeometry(object, opt_options) {\r\n    if (!object) {\r\n        return null;\r\n    }\r\n    /**\r\n     * @type {import(\"../geom/Geometry.js\").default}\r\n     */\r\n    var geometry;\r\n    switch (object['type']) {\r\n        case GeometryType.POINT: {\r\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\r\n            break;\r\n        }\r\n        case GeometryType.LINE_STRING: {\r\n            geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\r\n            break;\r\n        }\r\n        case GeometryType.POLYGON: {\r\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\r\n            break;\r\n        }\r\n        case GeometryType.MULTI_POINT: {\r\n            geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\r\n            break;\r\n        }\r\n        case GeometryType.MULTI_LINE_STRING: {\r\n            geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\r\n            break;\r\n        }\r\n        case GeometryType.MULTI_POLYGON: {\r\n            geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\r\n            break;\r\n        }\r\n        case GeometryType.GEOMETRY_COLLECTION: {\r\n            geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\r\n            break;\r\n        }\r\n        default: {\r\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\r\n        }\r\n    }\r\n    return transformGeometryWithOptions(geometry, false, opt_options);\r\n}\r\n/**\r\n * @param {GeoJSONGeometryCollection} object Object.\r\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n * @return {GeometryCollection} Geometry collection.\r\n */\r\nfunction readGeometryCollectionGeometry(object, opt_options) {\r\n    var geometries = object['geometries'].map(\r\n    /**\r\n     * @param {GeoJSONGeometry} geometry Geometry.\r\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n     */\r\n    function (geometry) {\r\n        return readGeometry(geometry, opt_options);\r\n    });\r\n    return new GeometryCollection(geometries);\r\n}\r\n/**\r\n * @param {GeoJSONPoint} object Object.\r\n * @return {Point} Point.\r\n */\r\nfunction readPointGeometry(object) {\r\n    return new Point(object['coordinates']);\r\n}\r\n/**\r\n * @param {GeoJSONLineString} object Object.\r\n * @return {LineString} LineString.\r\n */\r\nfunction readLineStringGeometry(object) {\r\n    return new LineString(object['coordinates']);\r\n}\r\n/**\r\n * @param {GeoJSONMultiLineString} object Object.\r\n * @return {MultiLineString} MultiLineString.\r\n */\r\nfunction readMultiLineStringGeometry(object) {\r\n    return new MultiLineString(object['coordinates']);\r\n}\r\n/**\r\n * @param {GeoJSONMultiPoint} object Object.\r\n * @return {MultiPoint} MultiPoint.\r\n */\r\nfunction readMultiPointGeometry(object) {\r\n    return new MultiPoint(object['coordinates']);\r\n}\r\n/**\r\n * @param {GeoJSONMultiPolygon} object Object.\r\n * @return {MultiPolygon} MultiPolygon.\r\n */\r\nfunction readMultiPolygonGeometry(object) {\r\n    return new MultiPolygon(object['coordinates']);\r\n}\r\n/**\r\n * @param {GeoJSONPolygon} object Object.\r\n * @return {Polygon} Polygon.\r\n */\r\nfunction readPolygonGeometry(object) {\r\n    return new Polygon(object['coordinates']);\r\n}\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeGeometry(geometry, opt_options) {\r\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\r\n    var type = geometry.getType();\r\n    /** @type {GeoJSONGeometry} */\r\n    var geoJSON;\r\n    switch (type) {\r\n        case GeometryType.POINT: {\r\n            geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\r\n            break;\r\n        }\r\n        case GeometryType.LINE_STRING: {\r\n            geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\r\n            break;\r\n        }\r\n        case GeometryType.POLYGON: {\r\n            geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\r\n            break;\r\n        }\r\n        case GeometryType.MULTI_POINT: {\r\n            geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\r\n            break;\r\n        }\r\n        case GeometryType.MULTI_LINE_STRING: {\r\n            geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\r\n            break;\r\n        }\r\n        case GeometryType.MULTI_POLYGON: {\r\n            geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\r\n            break;\r\n        }\r\n        case GeometryType.GEOMETRY_COLLECTION: {\r\n            geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\r\n            break;\r\n        }\r\n        case GeometryType.CIRCLE: {\r\n            geoJSON = {\r\n                type: 'GeometryCollection',\r\n                geometries: []\r\n            };\r\n            break;\r\n        }\r\n        default: {\r\n            throw new Error('Unsupported geometry type: ' + type);\r\n        }\r\n    }\r\n    return geoJSON;\r\n}\r\n/**\r\n * @param {GeometryCollection} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\r\n */\r\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\r\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\r\n        var options = assign({}, opt_options);\r\n        delete options.featureProjection;\r\n        return writeGeometry(geometry, options);\r\n    });\r\n    return {\r\n        type: 'GeometryCollection',\r\n        geometries: geometries\r\n    };\r\n}\r\n/**\r\n * @param {LineString} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeLineStringGeometry(geometry, opt_options) {\r\n    return {\r\n        type: 'LineString',\r\n        coordinates: geometry.getCoordinates()\r\n    };\r\n}\r\n/**\r\n * @param {MultiLineString} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\r\n    return {\r\n        type: 'MultiLineString',\r\n        coordinates: geometry.getCoordinates()\r\n    };\r\n}\r\n/**\r\n * @param {MultiPoint} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeMultiPointGeometry(geometry, opt_options) {\r\n    return {\r\n        type: 'MultiPoint',\r\n        coordinates: geometry.getCoordinates()\r\n    };\r\n}\r\n/**\r\n * @param {MultiPolygon} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\r\n    var right;\r\n    if (opt_options) {\r\n        right = opt_options.rightHanded;\r\n    }\r\n    return {\r\n        type: 'MultiPolygon',\r\n        coordinates: geometry.getCoordinates(right)\r\n    };\r\n}\r\n/**\r\n * @param {Point} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writePointGeometry(geometry, opt_options) {\r\n    return {\r\n        type: 'Point',\r\n        coordinates: geometry.getCoordinates()\r\n    };\r\n}\r\n/**\r\n * @param {Polygon} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writePolygonGeometry(geometry, opt_options) {\r\n    var right;\r\n    if (opt_options) {\r\n        right = opt_options.rightHanded;\r\n    }\r\n    return {\r\n        type: 'Polygon',\r\n        coordinates: geometry.getCoordinates(right)\r\n    };\r\n}\r\nexport default GeoJSON;\r\n//# sourceMappingURL=GeoJSON.js.map","/**\r\n * @module ol/xml\r\n */\r\nimport { extend } from './array.js';\r\n/**\r\n * When using {@link module:ol/xml~makeChildAppender} or\r\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\r\n * to have this structure.\r\n * @typedef {Object} NodeStackItem\r\n * @property {Node} node\r\n */\r\n/**\r\n * @typedef {function(Element, Array<*>): void} Parser\r\n */\r\n/**\r\n * @typedef {function(Element, *, Array<*>): void} Serializer\r\n */\r\n/**\r\n * This document should be used when creating nodes for XML serializations. This\r\n * document is also used by {@link module:ol/xml~createElementNS}\r\n * @const\r\n * @type {Document}\r\n */\r\nexport var DOCUMENT = document.implementation.createDocument('', '', null);\r\n/**\r\n * @type {string}\r\n */\r\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\r\n/**\r\n * @param {string} namespaceURI Namespace URI.\r\n * @param {string} qualifiedName Qualified name.\r\n * @return {Element} Node.\r\n */\r\nexport function createElementNS(namespaceURI, qualifiedName) {\r\n    return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\r\n}\r\n/**\r\n * Recursively grab all text content of child nodes into a single string.\r\n * @param {Node} node Node.\r\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\r\n * breaks.\r\n * @return {string} All text content.\r\n * @api\r\n */\r\nexport function getAllTextContent(node, normalizeWhitespace) {\r\n    return getAllTextContent_(node, normalizeWhitespace, []).join('');\r\n}\r\n/**\r\n * Recursively grab all text content of child nodes into a single string.\r\n * @param {Node} node Node.\r\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\r\n * breaks.\r\n * @param {Array<string>} accumulator Accumulator.\r\n * @private\r\n * @return {Array<string>} Accumulator.\r\n */\r\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\r\n    if (node.nodeType == Node.CDATA_SECTION_NODE ||\r\n        node.nodeType == Node.TEXT_NODE) {\r\n        if (normalizeWhitespace) {\r\n            accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\r\n        }\r\n        else {\r\n            accumulator.push(node.nodeValue);\r\n        }\r\n    }\r\n    else {\r\n        var n = void 0;\r\n        for (n = node.firstChild; n; n = n.nextSibling) {\r\n            getAllTextContent_(n, normalizeWhitespace, accumulator);\r\n        }\r\n    }\r\n    return accumulator;\r\n}\r\n/**\r\n * @param {Object} object Object.\r\n * @return {boolean} Is a document.\r\n */\r\nexport function isDocument(object) {\r\n    return 'documentElement' in object;\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {?string} namespaceURI Namespace URI.\r\n * @param {string} name Attribute name.\r\n * @return {string} Value\r\n */\r\nexport function getAttributeNS(node, namespaceURI, name) {\r\n    return node.getAttributeNS(namespaceURI, name) || '';\r\n}\r\n/**\r\n * Parse an XML string to an XML Document.\r\n * @param {string} xml XML.\r\n * @return {Document} Document.\r\n * @api\r\n */\r\nexport function parse(xml) {\r\n    return new DOMParser().parseFromString(xml, 'application/xml');\r\n}\r\n/**\r\n * Make an array extender function for extending the array at the top of the\r\n * object stack.\r\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\r\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\r\n * @return {Parser} Parser.\r\n * @template T\r\n */\r\nexport function makeArrayExtender(valueReader, opt_this) {\r\n    return (\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     */\r\n    function (node, objectStack) {\r\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\r\n        if (value !== undefined) {\r\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\r\n            extend(array, value);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Make an array pusher function for pushing to the array at the top of the\r\n * object stack.\r\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\r\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\r\n * @return {Parser} Parser.\r\n * @template T\r\n */\r\nexport function makeArrayPusher(valueReader, opt_this) {\r\n    return (\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     */\r\n    function (node, objectStack) {\r\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\r\n        if (value !== undefined) {\r\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\r\n            array.push(value);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Make an object stack replacer function for replacing the object at the\r\n * top of the stack.\r\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\r\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\r\n * @return {Parser} Parser.\r\n * @template T\r\n */\r\nexport function makeReplacer(valueReader, opt_this) {\r\n    return (\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     */\r\n    function (node, objectStack) {\r\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\r\n        if (value !== undefined) {\r\n            objectStack[objectStack.length - 1] = value;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Make an object property pusher function for adding a property to the\r\n * object at the top of the stack.\r\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\r\n * @param {string=} opt_property Property.\r\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\r\n * @return {Parser} Parser.\r\n * @template T\r\n */\r\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\r\n    return (\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     */\r\n    function (node, objectStack) {\r\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\r\n        if (value !== undefined) {\r\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\r\n            var property = opt_property !== undefined ? opt_property : node.localName;\r\n            var array = void 0;\r\n            if (property in object) {\r\n                array = object[property];\r\n            }\r\n            else {\r\n                array = object[property] = [];\r\n            }\r\n            array.push(value);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Make an object property setter function.\r\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\r\n * @param {string=} opt_property Property.\r\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\r\n * @return {Parser} Parser.\r\n * @template T\r\n */\r\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\r\n    return (\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     */\r\n    function (node, objectStack) {\r\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\r\n        if (value !== undefined) {\r\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\r\n            var property = opt_property !== undefined ? opt_property : node.localName;\r\n            object[property] = value;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Create a serializer that appends nodes written by its `nodeWriter` to its\r\n * designated parent. The parent is the `node` of the\r\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\r\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\r\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\r\n * @return {Serializer} Serializer.\r\n * @template T, V\r\n */\r\nexport function makeChildAppender(nodeWriter, opt_this) {\r\n    return function (node, value, objectStack) {\r\n        nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\r\n        var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\r\n        var parentNode = parent.node;\r\n        parentNode.appendChild(node);\r\n    };\r\n}\r\n/**\r\n * Create a serializer that calls the provided `nodeWriter` from\r\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\r\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\r\n * designed to serialize a single item. An example would be a LineString\r\n * geometry writer, which could be reused for writing MultiLineString\r\n * geometries.\r\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\r\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\r\n * @return {Serializer} Serializer.\r\n * @template T, V\r\n */\r\nexport function makeArraySerializer(nodeWriter, opt_this) {\r\n    var serializersNS, nodeFactory;\r\n    return function (node, value, objectStack) {\r\n        if (serializersNS === undefined) {\r\n            serializersNS = {};\r\n            var serializers = {};\r\n            serializers[node.localName] = nodeWriter;\r\n            serializersNS[node.namespaceURI] = serializers;\r\n            nodeFactory = makeSimpleNodeFactory(node.localName);\r\n        }\r\n        serialize(serializersNS, nodeFactory, value, objectStack);\r\n    };\r\n}\r\n/**\r\n * Create a node factory which can use the `opt_keys` passed to\r\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\r\n * or a fixed node name. The namespace of the created nodes can either be fixed,\r\n * or the parent namespace will be used.\r\n * @param {string=} opt_nodeName Fixed node name which will be used for all\r\n *     created nodes. If not provided, the 3rd argument to the resulting node\r\n *     factory needs to be provided and will be the nodeName.\r\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\r\n *     all created nodes. If not provided, the namespace of the parent node will\r\n *     be used.\r\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\r\n */\r\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\r\n    var fixedNodeName = opt_nodeName;\r\n    return (\r\n    /**\r\n     * @param {*} value Value.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @param {string=} opt_nodeName Node name.\r\n     * @return {Node} Node.\r\n     */\r\n    function (value, objectStack, opt_nodeName) {\r\n        var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\r\n        var node = context.node;\r\n        var nodeName = fixedNodeName;\r\n        if (nodeName === undefined) {\r\n            nodeName = opt_nodeName;\r\n        }\r\n        var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\r\n        return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\r\n    });\r\n}\r\n/**\r\n * A node factory that creates a node using the parent's `namespaceURI` and the\r\n * `nodeName` passed by {@link module:ol/xml~serialize} or\r\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\r\n/**\r\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\r\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\r\n * `opt_key` argument.\r\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\r\n *     be a subset of the `orderedKeys`.\r\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\r\n * @return {Array<V>} Values in the order of the sequence. The resulting array\r\n *     has the same length as the `orderedKeys` array. Values that are not\r\n *     present in `object` will be `undefined` in the resulting array.\r\n * @template V\r\n */\r\nexport function makeSequence(object, orderedKeys) {\r\n    var length = orderedKeys.length;\r\n    var sequence = new Array(length);\r\n    for (var i = 0; i < length; ++i) {\r\n        sequence[i] = object[orderedKeys[i]];\r\n    }\r\n    return sequence;\r\n}\r\n/**\r\n * Create a namespaced structure, using the same values for each namespace.\r\n * This can be used as a starting point for versioned parsers, when only a few\r\n * values are version specific.\r\n * @param {Array<string>} namespaceURIs Namespace URIs.\r\n * @param {T} structure Structure.\r\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\r\n * @return {Object<string, T>} Namespaced structure.\r\n * @template T\r\n */\r\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\r\n    /**\r\n     * @type {Object<string, T>}\r\n     */\r\n    var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\r\n    var i, ii;\r\n    for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\r\n        structureNS[namespaceURIs[i]] = structure;\r\n    }\r\n    return structureNS;\r\n}\r\n/**\r\n * Parse a node using the parsers and object stack.\r\n * @param {Object<string, Object<string, Parser>>} parsersNS\r\n *     Parsers by namespace.\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {*=} opt_this The object to use as `this`.\r\n */\r\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\r\n    var n;\r\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n        var parsers = parsersNS[n.namespaceURI];\r\n        if (parsers !== undefined) {\r\n            var parser = parsers[n.localName];\r\n            if (parser !== undefined) {\r\n                parser.call(opt_this, n, objectStack);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Push an object on top of the stack, parse and return the popped object.\r\n * @param {T} object Object.\r\n * @param {Object<string, Object<string, Parser>>} parsersNS\r\n *     Parsers by namespace.\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {*=} opt_this The object to use as `this`.\r\n * @return {T} Object.\r\n * @template T\r\n */\r\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\r\n    objectStack.push(object);\r\n    parseNode(parsersNS, node, objectStack, opt_this);\r\n    return /** @type {T} */ (objectStack.pop());\r\n}\r\n/**\r\n * Walk through an array of `values` and call a serializer for each value.\r\n * @param {Object<string, Object<string, Serializer>>} serializersNS\r\n *     Namespaced serializers.\r\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\r\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\r\n *     will be used to choose a node writer from `serializersNS`. This\r\n *     separation allows us to decide what kind of node to create, depending on\r\n *     the value we want to serialize. An example for this would be different\r\n *     geometry writers based on the geometry type.\r\n * @param {Array<*>} values Values to serialize. An example would be an array\r\n *     of {@link module:ol/Feature~Feature} instances.\r\n * @param {Array<*>} objectStack Node stack.\r\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\r\n *     `nodeFactory`. This is used for serializing object literals where the\r\n *     node name relates to the property key. The array length of `opt_keys` has\r\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\r\n *     determines the order of the sequence.\r\n * @param {T=} opt_this The object to use as `this` for the node factory and\r\n *     serializers.\r\n * @template T\r\n */\r\nexport function serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\r\n    var length = (opt_keys !== undefined ? opt_keys : values).length;\r\n    var value, node;\r\n    for (var i = 0; i < length; ++i) {\r\n        value = values[i];\r\n        if (value !== undefined) {\r\n            node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack, opt_keys !== undefined ? opt_keys[i] : undefined);\r\n            if (node !== undefined) {\r\n                serializersNS[node.namespaceURI][node.localName]\r\n                    .call(opt_this, node, value, objectStack);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @param {O} object Object.\r\n * @param {Object<string, Object<string, Serializer>>} serializersNS\r\n *     Namespaced serializers.\r\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\r\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\r\n *     will be used to choose a node writer from `serializersNS`. This\r\n *     separation allows us to decide what kind of node to create, depending on\r\n *     the value we want to serialize. An example for this would be different\r\n *     geometry writers based on the geometry type.\r\n * @param {Array<*>} values Values to serialize. An example would be an array\r\n *     of {@link module:ol/Feature~Feature} instances.\r\n * @param {Array<*>} objectStack Node stack.\r\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\r\n *     `nodeFactory`. This is used for serializing object literals where the\r\n *     node name relates to the property key. The array length of `opt_keys` has\r\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\r\n *     determines the order of the sequence.\r\n * @param {T=} opt_this The object to use as `this` for the node factory and\r\n *     serializers.\r\n * @return {O|undefined} Object.\r\n * @template O, T\r\n */\r\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\r\n    objectStack.push(object);\r\n    serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\r\n    return /** @type {O|undefined} */ (objectStack.pop());\r\n}\r\n//# sourceMappingURL=xml.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/XMLFeature\r\n */\r\nimport { abstract } from '../util.js';\r\nimport { extend } from '../array.js';\r\nimport FeatureFormat from '../format/Feature.js';\r\nimport FormatType from '../format/FormatType.js';\r\nimport { isDocument, parse } from '../xml.js';\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for XML feature formats.\r\n *\r\n * @abstract\r\n */\r\nvar XMLFeature = /** @class */ (function (_super) {\r\n    __extends(XMLFeature, _super);\r\n    function XMLFeature() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @type {XMLSerializer}\r\n         * @private\r\n         */\r\n        _this.xmlSerializer_ = new XMLSerializer();\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    XMLFeature.prototype.getType = function () {\r\n        return FormatType.XML;\r\n    };\r\n    /**\r\n     * Read a single feature.\r\n     *\r\n     * @param {Document|Node|Object|string} source Source.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n     * @return {import(\"../Feature.js\").default} Feature.\r\n     * @api\r\n     */\r\n    XMLFeature.prototype.readFeature = function (source, opt_options) {\r\n        if (!source) {\r\n            return null;\r\n        }\r\n        else if (typeof source === 'string') {\r\n            var doc = parse(source);\r\n            return this.readFeatureFromDocument(doc, opt_options);\r\n        }\r\n        else if (isDocument(source)) {\r\n            return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\r\n        }\r\n        else {\r\n            return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Document} doc Document.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n     * @return {import(\"../Feature.js\").default} Feature.\r\n     */\r\n    XMLFeature.prototype.readFeatureFromDocument = function (doc, opt_options) {\r\n        var features = this.readFeaturesFromDocument(doc, opt_options);\r\n        if (features.length > 0) {\r\n            return features[0];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n     * @return {import(\"../Feature.js\").default} Feature.\r\n     */\r\n    XMLFeature.prototype.readFeatureFromNode = function (node, opt_options) {\r\n        return null; // not implemented\r\n    };\r\n    /**\r\n     * Read all features from a feature collection.\r\n     *\r\n     * @param {Document|Node|Object|string} source Source.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n     * @return {Array<import(\"../Feature.js\").default>} Features.\r\n     * @api\r\n     */\r\n    XMLFeature.prototype.readFeatures = function (source, opt_options) {\r\n        if (!source) {\r\n            return [];\r\n        }\r\n        else if (typeof source === 'string') {\r\n            var doc = parse(source);\r\n            return this.readFeaturesFromDocument(doc, opt_options);\r\n        }\r\n        else if (isDocument(source)) {\r\n            return this.readFeaturesFromDocument(\r\n            /** @type {Document} */ (source), opt_options);\r\n        }\r\n        else {\r\n            return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Document} doc Document.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n     * @protected\r\n     * @return {Array<import(\"../Feature.js\").default>} Features.\r\n     */\r\n    XMLFeature.prototype.readFeaturesFromDocument = function (doc, opt_options) {\r\n        /** @type {Array<import(\"../Feature.js\").default>} */\r\n        var features = [];\r\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n            if (n.nodeType == Node.ELEMENT_NODE) {\r\n                extend(features, this.readFeaturesFromNode(n, opt_options));\r\n            }\r\n        }\r\n        return features;\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {Node} node Node.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n     * @protected\r\n     * @return {Array<import(\"../Feature.js\").default>} Features.\r\n     */\r\n    XMLFeature.prototype.readFeaturesFromNode = function (node, opt_options) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    XMLFeature.prototype.readGeometry = function (source, opt_options) {\r\n        if (!source) {\r\n            return null;\r\n        }\r\n        else if (typeof source === 'string') {\r\n            var doc = parse(source);\r\n            return this.readGeometryFromDocument(doc, opt_options);\r\n        }\r\n        else if (isDocument(source)) {\r\n            return this.readGeometryFromDocument(\r\n            /** @type {Document} */ (source), opt_options);\r\n        }\r\n        else {\r\n            return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Document} doc Document.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n     * @protected\r\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n     */\r\n    XMLFeature.prototype.readGeometryFromDocument = function (doc, opt_options) {\r\n        return null; // not implemented\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n     * @protected\r\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n     */\r\n    XMLFeature.prototype.readGeometryFromNode = function (node, opt_options) {\r\n        return null; // not implemented\r\n    };\r\n    /**\r\n     * Read the projection from the source.\r\n     *\r\n     * @param {Document|Node|Object|string} source Source.\r\n     * @return {import(\"../proj/Projection.js\").default} Projection.\r\n     * @api\r\n     */\r\n    XMLFeature.prototype.readProjection = function (source) {\r\n        if (!source) {\r\n            return null;\r\n        }\r\n        else if (typeof source === 'string') {\r\n            var doc = parse(source);\r\n            return this.readProjectionFromDocument(doc);\r\n        }\r\n        else if (isDocument(source)) {\r\n            return this.readProjectionFromDocument(/** @type {Document} */ (source));\r\n        }\r\n        else {\r\n            return this.readProjectionFromNode(/** @type {Node} */ (source));\r\n        }\r\n    };\r\n    /**\r\n     * @param {Document} doc Document.\r\n     * @protected\r\n     * @return {import(\"../proj/Projection.js\").default} Projection.\r\n     */\r\n    XMLFeature.prototype.readProjectionFromDocument = function (doc) {\r\n        return this.dataProjection;\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @protected\r\n     * @return {import(\"../proj/Projection.js\").default} Projection.\r\n     */\r\n    XMLFeature.prototype.readProjectionFromNode = function (node) {\r\n        return this.dataProjection;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    XMLFeature.prototype.writeFeature = function (feature, opt_options) {\r\n        var node = this.writeFeatureNode(feature, opt_options);\r\n        return this.xmlSerializer_.serializeToString(node);\r\n    };\r\n    /**\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n     * @protected\r\n     * @return {Node} Node.\r\n     */\r\n    XMLFeature.prototype.writeFeatureNode = function (feature, opt_options) {\r\n        return null; // not implemented\r\n    };\r\n    /**\r\n     * Encode an array of features as string.\r\n     *\r\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @return {string} Result.\r\n     * @api\r\n     */\r\n    XMLFeature.prototype.writeFeatures = function (features, opt_options) {\r\n        var node = this.writeFeaturesNode(features, opt_options);\r\n        return this.xmlSerializer_.serializeToString(node);\r\n    };\r\n    /**\r\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n     * @return {Node} Node.\r\n     */\r\n    XMLFeature.prototype.writeFeaturesNode = function (features, opt_options) {\r\n        return null; // not implemented\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    XMLFeature.prototype.writeGeometry = function (geometry, opt_options) {\r\n        var node = this.writeGeometryNode(geometry, opt_options);\r\n        return this.xmlSerializer_.serializeToString(node);\r\n    };\r\n    /**\r\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n     * @return {Node} Node.\r\n     */\r\n    XMLFeature.prototype.writeGeometryNode = function (geometry, opt_options) {\r\n        return null; // not implemented\r\n    };\r\n    return XMLFeature;\r\n}(FeatureFormat));\r\nexport default XMLFeature;\r\n//# sourceMappingURL=XMLFeature.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/GMLBase\r\n */\r\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\r\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\r\n// envelopes/extents, only geometries!\r\nimport { extend } from '../array.js';\r\nimport Feature from '../Feature.js';\r\nimport { transformGeometryWithOptions, transformExtentWithOptions } from './Feature.js';\r\nimport XMLFeature from './XMLFeature.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport LinearRing from '../geom/LinearRing.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport { assign } from '../obj.js';\r\nimport { get as getProjection } from '../proj.js';\r\nimport { getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop } from '../xml.js';\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport var GMLNS = 'http://www.opengis.net/gml';\r\n/**\r\n * A regular expression that matches if a string only contains whitespace\r\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\r\n * space (0xa0) is explicitly included as IE doesn't include it in its\r\n * definition of `\\s`.\r\n *\r\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\r\n *\r\n * @const\r\n * @type {RegExp}\r\n */\r\nvar ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Object<string, string>|string} [featureNS] Feature\r\n * namespace. If not defined will be derived from GML. If multiple\r\n * feature types have been configured which come from different feature\r\n * namespaces, this will be an object with the keys being the prefixes used\r\n * in the entries of featureType array. The values of the object will be the\r\n * feature namespaces themselves. So for instance there might be a featureType\r\n * item `topp:states` in the `featureType` array and then there will be a key\r\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\r\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\r\n * If multiple feature types need to be configured\r\n * which come from different feature namespaces, `featureNS` will be an object\r\n * with the keys being the prefixes used in the entries of featureType array.\r\n * The values of the object will be the feature namespaces themselves.\r\n * So for instance there might be a featureType item `topp:states` and then\r\n * there will be a key named `topp` in the featureNS object with value\r\n * `http://www.openplans.org/topp`.\r\n * @property {string} srsName srsName to use when writing geometries.\r\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\r\n * elements. This also affects the elements in multi-part geometries.\r\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\r\n * elements. This also affects the elements in multi-part geometries.\r\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\r\n * Since the latter is deprecated in GML 3.\r\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\r\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\r\n * @property {string} [schemaLocation] Optional schemaLocation to use when\r\n * writing out the GML, this will override the default provided.\r\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\r\n */\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Feature base format for reading and writing data in the GML format.\r\n * This class cannot be instantiated, it contains only base content that\r\n * is shared with versioned format classes GML2 and GML3.\r\n *\r\n * @abstract\r\n */\r\nvar GMLBase = /** @class */ (function (_super) {\r\n    __extends(GMLBase, _super);\r\n    /**\r\n     * @param {Options=} opt_options Optional configuration object.\r\n     */\r\n    function GMLBase(opt_options) {\r\n        var _this = _super.call(this) || this;\r\n        var options = /** @type {Options} */ (opt_options ? opt_options : {});\r\n        /**\r\n         * @protected\r\n         * @type {Array<string>|string|undefined}\r\n         */\r\n        _this.featureType = options.featureType;\r\n        /**\r\n         * @protected\r\n         * @type {Object<string, string>|string|undefined}\r\n         */\r\n        _this.featureNS = options.featureNS;\r\n        /**\r\n         * @protected\r\n         * @type {string}\r\n         */\r\n        _this.srsName = options.srsName;\r\n        /**\r\n         * @protected\r\n         * @type {string}\r\n         */\r\n        _this.schemaLocation = '';\r\n        /**\r\n         * @type {Object<string, Object<string, Object>>}\r\n         */\r\n        _this.FEATURE_COLLECTION_PARSERS = {};\r\n        _this.FEATURE_COLLECTION_PARSERS[_this.namespace] = {\r\n            'featureMember': makeArrayPusher(_this.readFeaturesInternal),\r\n            'featureMembers': makeReplacer(_this.readFeaturesInternal)\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @return {Array<Feature> | undefined} Features.\r\n     */\r\n    GMLBase.prototype.readFeaturesInternal = function (node, objectStack) {\r\n        var localName = node.localName;\r\n        var features = null;\r\n        if (localName == 'FeatureCollection') {\r\n            features = pushParseAndPop([], this.FEATURE_COLLECTION_PARSERS, node, objectStack, this);\r\n        }\r\n        else if (localName == 'featureMembers' || localName == 'featureMember') {\r\n            var context = objectStack[0];\r\n            var featureType = context['featureType'];\r\n            var featureNS = context['featureNS'];\r\n            var prefix = 'p';\r\n            var defaultPrefix = 'p0';\r\n            if (!featureType && node.childNodes) {\r\n                featureType = [], featureNS = {};\r\n                for (var i = 0, ii = node.childNodes.length; i < ii; ++i) {\r\n                    var child = node.childNodes[i];\r\n                    if (child.nodeType === 1) {\r\n                        var ft = child.nodeName.split(':').pop();\r\n                        if (featureType.indexOf(ft) === -1) {\r\n                            var key = '';\r\n                            var count = 0;\r\n                            var uri = child.namespaceURI;\r\n                            for (var candidate in featureNS) {\r\n                                if (featureNS[candidate] === uri) {\r\n                                    key = candidate;\r\n                                    break;\r\n                                }\r\n                                ++count;\r\n                            }\r\n                            if (!key) {\r\n                                key = prefix + count;\r\n                                featureNS[key] = uri;\r\n                            }\r\n                            featureType.push(key + ':' + ft);\r\n                        }\r\n                    }\r\n                }\r\n                if (localName != 'featureMember') {\r\n                    // recheck featureType for each featureMember\r\n                    context['featureType'] = featureType;\r\n                    context['featureNS'] = featureNS;\r\n                }\r\n            }\r\n            if (typeof featureNS === 'string') {\r\n                var ns = featureNS;\r\n                featureNS = {};\r\n                featureNS[defaultPrefix] = ns;\r\n            }\r\n            /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\r\n            var parsersNS = {};\r\n            var featureTypes = Array.isArray(featureType) ? featureType : [featureType];\r\n            for (var p in featureNS) {\r\n                /** @type {Object<string, import(\"../xml.js\").Parser>} */\r\n                var parsers = {};\r\n                for (var i = 0, ii = featureTypes.length; i < ii; ++i) {\r\n                    var featurePrefix = featureTypes[i].indexOf(':') === -1 ?\r\n                        defaultPrefix : featureTypes[i].split(':')[0];\r\n                    if (featurePrefix === p) {\r\n                        parsers[featureTypes[i].split(':').pop()] =\r\n                            (localName == 'featureMembers') ?\r\n                                makeArrayPusher(this.readFeatureElement, this) :\r\n                                makeReplacer(this.readFeatureElement, this);\r\n                    }\r\n                }\r\n                parsersNS[featureNS[p]] = parsers;\r\n            }\r\n            if (localName == 'featureMember') {\r\n                features = pushParseAndPop(undefined, parsersNS, node, objectStack);\r\n            }\r\n            else {\r\n                features = pushParseAndPop([], parsersNS, node, objectStack);\r\n            }\r\n        }\r\n        if (features === null) {\r\n            features = [];\r\n        }\r\n        return features;\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\r\n     */\r\n    GMLBase.prototype.readGeometryElement = function (node, objectStack) {\r\n        var context = /** @type {Object} */ (objectStack[0]);\r\n        context['srsName'] = node.firstElementChild.getAttribute('srsName');\r\n        context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\r\n        var geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS, node, objectStack, this);\r\n        if (geometry) {\r\n            if (Array.isArray(geometry)) {\r\n                return transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\r\n            }\r\n            else {\r\n                return transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), false, context);\r\n            }\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @param {boolean} asFeature whether result should be wrapped as a feature.\r\n     * @return {Feature|Object} Feature\r\n     */\r\n    GMLBase.prototype.readFeatureElementInternal = function (node, objectStack, asFeature) {\r\n        var geometryName;\r\n        var values = {};\r\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n            var value = void 0;\r\n            var localName = n.localName;\r\n            // first, check if it is simple attribute\r\n            if (n.childNodes.length === 0\r\n                || (n.childNodes.length === 1 && (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\r\n                value = getAllTextContent(n, false);\r\n                if (ONLY_WHITESPACE_RE.test(value)) {\r\n                    value = undefined;\r\n                }\r\n            }\r\n            else {\r\n                if (asFeature) {\r\n                    //if feature, try it as a geometry\r\n                    value = this.readGeometryElement(n, objectStack);\r\n                }\r\n                if (!value) { //if not a geometry or not a feature, treat it as a complex attribute\r\n                    value = this.readFeatureElementInternal(n, objectStack, false);\r\n                }\r\n                else if (localName !== 'boundedBy') {\r\n                    // boundedBy is an extent and must not be considered as a geometry\r\n                    geometryName = localName;\r\n                }\r\n            }\r\n            if (values[localName]) {\r\n                if (!(values[localName] instanceof Array)) {\r\n                    values[localName] = [values[localName]];\r\n                }\r\n                values[localName].push(value);\r\n            }\r\n            else {\r\n                values[localName] = value;\r\n            }\r\n            var len = n.attributes.length;\r\n            if (len > 0) {\r\n                values[localName] = { _content_: values[localName] };\r\n                for (var i = 0; i < len; i++) {\r\n                    var attName = n.attributes[i].name;\r\n                    values[localName][attName] = n.attributes[i].value;\r\n                }\r\n            }\r\n        }\r\n        if (!asFeature) {\r\n            return values;\r\n        }\r\n        else {\r\n            var feature = new Feature(values);\r\n            if (geometryName) {\r\n                feature.setGeometryName(geometryName);\r\n            }\r\n            var fid = node.getAttribute('fid') ||\r\n                getAttributeNS(node, this.namespace, 'id');\r\n            if (fid) {\r\n                feature.setId(fid);\r\n            }\r\n            return feature;\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @return {Feature} Feature.\r\n     */\r\n    GMLBase.prototype.readFeatureElement = function (node, objectStack) {\r\n        return this.readFeatureElementInternal(node, objectStack, true);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @return {Point|undefined} Point.\r\n     */\r\n    GMLBase.prototype.readPoint = function (node, objectStack) {\r\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\r\n        if (flatCoordinates) {\r\n            return new Point(flatCoordinates, GeometryLayout.XYZ);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @return {MultiPoint|undefined} MultiPoint.\r\n     */\r\n    GMLBase.prototype.readMultiPoint = function (node, objectStack) {\r\n        /** @type {Array<Array<number>>} */\r\n        var coordinates = pushParseAndPop([], this.MULTIPOINT_PARSERS_, node, objectStack, this);\r\n        if (coordinates) {\r\n            return new MultiPoint(coordinates);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @return {MultiLineString|undefined} MultiLineString.\r\n     */\r\n    GMLBase.prototype.readMultiLineString = function (node, objectStack) {\r\n        /** @type {Array<LineString>} */\r\n        var lineStrings = pushParseAndPop([], this.MULTILINESTRING_PARSERS_, node, objectStack, this);\r\n        if (lineStrings) {\r\n            return new MultiLineString(lineStrings);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @return {MultiPolygon|undefined} MultiPolygon.\r\n     */\r\n    GMLBase.prototype.readMultiPolygon = function (node, objectStack) {\r\n        /** @type {Array<Polygon>} */\r\n        var polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\r\n        if (polygons) {\r\n            return new MultiPolygon(polygons);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     */\r\n    GMLBase.prototype.pointMemberParser_ = function (node, objectStack) {\r\n        parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     */\r\n    GMLBase.prototype.lineStringMemberParser_ = function (node, objectStack) {\r\n        parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     */\r\n    GMLBase.prototype.polygonMemberParser_ = function (node, objectStack) {\r\n        parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @return {LineString|undefined} LineString.\r\n     */\r\n    GMLBase.prototype.readLineString = function (node, objectStack) {\r\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\r\n        if (flatCoordinates) {\r\n            var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\r\n            return lineString;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {Array<number>|undefined} LinearRing flat coordinates.\r\n     */\r\n    GMLBase.prototype.readFlatLinearRing_ = function (node, objectStack) {\r\n        var ring = pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\r\n        if (ring) {\r\n            return ring;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @return {LinearRing|undefined} LinearRing.\r\n     */\r\n    GMLBase.prototype.readLinearRing = function (node, objectStack) {\r\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\r\n        if (flatCoordinates) {\r\n            return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @return {Polygon|undefined} Polygon.\r\n     */\r\n    GMLBase.prototype.readPolygon = function (node, objectStack) {\r\n        /** @type {Array<Array<number>>} */\r\n        var flatLinearRings = pushParseAndPop([null], this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\r\n        if (flatLinearRings && flatLinearRings[0]) {\r\n            var flatCoordinates = flatLinearRings[0];\r\n            var ends = [flatCoordinates.length];\r\n            var i = void 0, ii = void 0;\r\n            for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\r\n                extend(flatCoordinates, flatLinearRings[i]);\r\n                ends.push(flatCoordinates.length);\r\n            }\r\n            return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {Array<number>} Flat coordinates.\r\n     */\r\n    GMLBase.prototype.readFlatCoordinatesFromNode_ = function (node, objectStack) {\r\n        return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GMLBase.prototype.readGeometryFromNode = function (node, opt_options) {\r\n        var geometry = this.readGeometryElement(node, [this.getReadOptions(node, opt_options ? opt_options : {})]);\r\n        return geometry ? geometry : null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GMLBase.prototype.readFeaturesFromNode = function (node, opt_options) {\r\n        var options = {\r\n            featureType: this.featureType,\r\n            featureNS: this.featureNS\r\n        };\r\n        if (opt_options) {\r\n            assign(options, this.getReadOptions(node, opt_options));\r\n        }\r\n        var features = this.readFeaturesInternal(node, [options]);\r\n        return features || [];\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GMLBase.prototype.readProjectionFromNode = function (node) {\r\n        return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\r\n    };\r\n    return GMLBase;\r\n}(XMLFeature));\r\nGMLBase.prototype.namespace = GMLNS;\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\r\n    'http://www.opengis.net/gml': {}\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\r\n    'http://www.opengis.net/gml': {}\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGMLBase.prototype.GEOMETRY_PARSERS = {\r\n    'http://www.opengis.net/gml': {}\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\r\n        'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\r\n        'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\r\n        'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGMLBase.prototype.RING_PARSERS = {\r\n    'http://www.opengis.net/gml': {\r\n        'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\r\n    }\r\n};\r\nexport default GMLBase;\r\n//# sourceMappingURL=GMLBase.js.map","/**\r\n * @module ol/format/xsd\r\n */\r\nimport { getAllTextContent, DOCUMENT } from '../xml.js';\r\nimport { padNumber } from '../string.js';\r\n/**\r\n * @param {Node} node Node.\r\n * @return {boolean|undefined} Boolean.\r\n */\r\nexport function readBoolean(node) {\r\n    var s = getAllTextContent(node, false);\r\n    return readBooleanString(s);\r\n}\r\n/**\r\n * @param {string} string String.\r\n * @return {boolean|undefined} Boolean.\r\n */\r\nexport function readBooleanString(string) {\r\n    var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\r\n    if (m) {\r\n        return m[1] !== undefined || false;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @return {number|undefined} DateTime in seconds.\r\n */\r\nexport function readDateTime(node) {\r\n    var s = getAllTextContent(node, false);\r\n    var dateTime = Date.parse(s);\r\n    return isNaN(dateTime) ? undefined : dateTime / 1000;\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @return {number|undefined} Decimal.\r\n */\r\nexport function readDecimal(node) {\r\n    var s = getAllTextContent(node, false);\r\n    return readDecimalString(s);\r\n}\r\n/**\r\n * @param {string} string String.\r\n * @return {number|undefined} Decimal.\r\n */\r\nexport function readDecimalString(string) {\r\n    // FIXME check spec\r\n    var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\r\n    if (m) {\r\n        return parseFloat(m[1]);\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @return {number|undefined} Non negative integer.\r\n */\r\nexport function readNonNegativeInteger(node) {\r\n    var s = getAllTextContent(node, false);\r\n    return readNonNegativeIntegerString(s);\r\n}\r\n/**\r\n * @param {string} string String.\r\n * @return {number|undefined} Non negative integer.\r\n */\r\nexport function readNonNegativeIntegerString(string) {\r\n    var m = /^\\s*(\\d+)\\s*$/.exec(string);\r\n    if (m) {\r\n        return parseInt(m[1], 10);\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @return {string|undefined} String.\r\n */\r\nexport function readString(node) {\r\n    return getAllTextContent(node, false).trim();\r\n}\r\n/**\r\n * @param {Node} node Node to append a TextNode with the boolean to.\r\n * @param {boolean} bool Boolean.\r\n */\r\nexport function writeBooleanTextNode(node, bool) {\r\n    writeStringTextNode(node, (bool) ? '1' : '0');\r\n}\r\n/**\r\n * @param {Node} node Node to append a CDATA Section with the string to.\r\n * @param {string} string String.\r\n */\r\nexport function writeCDATASection(node, string) {\r\n    node.appendChild(DOCUMENT.createCDATASection(string));\r\n}\r\n/**\r\n * @param {Node} node Node to append a TextNode with the dateTime to.\r\n * @param {number} dateTime DateTime in seconds.\r\n */\r\nexport function writeDateTimeTextNode(node, dateTime) {\r\n    var date = new Date(dateTime * 1000);\r\n    var string = date.getUTCFullYear() + '-' +\r\n        padNumber(date.getUTCMonth() + 1, 2) + '-' +\r\n        padNumber(date.getUTCDate(), 2) + 'T' +\r\n        padNumber(date.getUTCHours(), 2) + ':' +\r\n        padNumber(date.getUTCMinutes(), 2) + ':' +\r\n        padNumber(date.getUTCSeconds(), 2) + 'Z';\r\n    node.appendChild(DOCUMENT.createTextNode(string));\r\n}\r\n/**\r\n * @param {Node} node Node to append a TextNode with the decimal to.\r\n * @param {number} decimal Decimal.\r\n */\r\nexport function writeDecimalTextNode(node, decimal) {\r\n    var string = decimal.toPrecision();\r\n    node.appendChild(DOCUMENT.createTextNode(string));\r\n}\r\n/**\r\n * @param {Node} node Node to append a TextNode with the decimal to.\r\n * @param {number} nonNegativeInteger Non negative integer.\r\n */\r\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\r\n    var string = nonNegativeInteger.toString();\r\n    node.appendChild(DOCUMENT.createTextNode(string));\r\n}\r\n/**\r\n * @param {Node} node Node to append a TextNode with the string to.\r\n * @param {string} string String.\r\n */\r\nexport function writeStringTextNode(node, string) {\r\n    node.appendChild(DOCUMENT.createTextNode(string));\r\n}\r\n//# sourceMappingURL=xsd.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/GML3\r\n */\r\nimport { extend } from '../array.js';\r\nimport { createOrUpdate } from '../extent.js';\r\nimport { transformExtentWithOptions, transformGeometryWithOptions } from './Feature.js';\r\nimport GMLBase, { GMLNS } from './GMLBase.js';\r\nimport { readNonNegativeIntegerString, writeStringTextNode } from './xsd.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport { assign } from '../obj.js';\r\nimport { get as getProjection } from '../proj.js';\r\nimport { createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender, makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\r\n/**\r\n * @const\r\n * @type {string}\r\n * @private\r\n */\r\nvar schemaLocation = GMLNS +\r\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\r\n    '1.0.0/gmlsf.xsd';\r\n/**\r\n * @const\r\n * @type {Object<string, string>}\r\n */\r\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\r\n    'MultiLineString': 'lineStringMember',\r\n    'MultiCurve': 'curveMember',\r\n    'MultiPolygon': 'polygonMember',\r\n    'MultiSurface': 'surfaceMember'\r\n};\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the GML format\r\n * version 3.1.1.\r\n * Currently only supports GML 3.1.1 Simple Features profile.\r\n *\r\n * @api\r\n */\r\nvar GML3 = /** @class */ (function (_super) {\r\n    __extends(GML3, _super);\r\n    /**\r\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\r\n     */\r\n    function GML3(opt_options) {\r\n        var _this = this;\r\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\r\n        _this = _super.call(this, options) || this;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.surface_ = options.surface !== undefined ? options.surface : false;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.curve_ = options.curve !== undefined ? options.curve : false;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.multiCurve_ = options.multiCurve !== undefined ?\r\n            options.multiCurve : true;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.multiSurface_ = options.multiSurface !== undefined ?\r\n            options.multiSurface : true;\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        _this.schemaLocation = options.schemaLocation ?\r\n            options.schemaLocation : schemaLocation;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.hasZ = options.hasZ !== undefined ?\r\n            options.hasZ : false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {MultiLineString|undefined} MultiLineString.\r\n     */\r\n    GML3.prototype.readMultiCurve_ = function (node, objectStack) {\r\n        /** @type {Array<LineString>} */\r\n        var lineStrings = pushParseAndPop([], this.MULTICURVE_PARSERS_, node, objectStack, this);\r\n        if (lineStrings) {\r\n            var multiLineString = new MultiLineString(lineStrings);\r\n            return multiLineString;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {MultiPolygon|undefined} MultiPolygon.\r\n     */\r\n    GML3.prototype.readMultiSurface_ = function (node, objectStack) {\r\n        /** @type {Array<Polygon>} */\r\n        var polygons = pushParseAndPop([], this.MULTISURFACE_PARSERS_, node, objectStack, this);\r\n        if (polygons) {\r\n            return new MultiPolygon(polygons);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.curveMemberParser_ = function (node, objectStack) {\r\n        parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.surfaceMemberParser_ = function (node, objectStack) {\r\n        parseNode(this.SURFACEMEMBER_PARSERS_, node, objectStack, this);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {Array<(Array<number>)>|undefined} flat coordinates.\r\n     */\r\n    GML3.prototype.readPatch_ = function (node, objectStack) {\r\n        return pushParseAndPop([null], this.PATCHES_PARSERS_, node, objectStack, this);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {Array<number>|undefined} flat coordinates.\r\n     */\r\n    GML3.prototype.readSegment_ = function (node, objectStack) {\r\n        return pushParseAndPop([null], this.SEGMENTS_PARSERS_, node, objectStack, this);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {Array<(Array<number>)>|undefined} flat coordinates.\r\n     */\r\n    GML3.prototype.readPolygonPatch_ = function (node, objectStack) {\r\n        return pushParseAndPop([null], this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {Array<number>|undefined} flat coordinates.\r\n     */\r\n    GML3.prototype.readLineStringSegment_ = function (node, objectStack) {\r\n        return pushParseAndPop([null], this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.interiorParser_ = function (node, objectStack) {\r\n        /** @type {Array<number>|undefined} */\r\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\r\n        if (flatLinearRing) {\r\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\r\n            flatLinearRings.push(flatLinearRing);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.exteriorParser_ = function (node, objectStack) {\r\n        /** @type {Array<number>|undefined} */\r\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\r\n        if (flatLinearRing) {\r\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\r\n            flatLinearRings[0] = flatLinearRing;\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {Polygon|undefined} Polygon.\r\n     */\r\n    GML3.prototype.readSurface_ = function (node, objectStack) {\r\n        /** @type {Array<Array<number>>} */\r\n        var flatLinearRings = pushParseAndPop([null], this.SURFACE_PARSERS_, node, objectStack, this);\r\n        if (flatLinearRings && flatLinearRings[0]) {\r\n            var flatCoordinates = flatLinearRings[0];\r\n            var ends = [flatCoordinates.length];\r\n            var i = void 0, ii = void 0;\r\n            for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\r\n                extend(flatCoordinates, flatLinearRings[i]);\r\n                ends.push(flatCoordinates.length);\r\n            }\r\n            return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {LineString|undefined} LineString.\r\n     */\r\n    GML3.prototype.readCurve_ = function (node, objectStack) {\r\n        /** @type {Array<number>} */\r\n        var flatCoordinates = pushParseAndPop([null], this.CURVE_PARSERS_, node, objectStack, this);\r\n        if (flatCoordinates) {\r\n            var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\r\n            return lineString;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {import(\"../extent.js\").Extent|undefined} Envelope.\r\n     */\r\n    GML3.prototype.readEnvelope_ = function (node, objectStack) {\r\n        /** @type {Array<number>} */\r\n        var flatCoordinates = pushParseAndPop([null], this.ENVELOPE_PARSERS_, node, objectStack, this);\r\n        return createOrUpdate(flatCoordinates[1][0], flatCoordinates[1][1], flatCoordinates[2][0], flatCoordinates[2][1]);\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {Array<number>|undefined} Flat coordinates.\r\n     */\r\n    GML3.prototype.readFlatPos_ = function (node, objectStack) {\r\n        var s = getAllTextContent(node, false);\r\n        var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\r\n        /** @type {Array<number>} */\r\n        var flatCoordinates = [];\r\n        var m;\r\n        while ((m = re.exec(s))) {\r\n            flatCoordinates.push(parseFloat(m[1]));\r\n            s = s.substr(m[0].length);\r\n        }\r\n        if (s !== '') {\r\n            return undefined;\r\n        }\r\n        var context = objectStack[0];\r\n        var containerSrs = context['srsName'];\r\n        var axisOrientation = 'enu';\r\n        if (containerSrs) {\r\n            var proj = getProjection(containerSrs);\r\n            axisOrientation = proj.getAxisOrientation();\r\n        }\r\n        if (axisOrientation === 'neu') {\r\n            var i = void 0, ii = void 0;\r\n            for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\r\n                var y = flatCoordinates[i];\r\n                var x = flatCoordinates[i + 1];\r\n                flatCoordinates[i] = x;\r\n                flatCoordinates[i + 1] = y;\r\n            }\r\n        }\r\n        var len = flatCoordinates.length;\r\n        if (len == 2) {\r\n            flatCoordinates.push(0);\r\n        }\r\n        if (len === 0) {\r\n            return undefined;\r\n        }\r\n        return flatCoordinates;\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {Array<number>|undefined} Flat coordinates.\r\n     */\r\n    GML3.prototype.readFlatPosList_ = function (node, objectStack) {\r\n        var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\r\n        var context = objectStack[0];\r\n        var containerSrs = context['srsName'];\r\n        var contextDimension = context['srsDimension'];\r\n        var axisOrientation = 'enu';\r\n        if (containerSrs) {\r\n            var proj = getProjection(containerSrs);\r\n            axisOrientation = proj.getAxisOrientation();\r\n        }\r\n        var coords = s.split(/\\s+/);\r\n        // The \"dimension\" attribute is from the GML 3.0.1 spec.\r\n        var dim = 2;\r\n        if (node.getAttribute('srsDimension')) {\r\n            dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\r\n        }\r\n        else if (node.getAttribute('dimension')) {\r\n            dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\r\n        }\r\n        else if ( /** @type {Element} */(node.parentNode).getAttribute('srsDimension')) {\r\n            dim = readNonNegativeIntegerString(\r\n            /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'));\r\n        }\r\n        else if (contextDimension) {\r\n            dim = readNonNegativeIntegerString(contextDimension);\r\n        }\r\n        var x, y, z;\r\n        var flatCoordinates = [];\r\n        for (var i = 0, ii = coords.length; i < ii; i += dim) {\r\n            x = parseFloat(coords[i]);\r\n            y = parseFloat(coords[i + 1]);\r\n            z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\r\n            if (axisOrientation.substr(0, 2) === 'en') {\r\n                flatCoordinates.push(x, y, z);\r\n            }\r\n            else {\r\n                flatCoordinates.push(y, x, z);\r\n            }\r\n        }\r\n        return flatCoordinates;\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {import(\"../geom/Point.js\").default} value Point geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.writePos_ = function (node, value, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var hasZ = context['hasZ'];\r\n        var srsDimension = hasZ ? '3' : '2';\r\n        node.setAttribute('srsDimension', srsDimension);\r\n        var srsName = context['srsName'];\r\n        var axisOrientation = 'enu';\r\n        if (srsName) {\r\n            axisOrientation = getProjection(srsName).getAxisOrientation();\r\n        }\r\n        var point = value.getCoordinates();\r\n        var coords;\r\n        // only 2d for simple features profile\r\n        if (axisOrientation.substr(0, 2) === 'en') {\r\n            coords = (point[0] + ' ' + point[1]);\r\n        }\r\n        else {\r\n            coords = (point[1] + ' ' + point[0]);\r\n        }\r\n        if (hasZ) {\r\n            // For newly created points, Z can be undefined.\r\n            var z = point[2] || 0;\r\n            coords += ' ' + z;\r\n        }\r\n        writeStringTextNode(node, coords);\r\n    };\r\n    /**\r\n     * @param {Array<number>} point Point geometry.\r\n     * @param {string=} opt_srsName Optional srsName\r\n     * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\r\n     * @return {string} The coords string.\r\n     * @private\r\n     */\r\n    GML3.prototype.getCoords_ = function (point, opt_srsName, opt_hasZ) {\r\n        var axisOrientation = 'enu';\r\n        if (opt_srsName) {\r\n            axisOrientation = getProjection(opt_srsName).getAxisOrientation();\r\n        }\r\n        var coords = ((axisOrientation.substr(0, 2) === 'en') ?\r\n            point[0] + ' ' + point[1] :\r\n            point[1] + ' ' + point[0]);\r\n        if (opt_hasZ) {\r\n            // For newly created points, Z can be undefined.\r\n            var z = point[2] || 0;\r\n            coords += ' ' + z;\r\n        }\r\n        return coords;\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.writePosList_ = function (node, value, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var hasZ = context['hasZ'];\r\n        var srsDimension = hasZ ? '3' : '2';\r\n        node.setAttribute('srsDimension', srsDimension);\r\n        var srsName = context['srsName'];\r\n        // only 2d for simple features profile\r\n        var points = value.getCoordinates();\r\n        var len = points.length;\r\n        var parts = new Array(len);\r\n        var point;\r\n        for (var i = 0; i < len; ++i) {\r\n            point = points[i];\r\n            parts[i] = this.getCoords_(point, srsName, hasZ);\r\n        }\r\n        writeStringTextNode(node, parts.join(' '));\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.writePoint_ = function (node, geometry, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var srsName = context['srsName'];\r\n        if (srsName) {\r\n            node.setAttribute('srsName', srsName);\r\n        }\r\n        var pos = createElementNS(node.namespaceURI, 'pos');\r\n        node.appendChild(pos);\r\n        this.writePos_(pos, geometry, objectStack);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     */\r\n    GML3.prototype.writeEnvelope = function (node, extent, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var srsName = context['srsName'];\r\n        if (srsName) {\r\n            node.setAttribute('srsName', srsName);\r\n        }\r\n        var keys = ['lowerCorner', 'upperCorner'];\r\n        var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\r\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), this.ENVELOPE_SERIALIZERS_, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, keys, this);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.writeLinearRing_ = function (node, geometry, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var srsName = context['srsName'];\r\n        if (srsName) {\r\n            node.setAttribute('srsName', srsName);\r\n        }\r\n        var posList = createElementNS(node.namespaceURI, 'posList');\r\n        node.appendChild(posList);\r\n        this.writePosList_(posList, geometry, objectStack);\r\n    };\r\n    /**\r\n     * @param {*} value Value.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @param {string=} opt_nodeName Node name.\r\n     * @return {Node} Node.\r\n     * @private\r\n     */\r\n    GML3.prototype.RING_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var parentNode = context.node;\r\n        var exteriorWritten = context['exteriorWritten'];\r\n        if (exteriorWritten === undefined) {\r\n            context['exteriorWritten'] = true;\r\n        }\r\n        return createElementNS(parentNode.namespaceURI, exteriorWritten !== undefined ? 'interior' : 'exterior');\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Polygon} geometry Polygon geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.writeSurfaceOrPolygon_ = function (node, geometry, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var hasZ = context['hasZ'];\r\n        var srsName = context['srsName'];\r\n        if (node.nodeName !== 'PolygonPatch' && srsName) {\r\n            node.setAttribute('srsName', srsName);\r\n        }\r\n        if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\r\n            var rings = geometry.getLinearRings();\r\n            pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.RING_SERIALIZERS_, this.RING_NODE_FACTORY_, rings, objectStack, undefined, this);\r\n        }\r\n        else if (node.nodeName === 'Surface') {\r\n            var patches = createElementNS(node.namespaceURI, 'patches');\r\n            node.appendChild(patches);\r\n            this.writeSurfacePatches_(patches, geometry, objectStack);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {LineString} geometry LineString geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.writeCurveOrLineString_ = function (node, geometry, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var srsName = context['srsName'];\r\n        if (node.nodeName !== 'LineStringSegment' && srsName) {\r\n            node.setAttribute('srsName', srsName);\r\n        }\r\n        if (node.nodeName === 'LineString' ||\r\n            node.nodeName === 'LineStringSegment') {\r\n            var posList = createElementNS(node.namespaceURI, 'posList');\r\n            node.appendChild(posList);\r\n            this.writePosList_(posList, geometry, objectStack);\r\n        }\r\n        else if (node.nodeName === 'Curve') {\r\n            var segments = createElementNS(node.namespaceURI, 'segments');\r\n            node.appendChild(segments);\r\n            this.writeCurveSegments_(segments, geometry, objectStack);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {MultiPolygon} geometry MultiPolygon geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.writeMultiSurfaceOrPolygon_ = function (node, geometry, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var hasZ = context['hasZ'];\r\n        var srsName = context['srsName'];\r\n        var surface = context['surface'];\r\n        if (srsName) {\r\n            node.setAttribute('srsName', srsName);\r\n        }\r\n        var polygons = geometry.getPolygons();\r\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, surface: surface }, this.SURFACEORPOLYGONMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons, objectStack, undefined, this);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.writeMultiPoint_ = function (node, geometry, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var srsName = context['srsName'];\r\n        var hasZ = context['hasZ'];\r\n        if (srsName) {\r\n            node.setAttribute('srsName', srsName);\r\n        }\r\n        var points = geometry.getPoints();\r\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.POINTMEMBER_SERIALIZERS_, makeSimpleNodeFactory('pointMember'), points, objectStack, undefined, this);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {MultiLineString} geometry MultiLineString geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.writeMultiCurveOrLineString_ = function (node, geometry, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var hasZ = context['hasZ'];\r\n        var srsName = context['srsName'];\r\n        var curve = context['curve'];\r\n        if (srsName) {\r\n            node.setAttribute('srsName', srsName);\r\n        }\r\n        var lines = geometry.getLineStrings();\r\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, curve: curve }, this.LINESTRINGORCURVEMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines, objectStack, undefined, this);\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.writeRing_ = function (node, ring, objectStack) {\r\n        var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\r\n        node.appendChild(linearRing);\r\n        this.writeLinearRing_(linearRing, ring, objectStack);\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {Polygon} polygon Polygon geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.writeSurfaceOrPolygonMember_ = function (node, polygon, objectStack) {\r\n        var child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\r\n        if (child) {\r\n            node.appendChild(child);\r\n            this.writeSurfaceOrPolygon_(child, polygon, objectStack);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {import(\"../geom/Point.js\").default} point Point geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.writePointMember_ = function (node, point, objectStack) {\r\n        var child = createElementNS(node.namespaceURI, 'Point');\r\n        node.appendChild(child);\r\n        this.writePoint_(child, point, objectStack);\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {LineString} line LineString geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.writeLineStringOrCurveMember_ = function (node, line, objectStack) {\r\n        var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\r\n        if (child) {\r\n            node.appendChild(child);\r\n            this.writeCurveOrLineString_(child, line, objectStack);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {Polygon} polygon Polygon geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.writeSurfacePatches_ = function (node, polygon, objectStack) {\r\n        var child = createElementNS(node.namespaceURI, 'PolygonPatch');\r\n        node.appendChild(child);\r\n        this.writeSurfaceOrPolygon_(child, polygon, objectStack);\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {LineString} line LineString geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.writeCurveSegments_ = function (node, line, objectStack) {\r\n        var child = createElementNS(node.namespaceURI, 'LineStringSegment');\r\n        node.appendChild(child);\r\n        this.writeCurveOrLineString_(child, line, objectStack);\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     */\r\n    GML3.prototype.writeGeometryElement = function (node, geometry, objectStack) {\r\n        var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\r\n        var item = assign({}, context);\r\n        item['node'] = node;\r\n        var value;\r\n        if (Array.isArray(geometry)) {\r\n            value = transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\r\n        }\r\n        else {\r\n            value = transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\r\n        }\r\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), this.GEOMETRY_SERIALIZERS_, this.GEOMETRY_NODE_FACTORY_, [value], objectStack, undefined, this);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     */\r\n    GML3.prototype.writeFeatureElement = function (node, feature, objectStack) {\r\n        var fid = feature.getId();\r\n        if (fid) {\r\n            node.setAttribute('fid', /** @type {string} */ (fid));\r\n        }\r\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n        var featureNS = context['featureNS'];\r\n        var geometryName = feature.getGeometryName();\r\n        if (!context.serializers) {\r\n            context.serializers = {};\r\n            context.serializers[featureNS] = {};\r\n        }\r\n        var properties = feature.getProperties();\r\n        var keys = [];\r\n        var values = [];\r\n        for (var key in properties) {\r\n            var value = properties[key];\r\n            if (value !== null) {\r\n                keys.push(key);\r\n                values.push(value);\r\n                if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\r\n                    if (!(key in context.serializers[featureNS])) {\r\n                        context.serializers[featureNS][key] = makeChildAppender(this.writeGeometryElement, this);\r\n                    }\r\n                }\r\n                else {\r\n                    if (!(key in context.serializers[featureNS])) {\r\n                        context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var item = assign({}, context);\r\n        item.node = node;\r\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), context.serializers, makeSimpleNodeFactory(undefined, featureNS), values, objectStack, keys);\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML3.prototype.writeFeatureMembers_ = function (node, features, objectStack) {\r\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n        var featureType = context['featureType'];\r\n        var featureNS = context['featureNS'];\r\n        /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\r\n        var serializers = {};\r\n        serializers[featureNS] = {};\r\n        serializers[featureNS][featureType] = makeChildAppender(this.writeFeatureElement, this);\r\n        var item = assign({}, context);\r\n        item.node = node;\r\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), serializers, makeSimpleNodeFactory(featureType, featureNS), features, objectStack);\r\n    };\r\n    /**\r\n     * @const\r\n     * @param {*} value Value.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @param {string=} opt_nodeName Node name.\r\n     * @return {Node|undefined} Node.\r\n     * @private\r\n     */\r\n    GML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\r\n        var parentNode = objectStack[objectStack.length - 1].node;\r\n        return createElementNS(this.namespace, MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\r\n    };\r\n    /**\r\n     * @const\r\n     * @param {*} value Value.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @param {string=} opt_nodeName Node name.\r\n     * @return {Element|undefined} Node.\r\n     * @private\r\n     */\r\n    GML3.prototype.GEOMETRY_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var multiSurface = context['multiSurface'];\r\n        var surface = context['surface'];\r\n        var curve = context['curve'];\r\n        var multiCurve = context['multiCurve'];\r\n        var nodeName;\r\n        if (!Array.isArray(value)) {\r\n            nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\r\n            if (nodeName === 'MultiPolygon' && multiSurface === true) {\r\n                nodeName = 'MultiSurface';\r\n            }\r\n            else if (nodeName === 'Polygon' && surface === true) {\r\n                nodeName = 'Surface';\r\n            }\r\n            else if (nodeName === 'LineString' && curve === true) {\r\n                nodeName = 'Curve';\r\n            }\r\n            else if (nodeName === 'MultiLineString' && multiCurve === true) {\r\n                nodeName = 'MultiCurve';\r\n            }\r\n        }\r\n        else {\r\n            nodeName = 'Envelope';\r\n        }\r\n        return createElementNS(this.namespace, nodeName);\r\n    };\r\n    /**\r\n     * Encode a geometry in GML 3.1.1 Simple Features.\r\n     *\r\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n     * @return {Node} Node.\r\n     * @override\r\n     * @api\r\n     */\r\n    GML3.prototype.writeGeometryNode = function (geometry, opt_options) {\r\n        opt_options = this.adaptOptions(opt_options);\r\n        var geom = createElementNS(this.namespace, 'geom');\r\n        var context = { node: geom, hasZ: this.hasZ, srsName: this.srsName,\r\n            curve: this.curve_, surface: this.surface_,\r\n            multiSurface: this.multiSurface_, multiCurve: this.multiCurve_ };\r\n        if (opt_options) {\r\n            assign(context, opt_options);\r\n        }\r\n        this.writeGeometryElement(geom, geometry, [context]);\r\n        return geom;\r\n    };\r\n    /**\r\n     * Encode an array of features in the GML 3.1.1 format as an XML node.\r\n     *\r\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n     * @return {Element} Node.\r\n     * @override\r\n     * @api\r\n     */\r\n    GML3.prototype.writeFeaturesNode = function (features, opt_options) {\r\n        opt_options = this.adaptOptions(opt_options);\r\n        var node = createElementNS(this.namespace, 'featureMembers');\r\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\r\n        var context = {\r\n            srsName: this.srsName,\r\n            hasZ: this.hasZ,\r\n            curve: this.curve_,\r\n            surface: this.surface_,\r\n            multiSurface: this.multiSurface_,\r\n            multiCurve: this.multiCurve_,\r\n            featureNS: this.featureNS,\r\n            featureType: this.featureType\r\n        };\r\n        if (opt_options) {\r\n            assign(context, opt_options);\r\n        }\r\n        this.writeFeatureMembers_(node, features, [context]);\r\n        return node;\r\n    };\r\n    return GML3;\r\n}(GMLBase));\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\r\n    'http://www.opengis.net/gml': {\r\n        'pos': makeReplacer(GML3.prototype.readFlatPos_),\r\n        'posList': makeReplacer(GML3.prototype.readFlatPosList_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\r\n    'http://www.opengis.net/gml': {\r\n        'interior': GML3.prototype.interiorParser_,\r\n        'exterior': GML3.prototype.exteriorParser_\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML3.prototype.GEOMETRY_PARSERS = {\r\n    'http://www.opengis.net/gml': {\r\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\r\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\r\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\r\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\r\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\r\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\r\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\r\n        'Surface': makeReplacer(GML3.prototype.readSurface_),\r\n        'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface_),\r\n        'Curve': makeReplacer(GML3.prototype.readCurve_),\r\n        'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve_),\r\n        'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.MULTICURVE_PARSERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser_),\r\n        'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.MULTISURFACE_PARSERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser_),\r\n        'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\r\n        'Curve': makeArrayPusher(GML3.prototype.readCurve_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\r\n        'Surface': makeArrayPusher(GML3.prototype.readSurface_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.SURFACE_PARSERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'patches': makeReplacer(GML3.prototype.readPatch_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.CURVE_PARSERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'segments': makeReplacer(GML3.prototype.readSegment_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.ENVELOPE_PARSERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList_),\r\n        'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.PATCHES_PARSERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.SEGMENTS_PARSERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'LineStringSegment': makeReplacer(GML3.prototype.readLineStringSegment_)\r\n    }\r\n};\r\n/**\r\n * Encode an array of features in GML 3.1.1 Simple Features.\r\n *\r\n * @function\r\n * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n * @return {string} Result.\r\n * @api\r\n */\r\nGML3.prototype.writeFeatures;\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.RING_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'exterior': makeChildAppender(GML3.prototype.writeRing_),\r\n        'interior': makeChildAppender(GML3.prototype.writeRing_)\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'lowerCorner': makeChildAppender(writeStringTextNode),\r\n        'upperCorner': makeChildAppender(writeStringTextNode)\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'surfaceMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_),\r\n        'polygonMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_)\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'pointMember': makeChildAppender(GML3.prototype.writePointMember_)\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'lineStringMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_),\r\n        'curveMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_)\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\r\n        'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\r\n        'Point': makeChildAppender(GML3.prototype.writePoint_),\r\n        'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint_),\r\n        'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\r\n        'MultiLineString': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\r\n        'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing_),\r\n        'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\r\n        'MultiPolygon': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\r\n        'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\r\n        'MultiSurface': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\r\n        'Envelope': makeChildAppender(GML3.prototype.writeEnvelope)\r\n    }\r\n};\r\nexport default GML3;\r\n//# sourceMappingURL=GML3.js.map","/**\r\n * @module ol/format/GML\r\n */\r\nimport GML3 from './GML3.js';\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the GML format\r\n * version 3.1.1.\r\n * Currently only supports GML 3.1.1 Simple Features profile.\r\n *\r\n * @param {import(\"./GMLBase.js\").Options=} opt_options\r\n *     Optional configuration object.\r\n * @api\r\n */\r\nvar GML = GML3;\r\n/**\r\n * Encode an array of features in GML 3.1.1 Simple Features.\r\n *\r\n * @function\r\n * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n * @return {string} Result.\r\n * @api\r\n */\r\nGML.prototype.writeFeatures;\r\n/**\r\n * Encode an array of features in the GML 3.1.1 format as an XML node.\r\n *\r\n * @function\r\n * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n * @return {Node} Node.\r\n * @api\r\n */\r\nGML.prototype.writeFeaturesNode;\r\nexport default GML;\r\n//# sourceMappingURL=GML.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/GML2\r\n */\r\nimport { createOrUpdate } from '../extent.js';\r\nimport { transformExtentWithOptions, transformGeometryWithOptions } from './Feature.js';\r\nimport GMLBase, { GMLNS } from './GMLBase.js';\r\nimport { writeStringTextNode } from './xsd.js';\r\nimport { assign } from '../obj.js';\r\nimport { get as getProjection } from '../proj.js';\r\nimport { createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender, makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop } from '../xml.js';\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\r\n/**\r\n * @const\r\n * @type {Object<string, string>}\r\n */\r\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\r\n    'MultiLineString': 'lineStringMember',\r\n    'MultiCurve': 'curveMember',\r\n    'MultiPolygon': 'polygonMember',\r\n    'MultiSurface': 'surfaceMember'\r\n};\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the GML format,\r\n * version 2.1.2.\r\n *\r\n * @api\r\n */\r\nvar GML2 = /** @class */ (function (_super) {\r\n    __extends(GML2, _super);\r\n    /**\r\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\r\n     */\r\n    function GML2(opt_options) {\r\n        var _this = this;\r\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\r\n        _this = _super.call(this, options) || this;\r\n        _this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] =\r\n            makeArrayPusher(_this.readFeaturesInternal);\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        _this.schemaLocation = options.schemaLocation ?\r\n            options.schemaLocation : schemaLocation;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {Array<number>|undefined} Flat coordinates.\r\n     */\r\n    GML2.prototype.readFlatCoordinates_ = function (node, objectStack) {\r\n        var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\r\n        var context = /** @type {import(\"../xml.js\").NodeStackItem} */ (objectStack[0]);\r\n        var containerSrs = context['srsName'];\r\n        var axisOrientation = 'enu';\r\n        if (containerSrs) {\r\n            var proj = getProjection(containerSrs);\r\n            if (proj) {\r\n                axisOrientation = proj.getAxisOrientation();\r\n            }\r\n        }\r\n        var coordsGroups = s.trim().split(/\\s+/);\r\n        var flatCoordinates = [];\r\n        for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\r\n            var coords = coordsGroups[i].split(/,+/);\r\n            var x = parseFloat(coords[0]);\r\n            var y = parseFloat(coords[1]);\r\n            var z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\r\n            if (axisOrientation.substr(0, 2) === 'en') {\r\n                flatCoordinates.push(x, y, z);\r\n            }\r\n            else {\r\n                flatCoordinates.push(y, x, z);\r\n            }\r\n        }\r\n        return flatCoordinates;\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {import(\"../extent.js\").Extent|undefined} Envelope.\r\n     */\r\n    GML2.prototype.readBox_ = function (node, objectStack) {\r\n        /** @type {Array<number>} */\r\n        var flatCoordinates = pushParseAndPop([null], this.BOX_PARSERS_, node, objectStack, this);\r\n        return createOrUpdate(flatCoordinates[1][0], flatCoordinates[1][1], flatCoordinates[1][3], flatCoordinates[1][4]);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.innerBoundaryIsParser_ = function (node, objectStack) {\r\n        /** @type {Array<number>|undefined} */\r\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\r\n        if (flatLinearRing) {\r\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\r\n            flatLinearRings.push(flatLinearRing);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.outerBoundaryIsParser_ = function (node, objectStack) {\r\n        /** @type {Array<number>|undefined} */\r\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\r\n        if (flatLinearRing) {\r\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\r\n            flatLinearRings[0] = flatLinearRing;\r\n        }\r\n    };\r\n    /**\r\n     * @const\r\n     * @param {*} value Value.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @param {string=} opt_nodeName Node name.\r\n     * @return {Element|undefined} Node.\r\n     * @private\r\n     */\r\n    GML2.prototype.GEOMETRY_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var multiSurface = context['multiSurface'];\r\n        var surface = context['surface'];\r\n        var multiCurve = context['multiCurve'];\r\n        var nodeName;\r\n        if (!Array.isArray(value)) {\r\n            nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\r\n            if (nodeName === 'MultiPolygon' && multiSurface === true) {\r\n                nodeName = 'MultiSurface';\r\n            }\r\n            else if (nodeName === 'Polygon' && surface === true) {\r\n                nodeName = 'Surface';\r\n            }\r\n            else if (nodeName === 'MultiLineString' && multiCurve === true) {\r\n                nodeName = 'MultiCurve';\r\n            }\r\n        }\r\n        else {\r\n            nodeName = 'Envelope';\r\n        }\r\n        return createElementNS('http://www.opengis.net/gml', nodeName);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     */\r\n    GML2.prototype.writeFeatureElement = function (node, feature, objectStack) {\r\n        var fid = feature.getId();\r\n        if (fid) {\r\n            node.setAttribute('fid', /** @type {string} */ (fid));\r\n        }\r\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n        var featureNS = context['featureNS'];\r\n        var geometryName = feature.getGeometryName();\r\n        if (!context.serializers) {\r\n            context.serializers = {};\r\n            context.serializers[featureNS] = {};\r\n        }\r\n        var properties = feature.getProperties();\r\n        var keys = [];\r\n        var values = [];\r\n        for (var key in properties) {\r\n            var value = properties[key];\r\n            if (value !== null) {\r\n                keys.push(key);\r\n                values.push(value);\r\n                if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\r\n                    if (!(key in context.serializers[featureNS])) {\r\n                        context.serializers[featureNS][key] = makeChildAppender(this.writeGeometryElement, this);\r\n                    }\r\n                }\r\n                else {\r\n                    if (!(key in context.serializers[featureNS])) {\r\n                        context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var item = assign({}, context);\r\n        item.node = node;\r\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), context.serializers, makeSimpleNodeFactory(undefined, featureNS), values, objectStack, keys);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.writeCurveOrLineString_ = function (node, geometry, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var srsName = context['srsName'];\r\n        if (node.nodeName !== 'LineStringSegment' && srsName) {\r\n            node.setAttribute('srsName', srsName);\r\n        }\r\n        if (node.nodeName === 'LineString' ||\r\n            node.nodeName === 'LineStringSegment') {\r\n            var coordinates = this.createCoordinatesNode_(node.namespaceURI);\r\n            node.appendChild(coordinates);\r\n            this.writeCoordinates_(coordinates, geometry, objectStack);\r\n        }\r\n        else if (node.nodeName === 'Curve') {\r\n            var segments = createElementNS(node.namespaceURI, 'segments');\r\n            node.appendChild(segments);\r\n            this.writeCurveSegments_(segments, geometry, objectStack);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.writeLineStringOrCurveMember_ = function (node, line, objectStack) {\r\n        var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\r\n        if (child) {\r\n            node.appendChild(child);\r\n            this.writeCurveOrLineString_(child, line, objectStack);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.writeMultiCurveOrLineString_ = function (node, geometry, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var hasZ = context['hasZ'];\r\n        var srsName = context['srsName'];\r\n        var curve = context['curve'];\r\n        if (srsName) {\r\n            node.setAttribute('srsName', srsName);\r\n        }\r\n        var lines = geometry.getLineStrings();\r\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, curve: curve }, this.LINESTRINGORCURVEMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines, objectStack, undefined, this);\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     */\r\n    GML2.prototype.writeGeometryElement = function (node, geometry, objectStack) {\r\n        var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\r\n        var item = assign({}, context);\r\n        item['node'] = node;\r\n        var value;\r\n        if (Array.isArray(geometry)) {\r\n            value = transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\r\n        }\r\n        else {\r\n            value = transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\r\n        }\r\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), this.GEOMETRY_SERIALIZERS_, this.GEOMETRY_NODE_FACTORY_, [value], objectStack, undefined, this);\r\n    };\r\n    /**\r\n     * @param {string} namespaceURI XML namespace.\r\n     * @returns {Element} coordinates node.\r\n     * @private\r\n     */\r\n    GML2.prototype.createCoordinatesNode_ = function (namespaceURI) {\r\n        var coordinates = createElementNS(namespaceURI, 'coordinates');\r\n        coordinates.setAttribute('decimal', '.');\r\n        coordinates.setAttribute('cs', ',');\r\n        coordinates.setAttribute('ts', ' ');\r\n        return coordinates;\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.writeCoordinates_ = function (node, value, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var hasZ = context['hasZ'];\r\n        var srsName = context['srsName'];\r\n        // only 2d for simple features profile\r\n        var points = value.getCoordinates();\r\n        var len = points.length;\r\n        var parts = new Array(len);\r\n        for (var i = 0; i < len; ++i) {\r\n            var point = points[i];\r\n            parts[i] = this.getCoords_(point, srsName, hasZ);\r\n        }\r\n        writeStringTextNode(node, parts.join(' '));\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.writeCurveSegments_ = function (node, line, objectStack) {\r\n        var child = createElementNS(node.namespaceURI, 'LineStringSegment');\r\n        node.appendChild(child);\r\n        this.writeCurveOrLineString_(child, line, objectStack);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.writeSurfaceOrPolygon_ = function (node, geometry, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var hasZ = context['hasZ'];\r\n        var srsName = context['srsName'];\r\n        if (node.nodeName !== 'PolygonPatch' && srsName) {\r\n            node.setAttribute('srsName', srsName);\r\n        }\r\n        if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\r\n            var rings = geometry.getLinearRings();\r\n            pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.RING_SERIALIZERS_, this.RING_NODE_FACTORY_, rings, objectStack, undefined, this);\r\n        }\r\n        else if (node.nodeName === 'Surface') {\r\n            var patches = createElementNS(node.namespaceURI, 'patches');\r\n            node.appendChild(patches);\r\n            this.writeSurfacePatches_(patches, geometry, objectStack);\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} value Value.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @param {string=} opt_nodeName Node name.\r\n     * @return {Node} Node.\r\n     * @private\r\n     */\r\n    GML2.prototype.RING_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var parentNode = context.node;\r\n        var exteriorWritten = context['exteriorWritten'];\r\n        if (exteriorWritten === undefined) {\r\n            context['exteriorWritten'] = true;\r\n        }\r\n        return createElementNS(parentNode.namespaceURI, exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.writeSurfacePatches_ = function (node, polygon, objectStack) {\r\n        var child = createElementNS(node.namespaceURI, 'PolygonPatch');\r\n        node.appendChild(child);\r\n        this.writeSurfaceOrPolygon_(child, polygon, objectStack);\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.writeRing_ = function (node, ring, objectStack) {\r\n        var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\r\n        node.appendChild(linearRing);\r\n        this.writeLinearRing_(linearRing, ring, objectStack);\r\n    };\r\n    /**\r\n     * @param {Array<number>} point Point geometry.\r\n     * @param {string=} opt_srsName Optional srsName\r\n     * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\r\n     * @return {string} The coords string.\r\n     * @private\r\n     */\r\n    GML2.prototype.getCoords_ = function (point, opt_srsName, opt_hasZ) {\r\n        var axisOrientation = 'enu';\r\n        if (opt_srsName) {\r\n            axisOrientation = getProjection(opt_srsName).getAxisOrientation();\r\n        }\r\n        var coords = ((axisOrientation.substr(0, 2) === 'en') ?\r\n            point[0] + ',' + point[1] :\r\n            point[1] + ',' + point[0]);\r\n        if (opt_hasZ) {\r\n            // For newly created points, Z can be undefined.\r\n            var z = point[2] || 0;\r\n            coords += ',' + z;\r\n        }\r\n        return coords;\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.writePoint_ = function (node, geometry, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var hasZ = context['hasZ'];\r\n        var srsName = context['srsName'];\r\n        if (srsName) {\r\n            node.setAttribute('srsName', srsName);\r\n        }\r\n        var coordinates = this.createCoordinatesNode_(node.namespaceURI);\r\n        node.appendChild(coordinates);\r\n        var point = geometry.getCoordinates();\r\n        var coord = this.getCoords_(point, srsName, hasZ);\r\n        writeStringTextNode(coordinates, coord);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.writeMultiPoint_ = function (node, geometry, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var hasZ = context['hasZ'];\r\n        var srsName = context['srsName'];\r\n        if (srsName) {\r\n            node.setAttribute('srsName', srsName);\r\n        }\r\n        var points = geometry.getPoints();\r\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.POINTMEMBER_SERIALIZERS_, makeSimpleNodeFactory('pointMember'), points, objectStack, undefined, this);\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {import(\"../geom/Point.js\").default} point Point geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.writePointMember_ = function (node, point, objectStack) {\r\n        var child = createElementNS(node.namespaceURI, 'Point');\r\n        node.appendChild(child);\r\n        this.writePoint_(child, point, objectStack);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.writeLinearRing_ = function (node, geometry, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var srsName = context['srsName'];\r\n        if (srsName) {\r\n            node.setAttribute('srsName', srsName);\r\n        }\r\n        var coordinates = this.createCoordinatesNode_(node.namespaceURI);\r\n        node.appendChild(coordinates);\r\n        this.writeCoordinates_(coordinates, geometry, objectStack);\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.writeMultiSurfaceOrPolygon_ = function (node, geometry, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var hasZ = context['hasZ'];\r\n        var srsName = context['srsName'];\r\n        var surface = context['surface'];\r\n        if (srsName) {\r\n            node.setAttribute('srsName', srsName);\r\n        }\r\n        var polygons = geometry.getPolygons();\r\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, surface: surface }, this.SURFACEORPOLYGONMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons, objectStack, undefined, this);\r\n    };\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.writeSurfaceOrPolygonMember_ = function (node, polygon, objectStack) {\r\n        var child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\r\n        if (child) {\r\n            node.appendChild(child);\r\n            this.writeSurfaceOrPolygon_(child, polygon, objectStack);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {Array<*>} objectStack Node stack.\r\n     * @private\r\n     */\r\n    GML2.prototype.writeEnvelope = function (node, extent, objectStack) {\r\n        var context = objectStack[objectStack.length - 1];\r\n        var srsName = context['srsName'];\r\n        if (srsName) {\r\n            node.setAttribute('srsName', srsName);\r\n        }\r\n        var keys = ['lowerCorner', 'upperCorner'];\r\n        var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\r\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), this.ENVELOPE_SERIALIZERS_, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, keys, this);\r\n    };\r\n    /**\r\n     * @const\r\n     * @param {*} value Value.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @param {string=} opt_nodeName Node name.\r\n     * @return {Node|undefined} Node.\r\n     * @private\r\n     */\r\n    GML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\r\n        var parentNode = objectStack[objectStack.length - 1].node;\r\n        return createElementNS('http://www.opengis.net/gml', MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\r\n    };\r\n    return GML2;\r\n}(GMLBase));\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\r\n    'http://www.opengis.net/gml': {\r\n        'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\r\n    'http://www.opengis.net/gml': {\r\n        'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\r\n        'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML2.prototype.BOX_PARSERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML2.prototype.GEOMETRY_PARSERS = {\r\n    'http://www.opengis.net/gml': {\r\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\r\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\r\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\r\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\r\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\r\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\r\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\r\n        'Box': makeReplacer(GML2.prototype.readBox_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString_),\r\n        'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString_),\r\n        'Point': makeChildAppender(GML2.prototype.writePoint_),\r\n        'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint_),\r\n        'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString_),\r\n        'MultiLineString': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString_),\r\n        'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing_),\r\n        'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon_),\r\n        'MultiPolygon': makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon_),\r\n        'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon_),\r\n        'MultiSurface': makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon_),\r\n        'Envelope': makeChildAppender(GML2.prototype.writeEnvelope)\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'lineStringMember': makeChildAppender(GML2.prototype.writeLineStringOrCurveMember_),\r\n        'curveMember': makeChildAppender(GML2.prototype.writeLineStringOrCurveMember_)\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.RING_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\r\n        'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'pointMember': makeChildAppender(GML2.prototype.writePointMember_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'surfaceMember': makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember_),\r\n        'polygonMember': makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember_)\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml': {\r\n        'lowerCorner': makeChildAppender(writeStringTextNode),\r\n        'upperCorner': makeChildAppender(writeStringTextNode)\r\n    }\r\n};\r\nexport default GML2;\r\n//# sourceMappingURL=GML2.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/GML32\r\n */\r\nimport GML3 from './GML3.js';\r\nimport GMLBase from './GMLBase.js';\r\nimport { makeArrayPusher, makeReplacer, makeChildAppender } from '../xml.js';\r\nimport { writeStringTextNode } from '../format/xsd.js';\r\n/**\r\n * @classdesc Feature format for reading and writing data in the GML format\r\n *            version 3.2.1.\r\n * @api\r\n */\r\nvar GML32 = /** @class */ (function (_super) {\r\n    __extends(GML32, _super);\r\n    /**\r\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\r\n     */\r\n    function GML32(opt_options) {\r\n        var _this = this;\r\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\r\n        _this = _super.call(this, options) || this;\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        _this.schemaLocation = options.schemaLocation ?\r\n            options.schemaLocation : _this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\r\n        return _this;\r\n    }\r\n    return GML32;\r\n}(GML3));\r\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'pos': makeReplacer(GML3.prototype.readFlatPos_),\r\n        'posList': makeReplacer(GML3.prototype.readFlatPosList_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'interior': GML3.prototype.interiorParser_,\r\n        'exterior': GML3.prototype.exteriorParser_\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML32.prototype.GEOMETRY_PARSERS = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\r\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\r\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\r\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\r\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\r\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\r\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\r\n        'Surface': makeReplacer(GML32.prototype.readSurface_),\r\n        'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface_),\r\n        'Curve': makeReplacer(GML32.prototype.readCurve_),\r\n        'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve_),\r\n        'Envelope': makeReplacer(GML32.prototype.readEnvelope_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.MULTICURVE_PARSERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser_),\r\n        'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.MULTISURFACE_PARSERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser_),\r\n        'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.CURVEMEMBER_PARSERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\r\n        'Curve': makeArrayPusher(GML3.prototype.readCurve_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.SURFACEMEMBER_PARSERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\r\n        'Surface': makeArrayPusher(GML3.prototype.readSurface_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.SURFACE_PARSERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'patches': makeReplacer(GML3.prototype.readPatch_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.CURVE_PARSERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'segments': makeReplacer(GML3.prototype.readSegment_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.ENVELOPE_PARSERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList_),\r\n        'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.PATCHES_PARSERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.SEGMENTS_PARSERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'LineStringSegment': makeReplacer(GML3.prototype.readLineStringSegment_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.MULTIPOINT_PARSERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\r\n        'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.MULTILINESTRING_PARSERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\r\n        'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.MULTIPOLYGON_PARSERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\r\n        'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.POINTMEMBER_PARSERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.LINESTRINGMEMBER_PARSERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.POLYGONMEMBER_PARSERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML32.prototype.RING_PARSERS = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML32.prototype.RING_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'exterior': makeChildAppender(GML3.prototype.writeRing_),\r\n        'interior': makeChildAppender(GML3.prototype.writeRing_)\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML32.prototype.ENVELOPE_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'lowerCorner': makeChildAppender(writeStringTextNode),\r\n        'upperCorner': makeChildAppender(writeStringTextNode)\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'surfaceMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_),\r\n        'polygonMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_)\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML32.prototype.POINTMEMBER_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'pointMember': makeChildAppender(GML3.prototype.writePointMember_)\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'lineStringMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_),\r\n        'curveMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_)\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML32.prototype.GEOMETRY_SERIALIZERS_ = {\r\n    'http://www.opengis.net/gml/3.2': {\r\n        'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\r\n        'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\r\n        'Point': makeChildAppender(GML32.prototype.writePoint_),\r\n        'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint_),\r\n        'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\r\n        'MultiLineString': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\r\n        'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing_),\r\n        'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\r\n        'MultiPolygon': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\r\n        'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\r\n        'MultiSurface': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\r\n        'Envelope': makeChildAppender(GML3.prototype.writeEnvelope)\r\n    }\r\n};\r\nexport default GML32;\r\n//# sourceMappingURL=GML32.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/GPX\r\n */\r\nimport Feature from '../Feature.js';\r\nimport { includes } from '../array.js';\r\nimport { transformGeometryWithOptions } from './Feature.js';\r\nimport XMLFeature from './XMLFeature.js';\r\nimport { readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode } from './xsd.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport Point from '../geom/Point.js';\r\nimport { get as getProjection } from '../proj.js';\r\nimport { createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender, makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\r\n/**\r\n * @const\r\n * @type {Array<null|string>}\r\n */\r\nvar NAMESPACE_URIS = [\r\n    null,\r\n    'http://www.topografix.com/GPX/1/0',\r\n    'http://www.topografix.com/GPX/1/1'\r\n];\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\r\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\r\n/**\r\n * @const\r\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\r\n */\r\nvar FEATURE_READER = {\r\n    'rte': readRte,\r\n    'trk': readTrk,\r\n    'wpt': readWpt\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'rte': makeArrayPusher(readRte),\r\n    'trk': makeArrayPusher(readTrk),\r\n    'wpt': makeArrayPusher(readWpt)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'text': makeObjectPropertySetter(readString, 'linkText'),\r\n    'type': makeObjectPropertySetter(readString, 'linkType')\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'rte': makeChildAppender(writeRte),\r\n    'trk': makeChildAppender(writeTrk),\r\n    'wpt': makeChildAppender(writeWpt)\r\n});\r\n/**\r\n * @typedef {Object} Options\r\n * @property {function(Feature, Node)} [readExtensions] Callback function\r\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\r\n * not store any references to the node. Note that the `extensions`\r\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\r\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\r\n * directly mapped to a feature.\r\n */\r\n/**\r\n * @typedef {Object} LayoutOptions\r\n * @property {boolean} [hasZ]\r\n * @property {boolean} [hasM]\r\n */\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the GPX format.\r\n *\r\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\r\n * feature of the source.\r\n *\r\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\r\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\r\n * waypoints are ignored.\r\n *\r\n * When writing, LineString geometries are output as routes (`<rte>`), and\r\n * MultiLineString as tracks (`<trk>`).\r\n *\r\n * @api\r\n */\r\nvar GPX = /** @class */ (function (_super) {\r\n    __extends(GPX, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function GPX(opt_options) {\r\n        var _this = _super.call(this) || this;\r\n        var options = opt_options ? opt_options : {};\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        _this.dataProjection = getProjection('EPSG:4326');\r\n        /**\r\n         * @type {function(Feature, Node): void|undefined}\r\n         * @private\r\n         */\r\n        _this.readExtensions_ = options.readExtensions;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {Array<Feature>} features List of features.\r\n     * @private\r\n     */\r\n    GPX.prototype.handleReadExtensions_ = function (features) {\r\n        if (!features) {\r\n            features = [];\r\n        }\r\n        for (var i = 0, ii = features.length; i < ii; ++i) {\r\n            var feature = features[i];\r\n            if (this.readExtensions_) {\r\n                var extensionsNode = feature.get('extensionsNode_') || null;\r\n                this.readExtensions_(feature, extensionsNode);\r\n            }\r\n            feature.set('extensionsNode_', undefined);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GPX.prototype.readFeatureFromNode = function (node, opt_options) {\r\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\r\n            return null;\r\n        }\r\n        var featureReader = FEATURE_READER[node.localName];\r\n        if (!featureReader) {\r\n            return null;\r\n        }\r\n        var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\r\n        if (!feature) {\r\n            return null;\r\n        }\r\n        this.handleReadExtensions_([feature]);\r\n        return feature;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    GPX.prototype.readFeaturesFromNode = function (node, opt_options) {\r\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\r\n            return [];\r\n        }\r\n        if (node.localName == 'gpx') {\r\n            /** @type {Array<Feature>} */\r\n            var features = pushParseAndPop([], GPX_PARSERS, node, [this.getReadOptions(node, opt_options)]);\r\n            if (features) {\r\n                this.handleReadExtensions_(features);\r\n                return features;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        }\r\n        return [];\r\n    };\r\n    /**\r\n     * Encode an array of features in the GPX format as an XML node.\r\n     * LineString geometries are output as routes (`<rte>`), and MultiLineString\r\n     * as tracks (`<trk>`).\r\n     *\r\n     * @param {Array<Feature>} features Features.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n     * @return {Node} Node.\r\n     * @override\r\n     * @api\r\n     */\r\n    GPX.prototype.writeFeaturesNode = function (features, opt_options) {\r\n        opt_options = this.adaptOptions(opt_options);\r\n        //FIXME Serialize metadata\r\n        var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\r\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\r\n        gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\r\n        gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\r\n        gpx.setAttribute('version', '1.1');\r\n        gpx.setAttribute('creator', 'OpenLayers');\r\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: gpx }), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\r\n        return gpx;\r\n    };\r\n    return GPX;\r\n}(XMLFeature));\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'name': makeObjectPropertySetter(readString),\r\n    'cmt': makeObjectPropertySetter(readString),\r\n    'desc': makeObjectPropertySetter(readString),\r\n    'src': makeObjectPropertySetter(readString),\r\n    'link': parseLink,\r\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'extensions': parseExtensions,\r\n    'type': makeObjectPropertySetter(readString),\r\n    'rtept': parseRtePt\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'ele': makeObjectPropertySetter(readDecimal),\r\n    'time': makeObjectPropertySetter(readDateTime)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'name': makeObjectPropertySetter(readString),\r\n    'cmt': makeObjectPropertySetter(readString),\r\n    'desc': makeObjectPropertySetter(readString),\r\n    'src': makeObjectPropertySetter(readString),\r\n    'link': parseLink,\r\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'type': makeObjectPropertySetter(readString),\r\n    'extensions': parseExtensions,\r\n    'trkseg': parseTrkSeg\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'trkpt': parseTrkPt\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'ele': makeObjectPropertySetter(readDecimal),\r\n    'time': makeObjectPropertySetter(readDateTime)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'ele': makeObjectPropertySetter(readDecimal),\r\n    'time': makeObjectPropertySetter(readDateTime),\r\n    'magvar': makeObjectPropertySetter(readDecimal),\r\n    'geoidheight': makeObjectPropertySetter(readDecimal),\r\n    'name': makeObjectPropertySetter(readString),\r\n    'cmt': makeObjectPropertySetter(readString),\r\n    'desc': makeObjectPropertySetter(readString),\r\n    'src': makeObjectPropertySetter(readString),\r\n    'link': parseLink,\r\n    'sym': makeObjectPropertySetter(readString),\r\n    'type': makeObjectPropertySetter(readString),\r\n    'fix': makeObjectPropertySetter(readString),\r\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'hdop': makeObjectPropertySetter(readDecimal),\r\n    'vdop': makeObjectPropertySetter(readDecimal),\r\n    'pdop': makeObjectPropertySetter(readDecimal),\r\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\r\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'extensions': parseExtensions\r\n});\r\n/**\r\n * @const\r\n * @type {Array<string>}\r\n */\r\nvar LINK_SEQUENCE = ['text', 'type'];\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'text': makeChildAppender(writeStringTextNode),\r\n    'type': makeChildAppender(writeStringTextNode)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\r\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\r\n]);\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'name': makeChildAppender(writeStringTextNode),\r\n    'cmt': makeChildAppender(writeStringTextNode),\r\n    'desc': makeChildAppender(writeStringTextNode),\r\n    'src': makeChildAppender(writeStringTextNode),\r\n    'link': makeChildAppender(writeLink),\r\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\r\n    'type': makeChildAppender(writeStringTextNode),\r\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\r\n    'ele', 'time'\r\n]);\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\r\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\r\n]);\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'name': makeChildAppender(writeStringTextNode),\r\n    'cmt': makeChildAppender(writeStringTextNode),\r\n    'desc': makeChildAppender(writeStringTextNode),\r\n    'src': makeChildAppender(writeStringTextNode),\r\n    'link': makeChildAppender(writeLink),\r\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\r\n    'type': makeChildAppender(writeStringTextNode),\r\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\r\n});\r\n/**\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'trkpt': makeChildAppender(writeWptType)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\r\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\r\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\r\n    'ageofdgpsdata', 'dgpsid'\r\n]);\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'ele': makeChildAppender(writeDecimalTextNode),\r\n    'time': makeChildAppender(writeDateTimeTextNode),\r\n    'magvar': makeChildAppender(writeDecimalTextNode),\r\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\r\n    'name': makeChildAppender(writeStringTextNode),\r\n    'cmt': makeChildAppender(writeStringTextNode),\r\n    'desc': makeChildAppender(writeStringTextNode),\r\n    'src': makeChildAppender(writeStringTextNode),\r\n    'link': makeChildAppender(writeLink),\r\n    'sym': makeChildAppender(writeStringTextNode),\r\n    'type': makeChildAppender(writeStringTextNode),\r\n    'fix': makeChildAppender(writeStringTextNode),\r\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\r\n    'hdop': makeChildAppender(writeDecimalTextNode),\r\n    'vdop': makeChildAppender(writeDecimalTextNode),\r\n    'pdop': makeChildAppender(writeDecimalTextNode),\r\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\r\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, string>}\r\n */\r\nvar GEOMETRY_TYPE_TO_NODENAME = {\r\n    'Point': 'wpt',\r\n    'LineString': 'rte',\r\n    'MultiLineString': 'trk'\r\n};\r\n/**\r\n * @param {*} value Value.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {string=} opt_nodeName Node name.\r\n * @return {Node|undefined} Node.\r\n */\r\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\r\n    var geometry = /** @type {Feature} */ (value).getGeometry();\r\n    if (geometry) {\r\n        var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\r\n        if (nodeName) {\r\n            var parentNode = objectStack[objectStack.length - 1].node;\r\n            return createElementNS(parentNode.namespaceURI, nodeName);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {LayoutOptions} layoutOptions Layout options.\r\n * @param {Element} node Node.\r\n * @param {!Object} values Values.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\r\n    flatCoordinates.push(parseFloat(node.getAttribute('lon')), parseFloat(node.getAttribute('lat')));\r\n    if ('ele' in values) {\r\n        flatCoordinates.push(/** @type {number} */ (values['ele']));\r\n        delete values['ele'];\r\n        layoutOptions.hasZ = true;\r\n    }\r\n    else {\r\n        flatCoordinates.push(0);\r\n    }\r\n    if ('time' in values) {\r\n        flatCoordinates.push(/** @type {number} */ (values['time']));\r\n        delete values['time'];\r\n        layoutOptions.hasM = true;\r\n    }\r\n    else {\r\n        flatCoordinates.push(0);\r\n    }\r\n    return flatCoordinates;\r\n}\r\n/**\r\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\r\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\r\n *\r\n * @param {LayoutOptions} layoutOptions Layout options.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {Array<number>=} ends Ends.\r\n * @return {GeometryLayout} Layout.\r\n */\r\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\r\n    var layout = GeometryLayout.XY;\r\n    var stride = 2;\r\n    if (layoutOptions.hasZ && layoutOptions.hasM) {\r\n        layout = GeometryLayout.XYZM;\r\n        stride = 4;\r\n    }\r\n    else if (layoutOptions.hasZ) {\r\n        layout = GeometryLayout.XYZ;\r\n        stride = 3;\r\n    }\r\n    else if (layoutOptions.hasM) {\r\n        layout = GeometryLayout.XYM;\r\n        stride = 3;\r\n    }\r\n    if (stride !== 4) {\r\n        for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\r\n            flatCoordinates[i * stride] = flatCoordinates[i * 4];\r\n            flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\r\n            if (layoutOptions.hasZ) {\r\n                flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\r\n            }\r\n            if (layoutOptions.hasM) {\r\n                flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\r\n            }\r\n        }\r\n        flatCoordinates.length = flatCoordinates.length / 4 * stride;\r\n        if (ends) {\r\n            for (var i = 0, ii = ends.length; i < ii; i++) {\r\n                ends[i] = ends[i] / 4 * stride;\r\n            }\r\n        }\r\n    }\r\n    return layout;\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction parseLink(node, objectStack) {\r\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    var href = node.getAttribute('href');\r\n    if (href !== null) {\r\n        values['link'] = href;\r\n    }\r\n    parseNode(LINK_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction parseExtensions(node, objectStack) {\r\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    values['extensionsNode_'] = node;\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction parseRtePt(node, objectStack) {\r\n    var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\r\n    if (values) {\r\n        var rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\r\n        var flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\r\n        var layoutOptions = /** @type {LayoutOptions} */ (rteValues['layoutOptions']);\r\n        appendCoordinate(flatCoordinates, layoutOptions, node, values);\r\n    }\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction parseTrkPt(node, objectStack) {\r\n    var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\r\n    if (values) {\r\n        var trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\r\n        var flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\r\n        var layoutOptions = /** @type {LayoutOptions} */ (trkValues['layoutOptions']);\r\n        appendCoordinate(flatCoordinates, layoutOptions, node, values);\r\n    }\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction parseTrkSeg(node, objectStack) {\r\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    parseNode(TRKSEG_PARSERS, node, objectStack);\r\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\r\n    var ends = /** @type {Array<number>} */ (values['ends']);\r\n    ends.push(flatCoordinates.length);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Feature|undefined} Track.\r\n */\r\nfunction readRte(node, objectStack) {\r\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\r\n    var values = pushParseAndPop({\r\n        'flatCoordinates': [],\r\n        'layoutOptions': {}\r\n    }, RTE_PARSERS, node, objectStack);\r\n    if (!values) {\r\n        return undefined;\r\n    }\r\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\r\n    delete values['flatCoordinates'];\r\n    var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\r\n    delete values['layoutOptions'];\r\n    var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\r\n    var geometry = new LineString(flatCoordinates, layout);\r\n    transformGeometryWithOptions(geometry, false, options);\r\n    var feature = new Feature(geometry);\r\n    feature.setProperties(values, true);\r\n    return feature;\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Feature|undefined} Track.\r\n */\r\nfunction readTrk(node, objectStack) {\r\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\r\n    var values = pushParseAndPop({\r\n        'flatCoordinates': [],\r\n        'ends': [],\r\n        'layoutOptions': {}\r\n    }, TRK_PARSERS, node, objectStack);\r\n    if (!values) {\r\n        return undefined;\r\n    }\r\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\r\n    delete values['flatCoordinates'];\r\n    var ends = /** @type {Array<number>} */ (values['ends']);\r\n    delete values['ends'];\r\n    var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\r\n    delete values['layoutOptions'];\r\n    var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\r\n    var geometry = new MultiLineString(flatCoordinates, layout, ends);\r\n    transformGeometryWithOptions(geometry, false, options);\r\n    var feature = new Feature(geometry);\r\n    feature.setProperties(values, true);\r\n    return feature;\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Feature|undefined} Waypoint.\r\n */\r\nfunction readWpt(node, objectStack) {\r\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\r\n    var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\r\n    if (!values) {\r\n        return undefined;\r\n    }\r\n    var layoutOptions = /** @type {LayoutOptions} */ ({});\r\n    var coordinates = appendCoordinate([], layoutOptions, node, values);\r\n    var layout = applyLayoutOptions(layoutOptions, coordinates);\r\n    var geometry = new Point(coordinates, layout);\r\n    transformGeometryWithOptions(geometry, false, options);\r\n    var feature = new Feature(geometry);\r\n    feature.setProperties(values, true);\r\n    return feature;\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {string} value Value for the link's `href` attribute.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeLink(node, value, objectStack) {\r\n    node.setAttribute('href', value);\r\n    var context = objectStack[objectStack.length - 1];\r\n    var properties = context['properties'];\r\n    var link = [\r\n        properties['linkText'],\r\n        properties['linkType']\r\n    ];\r\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, link, objectStack, LINK_SEQUENCE);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeWptType(node, coordinate, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var parentNode = context.node;\r\n    var namespaceURI = parentNode.namespaceURI;\r\n    var properties = context['properties'];\r\n    //FIXME Projection handling\r\n    node.setAttributeNS(null, 'lat', String(coordinate[1]));\r\n    node.setAttributeNS(null, 'lon', String(coordinate[0]));\r\n    var geometryLayout = context['geometryLayout'];\r\n    switch (geometryLayout) {\r\n        case GeometryLayout.XYZM:\r\n            if (coordinate[3] !== 0) {\r\n                properties['time'] = coordinate[3];\r\n            }\r\n        // fall through\r\n        case GeometryLayout.XYZ:\r\n            if (coordinate[2] !== 0) {\r\n                properties['ele'] = coordinate[2];\r\n            }\r\n            break;\r\n        case GeometryLayout.XYM:\r\n            if (coordinate[2] !== 0) {\r\n                properties['time'] = coordinate[2];\r\n            }\r\n            break;\r\n        default:\r\n        // pass\r\n    }\r\n    var orderedKeys = (node.nodeName == 'rtept') ?\r\n        RTEPT_TYPE_SEQUENCE[namespaceURI] :\r\n        WPT_TYPE_SEQUENCE[namespaceURI];\r\n    var values = makeSequence(properties, orderedKeys);\r\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node, 'properties': properties }), WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Feature} feature Feature.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeRte(node, feature, objectStack) {\r\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\r\n    var properties = feature.getProperties();\r\n    var context = { node: node };\r\n    context['properties'] = properties;\r\n    var geometry = feature.getGeometry();\r\n    if (geometry.getType() == GeometryType.LINE_STRING) {\r\n        var lineString = /** @type {LineString} */ (transformGeometryWithOptions(geometry, true, options));\r\n        context['geometryLayout'] = lineString.getLayout();\r\n        properties['rtept'] = lineString.getCoordinates();\r\n    }\r\n    var parentNode = objectStack[objectStack.length - 1].node;\r\n    var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\r\n    var values = makeSequence(properties, orderedKeys);\r\n    pushSerializeAndPop(context, RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Feature} feature Feature.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeTrk(node, feature, objectStack) {\r\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\r\n    var properties = feature.getProperties();\r\n    /** @type {import(\"../xml.js\").NodeStackItem} */\r\n    var context = { node: node };\r\n    context['properties'] = properties;\r\n    var geometry = feature.getGeometry();\r\n    if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\r\n        var multiLineString = /** @type {MultiLineString} */ (transformGeometryWithOptions(geometry, true, options));\r\n        properties['trkseg'] = multiLineString.getLineStrings();\r\n    }\r\n    var parentNode = objectStack[objectStack.length - 1].node;\r\n    var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\r\n    var values = makeSequence(properties, orderedKeys);\r\n    pushSerializeAndPop(context, TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {LineString} lineString LineString.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeTrkSeg(node, lineString, objectStack) {\r\n    /** @type {import(\"../xml.js\").NodeStackItem} */\r\n    var context = { node: node };\r\n    context['geometryLayout'] = lineString.getLayout();\r\n    context['properties'] = {};\r\n    pushSerializeAndPop(context, TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY, lineString.getCoordinates(), objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Feature} feature Feature.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeWpt(node, feature, objectStack) {\r\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\r\n    var context = objectStack[objectStack.length - 1];\r\n    context['properties'] = feature.getProperties();\r\n    var geometry = feature.getGeometry();\r\n    if (geometry.getType() == GeometryType.POINT) {\r\n        var point = /** @type {Point} */ (transformGeometryWithOptions(geometry, true, options));\r\n        context['geometryLayout'] = point.getLayout();\r\n        writeWptType(node, point.getCoordinates(), objectStack);\r\n    }\r\n}\r\nexport default GPX;\r\n//# sourceMappingURL=GPX.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/TextFeature\r\n */\r\nimport { abstract } from '../util.js';\r\nimport FeatureFormat from '../format/Feature.js';\r\nimport FormatType from '../format/FormatType.js';\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for text feature formats.\r\n *\r\n * @abstract\r\n */\r\nvar TextFeature = /** @class */ (function (_super) {\r\n    __extends(TextFeature, _super);\r\n    function TextFeature() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TextFeature.prototype.getType = function () {\r\n        return FormatType.TEXT;\r\n    };\r\n    /**\r\n     * Read the feature from the source.\r\n     *\r\n     * @param {Document|Node|Object|string} source Source.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n     * @return {import(\"../Feature.js\").default} Feature.\r\n     * @api\r\n     */\r\n    TextFeature.prototype.readFeature = function (source, opt_options) {\r\n        return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {string} text Text.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n     * @protected\r\n     * @return {import(\"../Feature.js\").default} Feature.\r\n     */\r\n    TextFeature.prototype.readFeatureFromText = function (text, opt_options) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Read the features from the source.\r\n     *\r\n     * @param {Document|Node|Object|string} source Source.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n     * @return {Array<import(\"../Feature.js\").default>} Features.\r\n     * @api\r\n     */\r\n    TextFeature.prototype.readFeatures = function (source, opt_options) {\r\n        return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {string} text Text.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n     * @protected\r\n     * @return {Array<import(\"../Feature.js\").default>} Features.\r\n     */\r\n    TextFeature.prototype.readFeaturesFromText = function (text, opt_options) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Read the geometry from the source.\r\n     *\r\n     * @param {Document|Node|Object|string} source Source.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n     * @api\r\n     */\r\n    TextFeature.prototype.readGeometry = function (source, opt_options) {\r\n        return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {string} text Text.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n     * @protected\r\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n     */\r\n    TextFeature.prototype.readGeometryFromText = function (text, opt_options) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Read the projection from the source.\r\n     *\r\n     * @param {Document|Node|Object|string} source Source.\r\n     * @return {import(\"../proj/Projection.js\").default} Projection.\r\n     * @api\r\n     */\r\n    TextFeature.prototype.readProjection = function (source) {\r\n        return this.readProjectionFromText(getText(source));\r\n    };\r\n    /**\r\n     * @param {string} text Text.\r\n     * @protected\r\n     * @return {import(\"../proj/Projection.js\").default} Projection.\r\n     */\r\n    TextFeature.prototype.readProjectionFromText = function (text) {\r\n        return this.dataProjection;\r\n    };\r\n    /**\r\n     * Encode a feature as a string.\r\n     *\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @return {string} Encoded feature.\r\n     * @api\r\n     */\r\n    TextFeature.prototype.writeFeature = function (feature, opt_options) {\r\n        return this.writeFeatureText(feature, this.adaptOptions(opt_options));\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {import(\"../Feature.js\").default} feature Features.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @protected\r\n     * @return {string} Text.\r\n     */\r\n    TextFeature.prototype.writeFeatureText = function (feature, opt_options) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Encode an array of features as string.\r\n     *\r\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @return {string} Encoded features.\r\n     * @api\r\n     */\r\n    TextFeature.prototype.writeFeatures = function (features, opt_options) {\r\n        return this.writeFeaturesText(features, this.adaptOptions(opt_options));\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @protected\r\n     * @return {string} Text.\r\n     */\r\n    TextFeature.prototype.writeFeaturesText = function (features, opt_options) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Write a single geometry.\r\n     *\r\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @return {string} Geometry.\r\n     * @api\r\n     */\r\n    TextFeature.prototype.writeGeometry = function (geometry, opt_options) {\r\n        return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n     * @protected\r\n     * @return {string} Text.\r\n     */\r\n    TextFeature.prototype.writeGeometryText = function (geometry, opt_options) {\r\n        return abstract();\r\n    };\r\n    return TextFeature;\r\n}(FeatureFormat));\r\n/**\r\n * @param {Document|Node|Object|string} source Source.\r\n * @return {string} Text.\r\n */\r\nfunction getText(source) {\r\n    if (typeof source === 'string') {\r\n        return source;\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\nexport default TextFeature;\r\n//# sourceMappingURL=TextFeature.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/IGC\r\n */\r\nimport Feature from '../Feature.js';\r\nimport { transformGeometryWithOptions } from './Feature.js';\r\nimport TextFeature from './TextFeature.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport { get as getProjection } from '../proj.js';\r\n/**\r\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\r\n * @enum {string}\r\n */\r\nvar IGCZ = {\r\n    BAROMETRIC: 'barometric',\r\n    GPS: 'gps',\r\n    NONE: 'none'\r\n};\r\n/**\r\n * @const\r\n * @type {RegExp}\r\n */\r\nvar B_RECORD_RE = /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\r\n/**\r\n * @const\r\n * @type {RegExp}\r\n */\r\nvar H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\r\n/**\r\n * @const\r\n * @type {RegExp}\r\n */\r\nvar HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\r\n/**\r\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\r\n *\r\n * @const\r\n * @type {RegExp}\r\n */\r\nvar NEWLINE_RE = /\\r\\n|\\r|\\n/;\r\n/**\r\n * @typedef {Object} Options\r\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\r\n * values are `'barometric'`, `'gps'`, and `'none'`.\r\n */\r\n/**\r\n * @classdesc\r\n * Feature format for `*.igc` flight recording files.\r\n *\r\n * As IGC sources contain a single feature,\r\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\r\n * array\r\n *\r\n * @api\r\n */\r\nvar IGC = /** @class */ (function (_super) {\r\n    __extends(IGC, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function IGC(opt_options) {\r\n        var _this = _super.call(this) || this;\r\n        var options = opt_options ? opt_options : {};\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        _this.dataProjection = getProjection('EPSG:4326');\r\n        /**\r\n         * @private\r\n         * @type {IGCZ}\r\n         */\r\n        _this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IGC.prototype.readFeatureFromText = function (text, opt_options) {\r\n        var altitudeMode = this.altitudeMode_;\r\n        var lines = text.split(NEWLINE_RE);\r\n        /** @type {Object<string, string>} */\r\n        var properties = {};\r\n        var flatCoordinates = [];\r\n        var year = 2000;\r\n        var month = 0;\r\n        var day = 1;\r\n        var lastDateTime = -1;\r\n        var i, ii;\r\n        for (i = 0, ii = lines.length; i < ii; ++i) {\r\n            var line = lines[i];\r\n            var m = void 0;\r\n            if (line.charAt(0) == 'B') {\r\n                m = B_RECORD_RE.exec(line);\r\n                if (m) {\r\n                    var hour = parseInt(m[1], 10);\r\n                    var minute = parseInt(m[2], 10);\r\n                    var second = parseInt(m[3], 10);\r\n                    var y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\r\n                    if (m[6] == 'S') {\r\n                        y = -y;\r\n                    }\r\n                    var x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\r\n                    if (m[9] == 'W') {\r\n                        x = -x;\r\n                    }\r\n                    flatCoordinates.push(x, y);\r\n                    if (altitudeMode != IGCZ.NONE) {\r\n                        var z = void 0;\r\n                        if (altitudeMode == IGCZ.GPS) {\r\n                            z = parseInt(m[11], 10);\r\n                        }\r\n                        else if (altitudeMode == IGCZ.BAROMETRIC) {\r\n                            z = parseInt(m[12], 10);\r\n                        }\r\n                        else {\r\n                            z = 0;\r\n                        }\r\n                        flatCoordinates.push(z);\r\n                    }\r\n                    var dateTime = Date.UTC(year, month, day, hour, minute, second);\r\n                    // Detect UTC midnight wrap around.\r\n                    if (dateTime < lastDateTime) {\r\n                        dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\r\n                    }\r\n                    flatCoordinates.push(dateTime / 1000);\r\n                    lastDateTime = dateTime;\r\n                }\r\n            }\r\n            else if (line.charAt(0) == 'H') {\r\n                m = HFDTE_RECORD_RE.exec(line);\r\n                if (m) {\r\n                    day = parseInt(m[1], 10);\r\n                    month = parseInt(m[2], 10) - 1;\r\n                    year = 2000 + parseInt(m[3], 10);\r\n                }\r\n                else {\r\n                    m = H_RECORD_RE.exec(line);\r\n                    if (m) {\r\n                        properties[m[1]] = m[2].trim();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (flatCoordinates.length === 0) {\r\n            return null;\r\n        }\r\n        var layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\r\n        var lineString = new LineString(flatCoordinates, layout);\r\n        var feature = new Feature(transformGeometryWithOptions(lineString, false, opt_options));\r\n        feature.setProperties(properties, true);\r\n        return feature;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IGC.prototype.readFeaturesFromText = function (text, opt_options) {\r\n        var feature = this.readFeatureFromText(text, opt_options);\r\n        if (feature) {\r\n            return [feature];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    return IGC;\r\n}(TextFeature));\r\nexport default IGC;\r\n//# sourceMappingURL=IGC.js.map","/**\r\n * @module ol/style/Fill\r\n */\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\r\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\r\n * Default null; if null, the Canvas/renderer default black will be used.\r\n */\r\n/**\r\n * @classdesc\r\n * Set fill style for vector features.\r\n * @api\r\n */\r\nvar Fill = /** @class */ (function () {\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function Fill(opt_options) {\r\n        var options = opt_options || {};\r\n        /**\r\n         * @private\r\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\r\n         */\r\n        this.color_ = options.color !== undefined ? options.color : null;\r\n    }\r\n    /**\r\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\r\n     * @return {Fill} The cloned style.\r\n     * @api\r\n     */\r\n    Fill.prototype.clone = function () {\r\n        var color = this.getColor();\r\n        return new Fill({\r\n            color: Array.isArray(color) ? color.slice() : color || undefined\r\n        });\r\n    };\r\n    /**\r\n     * Get the fill color.\r\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\r\n     * @api\r\n     */\r\n    Fill.prototype.getColor = function () {\r\n        return this.color_;\r\n    };\r\n    /**\r\n     * Set the color.\r\n     *\r\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\r\n     * @api\r\n     */\r\n    Fill.prototype.setColor = function (color) {\r\n        this.color_ = color;\r\n    };\r\n    return Fill;\r\n}());\r\nexport default Fill;\r\n//# sourceMappingURL=Fill.js.map","/**\r\n * @module ol/ImageState\r\n */\r\n/**\r\n * @enum {number}\r\n */\r\nexport default {\r\n    IDLE: 0,\r\n    LOADING: 1,\r\n    LOADED: 2,\r\n    ERROR: 3\r\n};\r\n//# sourceMappingURL=ImageState.js.map","/**\r\n * @module ol/style/IconAnchorUnits\r\n */\r\n/**\r\n * Icon anchor units. One of 'fraction', 'pixels'.\r\n * @enum {string}\r\n */\r\nexport default {\r\n    FRACTION: 'fraction',\r\n    PIXELS: 'pixels'\r\n};\r\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\r\n * @module ol/style/IconImage\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { createCanvasContext2D } from '../dom.js';\r\nimport { listenOnce, unlistenByKey } from '../events.js';\r\nimport EventTarget from '../events/Target.js';\r\nimport EventType from '../events/EventType.js';\r\nimport ImageState from '../ImageState.js';\r\nimport { shared as iconImageCache } from './IconImageCache.js';\r\nvar IconImage = /** @class */ (function (_super) {\r\n    __extends(IconImage, _super);\r\n    /**\r\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\r\n     * @param {string|undefined} src Src.\r\n     * @param {import(\"../size.js\").Size} size Size.\r\n     * @param {?string} crossOrigin Cross origin.\r\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\r\n     * @param {import(\"../color.js\").Color} color Color.\r\n     */\r\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @private\r\n         * @type {HTMLImageElement|HTMLCanvasElement}\r\n         */\r\n        _this.hitDetectionImage_ = null;\r\n        /**\r\n         * @private\r\n         * @type {HTMLImageElement|HTMLCanvasElement}\r\n         */\r\n        _this.image_ = !image ? new Image() : image;\r\n        if (crossOrigin !== null) {\r\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\r\n        }\r\n        /**\r\n         * @private\r\n         * @type {HTMLCanvasElement}\r\n         */\r\n        _this.canvas_ = color ?\r\n            /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\r\n            null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../color.js\").Color}\r\n         */\r\n        _this.color_ = color;\r\n        /**\r\n         * @private\r\n         * @type {Array<import(\"../events.js\").EventsKey>}\r\n         */\r\n        _this.imageListenerKeys_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../ImageState.js\").default}\r\n         */\r\n        _this.imageState_ = imageState;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../size.js\").Size}\r\n         */\r\n        _this.size_ = size;\r\n        /**\r\n         * @private\r\n         * @type {string|undefined}\r\n         */\r\n        _this.src_ = src;\r\n        /**\r\n         * @private\r\n         * @type {boolean|undefined}\r\n         */\r\n        _this.tainted_;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {boolean} The image canvas is tainted.\r\n     */\r\n    IconImage.prototype.isTainted_ = function () {\r\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\r\n            this.tainted_ = false;\r\n            var context = createCanvasContext2D(1, 1);\r\n            try {\r\n                context.drawImage(this.image_, 0, 0);\r\n                context.getImageData(0, 0, 1, 1);\r\n            }\r\n            catch (e) {\r\n                this.tainted_ = true;\r\n            }\r\n        }\r\n        return this.tainted_ === true;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    IconImage.prototype.dispatchChangeEvent_ = function () {\r\n        this.dispatchEvent(EventType.CHANGE);\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    IconImage.prototype.handleImageError_ = function () {\r\n        this.imageState_ = ImageState.ERROR;\r\n        this.unlistenImage_();\r\n        this.dispatchChangeEvent_();\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    IconImage.prototype.handleImageLoad_ = function () {\r\n        this.imageState_ = ImageState.LOADED;\r\n        if (this.size_) {\r\n            this.image_.width = this.size_[0];\r\n            this.image_.height = this.size_[1];\r\n        }\r\n        this.size_ = [this.image_.width, this.image_.height];\r\n        this.unlistenImage_();\r\n        this.replaceColor_();\r\n        this.dispatchChangeEvent_();\r\n    };\r\n    /**\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\r\n     */\r\n    IconImage.prototype.getImage = function (pixelRatio) {\r\n        return this.canvas_ ? this.canvas_ : this.image_;\r\n    };\r\n    /**\r\n     * @return {import(\"../ImageState.js\").default} Image state.\r\n     */\r\n    IconImage.prototype.getImageState = function () {\r\n        return this.imageState_;\r\n    };\r\n    /**\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\r\n     */\r\n    IconImage.prototype.getHitDetectionImage = function (pixelRatio) {\r\n        if (!this.hitDetectionImage_) {\r\n            if (this.isTainted_()) {\r\n                var width = this.size_[0];\r\n                var height = this.size_[1];\r\n                var context = createCanvasContext2D(width, height);\r\n                context.fillRect(0, 0, width, height);\r\n                this.hitDetectionImage_ = context.canvas;\r\n            }\r\n            else {\r\n                this.hitDetectionImage_ = this.image_;\r\n            }\r\n        }\r\n        return this.hitDetectionImage_;\r\n    };\r\n    /**\r\n     * @return {import(\"../size.js\").Size} Image size.\r\n     */\r\n    IconImage.prototype.getSize = function () {\r\n        return this.size_;\r\n    };\r\n    /**\r\n     * @return {string|undefined} Image src.\r\n     */\r\n    IconImage.prototype.getSrc = function () {\r\n        return this.src_;\r\n    };\r\n    /**\r\n     * Load not yet loaded URI.\r\n     */\r\n    IconImage.prototype.load = function () {\r\n        if (this.imageState_ == ImageState.IDLE) {\r\n            this.imageState_ = ImageState.LOADING;\r\n            this.imageListenerKeys_ = [\r\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\r\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\r\n            ];\r\n            try {\r\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\r\n            }\r\n            catch (e) {\r\n                this.handleImageError_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    IconImage.prototype.replaceColor_ = function () {\r\n        if (!this.color_ || this.isTainted_()) {\r\n            return;\r\n        }\r\n        this.canvas_.width = this.image_.width;\r\n        this.canvas_.height = this.image_.height;\r\n        var ctx = this.canvas_.getContext('2d');\r\n        ctx.drawImage(this.image_, 0, 0);\r\n        var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\r\n        var data = imgData.data;\r\n        var r = this.color_[0] / 255.0;\r\n        var g = this.color_[1] / 255.0;\r\n        var b = this.color_[2] / 255.0;\r\n        for (var i = 0, ii = data.length; i < ii; i += 4) {\r\n            data[i] *= r;\r\n            data[i + 1] *= g;\r\n            data[i + 2] *= b;\r\n        }\r\n        ctx.putImageData(imgData, 0, 0);\r\n    };\r\n    /**\r\n     * Discards event handlers which listen for load completion or errors.\r\n     *\r\n     * @private\r\n     */\r\n    IconImage.prototype.unlistenImage_ = function () {\r\n        this.imageListenerKeys_.forEach(unlistenByKey);\r\n        this.imageListenerKeys_ = null;\r\n    };\r\n    return IconImage;\r\n}(EventTarget));\r\n/**\r\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\r\n * @param {string} src Src.\r\n * @param {import(\"../size.js\").Size} size Size.\r\n * @param {?string} crossOrigin Cross origin.\r\n * @param {import(\"../ImageState.js\").default} imageState Image state.\r\n * @param {import(\"../color.js\").Color} color Color.\r\n * @return {IconImage} Icon image.\r\n */\r\nexport function get(image, src, size, crossOrigin, imageState, color) {\r\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\r\n    if (!iconImage) {\r\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\r\n        iconImageCache.set(src, crossOrigin, color, iconImage);\r\n    }\r\n    return iconImage;\r\n}\r\nexport default IconImage;\r\n//# sourceMappingURL=IconImage.js.map","/**\r\n * @module ol/style/IconOrigin\r\n */\r\n/**\r\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\r\n * @enum {string}\r\n */\r\nexport default {\r\n    BOTTOM_LEFT: 'bottom-left',\r\n    BOTTOM_RIGHT: 'bottom-right',\r\n    TOP_LEFT: 'top-left',\r\n    TOP_RIGHT: 'top-right'\r\n};\r\n//# sourceMappingURL=IconOrigin.js.map","/**\r\n * @module ol/style/Image\r\n */\r\nimport { abstract } from '../util.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} opacity\r\n * @property {boolean} rotateWithView\r\n * @property {number} rotation\r\n * @property {number} scale\r\n */\r\n/**\r\n * @classdesc\r\n * A base class used for creating subclasses and not instantiated in\r\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\r\n * {@link module:ol/style/RegularShape~RegularShape}.\r\n * @abstract\r\n * @api\r\n */\r\nvar ImageStyle = /** @class */ (function () {\r\n    /**\r\n     * @param {Options} options Options.\r\n     */\r\n    function ImageStyle(options) {\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.opacity_ = options.opacity;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        this.rotateWithView_ = options.rotateWithView;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.rotation_ = options.rotation;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.scale_ = options.scale;\r\n    }\r\n    /**\r\n     * Clones the style.\r\n     * @return {ImageStyle} The cloned style.\r\n     * @api\r\n     */\r\n    ImageStyle.prototype.clone = function () {\r\n        return new ImageStyle({\r\n            opacity: this.getOpacity(),\r\n            scale: this.getScale(),\r\n            rotation: this.getRotation(),\r\n            rotateWithView: this.getRotateWithView()\r\n        });\r\n    };\r\n    /**\r\n     * Get the symbolizer opacity.\r\n     * @return {number} Opacity.\r\n     * @api\r\n     */\r\n    ImageStyle.prototype.getOpacity = function () {\r\n        return this.opacity_;\r\n    };\r\n    /**\r\n     * Determine whether the symbolizer rotates with the map.\r\n     * @return {boolean} Rotate with map.\r\n     * @api\r\n     */\r\n    ImageStyle.prototype.getRotateWithView = function () {\r\n        return this.rotateWithView_;\r\n    };\r\n    /**\r\n     * Get the symoblizer rotation.\r\n     * @return {number} Rotation.\r\n     * @api\r\n     */\r\n    ImageStyle.prototype.getRotation = function () {\r\n        return this.rotation_;\r\n    };\r\n    /**\r\n     * Get the symbolizer scale.\r\n     * @return {number} Scale.\r\n     * @api\r\n     */\r\n    ImageStyle.prototype.getScale = function () {\r\n        return this.scale_;\r\n    };\r\n    /**\r\n     * This method is deprecated and always returns false.\r\n     * @return {boolean} false.\r\n     * @deprecated\r\n     * @api\r\n     */\r\n    ImageStyle.prototype.getSnapToPixel = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Get the anchor point in pixels. The anchor determines the center point for the\r\n     * symbolizer.\r\n     * @abstract\r\n     * @return {Array<number>} Anchor.\r\n     */\r\n    ImageStyle.prototype.getAnchor = function () {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Get the image element for the symbolizer.\r\n     * @abstract\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\r\n     */\r\n    ImageStyle.prototype.getImage = function (pixelRatio) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\r\n     */\r\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @return {import(\"../ImageState.js\").default} Image state.\r\n     */\r\n    ImageStyle.prototype.getImageState = function () {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @return {import(\"../size.js\").Size} Image size.\r\n     */\r\n    ImageStyle.prototype.getImageSize = function () {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\r\n     */\r\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Get the origin of the symbolizer.\r\n     * @abstract\r\n     * @return {Array<number>} Origin.\r\n     */\r\n    ImageStyle.prototype.getOrigin = function () {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Get the size of the symbolizer (in pixels).\r\n     * @abstract\r\n     * @return {import(\"../size.js\").Size} Size.\r\n     */\r\n    ImageStyle.prototype.getSize = function () {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Set the opacity.\r\n     *\r\n     * @param {number} opacity Opacity.\r\n     * @api\r\n     */\r\n    ImageStyle.prototype.setOpacity = function (opacity) {\r\n        this.opacity_ = opacity;\r\n    };\r\n    /**\r\n     * Set whether to rotate the style with the view.\r\n     *\r\n     * @param {boolean} rotateWithView Rotate with map.\r\n     * @api\r\n     */\r\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\r\n        this.rotateWithView_ = rotateWithView;\r\n    };\r\n    /**\r\n     * Set the rotation.\r\n     *\r\n     * @param {number} rotation Rotation.\r\n     * @api\r\n     */\r\n    ImageStyle.prototype.setRotation = function (rotation) {\r\n        this.rotation_ = rotation;\r\n    };\r\n    /**\r\n     * Set the scale.\r\n     *\r\n     * @param {number} scale Scale.\r\n     * @api\r\n     */\r\n    ImageStyle.prototype.setScale = function (scale) {\r\n        this.scale_ = scale;\r\n    };\r\n    /**\r\n     * This method is deprecated and does nothing.\r\n     * @param {boolean} snapToPixel Snap to pixel?\r\n     * @deprecated\r\n     * @api\r\n     */\r\n    ImageStyle.prototype.setSnapToPixel = function (snapToPixel) { };\r\n    /**\r\n     * @abstract\r\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\r\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\r\n     * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\r\n     * @template T\r\n     */\r\n    ImageStyle.prototype.listenImageChange = function (listener, thisArg) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Load not yet loaded URI.\r\n     * @abstract\r\n     */\r\n    ImageStyle.prototype.load = function () {\r\n        abstract();\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\r\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\r\n     * @template T\r\n     */\r\n    ImageStyle.prototype.unlistenImageChange = function (listener, thisArg) {\r\n        abstract();\r\n    };\r\n    return ImageStyle;\r\n}());\r\nexport default ImageStyle;\r\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/style/Icon\r\n */\r\nimport { getUid } from '../util.js';\r\nimport ImageState from '../ImageState.js';\r\nimport { assert } from '../asserts.js';\r\nimport { asArray } from '../color.js';\r\nimport { listen, unlisten } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport IconAnchorUnits from './IconAnchorUnits.js';\r\nimport { get as getIconImage } from './IconImage.js';\r\nimport IconOrigin from './IconOrigin.js';\r\nimport ImageStyle from './Image.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\r\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\r\n * `top-left` or `top-right`. Default is `top-left`.\r\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits] Units in which the anchor x value is\r\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\r\n * the x value in pixels. Default is `'fraction'`.\r\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits] Units in which the anchor y value is\r\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\r\n * the y value in pixels. Default is `'fraction'`.\r\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\r\n * the icon will be left as is.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\r\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\r\n * provided image must already be loaded. And in that case, it is required\r\n * to provide the size of the image, with the `imgSize` option.\r\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\r\n * sub-rectangle to use from the original icon image.\r\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\r\n * `top-left` or `top-right`. Default is `top-left`.\r\n * @property {number} [opacity=1] Opacity of the icon.\r\n * @property {number} [scale=1] Scale.\r\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\r\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\r\n * sub-rectangle to use from the origin (sprite) icon image.\r\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\r\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\r\n * @property {string} [src] Image source URI.\r\n */\r\n/**\r\n * @classdesc\r\n * Set icon style for vector features.\r\n * @api\r\n */\r\nvar Icon = /** @class */ (function (_super) {\r\n    __extends(Icon, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function Icon(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options || {};\r\n        /**\r\n         * @type {number}\r\n         */\r\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        var scale = options.scale !== undefined ? options.scale : 1;\r\n        /**\r\n         * @type {boolean}\r\n         */\r\n        var rotateWithView = options.rotateWithView !== undefined ?\r\n            options.rotateWithView : false;\r\n        _this = _super.call(this, {\r\n            opacity: opacity,\r\n            rotation: rotation,\r\n            scale: scale,\r\n            rotateWithView: rotateWithView\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        _this.normalizedAnchor_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./IconOrigin.js\").default}\r\n         */\r\n        _this.anchorOrigin_ = options.anchorOrigin !== undefined ?\r\n            options.anchorOrigin : IconOrigin.TOP_LEFT;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./IconAnchorUnits.js\").default}\r\n         */\r\n        _this.anchorXUnits_ = options.anchorXUnits !== undefined ?\r\n            options.anchorXUnits : IconAnchorUnits.FRACTION;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./IconAnchorUnits.js\").default}\r\n         */\r\n        _this.anchorYUnits_ = options.anchorYUnits !== undefined ?\r\n            options.anchorYUnits : IconAnchorUnits.FRACTION;\r\n        /**\r\n         * @private\r\n         * @type {?string}\r\n         */\r\n        _this.crossOrigin_ =\r\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\r\n        /**\r\n         * @type {HTMLImageElement|HTMLCanvasElement}\r\n         */\r\n        var image = options.img !== undefined ? options.img : null;\r\n        /**\r\n         * @type {import(\"../size.js\").Size}\r\n         */\r\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\r\n        /**\r\n         * @type {string|undefined}\r\n         */\r\n        var src = options.src;\r\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\r\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\r\n        if ((src === undefined || src.length === 0) && image) {\r\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\r\n        }\r\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\r\n        /**\r\n         * @type {import(\"../ImageState.js\").default}\r\n         */\r\n        var imageState = options.src !== undefined ?\r\n            ImageState.IDLE : ImageState.LOADED;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../color.js\").Color}\r\n         */\r\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./IconImage.js\").default}\r\n         */\r\n        _this.iconImage_ = getIconImage(image, /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\r\n        /**\r\n         * @private\r\n         * @type {import(\"./IconOrigin.js\").default}\r\n         */\r\n        _this.offsetOrigin_ = options.offsetOrigin !== undefined ?\r\n            options.offsetOrigin : IconOrigin.TOP_LEFT;\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        _this.origin_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../size.js\").Size}\r\n         */\r\n        _this.size_ = options.size !== undefined ? options.size : null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\r\n     * @return {Icon} The cloned style.\r\n     * @api\r\n     */\r\n    Icon.prototype.clone = function () {\r\n        return new Icon({\r\n            anchor: this.anchor_.slice(),\r\n            anchorOrigin: this.anchorOrigin_,\r\n            anchorXUnits: this.anchorXUnits_,\r\n            anchorYUnits: this.anchorYUnits_,\r\n            crossOrigin: this.crossOrigin_,\r\n            color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\r\n            src: this.getSrc(),\r\n            offset: this.offset_.slice(),\r\n            offsetOrigin: this.offsetOrigin_,\r\n            size: this.size_ !== null ? this.size_.slice() : undefined,\r\n            opacity: this.getOpacity(),\r\n            scale: this.getScale(),\r\n            rotation: this.getRotation(),\r\n            rotateWithView: this.getRotateWithView()\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    Icon.prototype.getAnchor = function () {\r\n        if (this.normalizedAnchor_) {\r\n            return this.normalizedAnchor_;\r\n        }\r\n        var anchor = this.anchor_;\r\n        var size = this.getSize();\r\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\r\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\r\n            if (!size) {\r\n                return null;\r\n            }\r\n            anchor = this.anchor_.slice();\r\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\r\n                anchor[0] *= size[0];\r\n            }\r\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\r\n                anchor[1] *= size[1];\r\n            }\r\n        }\r\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\r\n            if (!size) {\r\n                return null;\r\n            }\r\n            if (anchor === this.anchor_) {\r\n                anchor = this.anchor_.slice();\r\n            }\r\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\r\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\r\n                anchor[0] = -anchor[0] + size[0];\r\n            }\r\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\r\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\r\n                anchor[1] = -anchor[1] + size[1];\r\n            }\r\n        }\r\n        this.normalizedAnchor_ = anchor;\r\n        return this.normalizedAnchor_;\r\n    };\r\n    /**\r\n     * Set the anchor point. The anchor determines the center point for the\r\n     * symbolizer.\r\n     *\r\n     * @param {Array<number>} anchor Anchor.\r\n     * @api\r\n     */\r\n    Icon.prototype.setAnchor = function (anchor) {\r\n        this.anchor_ = anchor;\r\n        this.normalizedAnchor_ = null;\r\n    };\r\n    /**\r\n     * Get the icon color.\r\n     * @return {import(\"../color.js\").Color} Color.\r\n     * @api\r\n     */\r\n    Icon.prototype.getColor = function () {\r\n        return this.color_;\r\n    };\r\n    /**\r\n     * Get the image icon.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\r\n     * @override\r\n     * @api\r\n     */\r\n    Icon.prototype.getImage = function (pixelRatio) {\r\n        return this.iconImage_.getImage(pixelRatio);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    Icon.prototype.getImageSize = function () {\r\n        return this.iconImage_.getSize();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    Icon.prototype.getHitDetectionImageSize = function () {\r\n        return this.getImageSize();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    Icon.prototype.getImageState = function () {\r\n        return this.iconImage_.getImageState();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    Icon.prototype.getHitDetectionImage = function (pixelRatio) {\r\n        return this.iconImage_.getHitDetectionImage(pixelRatio);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    Icon.prototype.getOrigin = function () {\r\n        if (this.origin_) {\r\n            return this.origin_;\r\n        }\r\n        var offset = this.offset_;\r\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\r\n            var size = this.getSize();\r\n            var iconImageSize = this.iconImage_.getSize();\r\n            if (!size || !iconImageSize) {\r\n                return null;\r\n            }\r\n            offset = offset.slice();\r\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\r\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\r\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\r\n            }\r\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\r\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\r\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\r\n            }\r\n        }\r\n        this.origin_ = offset;\r\n        return this.origin_;\r\n    };\r\n    /**\r\n     * Get the image URL.\r\n     * @return {string|undefined} Image src.\r\n     * @api\r\n     */\r\n    Icon.prototype.getSrc = function () {\r\n        return this.iconImage_.getSrc();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    Icon.prototype.getSize = function () {\r\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    Icon.prototype.listenImageChange = function (listener, thisArg) {\r\n        return listen(this.iconImage_, EventType.CHANGE, listener, thisArg);\r\n    };\r\n    /**\r\n     * Load not yet loaded URI.\r\n     * When rendering a feature with an icon style, the vector renderer will\r\n     * automatically call this method. However, you might want to call this\r\n     * method yourself for preloading or other purposes.\r\n     * @override\r\n     * @api\r\n     */\r\n    Icon.prototype.load = function () {\r\n        this.iconImage_.load();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    Icon.prototype.unlistenImageChange = function (listener, thisArg) {\r\n        unlisten(this.iconImage_, EventType.CHANGE, listener, thisArg);\r\n    };\r\n    return Icon;\r\n}(ImageStyle));\r\nexport default Icon;\r\n//# sourceMappingURL=Icon.js.map","/**\r\n * @module ol/style/Stroke\r\n */\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\r\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\r\n * Default null; if null, the Canvas/renderer default black will be used.\r\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\r\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\r\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\r\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\r\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\r\n * @property {number} [lineDashOffset=0] Line dash offset.\r\n * @property {number} [miterLimit=10] Miter limit.\r\n * @property {number} [width] Width.\r\n */\r\n/**\r\n * @classdesc\r\n * Set stroke style for vector features.\r\n * Note that the defaults given are the Canvas defaults, which will be used if\r\n * option is not defined. The `get` functions return whatever was entered in\r\n * the options; they will not return the default.\r\n * @api\r\n */\r\nvar Stroke = /** @class */ (function () {\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function Stroke(opt_options) {\r\n        var options = opt_options || {};\r\n        /**\r\n         * @private\r\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\r\n         */\r\n        this.color_ = options.color !== undefined ? options.color : null;\r\n        /**\r\n         * @private\r\n         * @type {string|undefined}\r\n         */\r\n        this.lineCap_ = options.lineCap;\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        this.lineDashOffset_ = options.lineDashOffset;\r\n        /**\r\n         * @private\r\n         * @type {string|undefined}\r\n         */\r\n        this.lineJoin_ = options.lineJoin;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        this.miterLimit_ = options.miterLimit;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        this.width_ = options.width;\r\n    }\r\n    /**\r\n     * Clones the style.\r\n     * @return {Stroke} The cloned style.\r\n     * @api\r\n     */\r\n    Stroke.prototype.clone = function () {\r\n        var color = this.getColor();\r\n        return new Stroke({\r\n            color: Array.isArray(color) ? color.slice() : color || undefined,\r\n            lineCap: this.getLineCap(),\r\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\r\n            lineDashOffset: this.getLineDashOffset(),\r\n            lineJoin: this.getLineJoin(),\r\n            miterLimit: this.getMiterLimit(),\r\n            width: this.getWidth()\r\n        });\r\n    };\r\n    /**\r\n     * Get the stroke color.\r\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\r\n     * @api\r\n     */\r\n    Stroke.prototype.getColor = function () {\r\n        return this.color_;\r\n    };\r\n    /**\r\n     * Get the line cap type for the stroke.\r\n     * @return {string|undefined} Line cap.\r\n     * @api\r\n     */\r\n    Stroke.prototype.getLineCap = function () {\r\n        return this.lineCap_;\r\n    };\r\n    /**\r\n     * Get the line dash style for the stroke.\r\n     * @return {Array<number>} Line dash.\r\n     * @api\r\n     */\r\n    Stroke.prototype.getLineDash = function () {\r\n        return this.lineDash_;\r\n    };\r\n    /**\r\n     * Get the line dash offset for the stroke.\r\n     * @return {number|undefined} Line dash offset.\r\n     * @api\r\n     */\r\n    Stroke.prototype.getLineDashOffset = function () {\r\n        return this.lineDashOffset_;\r\n    };\r\n    /**\r\n     * Get the line join type for the stroke.\r\n     * @return {string|undefined} Line join.\r\n     * @api\r\n     */\r\n    Stroke.prototype.getLineJoin = function () {\r\n        return this.lineJoin_;\r\n    };\r\n    /**\r\n     * Get the miter limit for the stroke.\r\n     * @return {number|undefined} Miter limit.\r\n     * @api\r\n     */\r\n    Stroke.prototype.getMiterLimit = function () {\r\n        return this.miterLimit_;\r\n    };\r\n    /**\r\n     * Get the stroke width.\r\n     * @return {number|undefined} Width.\r\n     * @api\r\n     */\r\n    Stroke.prototype.getWidth = function () {\r\n        return this.width_;\r\n    };\r\n    /**\r\n     * Set the color.\r\n     *\r\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\r\n     * @api\r\n     */\r\n    Stroke.prototype.setColor = function (color) {\r\n        this.color_ = color;\r\n    };\r\n    /**\r\n     * Set the line cap.\r\n     *\r\n     * @param {string|undefined} lineCap Line cap.\r\n     * @api\r\n     */\r\n    Stroke.prototype.setLineCap = function (lineCap) {\r\n        this.lineCap_ = lineCap;\r\n    };\r\n    /**\r\n     * Set the line dash.\r\n     *\r\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\r\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\r\n     * property will have no visual effect in these browsers.\r\n     *\r\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\r\n     *\r\n     * @param {Array<number>} lineDash Line dash.\r\n     * @api\r\n     */\r\n    Stroke.prototype.setLineDash = function (lineDash) {\r\n        this.lineDash_ = lineDash;\r\n    };\r\n    /**\r\n     * Set the line dash offset.\r\n     *\r\n     * @param {number|undefined} lineDashOffset Line dash offset.\r\n     * @api\r\n     */\r\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\r\n        this.lineDashOffset_ = lineDashOffset;\r\n    };\r\n    /**\r\n     * Set the line join.\r\n     *\r\n     * @param {string|undefined} lineJoin Line join.\r\n     * @api\r\n     */\r\n    Stroke.prototype.setLineJoin = function (lineJoin) {\r\n        this.lineJoin_ = lineJoin;\r\n    };\r\n    /**\r\n     * Set the miter limit.\r\n     *\r\n     * @param {number|undefined} miterLimit Miter limit.\r\n     * @api\r\n     */\r\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\r\n        this.miterLimit_ = miterLimit;\r\n    };\r\n    /**\r\n     * Set the width.\r\n     *\r\n     * @param {number|undefined} width Width.\r\n     * @api\r\n     */\r\n    Stroke.prototype.setWidth = function (width) {\r\n        this.width_ = width;\r\n    };\r\n    return Stroke;\r\n}());\r\nexport default Stroke;\r\n//# sourceMappingURL=Stroke.js.map","/**\r\n * @module ol/structs/LRUCache\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { assert } from '../asserts.js';\r\nimport EventTarget from '../events/Target.js';\r\nimport EventType from '../events/EventType.js';\r\n/**\r\n * @typedef {Object} Entry\r\n * @property {string} key_\r\n * @property {Object} newer\r\n * @property {Object} older\r\n * @property {*} value_\r\n */\r\n/**\r\n * @classdesc\r\n * Implements a Least-Recently-Used cache where the keys do not conflict with\r\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\r\n * items from the cache is the responsibility of the user.\r\n *\r\n * @fires import(\"../events/Event.js\").Event\r\n * @template T\r\n */\r\nvar LRUCache = /** @class */ (function (_super) {\r\n    __extends(LRUCache, _super);\r\n    /**\r\n     * @param {number=} opt_highWaterMark High water mark.\r\n     */\r\n    function LRUCache(opt_highWaterMark) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.count_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {!Object<string, Entry>}\r\n         */\r\n        _this.entries_ = {};\r\n        /**\r\n         * @private\r\n         * @type {?Entry}\r\n         */\r\n        _this.oldest_ = null;\r\n        /**\r\n         * @private\r\n         * @type {?Entry}\r\n         */\r\n        _this.newest_ = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {boolean} Can expire cache.\r\n     */\r\n    LRUCache.prototype.canExpireCache = function () {\r\n        return this.getCount() > this.highWaterMark;\r\n    };\r\n    /**\r\n     * FIXME empty description for jsdoc\r\n     */\r\n    LRUCache.prototype.clear = function () {\r\n        this.count_ = 0;\r\n        this.entries_ = {};\r\n        this.oldest_ = null;\r\n        this.newest_ = null;\r\n        this.dispatchEvent(EventType.CLEAR);\r\n    };\r\n    /**\r\n     * @param {string} key Key.\r\n     * @return {boolean} Contains key.\r\n     */\r\n    LRUCache.prototype.containsKey = function (key) {\r\n        return this.entries_.hasOwnProperty(key);\r\n    };\r\n    /**\r\n     * @param {function(this: S, T, string, LRUCache): ?} f The function\r\n     *     to call for every entry from the oldest to the newer. This function takes\r\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\r\n     *     The return value is ignored.\r\n     * @param {S=} opt_this The object to use as `this` in `f`.\r\n     * @template S\r\n     */\r\n    LRUCache.prototype.forEach = function (f, opt_this) {\r\n        var entry = this.oldest_;\r\n        while (entry) {\r\n            f.call(opt_this, entry.value_, entry.key_, this);\r\n            entry = entry.newer;\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key Key.\r\n     * @param {*=} opt_options Options (reserverd for subclasses).\r\n     * @return {T} Value.\r\n     */\r\n    LRUCache.prototype.get = function (key, opt_options) {\r\n        var entry = this.entries_[key];\r\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\r\n        if (entry === this.newest_) {\r\n            return entry.value_;\r\n        }\r\n        else if (entry === this.oldest_) {\r\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\r\n            this.oldest_.older = null;\r\n        }\r\n        else {\r\n            entry.newer.older = entry.older;\r\n            entry.older.newer = entry.newer;\r\n        }\r\n        entry.newer = null;\r\n        entry.older = this.newest_;\r\n        this.newest_.newer = entry;\r\n        this.newest_ = entry;\r\n        return entry.value_;\r\n    };\r\n    /**\r\n     * Remove an entry from the cache.\r\n     * @param {string} key The entry key.\r\n     * @return {T} The removed entry.\r\n     */\r\n    LRUCache.prototype.remove = function (key) {\r\n        var entry = this.entries_[key];\r\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\r\n        if (entry === this.newest_) {\r\n            this.newest_ = /** @type {Entry} */ (entry.older);\r\n            if (this.newest_) {\r\n                this.newest_.newer = null;\r\n            }\r\n        }\r\n        else if (entry === this.oldest_) {\r\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\r\n            if (this.oldest_) {\r\n                this.oldest_.older = null;\r\n            }\r\n        }\r\n        else {\r\n            entry.newer.older = entry.older;\r\n            entry.older.newer = entry.newer;\r\n        }\r\n        delete this.entries_[key];\r\n        --this.count_;\r\n        return entry.value_;\r\n    };\r\n    /**\r\n     * @return {number} Count.\r\n     */\r\n    LRUCache.prototype.getCount = function () {\r\n        return this.count_;\r\n    };\r\n    /**\r\n     * @return {Array<string>} Keys.\r\n     */\r\n    LRUCache.prototype.getKeys = function () {\r\n        var keys = new Array(this.count_);\r\n        var i = 0;\r\n        var entry;\r\n        for (entry = this.newest_; entry; entry = entry.older) {\r\n            keys[i++] = entry.key_;\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     * @return {Array<T>} Values.\r\n     */\r\n    LRUCache.prototype.getValues = function () {\r\n        var values = new Array(this.count_);\r\n        var i = 0;\r\n        var entry;\r\n        for (entry = this.newest_; entry; entry = entry.older) {\r\n            values[i++] = entry.value_;\r\n        }\r\n        return values;\r\n    };\r\n    /**\r\n     * @return {T} Last value.\r\n     */\r\n    LRUCache.prototype.peekLast = function () {\r\n        return this.oldest_.value_;\r\n    };\r\n    /**\r\n     * @return {string} Last key.\r\n     */\r\n    LRUCache.prototype.peekLastKey = function () {\r\n        return this.oldest_.key_;\r\n    };\r\n    /**\r\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\r\n     * @return {string} The newest key.\r\n     */\r\n    LRUCache.prototype.peekFirstKey = function () {\r\n        return this.newest_.key_;\r\n    };\r\n    /**\r\n     * @return {T} value Value.\r\n     */\r\n    LRUCache.prototype.pop = function () {\r\n        var entry = this.oldest_;\r\n        delete this.entries_[entry.key_];\r\n        if (entry.newer) {\r\n            entry.newer.older = null;\r\n        }\r\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\r\n        if (!this.oldest_) {\r\n            this.newest_ = null;\r\n        }\r\n        --this.count_;\r\n        return entry.value_;\r\n    };\r\n    /**\r\n     * @param {string} key Key.\r\n     * @param {T} value Value.\r\n     */\r\n    LRUCache.prototype.replace = function (key, value) {\r\n        this.get(key); // update `newest_`\r\n        this.entries_[key].value_ = value;\r\n    };\r\n    /**\r\n     * @param {string} key Key.\r\n     * @param {T} value Value.\r\n     */\r\n    LRUCache.prototype.set = function (key, value) {\r\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\r\n        var entry = {\r\n            key_: key,\r\n            newer: null,\r\n            older: this.newest_,\r\n            value_: value\r\n        };\r\n        if (!this.newest_) {\r\n            this.oldest_ = entry;\r\n        }\r\n        else {\r\n            this.newest_.newer = entry;\r\n        }\r\n        this.newest_ = entry;\r\n        this.entries_[key] = entry;\r\n        ++this.count_;\r\n    };\r\n    /**\r\n     * Set a maximum number of entries for the cache.\r\n     * @param {number} size Cache size.\r\n     * @api\r\n     */\r\n    LRUCache.prototype.setSize = function (size) {\r\n        this.highWaterMark = size;\r\n    };\r\n    return LRUCache;\r\n}(EventTarget));\r\nexport default LRUCache;\r\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { getUid } from '../../util.js';\r\nimport LRUCache from '../../structs/LRUCache.js';\r\n/**\r\n * @module ol/render/canvas/LabelCache\r\n */\r\n/**\r\n * @classdesc\r\n * Cache of pre-rendered labels.\r\n * @fires import(\"../events/Event.js\").Event\r\n */\r\nvar LabelCache = /** @class */ (function (_super) {\r\n    __extends(LabelCache, _super);\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    function LabelCache(opt_highWaterMark) {\r\n        var _this = _super.call(this, opt_highWaterMark) || this;\r\n        _this.consumers = {};\r\n        return _this;\r\n    }\r\n    LabelCache.prototype.clear = function () {\r\n        _super.prototype.clear.call(this);\r\n        this.consumers = {};\r\n    };\r\n    /**\r\n     * @override\r\n     * @param {string} key Label key.\r\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\r\n     * @return {HTMLCanvasElement} Label.\r\n     */\r\n    LabelCache.prototype.get = function (key, consumer) {\r\n        var canvas = _super.prototype.get.call(this, key);\r\n        var consumerId = getUid(consumer);\r\n        if (!(consumerId in this.consumers)) {\r\n            this.consumers[consumerId] = {};\r\n        }\r\n        this.consumers[consumerId][key] = true;\r\n        return canvas;\r\n    };\r\n    LabelCache.prototype.prune = function () {\r\n        outer: while (this.canExpireCache()) {\r\n            var key = this.peekLastKey();\r\n            for (var consumerId in this.consumers) {\r\n                if (key in this.consumers[consumerId]) {\r\n                    break outer;\r\n                }\r\n            }\r\n            var canvas = this.pop();\r\n            canvas.width = canvas.height = 0;\r\n            for (var consumerId in this.consumers) {\r\n                delete this.consumers[consumerId][key];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\r\n     */\r\n    LabelCache.prototype.release = function (consumer) {\r\n        delete this.consumers[getUid(consumer)];\r\n    };\r\n    return LabelCache;\r\n}(LRUCache));\r\nexport default LabelCache;\r\n//# sourceMappingURL=LabelCache.js.map","/**\r\n * @module ol/render/canvas\r\n */\r\nimport { getFontFamilies } from '../css.js';\r\nimport { createCanvasContext2D } from '../dom.js';\r\nimport { clear } from '../obj.js';\r\nimport { create as createTransform } from '../transform.js';\r\nimport LabelCache from './canvas/LabelCache.js';\r\n/**\r\n * @typedef {Object} FillState\r\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\r\n */\r\n/**\r\n * @typedef {Object} FillStrokeState\r\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\r\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\r\n * @property {string} [currentLineCap]\r\n * @property {Array<number>} currentLineDash\r\n * @property {number} [currentLineDashOffset]\r\n * @property {string} [currentLineJoin]\r\n * @property {number} [currentLineWidth]\r\n * @property {number} [currentMiterLimit]\r\n * @property {number} [lastStroke]\r\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\r\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\r\n * @property {string} [lineCap]\r\n * @property {Array<number>} lineDash\r\n * @property {number} [lineDashOffset]\r\n * @property {string} [lineJoin]\r\n * @property {number} [lineWidth]\r\n * @property {number} [miterLimit]\r\n */\r\n/**\r\n * @typedef {Object} StrokeState\r\n * @property {string} lineCap\r\n * @property {Array<number>} lineDash\r\n * @property {number} lineDashOffset\r\n * @property {string} lineJoin\r\n * @property {number} lineWidth\r\n * @property {number} miterLimit\r\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\r\n */\r\n/**\r\n * @typedef {Object} TextState\r\n * @property {string} font\r\n * @property {string} [textAlign]\r\n * @property {string} textBaseline\r\n * @property {string} [placement]\r\n * @property {number} [maxAngle]\r\n * @property {boolean} [overflow]\r\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\r\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\r\n * @property {number} [scale]\r\n * @property {Array<number>} [padding]\r\n */\r\n/**\r\n * Container for decluttered replay instructions that need to be rendered or\r\n * omitted together, i.e. when styles render both an image and text, or for the\r\n * characters that form text along lines. The basic elements of this array are\r\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\r\n * rendered extent of the group in pixel space. `count` is the number of styles\r\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\r\n * In addition to these four elements, declutter instruction arrays (i.e. the\r\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\r\n * @typedef {Array<*>} DeclutterGroup\r\n */\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport var defaultFont = '10px sans-serif';\r\n/**\r\n * @const\r\n * @type {import(\"../color.js\").Color}\r\n */\r\nexport var defaultFillStyle = [0, 0, 0, 1];\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport var defaultLineCap = 'round';\r\n/**\r\n * @const\r\n * @type {Array<number>}\r\n */\r\nexport var defaultLineDash = [];\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var defaultLineDashOffset = 0;\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport var defaultLineJoin = 'round';\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var defaultMiterLimit = 10;\r\n/**\r\n * @const\r\n * @type {import(\"../color.js\").Color}\r\n */\r\nexport var defaultStrokeStyle = [0, 0, 0, 1];\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport var defaultTextAlign = 'center';\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport var defaultTextBaseline = 'middle';\r\n/**\r\n * @const\r\n * @type {Array<number>}\r\n */\r\nexport var defaultPadding = [0, 0, 0, 0];\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var defaultLineWidth = 1;\r\n/**\r\n * The label cache for text rendering. To change the default cache size of 2048\r\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\r\n * @type {LabelCache}\r\n * @api\r\n */\r\nexport var labelCache = new LabelCache();\r\n/**\r\n * @type {!Object<string, number>}\r\n */\r\nexport var checkedFonts = {};\r\n/**\r\n * @type {CanvasRenderingContext2D}\r\n */\r\nvar measureContext = null;\r\n/**\r\n * @type {!Object<string, number>}\r\n */\r\nexport var textHeights = {};\r\n/**\r\n * Clears the label cache when a font becomes available.\r\n * @param {string} fontSpec CSS font spec.\r\n */\r\nexport var checkFont = (function () {\r\n    var retries = 60;\r\n    var checked = checkedFonts;\r\n    var size = '32px ';\r\n    var referenceFonts = ['monospace', 'serif'];\r\n    var len = referenceFonts.length;\r\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\r\n    var interval, referenceWidth;\r\n    function isAvailable(font) {\r\n        var context = getMeasureContext();\r\n        // Check weight ranges according to\r\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\r\n        for (var weight = 100; weight <= 700; weight += 300) {\r\n            var fontWeight = weight + ' ';\r\n            var available = true;\r\n            for (var i = 0; i < len; ++i) {\r\n                var referenceFont = referenceFonts[i];\r\n                context.font = fontWeight + size + referenceFont;\r\n                referenceWidth = context.measureText(text).width;\r\n                if (font != referenceFont) {\r\n                    context.font = fontWeight + size + font + ',' + referenceFont;\r\n                    var width = context.measureText(text).width;\r\n                    // If width and referenceWidth are the same, then the fallback was used\r\n                    // instead of the font we wanted, so the font is not available.\r\n                    available = available && width != referenceWidth;\r\n                }\r\n            }\r\n            if (available) {\r\n                // Consider font available when it is available in one weight range.\r\n                //FIXME With this we miss rare corner cases, so we should consider\r\n                //FIXME checking availability for each requested weight range.\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    function check() {\r\n        var done = true;\r\n        for (var font in checked) {\r\n            if (checked[font] < retries) {\r\n                if (isAvailable(font)) {\r\n                    checked[font] = retries;\r\n                    clear(textHeights);\r\n                    // Make sure that loaded fonts are picked up by Safari\r\n                    measureContext = null;\r\n                    labelCache.clear();\r\n                }\r\n                else {\r\n                    ++checked[font];\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n        if (done) {\r\n            clearInterval(interval);\r\n            interval = undefined;\r\n        }\r\n    }\r\n    return function (fontSpec) {\r\n        var fontFamilies = getFontFamilies(fontSpec);\r\n        if (!fontFamilies) {\r\n            return;\r\n        }\r\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\r\n            var fontFamily = fontFamilies[i];\r\n            if (!(fontFamily in checked)) {\r\n                checked[fontFamily] = retries;\r\n                if (!isAvailable(fontFamily)) {\r\n                    checked[fontFamily] = 0;\r\n                    if (interval === undefined) {\r\n                        interval = setInterval(check, 32);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n})();\r\n/**\r\n * @return {CanvasRenderingContext2D} Measure context.\r\n */\r\nfunction getMeasureContext() {\r\n    if (!measureContext) {\r\n        measureContext = createCanvasContext2D(1, 1);\r\n    }\r\n    return measureContext;\r\n}\r\n/**\r\n * @param {string} font Font to use for measuring.\r\n * @return {import(\"../size.js\").Size} Measurement.\r\n */\r\nexport var measureTextHeight = (function () {\r\n    var span;\r\n    var heights = textHeights;\r\n    return function (font) {\r\n        var height = heights[font];\r\n        if (height == undefined) {\r\n            if (!span) {\r\n                span = document.createElement('span');\r\n                span.textContent = 'M';\r\n                span.style.margin = span.style.padding = '0 !important';\r\n                span.style.position = 'absolute !important';\r\n                span.style.left = '-99999px !important';\r\n            }\r\n            span.style.font = font;\r\n            document.body.appendChild(span);\r\n            height = heights[font] = span.offsetHeight;\r\n            document.body.removeChild(span);\r\n        }\r\n        return height;\r\n    };\r\n})();\r\n/**\r\n * @param {string} font Font.\r\n * @param {string} text Text.\r\n * @return {number} Width.\r\n */\r\nexport function measureTextWidth(font, text) {\r\n    var measureContext = getMeasureContext();\r\n    if (font != measureContext.font) {\r\n        measureContext.font = font;\r\n    }\r\n    return measureContext.measureText(text).width;\r\n}\r\n/**\r\n * Measure text width using a cache.\r\n * @param {string} font The font.\r\n * @param {string} text The text to measure.\r\n * @param {Object<string, number>} cache A lookup of cached widths by text.\r\n * @returns {number} The text width.\r\n */\r\nexport function measureAndCacheTextWidth(font, text, cache) {\r\n    if (text in cache) {\r\n        return cache[text];\r\n    }\r\n    var width = cache[text] = measureTextWidth(font, text);\r\n    return width;\r\n}\r\n/**\r\n * @param {string} font Font to use for measuring.\r\n * @param {Array<string>} lines Lines to measure.\r\n * @param {Array<number>} widths Array will be populated with the widths of\r\n * each line.\r\n * @return {number} Width of the whole text.\r\n */\r\nexport function measureTextWidths(font, lines, widths) {\r\n    var numLines = lines.length;\r\n    var width = 0;\r\n    for (var i = 0; i < numLines; ++i) {\r\n        var currentWidth = measureTextWidth(font, lines[i]);\r\n        width = Math.max(width, currentWidth);\r\n        widths.push(currentWidth);\r\n    }\r\n    return width;\r\n}\r\n/**\r\n * @param {CanvasRenderingContext2D} context Context.\r\n * @param {number} rotation Rotation.\r\n * @param {number} offsetX X offset.\r\n * @param {number} offsetY Y offset.\r\n */\r\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\r\n    if (rotation !== 0) {\r\n        context.translate(offsetX, offsetY);\r\n        context.rotate(rotation);\r\n        context.translate(-offsetX, -offsetY);\r\n    }\r\n}\r\nexport var resetTransform = createTransform();\r\n/**\r\n * @param {CanvasRenderingContext2D} context Context.\r\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\r\n * @param {number} opacity Opacity.\r\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\r\n * @param {number} originX Origin X.\r\n * @param {number} originY Origin Y.\r\n * @param {number} w Width.\r\n * @param {number} h Height.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {number} scale Scale.\r\n */\r\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\r\n    var alpha;\r\n    if (opacity != 1) {\r\n        alpha = context.globalAlpha;\r\n        context.globalAlpha = alpha * opacity;\r\n    }\r\n    if (transform) {\r\n        context.setTransform.apply(context, transform);\r\n    }\r\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\r\n    if (alpha) {\r\n        context.globalAlpha = alpha;\r\n    }\r\n    if (transform) {\r\n        context.setTransform.apply(context, resetTransform);\r\n    }\r\n}\r\n//# sourceMappingURL=canvas.js.map","/**\r\n * @module ol/style/RegularShape\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { asString } from '../color.js';\r\nimport { asColorLike } from '../colorlike.js';\r\nimport { createCanvasContext2D } from '../dom.js';\r\nimport ImageState from '../ImageState.js';\r\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\r\nimport ImageStyle from './Image.js';\r\n/**\r\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\r\n * @typedef {Object} Options\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\r\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\r\n * is the number of sides.\r\n * @property {number} [radius] Radius of a regular polygon.\r\n * @property {number} [radius1] Outer radius of a star.\r\n * @property {number} [radius2] Inner radius of a star.\r\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\r\n */\r\n/**\r\n * @typedef {Object} RenderOptions\r\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\r\n * @property {number} strokeWidth\r\n * @property {number} size\r\n * @property {string} lineCap\r\n * @property {Array<number>} lineDash\r\n * @property {number} lineDashOffset\r\n * @property {string} lineJoin\r\n * @property {number} miterLimit\r\n */\r\n/**\r\n * @classdesc\r\n * Set regular shape style for vector features. The resulting shape will be\r\n * a regular polygon when `radius` is provided, or a star when `radius1` and\r\n * `radius2` are provided.\r\n * @api\r\n */\r\nvar RegularShape = /** @class */ (function (_super) {\r\n    __extends(RegularShape, _super);\r\n    /**\r\n     * @param {Options} options Options.\r\n     */\r\n    function RegularShape(options) {\r\n        var _this = this;\r\n        /**\r\n         * @type {boolean}\r\n         */\r\n        var rotateWithView = options.rotateWithView !== undefined ?\r\n            options.rotateWithView : false;\r\n        _this = _super.call(this, {\r\n            opacity: 1,\r\n            rotateWithView: rotateWithView,\r\n            rotation: options.rotation !== undefined ? options.rotation : 0,\r\n            scale: 1\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {HTMLCanvasElement}\r\n         */\r\n        _this.canvas_ = null;\r\n        /**\r\n         * @private\r\n         * @type {HTMLCanvasElement}\r\n         */\r\n        _this.hitDetectionCanvas_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./Fill.js\").default}\r\n         */\r\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        _this.origin_ = [0, 0];\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.points_ = options.points;\r\n        /**\r\n         * @protected\r\n         * @type {number}\r\n         */\r\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\r\n            options.radius : options.radius1);\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.radius2_ = options.radius2;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./Stroke.js\").default}\r\n         */\r\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        _this.anchor_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../size.js\").Size}\r\n         */\r\n        _this.size_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../size.js\").Size}\r\n         */\r\n        _this.imageSize_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../size.js\").Size}\r\n         */\r\n        _this.hitDetectionImageSize_ = null;\r\n        _this.render_();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Clones the style.\r\n     * @return {RegularShape} The cloned style.\r\n     * @api\r\n     */\r\n    RegularShape.prototype.clone = function () {\r\n        var style = new RegularShape({\r\n            fill: this.getFill() ? this.getFill().clone() : undefined,\r\n            points: this.getPoints(),\r\n            radius: this.getRadius(),\r\n            radius2: this.getRadius2(),\r\n            angle: this.getAngle(),\r\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n            rotation: this.getRotation(),\r\n            rotateWithView: this.getRotateWithView()\r\n        });\r\n        style.setOpacity(this.getOpacity());\r\n        style.setScale(this.getScale());\r\n        return style;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    RegularShape.prototype.getAnchor = function () {\r\n        return this.anchor_;\r\n    };\r\n    /**\r\n     * Get the angle used in generating the shape.\r\n     * @return {number} Shape's rotation in radians.\r\n     * @api\r\n     */\r\n    RegularShape.prototype.getAngle = function () {\r\n        return this.angle_;\r\n    };\r\n    /**\r\n     * Get the fill style for the shape.\r\n     * @return {import(\"./Fill.js\").default} Fill style.\r\n     * @api\r\n     */\r\n    RegularShape.prototype.getFill = function () {\r\n        return this.fill_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\r\n        return this.hitDetectionCanvas_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    RegularShape.prototype.getImage = function (pixelRatio) {\r\n        return this.canvas_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RegularShape.prototype.getImageSize = function () {\r\n        return this.imageSize_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RegularShape.prototype.getHitDetectionImageSize = function () {\r\n        return this.hitDetectionImageSize_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RegularShape.prototype.getImageState = function () {\r\n        return ImageState.LOADED;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    RegularShape.prototype.getOrigin = function () {\r\n        return this.origin_;\r\n    };\r\n    /**\r\n     * Get the number of points for generating the shape.\r\n     * @return {number} Number of points for stars and regular polygons.\r\n     * @api\r\n     */\r\n    RegularShape.prototype.getPoints = function () {\r\n        return this.points_;\r\n    };\r\n    /**\r\n     * Get the (primary) radius for the shape.\r\n     * @return {number} Radius.\r\n     * @api\r\n     */\r\n    RegularShape.prototype.getRadius = function () {\r\n        return this.radius_;\r\n    };\r\n    /**\r\n     * Get the secondary radius for the shape.\r\n     * @return {number|undefined} Radius2.\r\n     * @api\r\n     */\r\n    RegularShape.prototype.getRadius2 = function () {\r\n        return this.radius2_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    RegularShape.prototype.getSize = function () {\r\n        return this.size_;\r\n    };\r\n    /**\r\n     * Get the stroke style for the shape.\r\n     * @return {import(\"./Stroke.js\").default} Stroke style.\r\n     * @api\r\n     */\r\n    RegularShape.prototype.getStroke = function () {\r\n        return this.stroke_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RegularShape.prototype.listenImageChange = function (listener, thisArg) {\r\n        return undefined;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RegularShape.prototype.load = function () { };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RegularShape.prototype.unlistenImageChange = function (listener, thisArg) { };\r\n    /**\r\n     * @protected\r\n     */\r\n    RegularShape.prototype.render_ = function () {\r\n        var lineCap = '';\r\n        var lineJoin = '';\r\n        var miterLimit = 0;\r\n        var lineDash = null;\r\n        var lineDashOffset = 0;\r\n        var strokeStyle;\r\n        var strokeWidth = 0;\r\n        if (this.stroke_) {\r\n            strokeStyle = this.stroke_.getColor();\r\n            if (strokeStyle === null) {\r\n                strokeStyle = defaultStrokeStyle;\r\n            }\r\n            strokeStyle = asColorLike(strokeStyle);\r\n            strokeWidth = this.stroke_.getWidth();\r\n            if (strokeWidth === undefined) {\r\n                strokeWidth = defaultLineWidth;\r\n            }\r\n            lineDash = this.stroke_.getLineDash();\r\n            lineDashOffset = this.stroke_.getLineDashOffset();\r\n            lineJoin = this.stroke_.getLineJoin();\r\n            if (lineJoin === undefined) {\r\n                lineJoin = defaultLineJoin;\r\n            }\r\n            lineCap = this.stroke_.getLineCap();\r\n            if (lineCap === undefined) {\r\n                lineCap = defaultLineCap;\r\n            }\r\n            miterLimit = this.stroke_.getMiterLimit();\r\n            if (miterLimit === undefined) {\r\n                miterLimit = defaultMiterLimit;\r\n            }\r\n        }\r\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\r\n        /** @type {RenderOptions} */\r\n        var renderOptions = {\r\n            strokeStyle: strokeStyle,\r\n            strokeWidth: strokeWidth,\r\n            size: size,\r\n            lineCap: lineCap,\r\n            lineDash: lineDash,\r\n            lineDashOffset: lineDashOffset,\r\n            lineJoin: lineJoin,\r\n            miterLimit: miterLimit\r\n        };\r\n        var context = createCanvasContext2D(size, size);\r\n        this.canvas_ = context.canvas;\r\n        // canvas.width and height are rounded to the closest integer\r\n        size = this.canvas_.width;\r\n        var imageSize = size;\r\n        this.draw_(renderOptions, context, 0, 0);\r\n        this.createHitDetectionCanvas_(renderOptions);\r\n        this.anchor_ = [size / 2, size / 2];\r\n        this.size_ = [size, size];\r\n        this.imageSize_ = [imageSize, imageSize];\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {RenderOptions} renderOptions Render options.\r\n     * @param {CanvasRenderingContext2D} context The rendering context.\r\n     * @param {number} x The origin for the symbol (x).\r\n     * @param {number} y The origin for the symbol (y).\r\n     */\r\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\r\n        var i, angle0, radiusC;\r\n        // reset transform\r\n        context.setTransform(1, 0, 0, 1, 0, 0);\r\n        // then move to (x, y)\r\n        context.translate(x, y);\r\n        context.beginPath();\r\n        var points = this.points_;\r\n        if (points === Infinity) {\r\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\r\n        }\r\n        else {\r\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\r\n                : this.radius_;\r\n            if (radius2 !== this.radius_) {\r\n                points = 2 * points;\r\n            }\r\n            for (i = 0; i <= points; i++) {\r\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\r\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\r\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\r\n            }\r\n        }\r\n        if (this.fill_) {\r\n            var color = this.fill_.getColor();\r\n            if (color === null) {\r\n                color = defaultFillStyle;\r\n            }\r\n            context.fillStyle = asColorLike(color);\r\n            context.fill();\r\n        }\r\n        if (this.stroke_) {\r\n            context.strokeStyle = renderOptions.strokeStyle;\r\n            context.lineWidth = renderOptions.strokeWidth;\r\n            if (context.setLineDash && renderOptions.lineDash) {\r\n                context.setLineDash(renderOptions.lineDash);\r\n                context.lineDashOffset = renderOptions.lineDashOffset;\r\n            }\r\n            context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\r\n            context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\r\n            context.miterLimit = renderOptions.miterLimit;\r\n            context.stroke();\r\n        }\r\n        context.closePath();\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {RenderOptions} renderOptions Render options.\r\n     */\r\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\r\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\r\n        if (this.fill_) {\r\n            this.hitDetectionCanvas_ = this.canvas_;\r\n            return;\r\n        }\r\n        // if no fill style is set, create an extra hit-detection image with a\r\n        // default fill style\r\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\r\n        this.hitDetectionCanvas_ = context.canvas;\r\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {RenderOptions} renderOptions Render options.\r\n     * @param {CanvasRenderingContext2D} context The context.\r\n     * @param {number} x The origin for the symbol (x).\r\n     * @param {number} y The origin for the symbol (y).\r\n     */\r\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\r\n        // reset transform\r\n        context.setTransform(1, 0, 0, 1, 0, 0);\r\n        // then move to (x, y)\r\n        context.translate(x, y);\r\n        context.beginPath();\r\n        var points = this.points_;\r\n        if (points === Infinity) {\r\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\r\n        }\r\n        else {\r\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\r\n                : this.radius_;\r\n            if (radius2 !== this.radius_) {\r\n                points = 2 * points;\r\n            }\r\n            var i = void 0, radiusC = void 0, angle0 = void 0;\r\n            for (i = 0; i <= points; i++) {\r\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\r\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\r\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\r\n            }\r\n        }\r\n        context.fillStyle = asString(defaultFillStyle);\r\n        context.fill();\r\n        if (this.stroke_) {\r\n            context.strokeStyle = renderOptions.strokeStyle;\r\n            context.lineWidth = renderOptions.strokeWidth;\r\n            if (renderOptions.lineDash) {\r\n                context.setLineDash(renderOptions.lineDash);\r\n                context.lineDashOffset = renderOptions.lineDashOffset;\r\n            }\r\n            context.stroke();\r\n        }\r\n        context.closePath();\r\n    };\r\n    return RegularShape;\r\n}(ImageStyle));\r\nexport default RegularShape;\r\n//# sourceMappingURL=RegularShape.js.map","/**\r\n * @module ol/style/Circle\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport RegularShape from './RegularShape.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\r\n * @property {number} radius Circle radius.\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n */\r\n/**\r\n * @classdesc\r\n * Set circle style for vector features.\r\n * @api\r\n */\r\nvar CircleStyle = /** @class */ (function (_super) {\r\n    __extends(CircleStyle, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function CircleStyle(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options || /** @type {Options} */ ({});\r\n        _this = _super.call(this, {\r\n            points: Infinity,\r\n            fill: options.fill,\r\n            radius: options.radius,\r\n            stroke: options.stroke\r\n        }) || this;\r\n        return _this;\r\n    }\r\n    /**\r\n    * Clones the style.\r\n    * @return {CircleStyle} The cloned style.\r\n    * @override\r\n    * @api\r\n    */\r\n    CircleStyle.prototype.clone = function () {\r\n        var style = new CircleStyle({\r\n            fill: this.getFill() ? this.getFill().clone() : undefined,\r\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n            radius: this.getRadius()\r\n        });\r\n        style.setOpacity(this.getOpacity());\r\n        style.setScale(this.getScale());\r\n        return style;\r\n    };\r\n    /**\r\n    * Set the circle radius.\r\n    *\r\n    * @param {number} radius Circle radius.\r\n    * @api\r\n    */\r\n    CircleStyle.prototype.setRadius = function (radius) {\r\n        this.radius_ = radius;\r\n    };\r\n    return CircleStyle;\r\n}(RegularShape));\r\nexport default CircleStyle;\r\n//# sourceMappingURL=Circle.js.map","/**\r\n * @module ol/style/Style\r\n */\r\n/**\r\n * Feature styles.\r\n *\r\n * If no style is defined, the following default style is used:\r\n * ```js\r\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\r\n *\r\n *  var fill = new Fill({\r\n *    color: 'rgba(255,255,255,0.4)'\r\n *  });\r\n *  var stroke = new Stroke({\r\n *    color: '#3399CC',\r\n *    width: 1.25\r\n *  });\r\n *  var styles = [\r\n *    new Style({\r\n *      image: new Circle({\r\n *        fill: fill,\r\n *        stroke: stroke,\r\n *        radius: 5\r\n *      }),\r\n *      fill: fill,\r\n *      stroke: stroke\r\n *    })\r\n *  ];\r\n * ```\r\n *\r\n * A separate editing style has the following defaults:\r\n * ```js\r\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\r\n *  import GeometryType from 'ol/geom/GeometryType';\r\n *\r\n *  var white = [255, 255, 255, 1];\r\n *  var blue = [0, 153, 255, 1];\r\n *  var width = 3;\r\n *  styles[GeometryType.POLYGON] = [\r\n *    new Style({\r\n *      fill: new Fill({\r\n *        color: [255, 255, 255, 0.5]\r\n *      })\r\n *    })\r\n *  ];\r\n *  styles[GeometryType.MULTI_POLYGON] =\r\n *      styles[GeometryType.POLYGON];\r\n *  styles[GeometryType.LINE_STRING] = [\r\n *    new Style({\r\n *      stroke: new Stroke({\r\n *        color: white,\r\n *        width: width + 2\r\n *      })\r\n *    }),\r\n *    new Style({\r\n *      stroke: new Stroke({\r\n *        color: blue,\r\n *        width: width\r\n *      })\r\n *    })\r\n *  ];\r\n *  styles[GeometryType.MULTI_LINE_STRING] =\r\n *      styles[GeometryType.LINE_STRING];\r\n *  styles[GeometryType.POINT] = [\r\n *    new Style({\r\n *      image: new Circle({\r\n *        radius: width * 2,\r\n *        fill: new Fill({\r\n *          color: blue\r\n *        }),\r\n *        stroke: new Stroke({\r\n *          color: white,\r\n *          width: width / 2\r\n *        })\r\n *      }),\r\n *      zIndex: Infinity\r\n *    })\r\n *  ];\r\n *  styles[GeometryType.MULTI_POINT] =\r\n *      styles[GeometryType.POINT];\r\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\r\n *      styles[GeometryType.POLYGON].concat(\r\n *          styles[GeometryType.LINE_STRING],\r\n *          styles[GeometryType.POINT]\r\n *      );\r\n * ```\r\n */\r\nimport { assert } from '../asserts.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport CircleStyle from './Circle.js';\r\nimport Fill from './Fill.js';\r\nimport Stroke from './Stroke.js';\r\n/**\r\n * A function that takes an {@link module:ol/Feature} and a `{number}`\r\n * representing the view's resolution. The function should return a\r\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\r\n * vector layer can be styled.\r\n *\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\r\n */\r\n/**\r\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\r\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\r\n */\r\n/**\r\n * A function that takes an {@link module:ol/Feature} as argument and returns an\r\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\r\n *\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\r\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\r\n */\r\n/**\r\n * Custom renderer function. Takes two arguments:\r\n *\r\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\r\n * 2. The {@link module:ol/render~State} of the layer renderer.\r\n *\r\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\r\n * RenderFunction\r\n */\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\r\n * or function returning a geometry to render for this style.\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\r\n * @property {import(\"./Image.js\").default} [image] Image style.\r\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\r\n * ignored, and the provided function will be called with each render frame for each geometry.\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {import(\"./Text.js\").default} [text] Text style.\r\n * @property {number} [zIndex] Z index.\r\n */\r\n/**\r\n * @classdesc\r\n * Container for vector feature rendering styles. Any changes made to the style\r\n * or its children through `set*()` methods will not take effect until the\r\n * feature or layer that uses the style is re-rendered.\r\n * @api\r\n */\r\nvar Style = /** @class */ (function () {\r\n    /**\r\n     * @param {Options=} opt_options Style options.\r\n     */\r\n    function Style(opt_options) {\r\n        var options = opt_options || {};\r\n        /**\r\n         * @private\r\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\r\n         */\r\n        this.geometry_ = null;\r\n        /**\r\n         * @private\r\n         * @type {!GeometryFunction}\r\n         */\r\n        this.geometryFunction_ = defaultGeometryFunction;\r\n        if (options.geometry !== undefined) {\r\n            this.setGeometry(options.geometry);\r\n        }\r\n        /**\r\n         * @private\r\n         * @type {import(\"./Fill.js\").default}\r\n         */\r\n        this.fill_ = options.fill !== undefined ? options.fill : null;\r\n        /**\r\n           * @private\r\n           * @type {import(\"./Image.js\").default}\r\n           */\r\n        this.image_ = options.image !== undefined ? options.image : null;\r\n        /**\r\n         * @private\r\n         * @type {RenderFunction|null}\r\n         */\r\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./Stroke.js\").default}\r\n         */\r\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./Text.js\").default}\r\n         */\r\n        this.text_ = options.text !== undefined ? options.text : null;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        this.zIndex_ = options.zIndex;\r\n    }\r\n    /**\r\n     * Clones the style.\r\n     * @return {Style} The cloned style.\r\n     * @api\r\n     */\r\n    Style.prototype.clone = function () {\r\n        var geometry = this.getGeometry();\r\n        if (geometry && typeof geometry === 'object') {\r\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\r\n        }\r\n        return new Style({\r\n            geometry: geometry,\r\n            fill: this.getFill() ? this.getFill().clone() : undefined,\r\n            image: this.getImage() ? this.getImage().clone() : undefined,\r\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n            text: this.getText() ? this.getText().clone() : undefined,\r\n            zIndex: this.getZIndex()\r\n        });\r\n    };\r\n    /**\r\n     * Get the custom renderer function that was configured with\r\n     * {@link #setRenderer} or the `renderer` constructor option.\r\n     * @return {RenderFunction|null} Custom renderer function.\r\n     * @api\r\n     */\r\n    Style.prototype.getRenderer = function () {\r\n        return this.renderer_;\r\n    };\r\n    /**\r\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\r\n     * and `image` options of the style will be ignored.\r\n     * @param {RenderFunction|null} renderer Custom renderer function.\r\n     * @api\r\n     */\r\n    Style.prototype.setRenderer = function (renderer) {\r\n        this.renderer_ = renderer;\r\n    };\r\n    /**\r\n     * Get the geometry to be rendered.\r\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\r\n     * Feature property or geometry or function that returns the geometry that will\r\n     * be rendered with this style.\r\n     * @api\r\n     */\r\n    Style.prototype.getGeometry = function () {\r\n        return this.geometry_;\r\n    };\r\n    /**\r\n     * Get the function used to generate a geometry for rendering.\r\n     * @return {!GeometryFunction} Function that is called with a feature\r\n     * and returns the geometry to render instead of the feature's geometry.\r\n     * @api\r\n     */\r\n    Style.prototype.getGeometryFunction = function () {\r\n        return this.geometryFunction_;\r\n    };\r\n    /**\r\n     * Get the fill style.\r\n     * @return {import(\"./Fill.js\").default} Fill style.\r\n     * @api\r\n     */\r\n    Style.prototype.getFill = function () {\r\n        return this.fill_;\r\n    };\r\n    /**\r\n     * Set the fill style.\r\n     * @param {import(\"./Fill.js\").default} fill Fill style.\r\n     * @api\r\n     */\r\n    Style.prototype.setFill = function (fill) {\r\n        this.fill_ = fill;\r\n    };\r\n    /**\r\n     * Get the image style.\r\n     * @return {import(\"./Image.js\").default} Image style.\r\n     * @api\r\n     */\r\n    Style.prototype.getImage = function () {\r\n        return this.image_;\r\n    };\r\n    /**\r\n     * Set the image style.\r\n     * @param {import(\"./Image.js\").default} image Image style.\r\n     * @api\r\n     */\r\n    Style.prototype.setImage = function (image) {\r\n        this.image_ = image;\r\n    };\r\n    /**\r\n     * Get the stroke style.\r\n     * @return {import(\"./Stroke.js\").default} Stroke style.\r\n     * @api\r\n     */\r\n    Style.prototype.getStroke = function () {\r\n        return this.stroke_;\r\n    };\r\n    /**\r\n     * Set the stroke style.\r\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\r\n     * @api\r\n     */\r\n    Style.prototype.setStroke = function (stroke) {\r\n        this.stroke_ = stroke;\r\n    };\r\n    /**\r\n     * Get the text style.\r\n     * @return {import(\"./Text.js\").default} Text style.\r\n     * @api\r\n     */\r\n    Style.prototype.getText = function () {\r\n        return this.text_;\r\n    };\r\n    /**\r\n     * Set the text style.\r\n     * @param {import(\"./Text.js\").default} text Text style.\r\n     * @api\r\n     */\r\n    Style.prototype.setText = function (text) {\r\n        this.text_ = text;\r\n    };\r\n    /**\r\n     * Get the z-index for the style.\r\n     * @return {number|undefined} ZIndex.\r\n     * @api\r\n     */\r\n    Style.prototype.getZIndex = function () {\r\n        return this.zIndex_;\r\n    };\r\n    /**\r\n     * Set a geometry that is rendered instead of the feature's geometry.\r\n     *\r\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\r\n     *     Feature property or geometry or function returning a geometry to render\r\n     *     for this style.\r\n     * @api\r\n     */\r\n    Style.prototype.setGeometry = function (geometry) {\r\n        if (typeof geometry === 'function') {\r\n            this.geometryFunction_ = geometry;\r\n        }\r\n        else if (typeof geometry === 'string') {\r\n            this.geometryFunction_ = function (feature) {\r\n                return (\r\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\r\n            };\r\n        }\r\n        else if (!geometry) {\r\n            this.geometryFunction_ = defaultGeometryFunction;\r\n        }\r\n        else if (geometry !== undefined) {\r\n            this.geometryFunction_ = function () {\r\n                return (\r\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\r\n            };\r\n        }\r\n        this.geometry_ = geometry;\r\n    };\r\n    /**\r\n     * Set the z-index.\r\n     *\r\n     * @param {number|undefined} zIndex ZIndex.\r\n     * @api\r\n     */\r\n    Style.prototype.setZIndex = function (zIndex) {\r\n        this.zIndex_ = zIndex;\r\n    };\r\n    return Style;\r\n}());\r\n/**\r\n * Convert the provided object into a style function.  Functions passed through\r\n * unchanged.  Arrays of Style or single style objects wrapped in a\r\n * new style function.\r\n * @param {StyleFunction|Array<Style>|Style} obj\r\n *     A style function, a single style, or an array of styles.\r\n * @return {StyleFunction} A style function.\r\n */\r\nexport function toFunction(obj) {\r\n    var styleFunction;\r\n    if (typeof obj === 'function') {\r\n        styleFunction = obj;\r\n    }\r\n    else {\r\n        /**\r\n         * @type {Array<Style>}\r\n         */\r\n        var styles_1;\r\n        if (Array.isArray(obj)) {\r\n            styles_1 = obj;\r\n        }\r\n        else {\r\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\r\n            var style = /** @type {Style} */ (obj);\r\n            styles_1 = [style];\r\n        }\r\n        styleFunction = function () {\r\n            return styles_1;\r\n        };\r\n    }\r\n    return styleFunction;\r\n}\r\n/**\r\n * @type {Array<Style>}\r\n */\r\nvar defaultStyles = null;\r\n/**\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} resolution Resolution.\r\n * @return {Array<Style>} Style.\r\n */\r\nexport function createDefaultStyle(feature, resolution) {\r\n    // We don't use an immediately-invoked function\r\n    // and a closure so we don't get an error at script evaluation time in\r\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\r\n    // canvas.getContext('2d') at construction time, which will cause an.error\r\n    // in such browsers.)\r\n    if (!defaultStyles) {\r\n        var fill = new Fill({\r\n            color: 'rgba(255,255,255,0.4)'\r\n        });\r\n        var stroke = new Stroke({\r\n            color: '#3399CC',\r\n            width: 1.25\r\n        });\r\n        defaultStyles = [\r\n            new Style({\r\n                image: new CircleStyle({\r\n                    fill: fill,\r\n                    stroke: stroke,\r\n                    radius: 5\r\n                }),\r\n                fill: fill,\r\n                stroke: stroke\r\n            })\r\n        ];\r\n    }\r\n    return defaultStyles;\r\n}\r\n/**\r\n * Default styles for editing features.\r\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\r\n */\r\nexport function createEditingStyle() {\r\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\r\n    var styles = {};\r\n    var white = [255, 255, 255, 1];\r\n    var blue = [0, 153, 255, 1];\r\n    var width = 3;\r\n    styles[GeometryType.POLYGON] = [\r\n        new Style({\r\n            fill: new Fill({\r\n                color: [255, 255, 255, 0.5]\r\n            })\r\n        })\r\n    ];\r\n    styles[GeometryType.MULTI_POLYGON] =\r\n        styles[GeometryType.POLYGON];\r\n    styles[GeometryType.LINE_STRING] = [\r\n        new Style({\r\n            stroke: new Stroke({\r\n                color: white,\r\n                width: width + 2\r\n            })\r\n        }),\r\n        new Style({\r\n            stroke: new Stroke({\r\n                color: blue,\r\n                width: width\r\n            })\r\n        })\r\n    ];\r\n    styles[GeometryType.MULTI_LINE_STRING] =\r\n        styles[GeometryType.LINE_STRING];\r\n    styles[GeometryType.CIRCLE] =\r\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\r\n    styles[GeometryType.POINT] = [\r\n        new Style({\r\n            image: new CircleStyle({\r\n                radius: width * 2,\r\n                fill: new Fill({\r\n                    color: blue\r\n                }),\r\n                stroke: new Stroke({\r\n                    color: white,\r\n                    width: width / 2\r\n                })\r\n            }),\r\n            zIndex: Infinity\r\n        })\r\n    ];\r\n    styles[GeometryType.MULTI_POINT] =\r\n        styles[GeometryType.POINT];\r\n    styles[GeometryType.GEOMETRY_COLLECTION] =\r\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\r\n    return styles;\r\n}\r\n/**\r\n * Function that is called with a feature and returns its default geometry.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\r\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\r\n */\r\nfunction defaultGeometryFunction(feature) {\r\n    return feature.getGeometry();\r\n}\r\nexport default Style;\r\n//# sourceMappingURL=Style.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/KML\r\n */\r\nimport Feature from '../Feature.js';\r\nimport { extend, includes } from '../array.js';\r\nimport { assert } from '../asserts.js';\r\nimport { asArray } from '../color.js';\r\nimport { transformGeometryWithOptions } from './Feature.js';\r\nimport XMLFeature from './XMLFeature.js';\r\nimport { readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode } from './xsd.js';\r\nimport GeometryCollection from '../geom/GeometryCollection.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport { toRadians } from '../math.js';\r\nimport { get as getProjection } from '../proj.js';\r\nimport Fill from '../style/Fill.js';\r\nimport Icon from '../style/Icon.js';\r\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\r\nimport IconOrigin from '../style/IconOrigin.js';\r\nimport Stroke from '../style/Stroke.js';\r\nimport Style from '../style/Style.js';\r\nimport Text from '../style/Text.js';\r\nimport { createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\r\n/**\r\n * @typedef {Object} Vec2\r\n * @property {number} x\r\n * @property {IconAnchorUnits} xunits\r\n * @property {number} y\r\n * @property {IconAnchorUnits} yunits\r\n * @property {IconOrigin} origin\r\n */\r\n/**\r\n * @typedef {Object} GxTrackObject\r\n * @property {Array<number>} flatCoordinates\r\n * @property {Array<number>} whens\r\n */\r\n/**\r\n * @const\r\n * @type {Array<string>}\r\n */\r\nvar GX_NAMESPACE_URIS = [\r\n    'http://www.google.com/kml/ext/2.2'\r\n];\r\n/**\r\n * @const\r\n * @type {Array<null|string>}\r\n */\r\nvar NAMESPACE_URIS = [\r\n    null,\r\n    'http://earth.google.com/kml/2.0',\r\n    'http://earth.google.com/kml/2.1',\r\n    'http://earth.google.com/kml/2.2',\r\n    'http://www.opengis.net/kml/2.2'\r\n];\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\r\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\r\n/**\r\n * @type {Object<string, IconAnchorUnits>}\r\n */\r\nvar ICON_ANCHOR_UNITS_MAP = {\r\n    'fraction': IconAnchorUnits.FRACTION,\r\n    'pixels': IconAnchorUnits.PIXELS,\r\n    'insetPixels': IconAnchorUnits.PIXELS\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'ExtendedData': extendedDataParser,\r\n    'Region': regionParser,\r\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\r\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\r\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\r\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\r\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\r\n    'Style': makeObjectPropertySetter(readStyle),\r\n    'StyleMap': placemarkStyleMapParser,\r\n    'address': makeObjectPropertySetter(readString),\r\n    'description': makeObjectPropertySetter(readString),\r\n    'name': makeObjectPropertySetter(readString),\r\n    'open': makeObjectPropertySetter(readBoolean),\r\n    'phoneNumber': makeObjectPropertySetter(readString),\r\n    'styleUrl': makeObjectPropertySetter(readURI),\r\n    'visibility': makeObjectPropertySetter(readBoolean)\r\n}, makeStructureNS(GX_NAMESPACE_URIS, {\r\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\r\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry')\r\n}));\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'ExtendedData': extendedDataParser,\r\n    'Region': regionParser,\r\n    'Link': linkParser,\r\n    'address': makeObjectPropertySetter(readString),\r\n    'description': makeObjectPropertySetter(readString),\r\n    'name': makeObjectPropertySetter(readString),\r\n    'open': makeObjectPropertySetter(readBoolean),\r\n    'phoneNumber': makeObjectPropertySetter(readString),\r\n    'visibility': makeObjectPropertySetter(readBoolean)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'href': makeObjectPropertySetter(readURI)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'LatLonAltBox': latLonAltBoxParser,\r\n    'Lod': lodParser\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\r\n    'Document', 'Placemark'\r\n]);\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Document': makeChildAppender(writeDocument),\r\n    'Placemark': makeChildAppender(writePlacemark)\r\n});\r\n/**\r\n * @type {import(\"../color.js\").Color}\r\n */\r\nvar DEFAULT_COLOR;\r\n/**\r\n * @type {Fill}\r\n */\r\nvar DEFAULT_FILL_STYLE = null;\r\n/**\r\n * Get the default fill style (or null if not yet set).\r\n * @return {Fill} The default fill style.\r\n */\r\nexport function getDefaultFillStyle() {\r\n    return DEFAULT_FILL_STYLE;\r\n}\r\n/**\r\n * @type {import(\"../size.js\").Size}\r\n */\r\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\r\n/**\r\n * @type {IconAnchorUnits}\r\n */\r\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\r\n/**\r\n * @type {IconAnchorUnits}\r\n */\r\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\r\n/**\r\n * @type {import(\"../size.js\").Size}\r\n */\r\nvar DEFAULT_IMAGE_STYLE_SIZE;\r\n/**\r\n * @type {string}\r\n */\r\nvar DEFAULT_IMAGE_STYLE_SRC;\r\n/**\r\n * @type {number}\r\n */\r\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\r\n/**\r\n * @type {import(\"../style/Image.js\").default}\r\n */\r\nvar DEFAULT_IMAGE_STYLE = null;\r\n/**\r\n * Get the default image style (or null if not yet set).\r\n * @return {import(\"../style/Image.js\").default} The default image style.\r\n */\r\nexport function getDefaultImageStyle() {\r\n    return DEFAULT_IMAGE_STYLE;\r\n}\r\n/**\r\n * @type {string}\r\n */\r\nvar DEFAULT_NO_IMAGE_STYLE;\r\n/**\r\n * @type {Stroke}\r\n */\r\nvar DEFAULT_STROKE_STYLE = null;\r\n/**\r\n * Get the default stroke style (or null if not yet set).\r\n * @return {Stroke} The default stroke style.\r\n */\r\nexport function getDefaultStrokeStyle() {\r\n    return DEFAULT_STROKE_STYLE;\r\n}\r\n/**\r\n * @type {Stroke}\r\n */\r\nvar DEFAULT_TEXT_STROKE_STYLE;\r\n/**\r\n * @type {Text}\r\n */\r\nvar DEFAULT_TEXT_STYLE = null;\r\n/**\r\n * Get the default text style (or null if not yet set).\r\n * @return {Text} The default text style.\r\n */\r\nexport function getDefaultTextStyle() {\r\n    return DEFAULT_TEXT_STYLE;\r\n}\r\n/**\r\n * @type {Style}\r\n */\r\nvar DEFAULT_STYLE = null;\r\n/**\r\n * Get the default style (or null if not yet set).\r\n * @return {Style} The default style.\r\n */\r\nexport function getDefaultStyle() {\r\n    return DEFAULT_STYLE;\r\n}\r\n/**\r\n * @type {Array<Style>}\r\n */\r\nvar DEFAULT_STYLE_ARRAY = null;\r\n/**\r\n * Get the default style array (or null if not yet set).\r\n * @return {Array<Style>} The default style.\r\n */\r\nexport function getDefaultStyleArray() {\r\n    return DEFAULT_STYLE_ARRAY;\r\n}\r\nfunction createStyleDefaults() {\r\n    DEFAULT_COLOR = [255, 255, 255, 1];\r\n    DEFAULT_FILL_STYLE = new Fill({\r\n        color: DEFAULT_COLOR\r\n    });\r\n    DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\r\n    DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\r\n    DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\r\n    DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\r\n    DEFAULT_IMAGE_STYLE_SRC =\r\n        'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\r\n    DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\r\n    DEFAULT_IMAGE_STYLE = new Icon({\r\n        anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\r\n        anchorOrigin: IconOrigin.BOTTOM_LEFT,\r\n        anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\r\n        anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\r\n        crossOrigin: 'anonymous',\r\n        rotation: 0,\r\n        scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\r\n        size: DEFAULT_IMAGE_STYLE_SIZE,\r\n        src: DEFAULT_IMAGE_STYLE_SRC\r\n    });\r\n    DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\r\n    DEFAULT_STROKE_STYLE = new Stroke({\r\n        color: DEFAULT_COLOR,\r\n        width: 1\r\n    });\r\n    DEFAULT_TEXT_STROKE_STYLE = new Stroke({\r\n        color: [51, 51, 51, 1],\r\n        width: 2\r\n    });\r\n    DEFAULT_TEXT_STYLE = new Text({\r\n        font: 'bold 16px Helvetica',\r\n        fill: DEFAULT_FILL_STYLE,\r\n        stroke: DEFAULT_TEXT_STROKE_STYLE,\r\n        scale: 0.8\r\n    });\r\n    DEFAULT_STYLE = new Style({\r\n        fill: DEFAULT_FILL_STYLE,\r\n        image: DEFAULT_IMAGE_STYLE,\r\n        text: DEFAULT_TEXT_STYLE,\r\n        stroke: DEFAULT_STROKE_STYLE,\r\n        zIndex: 0\r\n    });\r\n    DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\r\n}\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\r\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\r\n * @property {Array<Style>} [defaultStyle] Default style. The\r\n * default default style is the same as Google Earth.\r\n * @property {boolean} [writeStyles=true] Write styles into KML.\r\n */\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the KML format.\r\n *\r\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\r\n * a KML source.\r\n *\r\n * MultiGeometries are converted into GeometryCollections if they are a mix of\r\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\r\n * all of the same type.\r\n *\r\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\r\n * which do not support this will need a URL polyfill to be loaded before use.\r\n *\r\n * @api\r\n */\r\nvar KML = /** @class */ (function (_super) {\r\n    __extends(KML, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function KML(opt_options) {\r\n        var _this = _super.call(this) || this;\r\n        var options = opt_options ? opt_options : {};\r\n        if (!DEFAULT_STYLE_ARRAY) {\r\n            createStyleDefaults();\r\n        }\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        _this.dataProjection = getProjection('EPSG:4326');\r\n        /**\r\n         * @private\r\n         * @type {Array<Style>}\r\n         */\r\n        _this.defaultStyle_ = options.defaultStyle ?\r\n            options.defaultStyle : DEFAULT_STYLE_ARRAY;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.extractStyles_ = options.extractStyles !== undefined ?\r\n            options.extractStyles : true;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.writeStyles_ = options.writeStyles !== undefined ?\r\n            options.writeStyles : true;\r\n        /**\r\n         * @private\r\n         * @type {!Object<string, (Array<Style>|string)>}\r\n         */\r\n        _this.sharedStyles_ = {};\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.showPointNames_ = options.showPointNames !== undefined ?\r\n            options.showPointNames : true;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {Array<Feature>|undefined} Features.\r\n     */\r\n    KML.prototype.readDocumentOrFolder_ = function (node, objectStack) {\r\n        // FIXME use scope somehow\r\n        var parsersNS = makeStructureNS(NAMESPACE_URIS, {\r\n            'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\r\n            'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\r\n            'Placemark': makeArrayPusher(this.readPlacemark_, this),\r\n            'Style': this.readSharedStyle_.bind(this),\r\n            'StyleMap': this.readSharedStyleMap_.bind(this)\r\n        });\r\n        /** @type {Array<Feature>} */\r\n        var features = pushParseAndPop([], parsersNS, node, objectStack, this);\r\n        if (features) {\r\n            return features;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     * @return {Feature|undefined} Feature.\r\n     */\r\n    KML.prototype.readPlacemark_ = function (node, objectStack) {\r\n        var object = pushParseAndPop({ 'geometry': null }, PLACEMARK_PARSERS, node, objectStack);\r\n        if (!object) {\r\n            return undefined;\r\n        }\r\n        var feature = new Feature();\r\n        var id = node.getAttribute('id');\r\n        if (id !== null) {\r\n            feature.setId(id);\r\n        }\r\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\r\n        var geometry = object['geometry'];\r\n        if (geometry) {\r\n            transformGeometryWithOptions(geometry, false, options);\r\n        }\r\n        feature.setGeometry(geometry);\r\n        delete object['geometry'];\r\n        if (this.extractStyles_) {\r\n            var style = object['Style'];\r\n            var styleUrl = object['styleUrl'];\r\n            var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\r\n            feature.setStyle(styleFunction);\r\n        }\r\n        delete object['Style'];\r\n        // we do not remove the styleUrl property from the object, so it\r\n        // gets stored on feature when setProperties is called\r\n        feature.setProperties(object, true);\r\n        return feature;\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     */\r\n    KML.prototype.readSharedStyle_ = function (node, objectStack) {\r\n        var id = node.getAttribute('id');\r\n        if (id !== null) {\r\n            var style = readStyle(node, objectStack);\r\n            if (style) {\r\n                var styleUri = void 0;\r\n                var baseURI = node.baseURI;\r\n                if (!baseURI || baseURI == 'about:blank') {\r\n                    baseURI = window.location.href;\r\n                }\r\n                if (baseURI) {\r\n                    var url = new URL('#' + id, baseURI);\r\n                    styleUri = url.href;\r\n                }\r\n                else {\r\n                    styleUri = '#' + id;\r\n                }\r\n                this.sharedStyles_[styleUri] = style;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @private\r\n     */\r\n    KML.prototype.readSharedStyleMap_ = function (node, objectStack) {\r\n        var id = node.getAttribute('id');\r\n        if (id === null) {\r\n            return;\r\n        }\r\n        var styleMapValue = readStyleMapValue(node, objectStack);\r\n        if (!styleMapValue) {\r\n            return;\r\n        }\r\n        var styleUri;\r\n        var baseURI = node.baseURI;\r\n        if (!baseURI || baseURI == 'about:blank') {\r\n            baseURI = window.location.href;\r\n        }\r\n        if (baseURI) {\r\n            var url = new URL('#' + id, baseURI);\r\n            styleUri = url.href;\r\n        }\r\n        else {\r\n            styleUri = '#' + id;\r\n        }\r\n        this.sharedStyles_[styleUri] = styleMapValue;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KML.prototype.readFeatureFromNode = function (node, opt_options) {\r\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\r\n            return null;\r\n        }\r\n        var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\r\n        if (feature) {\r\n            return feature;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KML.prototype.readFeaturesFromNode = function (node, opt_options) {\r\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\r\n            return [];\r\n        }\r\n        var features;\r\n        var localName = node.localName;\r\n        if (localName == 'Document' || localName == 'Folder') {\r\n            features = this.readDocumentOrFolder_(node, [this.getReadOptions(node, opt_options)]);\r\n            if (features) {\r\n                return features;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        }\r\n        else if (localName == 'Placemark') {\r\n            var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\r\n            if (feature) {\r\n                return [feature];\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        }\r\n        else if (localName == 'kml') {\r\n            features = [];\r\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n                var fs = this.readFeaturesFromNode(n, opt_options);\r\n                if (fs) {\r\n                    extend(features, fs);\r\n                }\r\n            }\r\n            return features;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Read the name of the KML.\r\n     *\r\n     * @param {Document|Element|string} source Source.\r\n     * @return {string|undefined} Name.\r\n     * @api\r\n     */\r\n    KML.prototype.readName = function (source) {\r\n        if (!source) {\r\n            return undefined;\r\n        }\r\n        else if (typeof source === 'string') {\r\n            var doc = parse(source);\r\n            return this.readNameFromDocument(doc);\r\n        }\r\n        else if (isDocument(source)) {\r\n            return this.readNameFromDocument(/** @type {Document} */ (source));\r\n        }\r\n        else {\r\n            return this.readNameFromNode(/** @type {Element} */ (source));\r\n        }\r\n    };\r\n    /**\r\n     * @param {Document} doc Document.\r\n     * @return {string|undefined} Name.\r\n     */\r\n    KML.prototype.readNameFromDocument = function (doc) {\r\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n            if (n.nodeType == Node.ELEMENT_NODE) {\r\n                var name_1 = this.readNameFromNode(/** @type {Element} */ (n));\r\n                if (name_1) {\r\n                    return name_1;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @return {string|undefined} Name.\r\n     */\r\n    KML.prototype.readNameFromNode = function (node) {\r\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\r\n                n.localName == 'name') {\r\n                return readString(n);\r\n            }\r\n        }\r\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n            var localName = n.localName;\r\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\r\n                (localName == 'Document' ||\r\n                    localName == 'Folder' ||\r\n                    localName == 'Placemark' ||\r\n                    localName == 'kml')) {\r\n                var name_2 = this.readNameFromNode(n);\r\n                if (name_2) {\r\n                    return name_2;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    /**\r\n     * Read the network links of the KML.\r\n     *\r\n     * @param {Document|Element|string} source Source.\r\n     * @return {Array<Object>} Network links.\r\n     * @api\r\n     */\r\n    KML.prototype.readNetworkLinks = function (source) {\r\n        var networkLinks = [];\r\n        if (typeof source === 'string') {\r\n            var doc = parse(source);\r\n            extend(networkLinks, this.readNetworkLinksFromDocument(doc));\r\n        }\r\n        else if (isDocument(source)) {\r\n            extend(networkLinks, this.readNetworkLinksFromDocument(\r\n            /** @type {Document} */ (source)));\r\n        }\r\n        else {\r\n            extend(networkLinks, this.readNetworkLinksFromNode(\r\n            /** @type {Element} */ (source)));\r\n        }\r\n        return networkLinks;\r\n    };\r\n    /**\r\n     * @param {Document} doc Document.\r\n     * @return {Array<Object>} Network links.\r\n     */\r\n    KML.prototype.readNetworkLinksFromDocument = function (doc) {\r\n        var networkLinks = [];\r\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n            if (n.nodeType == Node.ELEMENT_NODE) {\r\n                extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\r\n            }\r\n        }\r\n        return networkLinks;\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @return {Array<Object>} Network links.\r\n     */\r\n    KML.prototype.readNetworkLinksFromNode = function (node) {\r\n        var networkLinks = [];\r\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\r\n                n.localName == 'NetworkLink') {\r\n                var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\r\n                networkLinks.push(obj);\r\n            }\r\n        }\r\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n            var localName = n.localName;\r\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\r\n                (localName == 'Document' ||\r\n                    localName == 'Folder' ||\r\n                    localName == 'kml')) {\r\n                extend(networkLinks, this.readNetworkLinksFromNode(n));\r\n            }\r\n        }\r\n        return networkLinks;\r\n    };\r\n    /**\r\n     * Read the regions of the KML.\r\n     *\r\n     * @param {Document|Element|string} source Source.\r\n     * @return {Array<Object>} Regions.\r\n     * @api\r\n     */\r\n    KML.prototype.readRegion = function (source) {\r\n        var regions = [];\r\n        if (typeof source === 'string') {\r\n            var doc = parse(source);\r\n            extend(regions, this.readRegionFromDocument(doc));\r\n        }\r\n        else if (isDocument(source)) {\r\n            extend(regions, this.readRegionFromDocument(\r\n            /** @type {Document} */ (source)));\r\n        }\r\n        else {\r\n            extend(regions, this.readRegionFromNode(\r\n            /** @type {Element} */ (source)));\r\n        }\r\n        return regions;\r\n    };\r\n    /**\r\n     * @param {Document} doc Document.\r\n     * @return {Array<Object>} Region.\r\n     */\r\n    KML.prototype.readRegionFromDocument = function (doc) {\r\n        var regions = [];\r\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n            if (n.nodeType == Node.ELEMENT_NODE) {\r\n                extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\r\n            }\r\n        }\r\n        return regions;\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @return {Array<Object>} Region.\r\n     * @api\r\n     */\r\n    KML.prototype.readRegionFromNode = function (node) {\r\n        var regions = [];\r\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\r\n                n.localName == 'Region') {\r\n                var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\r\n                regions.push(obj);\r\n            }\r\n        }\r\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n            var localName = n.localName;\r\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\r\n                (localName == 'Document' ||\r\n                    localName == 'Folder' ||\r\n                    localName == 'kml')) {\r\n                extend(regions, this.readRegionFromNode(n));\r\n            }\r\n        }\r\n        return regions;\r\n    };\r\n    /**\r\n     * Encode an array of features in the KML format as an XML node. GeometryCollections,\r\n     * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\r\n     *\r\n     * @param {Array<Feature>} features Features.\r\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n     * @return {Node} Node.\r\n     * @override\r\n     * @api\r\n     */\r\n    KML.prototype.writeFeaturesNode = function (features, opt_options) {\r\n        opt_options = this.adaptOptions(opt_options);\r\n        var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\r\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\r\n        kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\r\n        kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\r\n        kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\r\n        var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: kml };\r\n        /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\r\n        var properties = {};\r\n        if (features.length > 1) {\r\n            properties['Document'] = features;\r\n        }\r\n        else if (features.length == 1) {\r\n            properties['Placemark'] = features[0];\r\n        }\r\n        var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\r\n        var values = makeSequence(properties, orderedKeys);\r\n        pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\r\n        return kml;\r\n    };\r\n    return KML;\r\n}(XMLFeature));\r\n/**\r\n * @param {Style|undefined} foundStyle Style.\r\n * @param {string} name Name.\r\n * @return {Style} style Style.\r\n */\r\nfunction createNameStyleFunction(foundStyle, name) {\r\n    var textStyle = null;\r\n    var textOffset = [0, 0];\r\n    var textAlign = 'start';\r\n    if (foundStyle.getImage()) {\r\n        var imageSize = foundStyle.getImage().getImageSize();\r\n        if (imageSize === null) {\r\n            imageSize = DEFAULT_IMAGE_STYLE_SIZE;\r\n        }\r\n        if (imageSize.length == 2) {\r\n            var imageScale = foundStyle.getImage().getScale();\r\n            // Offset the label to be centered to the right of the icon, if there is\r\n            // one.\r\n            textOffset[0] = imageScale * imageSize[0] / 2;\r\n            textOffset[1] = -imageScale * imageSize[1] / 2;\r\n            textAlign = 'left';\r\n        }\r\n    }\r\n    if (foundStyle.getText() !== null) {\r\n        // clone the text style, customizing it with name, alignments and offset.\r\n        // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\r\n        var foundText = foundStyle.getText();\r\n        textStyle = foundText.clone();\r\n        textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\r\n        textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\r\n        textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\r\n        textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\r\n    }\r\n    else {\r\n        textStyle = DEFAULT_TEXT_STYLE.clone();\r\n    }\r\n    textStyle.setText(name);\r\n    textStyle.setOffsetX(textOffset[0]);\r\n    textStyle.setOffsetY(textOffset[1]);\r\n    textStyle.setTextAlign(textAlign);\r\n    var nameStyle = new Style({\r\n        text: textStyle\r\n    });\r\n    return nameStyle;\r\n}\r\n/**\r\n * @param {Array<Style>|undefined} style Style.\r\n * @param {string} styleUrl Style URL.\r\n * @param {Array<Style>} defaultStyle Default style.\r\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\r\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\r\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\r\n */\r\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\r\n    return (\r\n    /**\r\n     * @param {Feature} feature feature.\r\n     * @param {number} resolution Resolution.\r\n     * @return {Array<Style>} Style.\r\n     */\r\n    function (feature, resolution) {\r\n        var drawName = showPointNames;\r\n        /** @type {Style|undefined} */\r\n        var nameStyle;\r\n        var name = '';\r\n        if (drawName) {\r\n            var geometry = feature.getGeometry();\r\n            if (geometry) {\r\n                drawName = geometry.getType() === GeometryType.POINT;\r\n            }\r\n        }\r\n        if (drawName) {\r\n            name = /** @type {string} */ (feature.get('name'));\r\n            drawName = drawName && !!name;\r\n        }\r\n        if (style) {\r\n            if (drawName) {\r\n                nameStyle = createNameStyleFunction(style[0], name);\r\n                return style.concat(nameStyle);\r\n            }\r\n            return style;\r\n        }\r\n        if (styleUrl) {\r\n            var foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\r\n            if (drawName) {\r\n                nameStyle = createNameStyleFunction(foundStyle[0], name);\r\n                return foundStyle.concat(nameStyle);\r\n            }\r\n            return foundStyle;\r\n        }\r\n        if (drawName) {\r\n            nameStyle = createNameStyleFunction(defaultStyle[0], name);\r\n            return defaultStyle.concat(nameStyle);\r\n        }\r\n        return defaultStyle;\r\n    });\r\n}\r\n/**\r\n * @param {Array<Style>|string|undefined} styleValue Style value.\r\n * @param {Array<Style>} defaultStyle Default style.\r\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\r\n * Shared styles.\r\n * @return {Array<Style>} Style.\r\n */\r\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\r\n    if (Array.isArray(styleValue)) {\r\n        return styleValue;\r\n    }\r\n    else if (typeof styleValue === 'string') {\r\n        // KML files in the wild occasionally forget the leading `#` on styleUrls\r\n        // defined in the same document.  Add a leading `#` if it enables to find\r\n        // a style.\r\n        if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\r\n            styleValue = '#' + styleValue;\r\n        }\r\n        return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\r\n    }\r\n    else {\r\n        return defaultStyle;\r\n    }\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @return {import(\"../color.js\").Color|undefined} Color.\r\n */\r\nfunction readColor(node) {\r\n    var s = getAllTextContent(node, false);\r\n    // The KML specification states that colors should not include a leading `#`\r\n    // but we tolerate them.\r\n    var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\r\n    if (m) {\r\n        var hexColor = m[1];\r\n        return [\r\n            parseInt(hexColor.substr(6, 2), 16),\r\n            parseInt(hexColor.substr(4, 2), 16),\r\n            parseInt(hexColor.substr(2, 2), 16),\r\n            parseInt(hexColor.substr(0, 2), 16) / 255\r\n        ];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @return {Array<number>|undefined} Flat coordinates.\r\n */\r\nexport function readFlatCoordinates(node) {\r\n    var s = getAllTextContent(node, false);\r\n    var flatCoordinates = [];\r\n    // The KML specification states that coordinate tuples should not include\r\n    // spaces, but we tolerate them.\r\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\r\n    var m;\r\n    while ((m = re.exec(s))) {\r\n        var x = parseFloat(m[1]);\r\n        var y = parseFloat(m[2]);\r\n        var z = m[3] ? parseFloat(m[3]) : 0;\r\n        flatCoordinates.push(x, y, z);\r\n        s = s.substr(m[0].length);\r\n    }\r\n    if (s !== '') {\r\n        return undefined;\r\n    }\r\n    return flatCoordinates;\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @return {string} URI.\r\n */\r\nfunction readURI(node) {\r\n    var s = getAllTextContent(node, false).trim();\r\n    var baseURI = node.baseURI;\r\n    if (!baseURI || baseURI == 'about:blank') {\r\n        baseURI = window.location.href;\r\n    }\r\n    if (baseURI) {\r\n        var url = new URL(s, baseURI);\r\n        return url.href;\r\n    }\r\n    else {\r\n        return s;\r\n    }\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @return {Vec2} Vec2.\r\n */\r\nfunction readVec2(node) {\r\n    var xunits = node.getAttribute('xunits');\r\n    var yunits = node.getAttribute('yunits');\r\n    var origin;\r\n    if (xunits !== 'insetPixels') {\r\n        if (yunits !== 'insetPixels') {\r\n            origin = IconOrigin.BOTTOM_LEFT;\r\n        }\r\n        else {\r\n            origin = IconOrigin.TOP_LEFT;\r\n        }\r\n    }\r\n    else {\r\n        if (yunits !== 'insetPixels') {\r\n            origin = IconOrigin.BOTTOM_RIGHT;\r\n        }\r\n        else {\r\n            origin = IconOrigin.TOP_RIGHT;\r\n        }\r\n    }\r\n    return {\r\n        x: parseFloat(node.getAttribute('x')),\r\n        xunits: ICON_ANCHOR_UNITS_MAP[xunits],\r\n        y: parseFloat(node.getAttribute('y')),\r\n        yunits: ICON_ANCHOR_UNITS_MAP[yunits],\r\n        origin: origin\r\n    };\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @return {number|undefined} Scale.\r\n */\r\nfunction readScale(node) {\r\n    return readDecimal(node);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Pair': pairDataParser\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<Style>|string|undefined} StyleMap.\r\n */\r\nfunction readStyleMapValue(node, objectStack) {\r\n    return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Icon': makeObjectPropertySetter(readIcon),\r\n    'heading': makeObjectPropertySetter(readDecimal),\r\n    'hotSpot': makeObjectPropertySetter(readVec2),\r\n    'scale': makeObjectPropertySetter(readScale)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction iconStyleParser(node, objectStack) {\r\n    // FIXME refreshMode\r\n    // FIXME refreshInterval\r\n    // FIXME viewRefreshTime\r\n    // FIXME viewBoundScale\r\n    // FIXME viewFormat\r\n    // FIXME httpQuery\r\n    var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\r\n    if (!object) {\r\n        return;\r\n    }\r\n    var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    var IconObject = 'Icon' in object ? object['Icon'] : {};\r\n    var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\r\n    var src;\r\n    var href = /** @type {string|undefined} */ (IconObject['href']);\r\n    if (href) {\r\n        src = href;\r\n    }\r\n    else if (drawIcon) {\r\n        src = DEFAULT_IMAGE_STYLE_SRC;\r\n    }\r\n    var anchor, anchorXUnits, anchorYUnits;\r\n    var anchorOrigin = IconOrigin.BOTTOM_LEFT;\r\n    var hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\r\n    if (hotSpot) {\r\n        anchor = [hotSpot.x, hotSpot.y];\r\n        anchorXUnits = hotSpot.xunits;\r\n        anchorYUnits = hotSpot.yunits;\r\n        anchorOrigin = hotSpot.origin;\r\n    }\r\n    else if (src === DEFAULT_IMAGE_STYLE_SRC) {\r\n        anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\r\n        anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\r\n        anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\r\n    }\r\n    else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\r\n        anchor = [0.5, 0];\r\n        anchorXUnits = IconAnchorUnits.FRACTION;\r\n        anchorYUnits = IconAnchorUnits.FRACTION;\r\n    }\r\n    var offset;\r\n    var x = /** @type {number|undefined} */ (IconObject['x']);\r\n    var y = /** @type {number|undefined} */ (IconObject['y']);\r\n    if (x !== undefined && y !== undefined) {\r\n        offset = [x, y];\r\n    }\r\n    var size;\r\n    var w = /** @type {number|undefined} */ (IconObject['w']);\r\n    var h = /** @type {number|undefined} */ (IconObject['h']);\r\n    if (w !== undefined && h !== undefined) {\r\n        size = [w, h];\r\n    }\r\n    var rotation;\r\n    var heading = /** @type {number} */ (object['heading']);\r\n    if (heading !== undefined) {\r\n        rotation = toRadians(heading);\r\n    }\r\n    var scale = /** @type {number|undefined} */ (object['scale']);\r\n    if (drawIcon) {\r\n        if (src == DEFAULT_IMAGE_STYLE_SRC) {\r\n            size = DEFAULT_IMAGE_STYLE_SIZE;\r\n            if (scale === undefined) {\r\n                scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\r\n            }\r\n        }\r\n        var imageStyle = new Icon({\r\n            anchor: anchor,\r\n            anchorOrigin: anchorOrigin,\r\n            anchorXUnits: anchorXUnits,\r\n            anchorYUnits: anchorYUnits,\r\n            crossOrigin: 'anonymous',\r\n            offset: offset,\r\n            offsetOrigin: IconOrigin.BOTTOM_LEFT,\r\n            rotation: rotation,\r\n            scale: scale,\r\n            size: size,\r\n            src: src\r\n        });\r\n        styleObject['imageStyle'] = imageStyle;\r\n    }\r\n    else {\r\n        // handle the case when we explicitly want to draw no icon.\r\n        styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\r\n    }\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'color': makeObjectPropertySetter(readColor),\r\n    'scale': makeObjectPropertySetter(readScale)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction labelStyleParser(node, objectStack) {\r\n    // FIXME colorMode\r\n    var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\r\n    if (!object) {\r\n        return;\r\n    }\r\n    var styleObject = objectStack[objectStack.length - 1];\r\n    var textStyle = new Text({\r\n        fill: new Fill({\r\n            color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR)\r\n        }),\r\n        scale: /** @type {number|undefined} */ (object['scale'])\r\n    });\r\n    styleObject['textStyle'] = textStyle;\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'color': makeObjectPropertySetter(readColor),\r\n    'width': makeObjectPropertySetter(readDecimal)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction lineStyleParser(node, objectStack) {\r\n    // FIXME colorMode\r\n    // FIXME gx:outerColor\r\n    // FIXME gx:outerWidth\r\n    // FIXME gx:physicalWidth\r\n    // FIXME gx:labelVisibility\r\n    var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\r\n    if (!object) {\r\n        return;\r\n    }\r\n    var styleObject = objectStack[objectStack.length - 1];\r\n    var strokeStyle = new Stroke({\r\n        color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR),\r\n        width: /** @type {number} */ ('width' in object ? object['width'] : 1)\r\n    });\r\n    styleObject['strokeStyle'] = strokeStyle;\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'color': makeObjectPropertySetter(readColor),\r\n    'fill': makeObjectPropertySetter(readBoolean),\r\n    'outline': makeObjectPropertySetter(readBoolean)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction polyStyleParser(node, objectStack) {\r\n    // FIXME colorMode\r\n    var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\r\n    if (!object) {\r\n        return;\r\n    }\r\n    var styleObject = objectStack[objectStack.length - 1];\r\n    var fillStyle = new Fill({\r\n        color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR)\r\n    });\r\n    styleObject['fillStyle'] = fillStyle;\r\n    var fill = /** @type {boolean|undefined} */ (object['fill']);\r\n    if (fill !== undefined) {\r\n        styleObject['fill'] = fill;\r\n    }\r\n    var outline = /** @type {boolean|undefined} */ (object['outline']);\r\n    if (outline !== undefined) {\r\n        styleObject['outline'] = outline;\r\n    }\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'coordinates': makeReplacer(readFlatCoordinates)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<number>} LinearRing flat coordinates.\r\n */\r\nfunction readFlatLinearRing(node, objectStack) {\r\n    return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction gxCoordParser(node, objectStack) {\r\n    var gxTrackObject = /** @type {GxTrackObject} */ (objectStack[objectStack.length - 1]);\r\n    var flatCoordinates = gxTrackObject.flatCoordinates;\r\n    var s = getAllTextContent(node, false);\r\n    var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\r\n    var m = re.exec(s);\r\n    if (m) {\r\n        var x = parseFloat(m[1]);\r\n        var y = parseFloat(m[2]);\r\n        var z = parseFloat(m[3]);\r\n        flatCoordinates.push(x, y, z, 0);\r\n    }\r\n    else {\r\n        flatCoordinates.push(0, 0, 0, 0);\r\n    }\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\r\n    'Track': makeArrayPusher(readGxTrack)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {MultiLineString|undefined} MultiLineString.\r\n */\r\nfunction readGxMultiTrack(node, objectStack) {\r\n    var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\r\n    if (!lineStrings) {\r\n        return undefined;\r\n    }\r\n    return new MultiLineString(lineStrings);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'when': whenParser\r\n}, makeStructureNS(GX_NAMESPACE_URIS, {\r\n    'coord': gxCoordParser\r\n}));\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {LineString|undefined} LineString.\r\n */\r\nfunction readGxTrack(node, objectStack) {\r\n    var gxTrackObject = pushParseAndPop(\r\n    /** @type {GxTrackObject} */ ({\r\n        flatCoordinates: [],\r\n        whens: []\r\n    }), GX_TRACK_PARSERS, node, objectStack);\r\n    if (!gxTrackObject) {\r\n        return undefined;\r\n    }\r\n    var flatCoordinates = gxTrackObject.flatCoordinates;\r\n    var whens = gxTrackObject.whens;\r\n    for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\r\n        flatCoordinates[4 * i + 3] = whens[i];\r\n    }\r\n    return new LineString(flatCoordinates, GeometryLayout.XYZM);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'href': makeObjectPropertySetter(readURI)\r\n}, makeStructureNS(GX_NAMESPACE_URIS, {\r\n    'x': makeObjectPropertySetter(readDecimal),\r\n    'y': makeObjectPropertySetter(readDecimal),\r\n    'w': makeObjectPropertySetter(readDecimal),\r\n    'h': makeObjectPropertySetter(readDecimal)\r\n}));\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object} Icon object.\r\n */\r\nfunction readIcon(node, objectStack) {\r\n    var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\r\n    if (iconObject) {\r\n        return iconObject;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'coordinates': makeReplacer(readFlatCoordinates)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nfunction readFlatCoordinatesFromNode(node, objectStack) {\r\n    return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'extrude': makeObjectPropertySetter(readBoolean),\r\n    'tessellate': makeObjectPropertySetter(readBoolean),\r\n    'altitudeMode': makeObjectPropertySetter(readString)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {LineString|undefined} LineString.\r\n */\r\nfunction readLineString(node, objectStack) {\r\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\r\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\r\n    if (flatCoordinates) {\r\n        var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\r\n        lineString.setProperties(properties, true);\r\n        return lineString;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Polygon|undefined} Polygon.\r\n */\r\nfunction readLinearRing(node, objectStack) {\r\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\r\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\r\n    if (flatCoordinates) {\r\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\r\n        polygon.setProperties(properties, true);\r\n        return polygon;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'LineString': makeArrayPusher(readLineString),\r\n    'LinearRing': makeArrayPusher(readLinearRing),\r\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\r\n    'Point': makeArrayPusher(readPoint),\r\n    'Polygon': makeArrayPusher(readPolygon)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n */\r\nfunction readMultiGeometry(node, objectStack) {\r\n    var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\r\n    if (!geometries) {\r\n        return null;\r\n    }\r\n    if (geometries.length === 0) {\r\n        return new GeometryCollection(geometries);\r\n    }\r\n    var multiGeometry;\r\n    var homogeneous = true;\r\n    var type = geometries[0].getType();\r\n    var geometry;\r\n    for (var i = 1, ii = geometries.length; i < ii; ++i) {\r\n        geometry = geometries[i];\r\n        if (geometry.getType() != type) {\r\n            homogeneous = false;\r\n            break;\r\n        }\r\n    }\r\n    if (homogeneous) {\r\n        var layout = void 0;\r\n        var flatCoordinates = void 0;\r\n        if (type == GeometryType.POINT) {\r\n            var point = geometries[0];\r\n            layout = point.getLayout();\r\n            flatCoordinates = point.getFlatCoordinates();\r\n            for (var i = 1, ii = geometries.length; i < ii; ++i) {\r\n                geometry = geometries[i];\r\n                extend(flatCoordinates, geometry.getFlatCoordinates());\r\n            }\r\n            multiGeometry = new MultiPoint(flatCoordinates, layout);\r\n            setCommonGeometryProperties(multiGeometry, geometries);\r\n        }\r\n        else if (type == GeometryType.LINE_STRING) {\r\n            multiGeometry = new MultiLineString(geometries);\r\n            setCommonGeometryProperties(multiGeometry, geometries);\r\n        }\r\n        else if (type == GeometryType.POLYGON) {\r\n            multiGeometry = new MultiPolygon(geometries);\r\n            setCommonGeometryProperties(multiGeometry, geometries);\r\n        }\r\n        else if (type == GeometryType.GEOMETRY_COLLECTION) {\r\n            multiGeometry = new GeometryCollection(geometries);\r\n        }\r\n        else {\r\n            assert(false, 37); // Unknown geometry type found\r\n        }\r\n    }\r\n    else {\r\n        multiGeometry = new GeometryCollection(geometries);\r\n    }\r\n    return (\r\n    /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry));\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Point|undefined} Point.\r\n */\r\nfunction readPoint(node, objectStack) {\r\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\r\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\r\n    if (flatCoordinates) {\r\n        var point = new Point(flatCoordinates, GeometryLayout.XYZ);\r\n        point.setProperties(properties, true);\r\n        return point;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'innerBoundaryIs': innerBoundaryIsParser,\r\n    'outerBoundaryIs': outerBoundaryIsParser\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Polygon|undefined} Polygon.\r\n */\r\nfunction readPolygon(node, objectStack) {\r\n    var properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}), EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\r\n    var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\r\n    if (flatLinearRings && flatLinearRings[0]) {\r\n        var flatCoordinates = flatLinearRings[0];\r\n        var ends = [flatCoordinates.length];\r\n        for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\r\n            extend(flatCoordinates, flatLinearRings[i]);\r\n            ends.push(flatCoordinates.length);\r\n        }\r\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\r\n        polygon.setProperties(properties, true);\r\n        return polygon;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'IconStyle': iconStyleParser,\r\n    'LabelStyle': labelStyleParser,\r\n    'LineStyle': lineStyleParser,\r\n    'PolyStyle': polyStyleParser\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<Style>} Style.\r\n */\r\nfunction readStyle(node, objectStack) {\r\n    var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\r\n    if (!styleObject) {\r\n        return null;\r\n    }\r\n    var fillStyle = /** @type {Fill} */ ('fillStyle' in styleObject ?\r\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\r\n    var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\r\n    if (fill !== undefined && !fill) {\r\n        fillStyle = null;\r\n    }\r\n    var imageStyle;\r\n    if ('imageStyle' in styleObject) {\r\n        if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\r\n            imageStyle = styleObject['imageStyle'];\r\n        }\r\n    }\r\n    else {\r\n        imageStyle = DEFAULT_IMAGE_STYLE;\r\n    }\r\n    var textStyle = /** @type {Text} */ ('textStyle' in styleObject ?\r\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\r\n    var strokeStyle = /** @type {Stroke} */ ('strokeStyle' in styleObject ?\r\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\r\n    var outline = /** @type {boolean|undefined} */ (styleObject['outline']);\r\n    if (outline !== undefined && !outline) {\r\n        strokeStyle = null;\r\n    }\r\n    return [new Style({\r\n            fill: fillStyle,\r\n            image: imageStyle,\r\n            stroke: strokeStyle,\r\n            text: textStyle,\r\n            zIndex: undefined // FIXME\r\n        })];\r\n}\r\n/**\r\n * Reads an array of geometries and creates arrays for common geometry\r\n * properties. Then sets them to the multi geometry.\r\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\r\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\r\n */\r\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\r\n    var ii = geometries.length;\r\n    var extrudes = new Array(geometries.length);\r\n    var tessellates = new Array(geometries.length);\r\n    var altitudeModes = new Array(geometries.length);\r\n    var hasExtrude, hasTessellate, hasAltitudeMode;\r\n    hasExtrude = hasTessellate = hasAltitudeMode = false;\r\n    for (var i = 0; i < ii; ++i) {\r\n        var geometry = geometries[i];\r\n        extrudes[i] = geometry.get('extrude');\r\n        tessellates[i] = geometry.get('tessellate');\r\n        altitudeModes[i] = geometry.get('altitudeMode');\r\n        hasExtrude = hasExtrude || extrudes[i] !== undefined;\r\n        hasTessellate = hasTessellate || tessellates[i] !== undefined;\r\n        hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\r\n    }\r\n    if (hasExtrude) {\r\n        multiGeometry.set('extrude', extrudes);\r\n    }\r\n    if (hasTessellate) {\r\n        multiGeometry.set('tessellate', tessellates);\r\n    }\r\n    if (hasAltitudeMode) {\r\n        multiGeometry.set('altitudeMode', altitudeModes);\r\n    }\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'displayName': makeObjectPropertySetter(readString),\r\n    'value': makeObjectPropertySetter(readString)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction dataParser(node, objectStack) {\r\n    var name = node.getAttribute('name');\r\n    parseNode(DATA_PARSERS, node, objectStack);\r\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    if (name !== null) {\r\n        featureObject[name] = featureObject.value;\r\n    }\r\n    else if (featureObject.displayName !== null) {\r\n        featureObject[featureObject.displayName] = featureObject.value;\r\n    }\r\n    delete featureObject['value'];\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Data': dataParser,\r\n    'SchemaData': schemaDataParser\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction extendedDataParser(node, objectStack) {\r\n    parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction regionParser(node, objectStack) {\r\n    parseNode(REGION_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Style': makeObjectPropertySetter(readStyle),\r\n    'key': makeObjectPropertySetter(readString),\r\n    'styleUrl': makeObjectPropertySetter(readURI)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction pairDataParser(node, objectStack) {\r\n    var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack);\r\n    if (!pairObject) {\r\n        return;\r\n    }\r\n    var key = /** @type {string|undefined} */ (pairObject['key']);\r\n    if (key && key == 'normal') {\r\n        var styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\r\n        if (styleUrl) {\r\n            objectStack[objectStack.length - 1] = styleUrl;\r\n        }\r\n        var style = /** @type {Style} */ (pairObject['Style']);\r\n        if (style) {\r\n            objectStack[objectStack.length - 1] = style;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction placemarkStyleMapParser(node, objectStack) {\r\n    var styleMapValue = readStyleMapValue(node, objectStack);\r\n    if (!styleMapValue) {\r\n        return;\r\n    }\r\n    var placemarkObject = objectStack[objectStack.length - 1];\r\n    if (Array.isArray(styleMapValue)) {\r\n        placemarkObject['Style'] = styleMapValue;\r\n    }\r\n    else if (typeof styleMapValue === 'string') {\r\n        placemarkObject['styleUrl'] = styleMapValue;\r\n    }\r\n    else {\r\n        assert(false, 38); // `styleMapValue` has an unknown type\r\n    }\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'SimpleData': simpleDataParser\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction schemaDataParser(node, objectStack) {\r\n    parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction simpleDataParser(node, objectStack) {\r\n    var name = node.getAttribute('name');\r\n    if (name !== null) {\r\n        var data = readString(node);\r\n        var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n        featureObject[name] = data;\r\n    }\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'altitudeMode': makeObjectPropertySetter(readString),\r\n    'minAltitude': makeObjectPropertySetter(readDecimal),\r\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\r\n    'north': makeObjectPropertySetter(readDecimal),\r\n    'south': makeObjectPropertySetter(readDecimal),\r\n    'east': makeObjectPropertySetter(readDecimal),\r\n    'west': makeObjectPropertySetter(readDecimal)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction latLonAltBoxParser(node, objectStack) {\r\n    var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\r\n    if (!object) {\r\n        return;\r\n    }\r\n    var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    var extent = [\r\n        parseFloat(object['west']),\r\n        parseFloat(object['south']),\r\n        parseFloat(object['east']),\r\n        parseFloat(object['north'])\r\n    ];\r\n    regionObject['extent'] = extent;\r\n    regionObject['altitudeMode'] = object['altitudeMode'];\r\n    regionObject['minAltitude'] = parseFloat(object['minAltitude']);\r\n    regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\r\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\r\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\r\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction lodParser(node, objectStack) {\r\n    var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\r\n    if (!object) {\r\n        return;\r\n    }\r\n    var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\r\n    lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\r\n    lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\r\n    lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'LinearRing': makeReplacer(readFlatLinearRing)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction innerBoundaryIsParser(node, objectStack) {\r\n    /** @type {Array<number>|undefined} */\r\n    var flatLinearRing = pushParseAndPop(undefined, INNER_BOUNDARY_IS_PARSERS, node, objectStack);\r\n    if (flatLinearRing) {\r\n        var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\r\n        flatLinearRings.push(flatLinearRing);\r\n    }\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'LinearRing': makeReplacer(readFlatLinearRing)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction outerBoundaryIsParser(node, objectStack) {\r\n    /** @type {Array<number>|undefined} */\r\n    var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\r\n    if (flatLinearRing) {\r\n        var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\r\n        flatLinearRings[0] = flatLinearRing;\r\n    }\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction linkParser(node, objectStack) {\r\n    parseNode(LINK_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction whenParser(node, objectStack) {\r\n    var gxTrackObject = /** @type {GxTrackObject} */ (objectStack[objectStack.length - 1]);\r\n    var whens = gxTrackObject.whens;\r\n    var s = getAllTextContent(node, false);\r\n    var when = Date.parse(s);\r\n    whens.push(isNaN(when) ? 0 : when);\r\n}\r\n/**\r\n * @param {Node} node Node to append a TextNode with the color to.\r\n * @param {import(\"../color.js\").Color|string} color Color.\r\n */\r\nfunction writeColorTextNode(node, color) {\r\n    var rgba = asArray(color);\r\n    var opacity = (rgba.length == 4) ? rgba[3] : 1;\r\n    /** @type {Array<string|number>} */\r\n    var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\r\n    for (var i = 0; i < 4; ++i) {\r\n        var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\r\n        abgr[i] = (hex.length == 1) ? '0' + hex : hex;\r\n    }\r\n    writeStringTextNode(node, abgr.join(''));\r\n}\r\n/**\r\n * @param {Node} node Node to append a TextNode with the coordinates to.\r\n * @param {Array<number>} coordinates Coordinates.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var layout = context['layout'];\r\n    var stride = context['stride'];\r\n    var dimension;\r\n    if (layout == GeometryLayout.XY ||\r\n        layout == GeometryLayout.XYM) {\r\n        dimension = 2;\r\n    }\r\n    else if (layout == GeometryLayout.XYZ ||\r\n        layout == GeometryLayout.XYZM) {\r\n        dimension = 3;\r\n    }\r\n    else {\r\n        assert(false, 34); // Invalid geometry layout\r\n    }\r\n    var ii = coordinates.length;\r\n    var text = '';\r\n    if (ii > 0) {\r\n        text += coordinates[0];\r\n        for (var d = 1; d < dimension; ++d) {\r\n            text += ',' + coordinates[d];\r\n        }\r\n        for (var i = stride; i < ii; i += stride) {\r\n            text += ' ' + coordinates[i];\r\n            for (var d = 1; d < dimension; ++d) {\r\n                text += ',' + coordinates[i + d];\r\n            }\r\n        }\r\n    }\r\n    writeStringTextNode(node, text);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Data': makeChildAppender(writeDataNode),\r\n    'value': makeChildAppender(writeDataNodeValue),\r\n    'displayName': makeChildAppender(writeDataNodeName)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {{name: *, value: *}} pair Name value pair.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeDataNode(node, pair, objectStack) {\r\n    node.setAttribute('name', pair.name);\r\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n    var value = pair.value;\r\n    if (typeof value == 'object') {\r\n        if (value !== null && value.displayName) {\r\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\r\n        }\r\n        if (value !== null && value.value) {\r\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\r\n        }\r\n    }\r\n    else {\r\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\r\n    }\r\n}\r\n/**\r\n * @param {Node} node Node to append a TextNode with the name to.\r\n * @param {string} name DisplayName.\r\n */\r\nfunction writeDataNodeName(node, name) {\r\n    writeCDATASection(node, name);\r\n}\r\n/**\r\n * @param {Node} node Node to append a CDATA Section with the value to.\r\n * @param {string} value Value.\r\n */\r\nfunction writeDataNodeValue(node, value) {\r\n    writeStringTextNode(node, value);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Placemark': makeChildAppender(writePlacemark)\r\n});\r\n/**\r\n * @const\r\n * @param {*} value Value.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {string=} opt_nodeName Node name.\r\n * @return {Node|undefined} Node.\r\n */\r\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\r\n    var parentNode = objectStack[objectStack.length - 1].node;\r\n    return createElementNS(parentNode.namespaceURI, 'Placemark');\r\n};\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<Feature>} features Features.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @this {KML}\r\n */\r\nfunction writeDocument(node, features, objectStack) {\r\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n    pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\r\n}\r\n/**\r\n * A factory for creating Data nodes.\r\n * @const\r\n * @type {function(*, Array<*>): (Node|undefined)}\r\n */\r\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\r\n/**\r\n * @param {Node} node Node.\r\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeExtendedData(node, namesAndValues, objectStack) {\r\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n    var names = namesAndValues.names;\r\n    var values = namesAndValues.values;\r\n    var length = names.length;\r\n    for (var i = 0; i < length; i++) {\r\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{ name: names[i], value: values[i] }], objectStack);\r\n    }\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\r\n    'href'\r\n], makeStructureNS(GX_NAMESPACE_URIS, [\r\n    'x', 'y', 'w', 'h'\r\n]));\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'href': makeChildAppender(writeStringTextNode)\r\n}, makeStructureNS(GX_NAMESPACE_URIS, {\r\n    'x': makeChildAppender(writeDecimalTextNode),\r\n    'y': makeChildAppender(writeDecimalTextNode),\r\n    'w': makeChildAppender(writeDecimalTextNode),\r\n    'h': makeChildAppender(writeDecimalTextNode)\r\n}));\r\n/**\r\n * @const\r\n * @param {*} value Value.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {string=} opt_nodeName Node name.\r\n * @return {Node|undefined} Node.\r\n */\r\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\r\n    return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\r\n};\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Object} icon Icon object.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeIcon(node, icon, objectStack) {\r\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n    var parentNode = objectStack[objectStack.length - 1].node;\r\n    var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\r\n    var values = makeSequence(icon, orderedKeys);\r\n    pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n    orderedKeys =\r\n        ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\r\n    values = makeSequence(icon, orderedKeys);\r\n    pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\r\n    'scale', 'heading', 'Icon', 'hotSpot'\r\n]);\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Icon': makeChildAppender(writeIcon),\r\n    'heading': makeChildAppender(writeDecimalTextNode),\r\n    'hotSpot': makeChildAppender(writeVec2),\r\n    'scale': makeChildAppender(writeScaleTextNode)\r\n});\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"../style/Icon.js\").default} style Icon style.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeIconStyle(node, style, objectStack) {\r\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n    var properties = {};\r\n    var src = style.getSrc();\r\n    var size = style.getSize();\r\n    var iconImageSize = style.getImageSize();\r\n    var iconProperties = {\r\n        'href': src\r\n    };\r\n    if (size) {\r\n        iconProperties['w'] = size[0];\r\n        iconProperties['h'] = size[1];\r\n        var anchor = style.getAnchor(); // top-left\r\n        var origin_1 = style.getOrigin(); // top-left\r\n        if (origin_1 && iconImageSize && origin_1[0] !== 0 && origin_1[1] !== size[1]) {\r\n            iconProperties['x'] = origin_1[0];\r\n            iconProperties['y'] = iconImageSize[1] - (origin_1[1] + size[1]);\r\n        }\r\n        if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\r\n            var /** @type {Vec2} */ hotSpot = {\r\n                x: anchor[0],\r\n                xunits: IconAnchorUnits.PIXELS,\r\n                y: size[1] - anchor[1],\r\n                yunits: IconAnchorUnits.PIXELS\r\n            };\r\n            properties['hotSpot'] = hotSpot;\r\n        }\r\n    }\r\n    properties['Icon'] = iconProperties;\r\n    var scale = style.getScale();\r\n    if (scale !== 1) {\r\n        properties['scale'] = scale;\r\n    }\r\n    var rotation = style.getRotation();\r\n    if (rotation !== 0) {\r\n        properties['heading'] = rotation; // 0-360\r\n    }\r\n    var parentNode = objectStack[objectStack.length - 1].node;\r\n    var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\r\n    var values = makeSequence(properties, orderedKeys);\r\n    pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\r\n    'color', 'scale'\r\n]);\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'color': makeChildAppender(writeColorTextNode),\r\n    'scale': makeChildAppender(writeScaleTextNode)\r\n});\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Text} style style.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeLabelStyle(node, style, objectStack) {\r\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n    var properties = {};\r\n    var fill = style.getFill();\r\n    if (fill) {\r\n        properties['color'] = fill.getColor();\r\n    }\r\n    var scale = style.getScale();\r\n    if (scale && scale !== 1) {\r\n        properties['scale'] = scale;\r\n    }\r\n    var parentNode = objectStack[objectStack.length - 1].node;\r\n    var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\r\n    var values = makeSequence(properties, orderedKeys);\r\n    pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\r\n    'color', 'width'\r\n]);\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'color': makeChildAppender(writeColorTextNode),\r\n    'width': makeChildAppender(writeDecimalTextNode)\r\n});\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Stroke} style style.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeLineStyle(node, style, objectStack) {\r\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n    var properties = {\r\n        'color': style.getColor(),\r\n        'width': style.getWidth()\r\n    };\r\n    var parentNode = objectStack[objectStack.length - 1].node;\r\n    var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\r\n    var values = makeSequence(properties, orderedKeys);\r\n    pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, string>}\r\n */\r\nvar GEOMETRY_TYPE_TO_NODENAME = {\r\n    'Point': 'Point',\r\n    'LineString': 'LineString',\r\n    'LinearRing': 'LinearRing',\r\n    'Polygon': 'Polygon',\r\n    'MultiPoint': 'MultiGeometry',\r\n    'MultiLineString': 'MultiGeometry',\r\n    'MultiPolygon': 'MultiGeometry',\r\n    'GeometryCollection': 'MultiGeometry'\r\n};\r\n/**\r\n * @const\r\n * @param {*} value Value.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {string=} opt_nodeName Node name.\r\n * @return {Node|undefined} Node.\r\n */\r\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\r\n    if (value) {\r\n        var parentNode = objectStack[objectStack.length - 1].node;\r\n        return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[ /** @type {import(\"../geom/Geometry.js\").default} */(value).getType()]);\r\n    }\r\n};\r\n/**\r\n * A factory for creating Point nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\r\n/**\r\n * A factory for creating LineString nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\r\n/**\r\n * A factory for creating LinearRing nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\r\n/**\r\n * A factory for creating Polygon nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'LineString': makeChildAppender(writePrimitiveGeometry),\r\n    'Point': makeChildAppender(writePrimitiveGeometry),\r\n    'Polygon': makeChildAppender(writePolygon),\r\n    'GeometryCollection': makeChildAppender(writeMultiGeometry)\r\n});\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeMultiGeometry(node, geometry, objectStack) {\r\n    /** @type {import(\"../xml.js\").NodeStackItem} */\r\n    var context = { node: node };\r\n    var type = geometry.getType();\r\n    /** @type {Array<import(\"../geom/Geometry.js\").default>} */\r\n    var geometries;\r\n    /** @type {function(*, Array<*>, string=): (Node|undefined)} */\r\n    var factory;\r\n    if (type == GeometryType.GEOMETRY_COLLECTION) {\r\n        geometries = /** @type {GeometryCollection} */ (geometry).getGeometries();\r\n        factory = GEOMETRY_NODE_FACTORY;\r\n    }\r\n    else if (type == GeometryType.MULTI_POINT) {\r\n        geometries = /** @type {MultiPoint} */ (geometry).getPoints();\r\n        factory = POINT_NODE_FACTORY;\r\n    }\r\n    else if (type == GeometryType.MULTI_LINE_STRING) {\r\n        geometries =\r\n            ( /** @type {MultiLineString} */(geometry)).getLineStrings();\r\n        factory = LINE_STRING_NODE_FACTORY;\r\n    }\r\n    else if (type == GeometryType.MULTI_POLYGON) {\r\n        geometries =\r\n            ( /** @type {MultiPolygon} */(geometry)).getPolygons();\r\n        factory = POLYGON_NODE_FACTORY;\r\n    }\r\n    else {\r\n        assert(false, 39); // Unknown geometry type\r\n    }\r\n    pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'LinearRing': makeChildAppender(writePrimitiveGeometry)\r\n});\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeBoundaryIs(node, linearRing, objectStack) {\r\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n    pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'ExtendedData': makeChildAppender(writeExtendedData),\r\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\r\n    'LineString': makeChildAppender(writePrimitiveGeometry),\r\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\r\n    'Point': makeChildAppender(writePrimitiveGeometry),\r\n    'Polygon': makeChildAppender(writePolygon),\r\n    'Style': makeChildAppender(writeStyle),\r\n    'address': makeChildAppender(writeStringTextNode),\r\n    'description': makeChildAppender(writeStringTextNode),\r\n    'name': makeChildAppender(writeStringTextNode),\r\n    'open': makeChildAppender(writeBooleanTextNode),\r\n    'phoneNumber': makeChildAppender(writeStringTextNode),\r\n    'styleUrl': makeChildAppender(writeStringTextNode),\r\n    'visibility': makeChildAppender(writeBooleanTextNode)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\r\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\r\n    'styleUrl', 'Style'\r\n]);\r\n/**\r\n * A factory for creating ExtendedData nodes.\r\n * @const\r\n * @type {function(*, Array<*>): (Node|undefined)}\r\n */\r\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\r\n/**\r\n * FIXME currently we do serialize arbitrary/custom feature properties\r\n * (ExtendedData).\r\n * @param {Element} node Node.\r\n * @param {Feature} feature Feature.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @this {KML}\r\n */\r\nfunction writePlacemark(node, feature, objectStack) {\r\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n    // set id\r\n    if (feature.getId()) {\r\n        node.setAttribute('id', /** @type {string} */ (feature.getId()));\r\n    }\r\n    // serialize properties (properties unknown to KML are not serialized)\r\n    var properties = feature.getProperties();\r\n    // don't export these to ExtendedData\r\n    var filter = { 'address': 1, 'description': 1, 'name': 1, 'open': 1,\r\n        'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1 };\r\n    filter[feature.getGeometryName()] = 1;\r\n    var keys = Object.keys(properties || {}).sort().filter(function (v) {\r\n        return !filter[v];\r\n    });\r\n    if (keys.length > 0) {\r\n        var sequence = makeSequence(properties, keys);\r\n        var namesAndValues = { names: keys, values: sequence };\r\n        pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\r\n    }\r\n    var styleFunction = feature.getStyleFunction();\r\n    if (styleFunction) {\r\n        // FIXME the styles returned by the style function are supposed to be\r\n        // resolution-independent here\r\n        var styles = styleFunction(feature, 0);\r\n        if (styles) {\r\n            var style = Array.isArray(styles) ? styles[0] : styles;\r\n            if (this.writeStyles_) {\r\n                properties['Style'] = style;\r\n            }\r\n            var textStyle = style.getText();\r\n            if (textStyle) {\r\n                properties['name'] = textStyle.getText();\r\n            }\r\n        }\r\n    }\r\n    var parentNode = objectStack[objectStack.length - 1].node;\r\n    var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\r\n    var values = makeSequence(properties, orderedKeys);\r\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n    // serialize geometry\r\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\r\n    var geometry = feature.getGeometry();\r\n    if (geometry) {\r\n        geometry = transformGeometryWithOptions(geometry, true, options);\r\n    }\r\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\r\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\r\n]);\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'extrude': makeChildAppender(writeBooleanTextNode),\r\n    'tessellate': makeChildAppender(writeBooleanTextNode),\r\n    'altitudeMode': makeChildAppender(writeStringTextNode),\r\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\r\n});\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\r\n    var flatCoordinates = geometry.getFlatCoordinates();\r\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n    context['layout'] = geometry.getLayout();\r\n    context['stride'] = geometry.getStride();\r\n    // serialize properties (properties unknown to KML are not serialized)\r\n    var properties = geometry.getProperties();\r\n    properties.coordinates = flatCoordinates;\r\n    var parentNode = objectStack[objectStack.length - 1].node;\r\n    var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\r\n    var values = makeSequence(properties, orderedKeys);\r\n    pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\r\n    'innerBoundaryIs': makeChildAppender(writeBoundaryIs)\r\n});\r\n/**\r\n * A factory for creating innerBoundaryIs nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\r\n/**\r\n * A factory for creating outerBoundaryIs nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Polygon} polygon Polygon.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writePolygon(node, polygon, objectStack) {\r\n    var linearRings = polygon.getLinearRings();\r\n    var outerRing = linearRings.shift();\r\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n    // inner rings\r\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack);\r\n    // outer ring\r\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'color': makeChildAppender(writeColorTextNode)\r\n});\r\n/**\r\n * A factory for creating coordinates nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Fill} style Style.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writePolyStyle(node, style, objectStack) {\r\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n    pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, COLOR_NODE_FACTORY, [style.getColor()], objectStack);\r\n}\r\n/**\r\n * @param {Node} node Node to append a TextNode with the scale to.\r\n * @param {number|undefined} scale Scale.\r\n */\r\nfunction writeScaleTextNode(node, scale) {\r\n    // the Math is to remove any excess decimals created by float arithmetic\r\n    writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\r\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\r\n]);\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'IconStyle': makeChildAppender(writeIconStyle),\r\n    'LabelStyle': makeChildAppender(writeLabelStyle),\r\n    'LineStyle': makeChildAppender(writeLineStyle),\r\n    'PolyStyle': makeChildAppender(writePolyStyle)\r\n});\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Style} style Style.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeStyle(node, style, objectStack) {\r\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n    var properties = {};\r\n    var fillStyle = style.getFill();\r\n    var strokeStyle = style.getStroke();\r\n    var imageStyle = style.getImage();\r\n    var textStyle = style.getText();\r\n    if (imageStyle && typeof /** @type {?} */ (imageStyle).getSrc === 'function') {\r\n        properties['IconStyle'] = imageStyle;\r\n    }\r\n    if (textStyle) {\r\n        properties['LabelStyle'] = textStyle;\r\n    }\r\n    if (strokeStyle) {\r\n        properties['LineStyle'] = strokeStyle;\r\n    }\r\n    if (fillStyle) {\r\n        properties['PolyStyle'] = fillStyle;\r\n    }\r\n    var parentNode = objectStack[objectStack.length - 1].node;\r\n    var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\r\n    var values = makeSequence(properties, orderedKeys);\r\n    pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n/**\r\n * @param {Element} node Node to append a TextNode with the Vec2 to.\r\n * @param {Vec2} vec2 Vec2.\r\n */\r\nfunction writeVec2(node, vec2) {\r\n    node.setAttribute('x', String(vec2.x));\r\n    node.setAttribute('y', String(vec2.y));\r\n    node.setAttribute('xunits', vec2.xunits);\r\n    node.setAttribute('yunits', vec2.yunits);\r\n}\r\nexport default KML;\r\n//# sourceMappingURL=KML.js.map","/**\r\n * @module ol/style/TextPlacement\r\n */\r\n/**\r\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\r\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\r\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\r\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\r\n * @enum {string}\r\n */\r\nexport default {\r\n    POINT: 'point',\r\n    LINE: 'line'\r\n};\r\n//# sourceMappingURL=TextPlacement.js.map","/**\r\n * @module ol/style/Text\r\n */\r\nimport Fill from './Fill.js';\r\nimport TextPlacement from './TextPlacement.js';\r\n/**\r\n * The default fill color to use if no fill was set at construction time; a\r\n * blackish `#333`.\r\n *\r\n * @const {string}\r\n */\r\nvar DEFAULT_FILL_COLOR = '#333';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [font] Font style as CSS 'font' value, see:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\r\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\r\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\r\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\r\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\r\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\r\n * the width of the polygon at the label position or the length of the path that it follows.\r\n * @property {import(\"./TextPlacement.js\").default|string} [placement] Text placement.\r\n * @property {number} [scale] Scale.\r\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\r\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {string} [text] Text content.\r\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\r\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\r\n * placement where `maxAngle` is not exceeded.\r\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\r\n * 'hanging', 'ideographic'.\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\r\n * `'point'`. Default is no fill.\r\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\r\n * is `'point'`. Default is no stroke.\r\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\r\n * values in the array is `[top, right, bottom, left]`.\r\n */\r\n/**\r\n * @classdesc\r\n * Set text style for vector features.\r\n * @api\r\n */\r\nvar Text = /** @class */ (function () {\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function Text(opt_options) {\r\n        var options = opt_options || {};\r\n        /**\r\n        * @private\r\n        * @type {string|undefined}\r\n        */\r\n        this.font_ = options.font;\r\n        /**\r\n        * @private\r\n        * @type {number|undefined}\r\n        */\r\n        this.rotation_ = options.rotation;\r\n        /**\r\n        * @private\r\n        * @type {boolean|undefined}\r\n        */\r\n        this.rotateWithView_ = options.rotateWithView;\r\n        /**\r\n        * @private\r\n        * @type {number|undefined}\r\n        */\r\n        this.scale_ = options.scale;\r\n        /**\r\n        * @private\r\n        * @type {string|undefined}\r\n        */\r\n        this.text_ = options.text;\r\n        /**\r\n        * @private\r\n        * @type {string|undefined}\r\n        */\r\n        this.textAlign_ = options.textAlign;\r\n        /**\r\n        * @private\r\n        * @type {string|undefined}\r\n        */\r\n        this.textBaseline_ = options.textBaseline;\r\n        /**\r\n        * @private\r\n        * @type {import(\"./Fill.js\").default}\r\n        */\r\n        this.fill_ = options.fill !== undefined ? options.fill :\r\n            new Fill({ color: DEFAULT_FILL_COLOR });\r\n        /**\r\n        * @private\r\n        * @type {number}\r\n        */\r\n        this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\r\n        /**\r\n        * @private\r\n        * @type {import(\"./TextPlacement.js\").default|string}\r\n        */\r\n        this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\r\n        /**\r\n        * @private\r\n        * @type {boolean}\r\n        */\r\n        this.overflow_ = !!options.overflow;\r\n        /**\r\n        * @private\r\n        * @type {import(\"./Stroke.js\").default}\r\n        */\r\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\r\n        /**\r\n        * @private\r\n        * @type {number}\r\n        */\r\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\r\n        /**\r\n        * @private\r\n        * @type {number}\r\n        */\r\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\r\n        /**\r\n        * @private\r\n        * @type {import(\"./Fill.js\").default}\r\n        */\r\n        this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\r\n        /**\r\n        * @private\r\n        * @type {import(\"./Stroke.js\").default}\r\n        */\r\n        this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\r\n        /**\r\n        * @private\r\n        * @type {Array<number>}\r\n        */\r\n        this.padding_ = options.padding === undefined ? null : options.padding;\r\n    }\r\n    /**\r\n    * Clones the style.\r\n    * @return {Text} The cloned style.\r\n    * @api\r\n    */\r\n    Text.prototype.clone = function () {\r\n        return new Text({\r\n            font: this.getFont(),\r\n            placement: this.getPlacement(),\r\n            maxAngle: this.getMaxAngle(),\r\n            overflow: this.getOverflow(),\r\n            rotation: this.getRotation(),\r\n            rotateWithView: this.getRotateWithView(),\r\n            scale: this.getScale(),\r\n            text: this.getText(),\r\n            textAlign: this.getTextAlign(),\r\n            textBaseline: this.getTextBaseline(),\r\n            fill: this.getFill() ? this.getFill().clone() : undefined,\r\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n            offsetX: this.getOffsetX(),\r\n            offsetY: this.getOffsetY(),\r\n            backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\r\n            backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\r\n        });\r\n    };\r\n    /**\r\n    * Get the `overflow` configuration.\r\n    * @return {boolean} Let text overflow the length of the path they follow.\r\n    * @api\r\n    */\r\n    Text.prototype.getOverflow = function () {\r\n        return this.overflow_;\r\n    };\r\n    /**\r\n    * Get the font name.\r\n    * @return {string|undefined} Font.\r\n    * @api\r\n    */\r\n    Text.prototype.getFont = function () {\r\n        return this.font_;\r\n    };\r\n    /**\r\n    * Get the maximum angle between adjacent characters.\r\n    * @return {number} Angle in radians.\r\n    * @api\r\n    */\r\n    Text.prototype.getMaxAngle = function () {\r\n        return this.maxAngle_;\r\n    };\r\n    /**\r\n    * Get the label placement.\r\n    * @return {import(\"./TextPlacement.js\").default|string} Text placement.\r\n    * @api\r\n    */\r\n    Text.prototype.getPlacement = function () {\r\n        return this.placement_;\r\n    };\r\n    /**\r\n    * Get the x-offset for the text.\r\n    * @return {number} Horizontal text offset.\r\n    * @api\r\n    */\r\n    Text.prototype.getOffsetX = function () {\r\n        return this.offsetX_;\r\n    };\r\n    /**\r\n    * Get the y-offset for the text.\r\n    * @return {number} Vertical text offset.\r\n    * @api\r\n    */\r\n    Text.prototype.getOffsetY = function () {\r\n        return this.offsetY_;\r\n    };\r\n    /**\r\n    * Get the fill style for the text.\r\n    * @return {import(\"./Fill.js\").default} Fill style.\r\n    * @api\r\n    */\r\n    Text.prototype.getFill = function () {\r\n        return this.fill_;\r\n    };\r\n    /**\r\n    * Determine whether the text rotates with the map.\r\n    * @return {boolean|undefined} Rotate with map.\r\n    * @api\r\n    */\r\n    Text.prototype.getRotateWithView = function () {\r\n        return this.rotateWithView_;\r\n    };\r\n    /**\r\n    * Get the text rotation.\r\n    * @return {number|undefined} Rotation.\r\n    * @api\r\n    */\r\n    Text.prototype.getRotation = function () {\r\n        return this.rotation_;\r\n    };\r\n    /**\r\n    * Get the text scale.\r\n    * @return {number|undefined} Scale.\r\n    * @api\r\n    */\r\n    Text.prototype.getScale = function () {\r\n        return this.scale_;\r\n    };\r\n    /**\r\n    * Get the stroke style for the text.\r\n    * @return {import(\"./Stroke.js\").default} Stroke style.\r\n    * @api\r\n    */\r\n    Text.prototype.getStroke = function () {\r\n        return this.stroke_;\r\n    };\r\n    /**\r\n    * Get the text to be rendered.\r\n    * @return {string|undefined} Text.\r\n    * @api\r\n    */\r\n    Text.prototype.getText = function () {\r\n        return this.text_;\r\n    };\r\n    /**\r\n    * Get the text alignment.\r\n    * @return {string|undefined} Text align.\r\n    * @api\r\n    */\r\n    Text.prototype.getTextAlign = function () {\r\n        return this.textAlign_;\r\n    };\r\n    /**\r\n    * Get the text baseline.\r\n    * @return {string|undefined} Text baseline.\r\n    * @api\r\n    */\r\n    Text.prototype.getTextBaseline = function () {\r\n        return this.textBaseline_;\r\n    };\r\n    /**\r\n    * Get the background fill style for the text.\r\n    * @return {import(\"./Fill.js\").default} Fill style.\r\n    * @api\r\n    */\r\n    Text.prototype.getBackgroundFill = function () {\r\n        return this.backgroundFill_;\r\n    };\r\n    /**\r\n    * Get the background stroke style for the text.\r\n    * @return {import(\"./Stroke.js\").default} Stroke style.\r\n    * @api\r\n    */\r\n    Text.prototype.getBackgroundStroke = function () {\r\n        return this.backgroundStroke_;\r\n    };\r\n    /**\r\n    * Get the padding for the text.\r\n    * @return {Array<number>} Padding.\r\n    * @api\r\n    */\r\n    Text.prototype.getPadding = function () {\r\n        return this.padding_;\r\n    };\r\n    /**\r\n    * Set the `overflow` property.\r\n    *\r\n    * @param {boolean} overflow Let text overflow the path that it follows.\r\n    * @api\r\n    */\r\n    Text.prototype.setOverflow = function (overflow) {\r\n        this.overflow_ = overflow;\r\n    };\r\n    /**\r\n    * Set the font.\r\n    *\r\n    * @param {string|undefined} font Font.\r\n    * @api\r\n    */\r\n    Text.prototype.setFont = function (font) {\r\n        this.font_ = font;\r\n    };\r\n    /**\r\n    * Set the maximum angle between adjacent characters.\r\n    *\r\n    * @param {number} maxAngle Angle in radians.\r\n    * @api\r\n    */\r\n    Text.prototype.setMaxAngle = function (maxAngle) {\r\n        this.maxAngle_ = maxAngle;\r\n    };\r\n    /**\r\n    * Set the x offset.\r\n    *\r\n    * @param {number} offsetX Horizontal text offset.\r\n    * @api\r\n    */\r\n    Text.prototype.setOffsetX = function (offsetX) {\r\n        this.offsetX_ = offsetX;\r\n    };\r\n    /**\r\n    * Set the y offset.\r\n    *\r\n    * @param {number} offsetY Vertical text offset.\r\n    * @api\r\n    */\r\n    Text.prototype.setOffsetY = function (offsetY) {\r\n        this.offsetY_ = offsetY;\r\n    };\r\n    /**\r\n    * Set the text placement.\r\n    *\r\n    * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\r\n    * @api\r\n    */\r\n    Text.prototype.setPlacement = function (placement) {\r\n        this.placement_ = placement;\r\n    };\r\n    /**\r\n    * Set the fill.\r\n    *\r\n    * @param {import(\"./Fill.js\").default} fill Fill style.\r\n    * @api\r\n    */\r\n    Text.prototype.setFill = function (fill) {\r\n        this.fill_ = fill;\r\n    };\r\n    /**\r\n    * Set the rotation.\r\n    *\r\n    * @param {number|undefined} rotation Rotation.\r\n    * @api\r\n    */\r\n    Text.prototype.setRotation = function (rotation) {\r\n        this.rotation_ = rotation;\r\n    };\r\n    /**\r\n    * Set the scale.\r\n    *\r\n    * @param {number|undefined} scale Scale.\r\n    * @api\r\n    */\r\n    Text.prototype.setScale = function (scale) {\r\n        this.scale_ = scale;\r\n    };\r\n    /**\r\n    * Set the stroke.\r\n    *\r\n    * @param {import(\"./Stroke.js\").default} stroke Stroke style.\r\n    * @api\r\n    */\r\n    Text.prototype.setStroke = function (stroke) {\r\n        this.stroke_ = stroke;\r\n    };\r\n    /**\r\n    * Set the text.\r\n    *\r\n    * @param {string|undefined} text Text.\r\n    * @api\r\n    */\r\n    Text.prototype.setText = function (text) {\r\n        this.text_ = text;\r\n    };\r\n    /**\r\n    * Set the text alignment.\r\n    *\r\n    * @param {string|undefined} textAlign Text align.\r\n    * @api\r\n    */\r\n    Text.prototype.setTextAlign = function (textAlign) {\r\n        this.textAlign_ = textAlign;\r\n    };\r\n    /**\r\n    * Set the text baseline.\r\n    *\r\n    * @param {string|undefined} textBaseline Text baseline.\r\n    * @api\r\n    */\r\n    Text.prototype.setTextBaseline = function (textBaseline) {\r\n        this.textBaseline_ = textBaseline;\r\n    };\r\n    /**\r\n    * Set the background fill.\r\n    *\r\n    * @param {import(\"./Fill.js\").default} fill Fill style.\r\n    * @api\r\n    */\r\n    Text.prototype.setBackgroundFill = function (fill) {\r\n        this.backgroundFill_ = fill;\r\n    };\r\n    /**\r\n    * Set the background stroke.\r\n    *\r\n    * @param {import(\"./Stroke.js\").default} stroke Stroke style.\r\n    * @api\r\n    */\r\n    Text.prototype.setBackgroundStroke = function (stroke) {\r\n        this.backgroundStroke_ = stroke;\r\n    };\r\n    /**\r\n    * Set the padding (`[top, right, bottom, left]`).\r\n    *\r\n    * @param {!Array<number>} padding Padding.\r\n    * @api\r\n    */\r\n    Text.prototype.setPadding = function (padding) {\r\n        this.padding_ = padding;\r\n    };\r\n    return Text;\r\n}());\r\nexport default Text;\r\n//# sourceMappingURL=Text.js.map","/**\r\n * @module ol/render/Feature\r\n */\r\nimport { extend } from '../array.js';\r\nimport { createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight } from '../extent.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport { linearRingss as linearRingssCenter } from '../geom/flat/center.js';\r\nimport { getInteriorPointOfArray, getInteriorPointsOfMultiArray } from '../geom/flat/interiorpoint.js';\r\nimport { interpolatePoint } from '../geom/flat/interpolate.js';\r\nimport { get as getProjection } from '../proj.js';\r\nimport { transform2D } from '../geom/flat/transform.js';\r\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\r\n/**\r\n * @type {import(\"../transform.js\").Transform}\r\n */\r\nvar tmpTransform = createTransform();\r\n/**\r\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\r\n * structure, optimized for vector tile rendering and styling. Geometry access\r\n * through the API is limited to getting the type and extent of the geometry.\r\n *\r\n * @param {GeometryType} type Geometry type.\r\n * @param {Array<number>} flatCoordinates Flat coordinates. These always need\r\n *     to be right-handed for polygons.\r\n * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\r\n * @param {Object<string, *>} properties Properties.\r\n * @param {number|string|undefined} id Feature id.\r\n */\r\nvar RenderFeature = /** @class */ (function () {\r\n    function RenderFeature(type, flatCoordinates, ends, properties, id) {\r\n        /**\r\n        * @private\r\n        * @type {import(\"../extent.js\").Extent|undefined}\r\n        */\r\n        this.extent_;\r\n        /**\r\n        * @private\r\n        * @type {number|string|undefined}\r\n        */\r\n        this.id_ = id;\r\n        /**\r\n        * @private\r\n        * @type {GeometryType}\r\n        */\r\n        this.type_ = type;\r\n        /**\r\n        * @private\r\n        * @type {Array<number>}\r\n        */\r\n        this.flatCoordinates_ = flatCoordinates;\r\n        /**\r\n        * @private\r\n        * @type {Array<number>}\r\n        */\r\n        this.flatInteriorPoints_ = null;\r\n        /**\r\n        * @private\r\n        * @type {Array<number>}\r\n        */\r\n        this.flatMidpoints_ = null;\r\n        /**\r\n        * @private\r\n        * @type {Array<number>|Array<Array<number>>}\r\n        */\r\n        this.ends_ = ends;\r\n        /**\r\n        * @private\r\n        * @type {Object<string, *>}\r\n        */\r\n        this.properties_ = properties;\r\n    }\r\n    /**\r\n    * Get a feature property by its key.\r\n    * @param {string} key Key\r\n    * @return {*} Value for the requested key.\r\n    * @api\r\n    */\r\n    RenderFeature.prototype.get = function (key) {\r\n        return this.properties_[key];\r\n    };\r\n    /**\r\n    * Get the extent of this feature's geometry.\r\n    * @return {import(\"../extent.js\").Extent} Extent.\r\n    * @api\r\n    */\r\n    RenderFeature.prototype.getExtent = function () {\r\n        if (!this.extent_) {\r\n            this.extent_ = this.type_ === GeometryType.POINT ?\r\n                createOrUpdateFromCoordinate(this.flatCoordinates_) :\r\n                createOrUpdateFromFlatCoordinates(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\r\n        }\r\n        return this.extent_;\r\n    };\r\n    /**\r\n    * @return {Array<number>} Flat interior points.\r\n    */\r\n    RenderFeature.prototype.getFlatInteriorPoint = function () {\r\n        if (!this.flatInteriorPoints_) {\r\n            var flatCenter = getCenter(this.getExtent());\r\n            this.flatInteriorPoints_ = getInteriorPointOfArray(this.flatCoordinates_, 0, /** @type {Array<number>} */ (this.ends_), 2, flatCenter, 0);\r\n        }\r\n        return this.flatInteriorPoints_;\r\n    };\r\n    /**\r\n    * @return {Array<number>} Flat interior points.\r\n    */\r\n    RenderFeature.prototype.getFlatInteriorPoints = function () {\r\n        if (!this.flatInteriorPoints_) {\r\n            var flatCenters = linearRingssCenter(this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2);\r\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2, flatCenters);\r\n        }\r\n        return this.flatInteriorPoints_;\r\n    };\r\n    /**\r\n    * @return {Array<number>} Flat midpoint.\r\n    */\r\n    RenderFeature.prototype.getFlatMidpoint = function () {\r\n        if (!this.flatMidpoints_) {\r\n            this.flatMidpoints_ = interpolatePoint(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\r\n        }\r\n        return this.flatMidpoints_;\r\n    };\r\n    /**\r\n    * @return {Array<number>} Flat midpoints.\r\n    */\r\n    RenderFeature.prototype.getFlatMidpoints = function () {\r\n        if (!this.flatMidpoints_) {\r\n            this.flatMidpoints_ = [];\r\n            var flatCoordinates = this.flatCoordinates_;\r\n            var offset = 0;\r\n            var ends = /** @type {Array<number>} */ (this.ends_);\r\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n                var end = ends[i];\r\n                var midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\r\n                extend(this.flatMidpoints_, midpoint);\r\n                offset = end;\r\n            }\r\n        }\r\n        return this.flatMidpoints_;\r\n    };\r\n    /**\r\n    * Get the feature identifier.  This is a stable identifier for the feature and\r\n    * is set when reading data from a remote source.\r\n    * @return {number|string|undefined} Id.\r\n    * @api\r\n    */\r\n    RenderFeature.prototype.getId = function () {\r\n        return this.id_;\r\n    };\r\n    /**\r\n    * @return {Array<number>} Flat coordinates.\r\n    */\r\n    RenderFeature.prototype.getOrientedFlatCoordinates = function () {\r\n        return this.flatCoordinates_;\r\n    };\r\n    /**\r\n    * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\r\n    * determining the geometry type in style function (see {@link #getType}).\r\n    * @return {RenderFeature} Feature.\r\n    * @api\r\n    */\r\n    RenderFeature.prototype.getGeometry = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @param {number} squaredTolerance Squared tolerance.\r\n     * @return {RenderFeature} Simplified geometry.\r\n     */\r\n    RenderFeature.prototype.getSimplifiedGeometry = function (squaredTolerance) {\r\n        return this;\r\n    };\r\n    /**\r\n    * Get the feature properties.\r\n    * @return {Object<string, *>} Feature properties.\r\n    * @api\r\n    */\r\n    RenderFeature.prototype.getProperties = function () {\r\n        return this.properties_;\r\n    };\r\n    /**\r\n    * @return {number} Stride.\r\n    */\r\n    RenderFeature.prototype.getStride = function () {\r\n        return 2;\r\n    };\r\n    /**\r\n     * @return {undefined}\r\n     */\r\n    RenderFeature.prototype.getStyleFunction = function () {\r\n        return undefined;\r\n    };\r\n    /**\r\n    * Get the type of this feature's geometry.\r\n    * @return {GeometryType} Geometry type.\r\n    * @api\r\n    */\r\n    RenderFeature.prototype.getType = function () {\r\n        return this.type_;\r\n    };\r\n    /**\r\n    * Transform geometry coordinates from tile pixel space to projected.\r\n    * The SRS of the source and destination are expected to be the same.\r\n    *\r\n    * @param {import(\"../proj.js\").ProjectionLike} source The current projection\r\n    * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.\r\n    */\r\n    RenderFeature.prototype.transform = function (source, destination) {\r\n        source = getProjection(source);\r\n        var pixelExtent = source.getExtent();\r\n        var projectedExtent = source.getWorldExtent();\r\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\r\n        composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\r\n        transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, tmpTransform, this.flatCoordinates_);\r\n    };\r\n    return RenderFeature;\r\n}());\r\n/**\r\n * @return {Array<number>|Array<Array<number>>} Ends or endss.\r\n */\r\nRenderFeature.prototype.getEnds =\r\n    RenderFeature.prototype.getEndss = function () {\r\n        return this.ends_;\r\n    };\r\n/**\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nRenderFeature.prototype.getFlatCoordinates =\r\n    RenderFeature.prototype.getOrientedFlatCoordinates;\r\nexport default RenderFeature;\r\n//# sourceMappingURL=Feature.js.map","/**\r\n * @module ol/format/MVT\r\n */\r\n//FIXME Implement projection handling\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { assert } from '../asserts.js';\r\nimport PBF from 'pbf';\r\nimport FeatureFormat, { transformGeometryWithOptions } from './Feature.js';\r\nimport FormatType from './FormatType.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport { linearRingIsClockwise } from '../geom/flat/orient.js';\r\nimport Projection from '../proj/Projection.js';\r\nimport Units from '../proj/Units.js';\r\nimport RenderFeature from '../render/Feature.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\r\n * {@link module:ol/format/MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\r\n * support at the cost of decreased rendering performance. The default is\r\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\r\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\r\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\r\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\r\n * layers.\r\n */\r\n/**\r\n * @classdesc\r\n * Feature format for reading data in the Mapbox MVT format.\r\n *\r\n * @param {Options=} opt_options Options.\r\n * @api\r\n */\r\nvar MVT = /** @class */ (function (_super) {\r\n    __extends(MVT, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function MVT(opt_options) {\r\n        var _this = _super.call(this) || this;\r\n        var options = opt_options ? opt_options : {};\r\n        /**\r\n         * @type {Projection}\r\n         */\r\n        _this.dataProjection = new Projection({\r\n            code: '',\r\n            units: Units.TILE_PIXELS\r\n        });\r\n        /**\r\n         * @private\r\n         * @type {import(\"../Feature.js\").FeatureClass}\r\n         */\r\n        _this.featureClass_ = options.featureClass ? options.featureClass : RenderFeature;\r\n        /**\r\n         * @private\r\n         * @type {string|undefined}\r\n         */\r\n        _this.geometryName_ = options.geometryName;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.layerName_ = options.layerName ? options.layerName : 'layer';\r\n        /**\r\n         * @private\r\n         * @type {Array<string>}\r\n         */\r\n        _this.layers_ = options.layers ? options.layers : null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../extent.js\").Extent}\r\n         */\r\n        _this.extent_ = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Read the raw geometry from the pbf offset stored in a raw feature's geometry\r\n     * property.\r\n     * @param {PBF} pbf PBF.\r\n     * @param {Object} feature Raw feature.\r\n     * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\r\n     * @param {Array<number>} ends Array to store ends in.\r\n     * @private\r\n     */\r\n    MVT.prototype.readRawGeometry_ = function (pbf, feature, flatCoordinates, ends) {\r\n        pbf.pos = feature.geometry;\r\n        var end = pbf.readVarint() + pbf.pos;\r\n        var cmd = 1;\r\n        var length = 0;\r\n        var x = 0;\r\n        var y = 0;\r\n        var coordsLen = 0;\r\n        var currentEnd = 0;\r\n        while (pbf.pos < end) {\r\n            if (!length) {\r\n                var cmdLen = pbf.readVarint();\r\n                cmd = cmdLen & 0x7;\r\n                length = cmdLen >> 3;\r\n            }\r\n            length--;\r\n            if (cmd === 1 || cmd === 2) {\r\n                x += pbf.readSVarint();\r\n                y += pbf.readSVarint();\r\n                if (cmd === 1) { // moveTo\r\n                    if (coordsLen > currentEnd) {\r\n                        ends.push(coordsLen);\r\n                        currentEnd = coordsLen;\r\n                    }\r\n                }\r\n                flatCoordinates.push(x, y);\r\n                coordsLen += 2;\r\n            }\r\n            else if (cmd === 7) {\r\n                if (coordsLen > currentEnd) {\r\n                    // close polygon\r\n                    flatCoordinates.push(flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\r\n                    coordsLen += 2;\r\n                }\r\n            }\r\n            else {\r\n                assert(false, 59); // Invalid command found in the PBF\r\n            }\r\n        }\r\n        if (coordsLen > currentEnd) {\r\n            ends.push(coordsLen);\r\n            currentEnd = coordsLen;\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {PBF} pbf PBF\r\n     * @param {Object} rawFeature Raw Mapbox feature.\r\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\r\n     */\r\n    MVT.prototype.createFeature_ = function (pbf, rawFeature, opt_options) {\r\n        var type = rawFeature.type;\r\n        if (type === 0) {\r\n            return null;\r\n        }\r\n        var feature;\r\n        var id = rawFeature.id;\r\n        var values = rawFeature.properties;\r\n        values[this.layerName_] = rawFeature.layer.name;\r\n        var flatCoordinates = [];\r\n        var ends = [];\r\n        this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\r\n        var geometryType = getGeometryType(type, ends.length);\r\n        if (this.featureClass_ === RenderFeature) {\r\n            feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\r\n        }\r\n        else {\r\n            var geom = void 0;\r\n            if (geometryType == GeometryType.POLYGON) {\r\n                var endss = [];\r\n                var offset = 0;\r\n                var prevEndIndex = 0;\r\n                for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n                    var end = ends[i];\r\n                    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\r\n                        endss.push(ends.slice(prevEndIndex, i));\r\n                        prevEndIndex = i;\r\n                    }\r\n                    offset = end;\r\n                }\r\n                if (endss.length > 1) {\r\n                    geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\r\n                }\r\n                else {\r\n                    geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\r\n                }\r\n            }\r\n            else {\r\n                geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) :\r\n                    geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) :\r\n                        geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) :\r\n                            geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) :\r\n                                geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) :\r\n                                    null;\r\n            }\r\n            var ctor = /** @type {typeof import(\"../Feature.js\").default} */ (this.featureClass_);\r\n            feature = new ctor();\r\n            if (this.geometryName_) {\r\n                feature.setGeometryName(this.geometryName_);\r\n            }\r\n            var geometry = transformGeometryWithOptions(geom, false, this.adaptOptions(opt_options));\r\n            feature.setGeometry(geometry);\r\n            feature.setId(id);\r\n            feature.setProperties(values, true);\r\n        }\r\n        return feature;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    MVT.prototype.getLastExtent = function () {\r\n        return this.extent_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    MVT.prototype.getType = function () {\r\n        return FormatType.ARRAY_BUFFER;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    MVT.prototype.readFeatures = function (source, opt_options) {\r\n        var layers = this.layers_;\r\n        var pbf = new PBF(/** @type {ArrayBuffer} */ (source));\r\n        var pbfLayers = pbf.readFields(layersPBFReader, {});\r\n        /** @type {Array<import(\"../Feature.js\").FeatureLike>} */\r\n        var features = [];\r\n        for (var name_1 in pbfLayers) {\r\n            if (layers && layers.indexOf(name_1) == -1) {\r\n                continue;\r\n            }\r\n            var pbfLayer = pbfLayers[name_1];\r\n            for (var i = 0, ii = pbfLayer.length; i < ii; ++i) {\r\n                var rawFeature = readRawFeature(pbf, pbfLayer, i);\r\n                features.push(this.createFeature_(pbf, rawFeature));\r\n            }\r\n            this.extent_ = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\r\n        }\r\n        return features;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    MVT.prototype.readProjection = function (source) {\r\n        return this.dataProjection;\r\n    };\r\n    /**\r\n     * Sets the layers that features will be read from.\r\n     * @param {Array<string>} layers Layers.\r\n     * @api\r\n     */\r\n    MVT.prototype.setLayers = function (layers) {\r\n        this.layers_ = layers;\r\n    };\r\n    return MVT;\r\n}(FeatureFormat));\r\n/**\r\n * Reader callback for parsing layers.\r\n * @param {number} tag The tag.\r\n * @param {Object} layers The layers object.\r\n * @param {PBF} pbf The PBF.\r\n */\r\nfunction layersPBFReader(tag, layers, pbf) {\r\n    if (tag === 3) {\r\n        var layer = {\r\n            keys: [],\r\n            values: [],\r\n            features: []\r\n        };\r\n        var end = pbf.readVarint() + pbf.pos;\r\n        pbf.readFields(layerPBFReader, layer, end);\r\n        layer.length = layer.features.length;\r\n        if (layer.length) {\r\n            layers[layer.name] = layer;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Reader callback for parsing layer.\r\n * @param {number} tag The tag.\r\n * @param {Object} layer The layer object.\r\n * @param {PBF} pbf The PBF.\r\n */\r\nfunction layerPBFReader(tag, layer, pbf) {\r\n    if (tag === 15) {\r\n        layer.version = pbf.readVarint();\r\n    }\r\n    else if (tag === 1) {\r\n        layer.name = pbf.readString();\r\n    }\r\n    else if (tag === 5) {\r\n        layer.extent = pbf.readVarint();\r\n    }\r\n    else if (tag === 2) {\r\n        layer.features.push(pbf.pos);\r\n    }\r\n    else if (tag === 3) {\r\n        layer.keys.push(pbf.readString());\r\n    }\r\n    else if (tag === 4) {\r\n        var value = null;\r\n        var end = pbf.readVarint() + pbf.pos;\r\n        while (pbf.pos < end) {\r\n            tag = pbf.readVarint() >> 3;\r\n            value = tag === 1 ? pbf.readString() :\r\n                tag === 2 ? pbf.readFloat() :\r\n                    tag === 3 ? pbf.readDouble() :\r\n                        tag === 4 ? pbf.readVarint64() :\r\n                            tag === 5 ? pbf.readVarint() :\r\n                                tag === 6 ? pbf.readSVarint() :\r\n                                    tag === 7 ? pbf.readBoolean() : null;\r\n        }\r\n        layer.values.push(value);\r\n    }\r\n}\r\n/**\r\n * Reader callback for parsing feature.\r\n * @param {number} tag The tag.\r\n * @param {Object} feature The feature object.\r\n * @param {PBF} pbf The PBF.\r\n */\r\nfunction featurePBFReader(tag, feature, pbf) {\r\n    if (tag == 1) {\r\n        feature.id = pbf.readVarint();\r\n    }\r\n    else if (tag == 2) {\r\n        var end = pbf.readVarint() + pbf.pos;\r\n        while (pbf.pos < end) {\r\n            var key = feature.layer.keys[pbf.readVarint()];\r\n            var value = feature.layer.values[pbf.readVarint()];\r\n            feature.properties[key] = value;\r\n        }\r\n    }\r\n    else if (tag == 3) {\r\n        feature.type = pbf.readVarint();\r\n    }\r\n    else if (tag == 4) {\r\n        feature.geometry = pbf.pos;\r\n    }\r\n}\r\n/**\r\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\r\n * @param {PBF} pbf PBF.\r\n * @param {Object} layer Raw layer.\r\n * @param {number} i Index of the feature in the raw layer's `features` array.\r\n * @return {Object} Raw feature.\r\n */\r\nfunction readRawFeature(pbf, layer, i) {\r\n    pbf.pos = layer.features[i];\r\n    var end = pbf.readVarint() + pbf.pos;\r\n    var feature = {\r\n        layer: layer,\r\n        type: 0,\r\n        properties: {}\r\n    };\r\n    pbf.readFields(featurePBFReader, feature, end);\r\n    return feature;\r\n}\r\n/**\r\n * @param {number} type The raw feature's geometry type\r\n * @param {number} numEnds Number of ends of the flat coordinates of the\r\n * geometry.\r\n * @return {GeometryType} The geometry type.\r\n */\r\nfunction getGeometryType(type, numEnds) {\r\n    /** @type {GeometryType} */\r\n    var geometryType;\r\n    if (type === 1) {\r\n        geometryType = numEnds === 1 ?\r\n            GeometryType.POINT : GeometryType.MULTI_POINT;\r\n    }\r\n    else if (type === 2) {\r\n        geometryType = numEnds === 1 ?\r\n            GeometryType.LINE_STRING :\r\n            GeometryType.MULTI_LINE_STRING;\r\n    }\r\n    else if (type === 3) {\r\n        geometryType = GeometryType.POLYGON;\r\n        // MultiPolygon not relevant for rendering - winding order determines\r\n        // outer rings of polygons.\r\n    }\r\n    return geometryType;\r\n}\r\nexport default MVT;\r\n//# sourceMappingURL=MVT.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/OSMXML\r\n */\r\n// FIXME add typedef for stack state objects\r\nimport { extend } from '../array.js';\r\nimport Feature from '../Feature.js';\r\nimport { transformGeometryWithOptions } from './Feature.js';\r\nimport XMLFeature from './XMLFeature.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport { isEmpty } from '../obj.js';\r\nimport { get as getProjection } from '../proj.js';\r\nimport { pushParseAndPop, makeStructureNS } from '../xml.js';\r\n/**\r\n * @const\r\n * @type {Array<null>}\r\n */\r\nvar NAMESPACE_URIS = [null];\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'nd': readNd,\r\n    'tag': readTag\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'node': readNode,\r\n    'way': readWay\r\n});\r\n/**\r\n * @classdesc\r\n * Feature format for reading data in the\r\n * [OSMXML format](http://wiki.openstreetmap.org/wiki/OSM_XML).\r\n *\r\n * @api\r\n */\r\nvar OSMXML = /** @class */ (function (_super) {\r\n    __extends(OSMXML, _super);\r\n    function OSMXML() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        _this.dataProjection = getProjection('EPSG:4326');\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    OSMXML.prototype.readFeaturesFromNode = function (node, opt_options) {\r\n        var options = this.getReadOptions(node, opt_options);\r\n        if (node.localName == 'osm') {\r\n            var state = pushParseAndPop({\r\n                nodes: {},\r\n                ways: [],\r\n                features: []\r\n            }, PARSERS, node, [options]);\r\n            // parse nodes in ways\r\n            for (var j = 0; j < state.ways.length; j++) {\r\n                var values = /** @type {Object} */ (state.ways[j]);\r\n                /** @type {Array<number>} */\r\n                var flatCoordinates = [];\r\n                for (var i = 0, ii = values.ndrefs.length; i < ii; i++) {\r\n                    var point = state.nodes[values.ndrefs[i]];\r\n                    extend(flatCoordinates, point);\r\n                }\r\n                var geometry = void 0;\r\n                if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\r\n                    // closed way\r\n                    geometry = new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\r\n                }\r\n                else {\r\n                    geometry = new LineString(flatCoordinates, GeometryLayout.XY);\r\n                }\r\n                transformGeometryWithOptions(geometry, false, options);\r\n                var feature = new Feature(geometry);\r\n                feature.setId(values.id);\r\n                feature.setProperties(values.tags, true);\r\n                state.features.push(feature);\r\n            }\r\n            if (state.features) {\r\n                return state.features;\r\n            }\r\n        }\r\n        return [];\r\n    };\r\n    return OSMXML;\r\n}(XMLFeature));\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'tag': readTag\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction readNode(node, objectStack) {\r\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\r\n    var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    var id = node.getAttribute('id');\r\n    /** @type {import(\"../coordinate.js\").Coordinate} */\r\n    var coordinates = [\r\n        parseFloat(node.getAttribute('lon')),\r\n        parseFloat(node.getAttribute('lat'))\r\n    ];\r\n    state.nodes[id] = coordinates;\r\n    var values = pushParseAndPop({\r\n        tags: {}\r\n    }, NODE_PARSERS, node, objectStack);\r\n    if (!isEmpty(values.tags)) {\r\n        var geometry = new Point(coordinates);\r\n        transformGeometryWithOptions(geometry, false, options);\r\n        var feature = new Feature(geometry);\r\n        feature.setId(id);\r\n        feature.setProperties(values.tags, true);\r\n        state.features.push(feature);\r\n    }\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction readWay(node, objectStack) {\r\n    var id = node.getAttribute('id');\r\n    var values = pushParseAndPop({\r\n        id: id,\r\n        ndrefs: [],\r\n        tags: {}\r\n    }, WAY_PARSERS, node, objectStack);\r\n    var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    state.ways.push(values);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction readNd(node, objectStack) {\r\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    values.ndrefs.push(node.getAttribute('ref'));\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction readTag(node, objectStack) {\r\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    values.tags[node.getAttribute('k')] = node.getAttribute('v');\r\n}\r\nexport default OSMXML;\r\n//# sourceMappingURL=OSMXML.js.map","/**\r\n * @module ol/geom/flat/flip\r\n */\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @param {number=} opt_destOffset Destination offset.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\r\n    var dest, destOffset;\r\n    if (opt_dest !== undefined) {\r\n        dest = opt_dest;\r\n        destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\r\n    }\r\n    else {\r\n        dest = [];\r\n        destOffset = 0;\r\n    }\r\n    var j = offset;\r\n    while (j < end) {\r\n        var x = flatCoordinates[j++];\r\n        dest[destOffset++] = flatCoordinates[j++];\r\n        dest[destOffset++] = x;\r\n        for (var k = 2; k < stride; ++k) {\r\n            dest[destOffset++] = flatCoordinates[j++];\r\n        }\r\n    }\r\n    dest.length = destOffset;\r\n    return dest;\r\n}\r\n//# sourceMappingURL=flip.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/Polyline\r\n */\r\nimport { assert } from '../asserts.js';\r\nimport Feature from '../Feature.js';\r\nimport { transformGeometryWithOptions } from './Feature.js';\r\nimport TextFeature from './TextFeature.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport { getStrideForLayout } from '../geom/SimpleGeometry.js';\r\nimport { flipXY } from '../geom/flat/flip.js';\r\nimport { inflateCoordinates } from '../geom/flat/inflate.js';\r\nimport { get as getProjection } from '../proj.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\r\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\r\n * feature geometries created by the format reader.\r\n */\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the Encoded\r\n * Polyline Algorithm Format.\r\n *\r\n * When reading features, the coordinates are assumed to be in two dimensions\r\n * and in [latitude, longitude] order.\r\n *\r\n * As Polyline sources contain a single feature,\r\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\r\n * feature in an array.\r\n *\r\n * @api\r\n */\r\nvar Polyline = /** @class */ (function (_super) {\r\n    __extends(Polyline, _super);\r\n    /**\r\n     * @param {Options=} opt_options Optional configuration object.\r\n     */\r\n    function Polyline(opt_options) {\r\n        var _this = _super.call(this) || this;\r\n        var options = opt_options ? opt_options : {};\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        _this.dataProjection = getProjection('EPSG:4326');\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.factor_ = options.factor ? options.factor : 1e5;\r\n        /**\r\n         * @private\r\n         * @type {GeometryLayout}\r\n         */\r\n        _this.geometryLayout_ = options.geometryLayout ?\r\n            options.geometryLayout : GeometryLayout.XY;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Polyline.prototype.readFeatureFromText = function (text, opt_options) {\r\n        var geometry = this.readGeometryFromText(text, opt_options);\r\n        return new Feature(geometry);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Polyline.prototype.readFeaturesFromText = function (text, opt_options) {\r\n        var feature = this.readFeatureFromText(text, opt_options);\r\n        return [feature];\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Polyline.prototype.readGeometryFromText = function (text, opt_options) {\r\n        var stride = getStrideForLayout(this.geometryLayout_);\r\n        var flatCoordinates = decodeDeltas(text, stride, this.factor_);\r\n        flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\r\n        var coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\r\n        var lineString = new LineString(coordinates, this.geometryLayout_);\r\n        return transformGeometryWithOptions(lineString, false, this.adaptOptions(opt_options));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Polyline.prototype.writeFeatureText = function (feature, opt_options) {\r\n        var geometry = feature.getGeometry();\r\n        if (geometry) {\r\n            return this.writeGeometryText(geometry, opt_options);\r\n        }\r\n        else {\r\n            assert(false, 40); // Expected `feature` to have a geometry\r\n            return '';\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Polyline.prototype.writeFeaturesText = function (features, opt_options) {\r\n        return this.writeFeatureText(features[0], opt_options);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Polyline.prototype.writeGeometryText = function (geometry, opt_options) {\r\n        geometry = /** @type {LineString} */\r\n            (transformGeometryWithOptions(geometry, true, this.adaptOptions(opt_options)));\r\n        var flatCoordinates = geometry.getFlatCoordinates();\r\n        var stride = geometry.getStride();\r\n        flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\r\n        return encodeDeltas(flatCoordinates, stride, this.factor_);\r\n    };\r\n    return Polyline;\r\n}(TextFeature));\r\n/**\r\n * Encode a list of n-dimensional points and return an encoded string\r\n *\r\n * Attention: This function will modify the passed array!\r\n *\r\n * @param {Array<number>} numbers A list of n-dimensional points.\r\n * @param {number} stride The number of dimension of the points in the list.\r\n * @param {number=} opt_factor The factor by which the numbers will be\r\n *     multiplied. The remaining decimal places will get rounded away.\r\n *     Default is `1e5`.\r\n * @return {string} The encoded string.\r\n * @api\r\n */\r\nexport function encodeDeltas(numbers, stride, opt_factor) {\r\n    var factor = opt_factor ? opt_factor : 1e5;\r\n    var d;\r\n    var lastNumbers = new Array(stride);\r\n    for (d = 0; d < stride; ++d) {\r\n        lastNumbers[d] = 0;\r\n    }\r\n    for (var i = 0, ii = numbers.length; i < ii;) {\r\n        for (d = 0; d < stride; ++d, ++i) {\r\n            var num = numbers[i];\r\n            var delta = num - lastNumbers[d];\r\n            lastNumbers[d] = num;\r\n            numbers[i] = delta;\r\n        }\r\n    }\r\n    return encodeFloats(numbers, factor);\r\n}\r\n/**\r\n * Decode a list of n-dimensional points from an encoded string\r\n *\r\n * @param {string} encoded An encoded string.\r\n * @param {number} stride The number of dimension of the points in the\r\n *     encoded string.\r\n * @param {number=} opt_factor The factor by which the resulting numbers will\r\n *     be divided. Default is `1e5`.\r\n * @return {Array<number>} A list of n-dimensional points.\r\n * @api\r\n */\r\nexport function decodeDeltas(encoded, stride, opt_factor) {\r\n    var factor = opt_factor ? opt_factor : 1e5;\r\n    var d;\r\n    /** @type {Array<number>} */\r\n    var lastNumbers = new Array(stride);\r\n    for (d = 0; d < stride; ++d) {\r\n        lastNumbers[d] = 0;\r\n    }\r\n    var numbers = decodeFloats(encoded, factor);\r\n    for (var i = 0, ii = numbers.length; i < ii;) {\r\n        for (d = 0; d < stride; ++d, ++i) {\r\n            lastNumbers[d] += numbers[i];\r\n            numbers[i] = lastNumbers[d];\r\n        }\r\n    }\r\n    return numbers;\r\n}\r\n/**\r\n * Encode a list of floating point numbers and return an encoded string\r\n *\r\n * Attention: This function will modify the passed array!\r\n *\r\n * @param {Array<number>} numbers A list of floating point numbers.\r\n * @param {number=} opt_factor The factor by which the numbers will be\r\n *     multiplied. The remaining decimal places will get rounded away.\r\n *     Default is `1e5`.\r\n * @return {string} The encoded string.\r\n * @api\r\n */\r\nexport function encodeFloats(numbers, opt_factor) {\r\n    var factor = opt_factor ? opt_factor : 1e5;\r\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\r\n        numbers[i] = Math.round(numbers[i] * factor);\r\n    }\r\n    return encodeSignedIntegers(numbers);\r\n}\r\n/**\r\n * Decode a list of floating point numbers from an encoded string\r\n *\r\n * @param {string} encoded An encoded string.\r\n * @param {number=} opt_factor The factor by which the result will be divided.\r\n *     Default is `1e5`.\r\n * @return {Array<number>} A list of floating point numbers.\r\n * @api\r\n */\r\nexport function decodeFloats(encoded, opt_factor) {\r\n    var factor = opt_factor ? opt_factor : 1e5;\r\n    var numbers = decodeSignedIntegers(encoded);\r\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\r\n        numbers[i] /= factor;\r\n    }\r\n    return numbers;\r\n}\r\n/**\r\n * Encode a list of signed integers and return an encoded string\r\n *\r\n * Attention: This function will modify the passed array!\r\n *\r\n * @param {Array<number>} numbers A list of signed integers.\r\n * @return {string} The encoded string.\r\n */\r\nexport function encodeSignedIntegers(numbers) {\r\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\r\n        var num = numbers[i];\r\n        numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\r\n    }\r\n    return encodeUnsignedIntegers(numbers);\r\n}\r\n/**\r\n * Decode a list of signed integers from an encoded string\r\n *\r\n * @param {string} encoded An encoded string.\r\n * @return {Array<number>} A list of signed integers.\r\n */\r\nexport function decodeSignedIntegers(encoded) {\r\n    var numbers = decodeUnsignedIntegers(encoded);\r\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\r\n        var num = numbers[i];\r\n        numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\r\n    }\r\n    return numbers;\r\n}\r\n/**\r\n * Encode a list of unsigned integers and return an encoded string\r\n *\r\n * @param {Array<number>} numbers A list of unsigned integers.\r\n * @return {string} The encoded string.\r\n */\r\nexport function encodeUnsignedIntegers(numbers) {\r\n    var encoded = '';\r\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\r\n        encoded += encodeUnsignedInteger(numbers[i]);\r\n    }\r\n    return encoded;\r\n}\r\n/**\r\n * Decode a list of unsigned integers from an encoded string\r\n *\r\n * @param {string} encoded An encoded string.\r\n * @return {Array<number>} A list of unsigned integers.\r\n */\r\nexport function decodeUnsignedIntegers(encoded) {\r\n    var numbers = [];\r\n    var current = 0;\r\n    var shift = 0;\r\n    for (var i = 0, ii = encoded.length; i < ii; ++i) {\r\n        var b = encoded.charCodeAt(i) - 63;\r\n        current |= (b & 0x1f) << shift;\r\n        if (b < 0x20) {\r\n            numbers.push(current);\r\n            current = 0;\r\n            shift = 0;\r\n        }\r\n        else {\r\n            shift += 5;\r\n        }\r\n    }\r\n    return numbers;\r\n}\r\n/**\r\n * Encode one single unsigned integer and return an encoded string\r\n *\r\n * @param {number} num Unsigned integer that should be encoded.\r\n * @return {string} The encoded string.\r\n */\r\nexport function encodeUnsignedInteger(num) {\r\n    var value, encoded = '';\r\n    while (num >= 0x20) {\r\n        value = (0x20 | (num & 0x1f)) + 63;\r\n        encoded += String.fromCharCode(value);\r\n        num >>= 5;\r\n    }\r\n    value = num + 63;\r\n    encoded += String.fromCharCode(value);\r\n    return encoded;\r\n}\r\nexport default Polyline;\r\n//# sourceMappingURL=Polyline.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/TopoJSON\r\n */\r\nimport Feature from '../Feature.js';\r\nimport { transformGeometryWithOptions } from './Feature.js';\r\nimport JSONFeature from './JSONFeature.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport { get as getProjection } from '../proj.js';\r\n/**\r\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\r\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\r\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\r\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\r\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\r\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\r\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\r\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\r\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\r\n */\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\r\n * @property {string} [layerName] Set the name of the TopoJSON topology\r\n * `objects`'s children as feature property with the specified name. This means\r\n * that when set to `'layer'`, a topology like\r\n * ```\r\n * {\r\n *   \"type\": \"Topology\",\r\n *   \"objects\": {\r\n *     \"example\": {\r\n *       \"type\": \"GeometryCollection\",\r\n *       \"geometries\": []\r\n *     }\r\n *   }\r\n * }\r\n * ```\r\n * will result in features that have a property `'layer'` set to `'example'`.\r\n * When not set, no property will be added to features.\r\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\r\n * `objects`'s children to read features from.  If not provided, features will\r\n * be read from all children.\r\n */\r\n/**\r\n * @classdesc\r\n * Feature format for reading data in the TopoJSON format.\r\n *\r\n * @api\r\n */\r\nvar TopoJSON = /** @class */ (function (_super) {\r\n    __extends(TopoJSON, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function TopoJSON(opt_options) {\r\n        var _this = _super.call(this) || this;\r\n        var options = opt_options ? opt_options : {};\r\n        /**\r\n         * @private\r\n         * @type {string|undefined}\r\n         */\r\n        _this.layerName_ = options.layerName;\r\n        /**\r\n         * @private\r\n         * @type {Array<string>}\r\n         */\r\n        _this.layers_ = options.layers ? options.layers : null;\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        _this.dataProjection = getProjection(options.dataProjection ?\r\n            options.dataProjection : 'EPSG:4326');\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TopoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\r\n        if (object.type == 'Topology') {\r\n            var topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\r\n            var transform = void 0, scale = null, translate = null;\r\n            if (topoJSONTopology['transform']) {\r\n                transform = topoJSONTopology['transform'];\r\n                scale = transform['scale'];\r\n                translate = transform['translate'];\r\n            }\r\n            var arcs = topoJSONTopology['arcs'];\r\n            if (transform) {\r\n                transformArcs(arcs, scale, translate);\r\n            }\r\n            /** @type {Array<Feature>} */\r\n            var features = [];\r\n            var topoJSONFeatures = topoJSONTopology['objects'];\r\n            var property = this.layerName_;\r\n            var feature = void 0;\r\n            for (var objectName in topoJSONFeatures) {\r\n                if (this.layers_ && this.layers_.indexOf(objectName) == -1) {\r\n                    continue;\r\n                }\r\n                if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\r\n                    feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\r\n                    features.push.apply(features, readFeaturesFromGeometryCollection(feature, arcs, scale, translate, property, objectName, opt_options));\r\n                }\r\n                else {\r\n                    feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\r\n                    features.push(readFeatureFromGeometry(feature, arcs, scale, translate, property, objectName, opt_options));\r\n                }\r\n            }\r\n            return features;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TopoJSON.prototype.readProjectionFromObject = function (object) {\r\n        return this.dataProjection;\r\n    };\r\n    return TopoJSON;\r\n}(JSONFeature));\r\n/**\r\n * @const\r\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\r\n */\r\nvar GEOMETRY_READERS = {\r\n    'Point': readPointGeometry,\r\n    'LineString': readLineStringGeometry,\r\n    'Polygon': readPolygonGeometry,\r\n    'MultiPoint': readMultiPointGeometry,\r\n    'MultiLineString': readMultiLineStringGeometry,\r\n    'MultiPolygon': readMultiPolygonGeometry\r\n};\r\n/**\r\n * Concatenate arcs into a coordinate array.\r\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\r\n *     values indicate arcs need to be reversed.\r\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\r\n *     transformed).\r\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\r\n */\r\nfunction concatenateArcs(indices, arcs) {\r\n    /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\r\n    var coordinates = [];\r\n    var index, arc;\r\n    for (var i = 0, ii = indices.length; i < ii; ++i) {\r\n        index = indices[i];\r\n        if (i > 0) {\r\n            // splicing together arcs, discard last point\r\n            coordinates.pop();\r\n        }\r\n        if (index >= 0) {\r\n            // forward arc\r\n            arc = arcs[index];\r\n        }\r\n        else {\r\n            // reverse arc\r\n            arc = arcs[~index].slice().reverse();\r\n        }\r\n        coordinates.push.apply(coordinates, arc);\r\n    }\r\n    // provide fresh copies of coordinate arrays\r\n    for (var j = 0, jj = coordinates.length; j < jj; ++j) {\r\n        coordinates[j] = coordinates[j].slice();\r\n    }\r\n    return coordinates;\r\n}\r\n/**\r\n * Create a point from a TopoJSON geometry object.\r\n *\r\n * @param {TopoJSONPoint} object TopoJSON object.\r\n * @param {Array<number>} scale Scale for each dimension.\r\n * @param {Array<number>} translate Translation for each dimension.\r\n * @return {Point} Geometry.\r\n */\r\nfunction readPointGeometry(object, scale, translate) {\r\n    var coordinates = object['coordinates'];\r\n    if (scale && translate) {\r\n        transformVertex(coordinates, scale, translate);\r\n    }\r\n    return new Point(coordinates);\r\n}\r\n/**\r\n * Create a multi-point from a TopoJSON geometry object.\r\n *\r\n * @param {TopoJSONMultiPoint} object TopoJSON object.\r\n * @param {Array<number>} scale Scale for each dimension.\r\n * @param {Array<number>} translate Translation for each dimension.\r\n * @return {MultiPoint} Geometry.\r\n */\r\nfunction readMultiPointGeometry(object, scale, translate) {\r\n    var coordinates = object['coordinates'];\r\n    if (scale && translate) {\r\n        for (var i = 0, ii = coordinates.length; i < ii; ++i) {\r\n            transformVertex(coordinates[i], scale, translate);\r\n        }\r\n    }\r\n    return new MultiPoint(coordinates);\r\n}\r\n/**\r\n * Create a linestring from a TopoJSON geometry object.\r\n *\r\n * @param {TopoJSONLineString} object TopoJSON object.\r\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\r\n * @return {LineString} Geometry.\r\n */\r\nfunction readLineStringGeometry(object, arcs) {\r\n    var coordinates = concatenateArcs(object['arcs'], arcs);\r\n    return new LineString(coordinates);\r\n}\r\n/**\r\n * Create a multi-linestring from a TopoJSON geometry object.\r\n *\r\n * @param {TopoJSONMultiLineString} object TopoJSON object.\r\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\r\n * @return {MultiLineString} Geometry.\r\n */\r\nfunction readMultiLineStringGeometry(object, arcs) {\r\n    var coordinates = [];\r\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\r\n        coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\r\n    }\r\n    return new MultiLineString(coordinates);\r\n}\r\n/**\r\n * Create a polygon from a TopoJSON geometry object.\r\n *\r\n * @param {TopoJSONPolygon} object TopoJSON object.\r\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\r\n * @return {Polygon} Geometry.\r\n */\r\nfunction readPolygonGeometry(object, arcs) {\r\n    var coordinates = [];\r\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\r\n        coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\r\n    }\r\n    return new Polygon(coordinates);\r\n}\r\n/**\r\n * Create a multi-polygon from a TopoJSON geometry object.\r\n *\r\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\r\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\r\n * @return {MultiPolygon} Geometry.\r\n */\r\nfunction readMultiPolygonGeometry(object, arcs) {\r\n    var coordinates = [];\r\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\r\n        // for each polygon\r\n        var polyArray = object['arcs'][i];\r\n        var ringCoords = [];\r\n        for (var j = 0, jj = polyArray.length; j < jj; ++j) {\r\n            // for each ring\r\n            ringCoords[j] = concatenateArcs(polyArray[j], arcs);\r\n        }\r\n        coordinates[i] = ringCoords;\r\n    }\r\n    return new MultiPolygon(coordinates);\r\n}\r\n/**\r\n * Create features from a TopoJSON GeometryCollection object.\r\n *\r\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\r\n *     object.\r\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\r\n * @param {Array<number>} scale Scale for each dimension.\r\n * @param {Array<number>} translate Translation for each dimension.\r\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\r\n *     object to.\r\n * @param {string} name Name of the `Topology`'s child object.\r\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n * @return {Array<Feature>} Array of features.\r\n */\r\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\r\n    var geometries = collection['geometries'];\r\n    var features = [];\r\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n        features[i] = readFeatureFromGeometry(geometries[i], arcs, scale, translate, property, name, opt_options);\r\n    }\r\n    return features;\r\n}\r\n/**\r\n * Create a feature from a TopoJSON geometry object.\r\n *\r\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\r\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\r\n * @param {Array<number>} scale Scale for each dimension.\r\n * @param {Array<number>} translate Translation for each dimension.\r\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\r\n *     object to.\r\n * @param {string} name Name of the `Topology`'s child object.\r\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n * @return {Feature} Feature.\r\n */\r\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\r\n    var geometry;\r\n    var type = object.type;\r\n    var geometryReader = GEOMETRY_READERS[type];\r\n    if ((type === 'Point') || (type === 'MultiPoint')) {\r\n        geometry = geometryReader(object, scale, translate);\r\n    }\r\n    else {\r\n        geometry = geometryReader(object, arcs);\r\n    }\r\n    var feature = new Feature();\r\n    feature.setGeometry(transformGeometryWithOptions(geometry, false, opt_options));\r\n    if (object.id !== undefined) {\r\n        feature.setId(object.id);\r\n    }\r\n    var properties = object.properties;\r\n    if (property) {\r\n        if (!properties) {\r\n            properties = {};\r\n        }\r\n        properties[property] = name;\r\n    }\r\n    if (properties) {\r\n        feature.setProperties(properties, true);\r\n    }\r\n    return feature;\r\n}\r\n/**\r\n * Apply a linear transform to array of arcs.  The provided array of arcs is\r\n * modified in place.\r\n *\r\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\r\n * @param {Array<number>} scale Scale for each dimension.\r\n * @param {Array<number>} translate Translation for each dimension.\r\n */\r\nfunction transformArcs(arcs, scale, translate) {\r\n    for (var i = 0, ii = arcs.length; i < ii; ++i) {\r\n        transformArc(arcs[i], scale, translate);\r\n    }\r\n}\r\n/**\r\n * Apply a linear transform to an arc.  The provided arc is modified in place.\r\n *\r\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\r\n * @param {Array<number>} scale Scale for each dimension.\r\n * @param {Array<number>} translate Translation for each dimension.\r\n */\r\nfunction transformArc(arc, scale, translate) {\r\n    var x = 0;\r\n    var y = 0;\r\n    for (var i = 0, ii = arc.length; i < ii; ++i) {\r\n        var vertex = arc[i];\r\n        x += vertex[0];\r\n        y += vertex[1];\r\n        vertex[0] = x;\r\n        vertex[1] = y;\r\n        transformVertex(vertex, scale, translate);\r\n    }\r\n}\r\n/**\r\n * Apply a linear transform to a vertex.  The provided vertex is modified in\r\n * place.\r\n *\r\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\r\n * @param {Array<number>} scale Scale for each dimension.\r\n * @param {Array<number>} translate Translation for each dimension.\r\n */\r\nfunction transformVertex(vertex, scale, translate) {\r\n    vertex[0] = vertex[0] * scale[0] + translate[0];\r\n    vertex[1] = vertex[1] * scale[1] + translate[1];\r\n}\r\nexport default TopoJSON;\r\n//# sourceMappingURL=TopoJSON.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/WFS\r\n */\r\nimport { assert } from '../asserts.js';\r\nimport GML2 from './GML2.js';\r\nimport GML3 from './GML3.js';\r\nimport GMLBase, { GMLNS } from './GMLBase.js';\r\nimport { and as andFilter, bbox as bboxFilter } from './filter.js';\r\nimport XMLFeature from './XMLFeature.js';\r\nimport { readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode } from './xsd.js';\r\nimport { assign } from '../obj.js';\r\nimport { get as getProjection } from '../proj.js';\r\nimport { createElementNS, isDocument, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar FEATURE_COLLECTION_PARSERS = {\r\n    'http://www.opengis.net/gml': {\r\n        'boundedBy': makeObjectPropertySetter(GMLBase.prototype.readGeometryElement, 'bounds')\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TRANSACTION_SUMMARY_PARSERS = {\r\n    'http://www.opengis.net/wfs': {\r\n        'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\r\n        'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\r\n        'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\r\n    }\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TRANSACTION_RESPONSE_PARSERS = {\r\n    'http://www.opengis.net/wfs': {\r\n        'TransactionSummary': makeObjectPropertySetter(readTransactionSummary, 'transactionSummary'),\r\n        'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds')\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar QUERY_SERIALIZERS = {\r\n    'http://www.opengis.net/wfs': {\r\n        'PropertyName': makeChildAppender(writeStringTextNode)\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar TRANSACTION_SERIALIZERS = {\r\n    'http://www.opengis.net/wfs': {\r\n        'Insert': makeChildAppender(writeFeature),\r\n        'Update': makeChildAppender(writeUpdate),\r\n        'Delete': makeChildAppender(writeDelete),\r\n        'Property': makeChildAppender(writeProperty),\r\n        'Native': makeChildAppender(writeNative)\r\n    }\r\n};\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\r\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\r\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\r\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\r\n */\r\n/**\r\n * @typedef {Object} WriteGetFeatureOptions\r\n * @property {string} featureNS The namespace URI used for features.\r\n * @property {string} featurePrefix The prefix for the feature namespace.\r\n * @property {Array<string>} featureTypes The feature type names.\r\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\r\n * geometries when this is not provided.\r\n * @property {string} [handle] Handle.\r\n * @property {string} [outputFormat] Output format.\r\n * @property {number} [maxFeatures] Maximum number of features to fetch.\r\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\r\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\r\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\r\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\r\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\r\n * @property {number} [count] Number of features to retrieve when paging. This is a\r\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\r\n * Web Feature Services have repurposed `maxfeatures` instead.\r\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter.\r\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\r\n * {@link module:ol/format/Filter} for more information.\r\n * @property {string} [resultType] Indicates what response should be returned,\r\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\r\n */\r\n/**\r\n * @typedef {Object} WriteTransactionOptions\r\n * @property {string} featureNS The namespace URI used for features.\r\n * @property {string} featurePrefix The prefix for the feature namespace.\r\n * @property {string} featureType The feature type name.\r\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\r\n * geometries when this is not provided.\r\n * @property {string} [handle] Handle.\r\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\r\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\r\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\r\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\r\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\r\n */\r\n/**\r\n * Number of features; bounds/extent.\r\n * @typedef {Object} FeatureCollectionMetadata\r\n * @property {number} numberOfFeatures\r\n * @property {import(\"../extent.js\").Extent} bounds\r\n */\r\n/**\r\n * Total deleted; total inserted; total updated; array of insert ids.\r\n * @typedef {Object} TransactionResponse\r\n * @property {number} totalDeleted\r\n * @property {number} totalInserted\r\n * @property {number} totalUpdated\r\n * @property {Array<string>} insertIds\r\n */\r\n/**\r\n * @type {string}\r\n */\r\nvar FEATURE_PREFIX = 'feature';\r\n/**\r\n * @type {string}\r\n */\r\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\r\n/**\r\n * @type {string}\r\n */\r\nvar OGCNS = 'http://www.opengis.net/ogc';\r\n/**\r\n * @type {string}\r\n */\r\nvar WFSNS = 'http://www.opengis.net/wfs';\r\n/**\r\n * @type {string}\r\n */\r\nvar FESNS = 'http://www.opengis.net/fes';\r\n/**\r\n * @type {Object<string, string>}\r\n */\r\nvar SCHEMA_LOCATIONS = {\r\n    '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\r\n    '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\r\n};\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar DEFAULT_VERSION = '1.1.0';\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the WFS format.\r\n * By default, supports WFS version 1.1.0. You can pass a GML format\r\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\r\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\r\n *\r\n * @api\r\n */\r\nvar WFS = /** @class */ (function (_super) {\r\n    __extends(WFS, _super);\r\n    /**\r\n     * @param {Options=} opt_options Optional configuration object.\r\n     */\r\n    function WFS(opt_options) {\r\n        var _this = _super.call(this) || this;\r\n        var options = opt_options ? opt_options : {};\r\n        /**\r\n         * @private\r\n         * @type {Array<string>|string|undefined}\r\n         */\r\n        _this.featureType_ = options.featureType;\r\n        /**\r\n         * @private\r\n         * @type {Object<string, string>|string|undefined}\r\n         */\r\n        _this.featureNS_ = options.featureNS;\r\n        /**\r\n         * @private\r\n         * @type {GMLBase}\r\n         */\r\n        _this.gmlFormat_ = options.gmlFormat ?\r\n            options.gmlFormat : new GML3();\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.schemaLocation_ = options.schemaLocation ?\r\n            options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {Array<string>|string|undefined} featureType\r\n     */\r\n    WFS.prototype.getFeatureType = function () {\r\n        return this.featureType_;\r\n    };\r\n    /**\r\n     * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\r\n     */\r\n    WFS.prototype.setFeatureType = function (featureType) {\r\n        this.featureType_ = featureType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WFS.prototype.readFeaturesFromNode = function (node, opt_options) {\r\n        /** @type {import(\"../xml.js\").NodeStackItem} */\r\n        var context = {\r\n            node: node\r\n        };\r\n        assign(context, {\r\n            'featureType': this.featureType_,\r\n            'featureNS': this.featureNS_\r\n        });\r\n        assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\r\n        var objectStack = [context];\r\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] =\r\n            makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\r\n        var features = pushParseAndPop([], this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node, objectStack, this.gmlFormat_);\r\n        if (!features) {\r\n            features = [];\r\n        }\r\n        return features;\r\n    };\r\n    /**\r\n     * Read transaction response of the source.\r\n     *\r\n     * @param {Document|Element|Object|string} source Source.\r\n     * @return {TransactionResponse|undefined} Transaction response.\r\n     * @api\r\n     */\r\n    WFS.prototype.readTransactionResponse = function (source) {\r\n        if (!source) {\r\n            return undefined;\r\n        }\r\n        else if (typeof source === 'string') {\r\n            var doc = parse(source);\r\n            return this.readTransactionResponseFromDocument(doc);\r\n        }\r\n        else if (isDocument(source)) {\r\n            return this.readTransactionResponseFromDocument(\r\n            /** @type {Document} */ (source));\r\n        }\r\n        else {\r\n            return this.readTransactionResponseFromNode(/** @type {Element} */ (source));\r\n        }\r\n    };\r\n    /**\r\n     * Read feature collection metadata of the source.\r\n     *\r\n     * @param {Document|Element|Object|string} source Source.\r\n     * @return {FeatureCollectionMetadata|undefined}\r\n     *     FeatureCollection metadata.\r\n     * @api\r\n     */\r\n    WFS.prototype.readFeatureCollectionMetadata = function (source) {\r\n        if (!source) {\r\n            return undefined;\r\n        }\r\n        else if (typeof source === 'string') {\r\n            var doc = parse(source);\r\n            return this.readFeatureCollectionMetadataFromDocument(doc);\r\n        }\r\n        else if (isDocument(source)) {\r\n            return this.readFeatureCollectionMetadataFromDocument(\r\n            /** @type {Document} */ (source));\r\n        }\r\n        else {\r\n            return this.readFeatureCollectionMetadataFromNode(\r\n            /** @type {Element} */ (source));\r\n        }\r\n    };\r\n    /**\r\n     * @param {Document} doc Document.\r\n     * @return {FeatureCollectionMetadata|undefined}\r\n     *     FeatureCollection metadata.\r\n     */\r\n    WFS.prototype.readFeatureCollectionMetadataFromDocument = function (doc) {\r\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n            if (n.nodeType == Node.ELEMENT_NODE) {\r\n                return this.readFeatureCollectionMetadataFromNode(/** @type {Element} */ (n));\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @return {FeatureCollectionMetadata|undefined}\r\n     *     FeatureCollection metadata.\r\n     */\r\n    WFS.prototype.readFeatureCollectionMetadataFromNode = function (node) {\r\n        var result = {};\r\n        var value = readNonNegativeIntegerString(node.getAttribute('numberOfFeatures'));\r\n        result['numberOfFeatures'] = value;\r\n        return pushParseAndPop(\r\n        /** @type {FeatureCollectionMetadata} */ (result), FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\r\n    };\r\n    /**\r\n     * @param {Document} doc Document.\r\n     * @return {TransactionResponse|undefined} Transaction response.\r\n     */\r\n    WFS.prototype.readTransactionResponseFromDocument = function (doc) {\r\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n            if (n.nodeType == Node.ELEMENT_NODE) {\r\n                return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @return {TransactionResponse|undefined} Transaction response.\r\n     */\r\n    WFS.prototype.readTransactionResponseFromNode = function (node) {\r\n        return pushParseAndPop(\r\n        /** @type {TransactionResponse} */ ({}), TRANSACTION_RESPONSE_PARSERS, node, []);\r\n    };\r\n    /**\r\n     * Encode format as WFS `GetFeature` and return the Node.\r\n     *\r\n     * @param {WriteGetFeatureOptions} options Options.\r\n     * @return {Node} Result.\r\n     * @api\r\n     */\r\n    WFS.prototype.writeGetFeature = function (options) {\r\n        var node = createElementNS(WFSNS, 'GetFeature');\r\n        node.setAttribute('service', 'WFS');\r\n        node.setAttribute('version', '1.1.0');\r\n        var filter;\r\n        if (options) {\r\n            if (options.handle) {\r\n                node.setAttribute('handle', options.handle);\r\n            }\r\n            if (options.outputFormat) {\r\n                node.setAttribute('outputFormat', options.outputFormat);\r\n            }\r\n            if (options.maxFeatures !== undefined) {\r\n                node.setAttribute('maxFeatures', String(options.maxFeatures));\r\n            }\r\n            if (options.resultType) {\r\n                node.setAttribute('resultType', options.resultType);\r\n            }\r\n            if (options.startIndex !== undefined) {\r\n                node.setAttribute('startIndex', String(options.startIndex));\r\n            }\r\n            if (options.count !== undefined) {\r\n                node.setAttribute('count', String(options.count));\r\n            }\r\n            if (options.viewParams !== undefined) {\r\n                node.setAttribute('viewParams ', options.viewParams);\r\n            }\r\n            filter = options.filter;\r\n            if (options.bbox) {\r\n                assert(options.geometryName, 12); // `options.geometryName` must also be provided when `options.bbox` is set\r\n                var bbox = bboxFilter(\r\n                /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\r\n                if (filter) {\r\n                    // if bbox and filter are both set, combine the two into a single filter\r\n                    filter = andFilter(filter, bbox);\r\n                }\r\n                else {\r\n                    filter = bbox;\r\n                }\r\n            }\r\n        }\r\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\r\n        /** @type {import(\"../xml.js\").NodeStackItem} */\r\n        var context = {\r\n            node: node\r\n        };\r\n        assign(context, {\r\n            'srsName': options.srsName,\r\n            'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\r\n            'featurePrefix': options.featurePrefix,\r\n            'geometryName': options.geometryName,\r\n            'filter': filter,\r\n            'propertyNames': options.propertyNames ? options.propertyNames : []\r\n        });\r\n        assert(Array.isArray(options.featureTypes), 11); // `options.featureTypes` should be an Array\r\n        writeGetFeature(node, /** @type {!Array<string>} */ (options.featureTypes), [context]);\r\n        return node;\r\n    };\r\n    /**\r\n     * Encode format as WFS `Transaction` and return the Node.\r\n     *\r\n     * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\r\n     * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\r\n     * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\r\n     * @param {WriteTransactionOptions} options Write options.\r\n     * @return {Node} Result.\r\n     * @api\r\n     */\r\n    WFS.prototype.writeTransaction = function (inserts, updates, deletes, options) {\r\n        var objectStack = [];\r\n        var node = createElementNS(WFSNS, 'Transaction');\r\n        var version = options.version ? options.version : DEFAULT_VERSION;\r\n        var gmlVersion = version === '1.0.0' ? 2 : 3;\r\n        node.setAttribute('service', 'WFS');\r\n        node.setAttribute('version', version);\r\n        var baseObj;\r\n        /** @type {import(\"../xml.js\").NodeStackItem} */\r\n        var obj;\r\n        if (options) {\r\n            baseObj = options.gmlOptions ? options.gmlOptions : {};\r\n            if (options.handle) {\r\n                node.setAttribute('handle', options.handle);\r\n            }\r\n        }\r\n        var schemaLocation = SCHEMA_LOCATIONS[version];\r\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\r\n        var featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\r\n        if (inserts) {\r\n            obj = assign({ node: node }, { 'featureNS': options.featureNS,\r\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\r\n                'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName });\r\n            assign(obj, baseObj);\r\n            pushSerializeAndPop(obj, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Insert'), inserts, objectStack);\r\n        }\r\n        if (updates) {\r\n            obj = assign({ node: node }, { 'featureNS': options.featureNS,\r\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\r\n                'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName });\r\n            assign(obj, baseObj);\r\n            pushSerializeAndPop(obj, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Update'), updates, objectStack);\r\n        }\r\n        if (deletes) {\r\n            pushSerializeAndPop({ node: node, 'featureNS': options.featureNS,\r\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\r\n                'gmlVersion': gmlVersion, 'srsName': options.srsName }, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Delete'), deletes, objectStack);\r\n        }\r\n        if (options.nativeElements) {\r\n            pushSerializeAndPop({ node: node, 'featureNS': options.featureNS,\r\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\r\n                'gmlVersion': gmlVersion, 'srsName': options.srsName }, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Native'), options.nativeElements, objectStack);\r\n        }\r\n        return node;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WFS.prototype.readProjectionFromDocument = function (doc) {\r\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n            if (n.nodeType == Node.ELEMENT_NODE) {\r\n                return this.readProjectionFromNode(n);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WFS.prototype.readProjectionFromNode = function (node) {\r\n        if (node.firstElementChild &&\r\n            node.firstElementChild.firstElementChild) {\r\n            node = node.firstElementChild.firstElementChild;\r\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n                if (!(n.childNodes.length === 0 ||\r\n                    (n.childNodes.length === 1 &&\r\n                        n.firstChild.nodeType === 3))) {\r\n                    var objectStack = [{}];\r\n                    this.gmlFormat_.readGeometryElement(n, objectStack);\r\n                    return getProjection(objectStack.pop().srsName);\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return WFS;\r\n}(XMLFeature));\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Transaction Summary.\r\n */\r\nfunction readTransactionSummary(node, objectStack) {\r\n    return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar OGC_FID_PARSERS = {\r\n    'http://www.opengis.net/ogc': {\r\n        'FeatureId': makeArrayPusher(function (node, objectStack) {\r\n            return node.getAttribute('fid');\r\n        })\r\n    }\r\n};\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction fidParser(node, objectStack) {\r\n    parseNode(OGC_FID_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar INSERT_RESULTS_PARSERS = {\r\n    'http://www.opengis.net/wfs': {\r\n        'Feature': fidParser\r\n    }\r\n};\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<string>|undefined} Insert results.\r\n */\r\nfunction readInsertResults(node, objectStack) {\r\n    return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeFeature(node, feature, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var featureType = context['featureType'];\r\n    var featureNS = context['featureNS'];\r\n    var gmlVersion = context['gmlVersion'];\r\n    var child = createElementNS(featureNS, featureType);\r\n    node.appendChild(child);\r\n    if (gmlVersion === 2) {\r\n        GML2.prototype.writeFeatureElement(child, feature, objectStack);\r\n    }\r\n    else {\r\n        GML3.prototype.writeFeatureElement(child, feature, objectStack);\r\n    }\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {number|string} fid Feature identifier.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeOgcFidFilter(node, fid, objectStack) {\r\n    var filter = createElementNS(OGCNS, 'Filter');\r\n    var child = createElementNS(OGCNS, 'FeatureId');\r\n    filter.appendChild(child);\r\n    child.setAttribute('fid', /** @type {string} */ (fid));\r\n    node.appendChild(filter);\r\n}\r\n/**\r\n * @param {string|undefined} featurePrefix The prefix of the feature.\r\n * @param {string} featureType The type of the feature.\r\n * @returns {string} The value of the typeName property.\r\n */\r\nfunction getTypeName(featurePrefix, featureType) {\r\n    featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\r\n    var prefix = featurePrefix + ':';\r\n    // The featureType already contains the prefix.\r\n    if (featureType.indexOf(prefix) === 0) {\r\n        return featureType;\r\n    }\r\n    else {\r\n        return prefix + featureType;\r\n    }\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeDelete(node, feature, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    assert(feature.getId() !== undefined, 26); // Features must have an id set\r\n    var featureType = context['featureType'];\r\n    var featurePrefix = context['featurePrefix'];\r\n    var featureNS = context['featureNS'];\r\n    var typeName = getTypeName(featurePrefix, featureType);\r\n    node.setAttribute('typeName', typeName);\r\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\r\n    var fid = feature.getId();\r\n    if (fid !== undefined) {\r\n        writeOgcFidFilter(node, fid, objectStack);\r\n    }\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeUpdate(node, feature, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    assert(feature.getId() !== undefined, 27); // Features must have an id set\r\n    var featureType = context['featureType'];\r\n    var featurePrefix = context['featurePrefix'];\r\n    var featureNS = context['featureNS'];\r\n    var typeName = getTypeName(featurePrefix, featureType);\r\n    var geometryName = feature.getGeometryName();\r\n    node.setAttribute('typeName', typeName);\r\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\r\n    var fid = feature.getId();\r\n    if (fid !== undefined) {\r\n        var keys = feature.getKeys();\r\n        var values = [];\r\n        for (var i = 0, ii = keys.length; i < ii; i++) {\r\n            var value = feature.get(keys[i]);\r\n            if (value !== undefined) {\r\n                var name_1 = keys[i];\r\n                if (value && typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\r\n                    name_1 = geometryName;\r\n                }\r\n                values.push({ name: name_1, value: value });\r\n            }\r\n        }\r\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ 'gmlVersion': context['gmlVersion'], node: node,\r\n            'hasZ': context['hasZ'], 'srsName': context['srsName'] }), TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Property'), values, objectStack);\r\n        writeOgcFidFilter(node, fid, objectStack);\r\n    }\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Object} pair Property name and value.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeProperty(node, pair, objectStack) {\r\n    var name = createElementNS(WFSNS, 'Name');\r\n    var context = objectStack[objectStack.length - 1];\r\n    var gmlVersion = context['gmlVersion'];\r\n    node.appendChild(name);\r\n    writeStringTextNode(name, pair.name);\r\n    if (pair.value !== undefined && pair.value !== null) {\r\n        var value = createElementNS(WFSNS, 'Value');\r\n        node.appendChild(value);\r\n        if (pair.value && typeof /** @type {?} */ (pair.value).getSimplifiedGeometry === 'function') {\r\n            if (gmlVersion === 2) {\r\n                GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\r\n            }\r\n            else {\r\n                GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\r\n            }\r\n        }\r\n        else {\r\n            writeStringTextNode(value, pair.value);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeNative(node, nativeElement, objectStack) {\r\n    if (nativeElement.vendorId) {\r\n        node.setAttribute('vendorId', nativeElement.vendorId);\r\n    }\r\n    if (nativeElement.safeToIgnore !== undefined) {\r\n        node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\r\n    }\r\n    if (nativeElement.value !== undefined) {\r\n        writeStringTextNode(node, nativeElement.value);\r\n    }\r\n}\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar GETFEATURE_SERIALIZERS = {\r\n    'http://www.opengis.net/wfs': {\r\n        'Query': makeChildAppender(writeQuery)\r\n    },\r\n    'http://www.opengis.net/ogc': {\r\n        'During': makeChildAppender(writeDuringFilter),\r\n        'And': makeChildAppender(writeLogicalFilter),\r\n        'Or': makeChildAppender(writeLogicalFilter),\r\n        'Not': makeChildAppender(writeNotFilter),\r\n        'BBOX': makeChildAppender(writeBboxFilter),\r\n        'Contains': makeChildAppender(writeContainsFilter),\r\n        'Intersects': makeChildAppender(writeIntersectsFilter),\r\n        'Within': makeChildAppender(writeWithinFilter),\r\n        'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\r\n        'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\r\n        'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\r\n        'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\r\n        'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\r\n        'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\r\n        'PropertyIsNull': makeChildAppender(writeIsNullFilter),\r\n        'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\r\n        'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\r\n    }\r\n};\r\n/**\r\n * @param {Element} node Node.\r\n * @param {string} featureType Feature type.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeQuery(node, featureType, objectStack) {\r\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    var featurePrefix = context['featurePrefix'];\r\n    var featureNS = context['featureNS'];\r\n    var propertyNames = context['propertyNames'];\r\n    var srsName = context['srsName'];\r\n    var typeName;\r\n    // If feature prefix is not defined, we must not use the default prefix.\r\n    if (featurePrefix) {\r\n        typeName = getTypeName(featurePrefix, featureType);\r\n    }\r\n    else {\r\n        typeName = featureType;\r\n    }\r\n    node.setAttribute('typeName', typeName);\r\n    if (srsName) {\r\n        node.setAttribute('srsName', srsName);\r\n    }\r\n    if (featureNS) {\r\n        node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\r\n    }\r\n    var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\r\n    item.node = node;\r\n    pushSerializeAndPop(item, QUERY_SERIALIZERS, makeSimpleNodeFactory('PropertyName'), propertyNames, objectStack);\r\n    var filter = context['filter'];\r\n    if (filter) {\r\n        var child = createElementNS(OGCNS, 'Filter');\r\n        node.appendChild(child);\r\n        writeFilterCondition(child, filter, objectStack);\r\n    }\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeFilterCondition(node, filter, objectStack) {\r\n    /** @type {import(\"../xml.js\").NodeStackItem} */\r\n    var item = { node: node };\r\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(filter.getTagName()), [filter], objectStack);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeBboxFilter(node, filter, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    context['srsName'] = filter.srsName;\r\n    writeOgcPropertyName(node, filter.geometryName);\r\n    GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/Contains.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeContainsFilter(node, filter, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    context['srsName'] = filter.srsName;\r\n    writeOgcPropertyName(node, filter.geometryName);\r\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/Intersects.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeIntersectsFilter(node, filter, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    context['srsName'] = filter.srsName;\r\n    writeOgcPropertyName(node, filter.geometryName);\r\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/Within.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeWithinFilter(node, filter, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    context['srsName'] = filter.srsName;\r\n    writeOgcPropertyName(node, filter.geometryName);\r\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/During.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeDuringFilter(node, filter, objectStack) {\r\n    var valueReference = createElementNS(FESNS, 'ValueReference');\r\n    writeStringTextNode(valueReference, filter.propertyName);\r\n    node.appendChild(valueReference);\r\n    var timePeriod = createElementNS(GMLNS, 'TimePeriod');\r\n    node.appendChild(timePeriod);\r\n    var begin = createElementNS(GMLNS, 'begin');\r\n    timePeriod.appendChild(begin);\r\n    writeTimeInstant(begin, filter.begin);\r\n    var end = createElementNS(GMLNS, 'end');\r\n    timePeriod.appendChild(end);\r\n    writeTimeInstant(end, filter.end);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeLogicalFilter(node, filter, objectStack) {\r\n    /** @type {import(\"../xml.js\").NodeStackItem} */\r\n    var item = { node: node };\r\n    var conditions = filter.conditions;\r\n    for (var i = 0, ii = conditions.length; i < ii; ++i) {\r\n        var condition = conditions[i];\r\n        pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\r\n    }\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/Not.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeNotFilter(node, filter, objectStack) {\r\n    /** @type {import(\"../xml.js\").NodeStackItem} */\r\n    var item = { node: node };\r\n    var condition = filter.condition;\r\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeComparisonFilter(node, filter, objectStack) {\r\n    if (filter.matchCase !== undefined) {\r\n        node.setAttribute('matchCase', filter.matchCase.toString());\r\n    }\r\n    writeOgcPropertyName(node, filter.propertyName);\r\n    writeOgcLiteral(node, '' + filter.expression);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeIsNullFilter(node, filter, objectStack) {\r\n    writeOgcPropertyName(node, filter.propertyName);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeIsBetweenFilter(node, filter, objectStack) {\r\n    writeOgcPropertyName(node, filter.propertyName);\r\n    var lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\r\n    node.appendChild(lowerBoundary);\r\n    writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\r\n    var upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\r\n    node.appendChild(upperBoundary);\r\n    writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeIsLikeFilter(node, filter, objectStack) {\r\n    node.setAttribute('wildCard', filter.wildCard);\r\n    node.setAttribute('singleChar', filter.singleChar);\r\n    node.setAttribute('escapeChar', filter.escapeChar);\r\n    if (filter.matchCase !== undefined) {\r\n        node.setAttribute('matchCase', filter.matchCase.toString());\r\n    }\r\n    writeOgcPropertyName(node, filter.propertyName);\r\n    writeOgcLiteral(node, '' + filter.pattern);\r\n}\r\n/**\r\n * @param {string} tagName Tag name.\r\n * @param {Node} node Node.\r\n * @param {string} value Value.\r\n */\r\nfunction writeOgcExpression(tagName, node, value) {\r\n    var property = createElementNS(OGCNS, tagName);\r\n    writeStringTextNode(property, value);\r\n    node.appendChild(property);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {string} value PropertyName value.\r\n */\r\nfunction writeOgcPropertyName(node, value) {\r\n    writeOgcExpression('PropertyName', node, value);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {string} value PropertyName value.\r\n */\r\nfunction writeOgcLiteral(node, value) {\r\n    writeOgcExpression('Literal', node, value);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {string} time PropertyName value.\r\n */\r\nfunction writeTimeInstant(node, time) {\r\n    var timeInstant = createElementNS(GMLNS, 'TimeInstant');\r\n    node.appendChild(timeInstant);\r\n    var timePosition = createElementNS(GMLNS, 'timePosition');\r\n    timeInstant.appendChild(timePosition);\r\n    writeStringTextNode(timePosition, time);\r\n}\r\n/**\r\n * Encode filter as WFS `Filter` and return the Node.\r\n *\r\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\r\n * @return {Node} Result.\r\n * @api\r\n */\r\nexport function writeFilter(filter) {\r\n    var child = createElementNS(OGCNS, 'Filter');\r\n    writeFilterCondition(child, filter, []);\r\n    return child;\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<string>} featureTypes Feature types.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeGetFeature(node, featureTypes, objectStack) {\r\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\r\n    item.node = node;\r\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory('Query'), featureTypes, objectStack);\r\n}\r\nexport default WFS;\r\n//# sourceMappingURL=WFS.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/WKT\r\n */\r\nimport Feature from '../Feature.js';\r\nimport { transformGeometryWithOptions } from './Feature.js';\r\nimport TextFeature from './TextFeature.js';\r\nimport GeometryCollection from '../geom/GeometryCollection.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\n/**\r\n * Geometry constructors\r\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, GeometryLayout)}\r\n */\r\nvar GeometryConstructor = {\r\n    'POINT': Point,\r\n    'LINESTRING': LineString,\r\n    'POLYGON': Polygon,\r\n    'MULTIPOINT': MultiPoint,\r\n    'MULTILINESTRING': MultiLineString,\r\n    'MULTIPOLYGON': MultiPolygon\r\n};\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\r\n * multiple features on reading.\r\n */\r\n/**\r\n * @typedef {Object} Token\r\n * @property {number} type\r\n * @property {number|string} [value]\r\n * @property {number} position\r\n */\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar EMPTY = 'EMPTY';\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar Z = 'Z';\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar M = 'M';\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar ZM = 'ZM';\r\n/**\r\n * @const\r\n * @enum {number}\r\n */\r\nvar TokenType = {\r\n    TEXT: 1,\r\n    LEFT_PAREN: 2,\r\n    RIGHT_PAREN: 3,\r\n    NUMBER: 4,\r\n    COMMA: 5,\r\n    EOF: 6\r\n};\r\n/**\r\n * @const\r\n * @type {Object<string, string>}\r\n */\r\nvar WKTGeometryType = {};\r\nfor (var type in GeometryType) {\r\n    WKTGeometryType[type] = GeometryType[type].toUpperCase();\r\n}\r\n/**\r\n * Class to tokenize a WKT string.\r\n */\r\nvar Lexer = /** @class */ (function () {\r\n    /**\r\n     * @param {string} wkt WKT string.\r\n     */\r\n    function Lexer(wkt) {\r\n        /**\r\n         * @type {string}\r\n         */\r\n        this.wkt = wkt;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this.index_ = -1;\r\n    }\r\n    /**\r\n     * @param {string} c Character.\r\n     * @return {boolean} Whether the character is alphabetic.\r\n     * @private\r\n     */\r\n    Lexer.prototype.isAlpha_ = function (c) {\r\n        return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\r\n    };\r\n    /**\r\n     * @param {string} c Character.\r\n     * @param {boolean=} opt_decimal Whether the string number\r\n     *     contains a dot, i.e. is a decimal number.\r\n     * @return {boolean} Whether the character is numeric.\r\n     * @private\r\n     */\r\n    Lexer.prototype.isNumeric_ = function (c, opt_decimal) {\r\n        var decimal = opt_decimal !== undefined ? opt_decimal : false;\r\n        return c >= '0' && c <= '9' || c == '.' && !decimal;\r\n    };\r\n    /**\r\n     * @param {string} c Character.\r\n     * @return {boolean} Whether the character is whitespace.\r\n     * @private\r\n     */\r\n    Lexer.prototype.isWhiteSpace_ = function (c) {\r\n        return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\r\n    };\r\n    /**\r\n     * @return {string} Next string character.\r\n     * @private\r\n     */\r\n    Lexer.prototype.nextChar_ = function () {\r\n        return this.wkt.charAt(++this.index_);\r\n    };\r\n    /**\r\n     * Fetch and return the next token.\r\n     * @return {!Token} Next string token.\r\n     */\r\n    Lexer.prototype.nextToken = function () {\r\n        var c = this.nextChar_();\r\n        var position = this.index_;\r\n        /** @type {number|string} */\r\n        var value = c;\r\n        var type;\r\n        if (c == '(') {\r\n            type = TokenType.LEFT_PAREN;\r\n        }\r\n        else if (c == ',') {\r\n            type = TokenType.COMMA;\r\n        }\r\n        else if (c == ')') {\r\n            type = TokenType.RIGHT_PAREN;\r\n        }\r\n        else if (this.isNumeric_(c) || c == '-') {\r\n            type = TokenType.NUMBER;\r\n            value = this.readNumber_();\r\n        }\r\n        else if (this.isAlpha_(c)) {\r\n            type = TokenType.TEXT;\r\n            value = this.readText_();\r\n        }\r\n        else if (this.isWhiteSpace_(c)) {\r\n            return this.nextToken();\r\n        }\r\n        else if (c === '') {\r\n            type = TokenType.EOF;\r\n        }\r\n        else {\r\n            throw new Error('Unexpected character: ' + c);\r\n        }\r\n        return { position: position, value: value, type: type };\r\n    };\r\n    /**\r\n     * @return {number} Numeric token value.\r\n     * @private\r\n     */\r\n    Lexer.prototype.readNumber_ = function () {\r\n        var c;\r\n        var index = this.index_;\r\n        var decimal = false;\r\n        var scientificNotation = false;\r\n        do {\r\n            if (c == '.') {\r\n                decimal = true;\r\n            }\r\n            else if (c == 'e' || c == 'E') {\r\n                scientificNotation = true;\r\n            }\r\n            c = this.nextChar_();\r\n        } while (this.isNumeric_(c, decimal) ||\r\n            // if we haven't detected a scientific number before, 'e' or 'E'\r\n            // hint that we should continue to read\r\n            !scientificNotation && (c == 'e' || c == 'E') ||\r\n            // once we know that we have a scientific number, both '-' and '+'\r\n            // are allowed\r\n            scientificNotation && (c == '-' || c == '+'));\r\n        return parseFloat(this.wkt.substring(index, this.index_--));\r\n    };\r\n    /**\r\n     * @return {string} String token value.\r\n     * @private\r\n     */\r\n    Lexer.prototype.readText_ = function () {\r\n        var c;\r\n        var index = this.index_;\r\n        do {\r\n            c = this.nextChar_();\r\n        } while (this.isAlpha_(c));\r\n        return this.wkt.substring(index, this.index_--).toUpperCase();\r\n    };\r\n    return Lexer;\r\n}());\r\n/**\r\n * Class to parse the tokens from the WKT string.\r\n */\r\nvar Parser = /** @class */ (function () {\r\n    /**\r\n     * @param {Lexer} lexer The lexer.\r\n     */\r\n    function Parser(lexer) {\r\n        /**\r\n         * @type {Lexer}\r\n         * @private\r\n         */\r\n        this.lexer_ = lexer;\r\n        /**\r\n         * @type {Token}\r\n         * @private\r\n         */\r\n        this.token_;\r\n        /**\r\n         * @type {GeometryLayout}\r\n         * @private\r\n         */\r\n        this.layout_ = GeometryLayout.XY;\r\n    }\r\n    /**\r\n     * Fetch the next token form the lexer and replace the active token.\r\n     * @private\r\n     */\r\n    Parser.prototype.consume_ = function () {\r\n        this.token_ = this.lexer_.nextToken();\r\n    };\r\n    /**\r\n     * Tests if the given type matches the type of the current token.\r\n     * @param {TokenType} type Token type.\r\n     * @return {boolean} Whether the token matches the given type.\r\n     */\r\n    Parser.prototype.isTokenType = function (type) {\r\n        var isMatch = this.token_.type == type;\r\n        return isMatch;\r\n    };\r\n    /**\r\n     * If the given type matches the current token, consume it.\r\n     * @param {TokenType} type Token type.\r\n     * @return {boolean} Whether the token matches the given type.\r\n     */\r\n    Parser.prototype.match = function (type) {\r\n        var isMatch = this.isTokenType(type);\r\n        if (isMatch) {\r\n            this.consume_();\r\n        }\r\n        return isMatch;\r\n    };\r\n    /**\r\n     * Try to parse the tokens provided by the lexer.\r\n     * @return {import(\"../geom/Geometry.js\").default} The geometry.\r\n     */\r\n    Parser.prototype.parse = function () {\r\n        this.consume_();\r\n        var geometry = this.parseGeometry_();\r\n        return geometry;\r\n    };\r\n    /**\r\n     * Try to parse the dimensional info.\r\n     * @return {GeometryLayout} The layout.\r\n     * @private\r\n     */\r\n    Parser.prototype.parseGeometryLayout_ = function () {\r\n        var layout = GeometryLayout.XY;\r\n        var dimToken = this.token_;\r\n        if (this.isTokenType(TokenType.TEXT)) {\r\n            var dimInfo = dimToken.value;\r\n            if (dimInfo === Z) {\r\n                layout = GeometryLayout.XYZ;\r\n            }\r\n            else if (dimInfo === M) {\r\n                layout = GeometryLayout.XYM;\r\n            }\r\n            else if (dimInfo === ZM) {\r\n                layout = GeometryLayout.XYZM;\r\n            }\r\n            if (layout !== GeometryLayout.XY) {\r\n                this.consume_();\r\n            }\r\n        }\r\n        return layout;\r\n    };\r\n    /**\r\n     * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\r\n     * @private\r\n     */\r\n    Parser.prototype.parseGeometryCollectionText_ = function () {\r\n        if (this.match(TokenType.LEFT_PAREN)) {\r\n            var geometries = [];\r\n            do {\r\n                geometries.push(this.parseGeometry_());\r\n            } while (this.match(TokenType.COMMA));\r\n            if (this.match(TokenType.RIGHT_PAREN)) {\r\n                return geometries;\r\n            }\r\n        }\r\n        else if (this.isEmptyGeometry_()) {\r\n            return [];\r\n        }\r\n        throw new Error(this.formatErrorMessage_());\r\n    };\r\n    /**\r\n     * @return {Array<number>} All values in a point.\r\n     * @private\r\n     */\r\n    Parser.prototype.parsePointText_ = function () {\r\n        if (this.match(TokenType.LEFT_PAREN)) {\r\n            var coordinates = this.parsePoint_();\r\n            if (this.match(TokenType.RIGHT_PAREN)) {\r\n                return coordinates;\r\n            }\r\n        }\r\n        else if (this.isEmptyGeometry_()) {\r\n            return null;\r\n        }\r\n        throw new Error(this.formatErrorMessage_());\r\n    };\r\n    /**\r\n     * @return {!Array<!Array<number>>} All points in a linestring.\r\n     * @private\r\n     */\r\n    Parser.prototype.parseLineStringText_ = function () {\r\n        if (this.match(TokenType.LEFT_PAREN)) {\r\n            var coordinates = this.parsePointList_();\r\n            if (this.match(TokenType.RIGHT_PAREN)) {\r\n                return coordinates;\r\n            }\r\n        }\r\n        else if (this.isEmptyGeometry_()) {\r\n            return [];\r\n        }\r\n        throw new Error(this.formatErrorMessage_());\r\n    };\r\n    /**\r\n     * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\r\n     * @private\r\n     */\r\n    Parser.prototype.parsePolygonText_ = function () {\r\n        if (this.match(TokenType.LEFT_PAREN)) {\r\n            var coordinates = this.parseLineStringTextList_();\r\n            if (this.match(TokenType.RIGHT_PAREN)) {\r\n                return coordinates;\r\n            }\r\n        }\r\n        else if (this.isEmptyGeometry_()) {\r\n            return [];\r\n        }\r\n        throw new Error(this.formatErrorMessage_());\r\n    };\r\n    /**\r\n     * @return {!Array<!Array<number>>} All points in a multipoint.\r\n     * @private\r\n     */\r\n    Parser.prototype.parseMultiPointText_ = function () {\r\n        if (this.match(TokenType.LEFT_PAREN)) {\r\n            var coordinates = void 0;\r\n            if (this.token_.type == TokenType.LEFT_PAREN) {\r\n                coordinates = this.parsePointTextList_();\r\n            }\r\n            else {\r\n                coordinates = this.parsePointList_();\r\n            }\r\n            if (this.match(TokenType.RIGHT_PAREN)) {\r\n                return coordinates;\r\n            }\r\n        }\r\n        else if (this.isEmptyGeometry_()) {\r\n            return [];\r\n        }\r\n        throw new Error(this.formatErrorMessage_());\r\n    };\r\n    /**\r\n     * @return {!Array<!Array<!Array<number>>>} All linestring points\r\n     *                                          in a multilinestring.\r\n     * @private\r\n     */\r\n    Parser.prototype.parseMultiLineStringText_ = function () {\r\n        if (this.match(TokenType.LEFT_PAREN)) {\r\n            var coordinates = this.parseLineStringTextList_();\r\n            if (this.match(TokenType.RIGHT_PAREN)) {\r\n                return coordinates;\r\n            }\r\n        }\r\n        else if (this.isEmptyGeometry_()) {\r\n            return [];\r\n        }\r\n        throw new Error(this.formatErrorMessage_());\r\n    };\r\n    /**\r\n     * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\r\n     * @private\r\n     */\r\n    Parser.prototype.parseMultiPolygonText_ = function () {\r\n        if (this.match(TokenType.LEFT_PAREN)) {\r\n            var coordinates = this.parsePolygonTextList_();\r\n            if (this.match(TokenType.RIGHT_PAREN)) {\r\n                return coordinates;\r\n            }\r\n        }\r\n        else if (this.isEmptyGeometry_()) {\r\n            return [];\r\n        }\r\n        throw new Error(this.formatErrorMessage_());\r\n    };\r\n    /**\r\n     * @return {!Array<number>} A point.\r\n     * @private\r\n     */\r\n    Parser.prototype.parsePoint_ = function () {\r\n        var coordinates = [];\r\n        var dimensions = this.layout_.length;\r\n        for (var i = 0; i < dimensions; ++i) {\r\n            var token = this.token_;\r\n            if (this.match(TokenType.NUMBER)) {\r\n                coordinates.push(/** @type {number} */ (token.value));\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        if (coordinates.length == dimensions) {\r\n            return coordinates;\r\n        }\r\n        throw new Error(this.formatErrorMessage_());\r\n    };\r\n    /**\r\n     * @return {!Array<!Array<number>>} An array of points.\r\n     * @private\r\n     */\r\n    Parser.prototype.parsePointList_ = function () {\r\n        var coordinates = [this.parsePoint_()];\r\n        while (this.match(TokenType.COMMA)) {\r\n            coordinates.push(this.parsePoint_());\r\n        }\r\n        return coordinates;\r\n    };\r\n    /**\r\n     * @return {!Array<!Array<number>>} An array of points.\r\n     * @private\r\n     */\r\n    Parser.prototype.parsePointTextList_ = function () {\r\n        var coordinates = [this.parsePointText_()];\r\n        while (this.match(TokenType.COMMA)) {\r\n            coordinates.push(this.parsePointText_());\r\n        }\r\n        return coordinates;\r\n    };\r\n    /**\r\n     * @return {!Array<!Array<!Array<number>>>} An array of points.\r\n     * @private\r\n     */\r\n    Parser.prototype.parseLineStringTextList_ = function () {\r\n        var coordinates = [this.parseLineStringText_()];\r\n        while (this.match(TokenType.COMMA)) {\r\n            coordinates.push(this.parseLineStringText_());\r\n        }\r\n        return coordinates;\r\n    };\r\n    /**\r\n     * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\r\n     * @private\r\n     */\r\n    Parser.prototype.parsePolygonTextList_ = function () {\r\n        var coordinates = [this.parsePolygonText_()];\r\n        while (this.match(TokenType.COMMA)) {\r\n            coordinates.push(this.parsePolygonText_());\r\n        }\r\n        return coordinates;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the token implies an empty geometry.\r\n     * @private\r\n     */\r\n    Parser.prototype.isEmptyGeometry_ = function () {\r\n        var isEmpty = this.isTokenType(TokenType.TEXT) &&\r\n            this.token_.value == EMPTY;\r\n        if (isEmpty) {\r\n            this.consume_();\r\n        }\r\n        return isEmpty;\r\n    };\r\n    /**\r\n     * Create an error message for an unexpected token error.\r\n     * @return {string} Error message.\r\n     * @private\r\n     */\r\n    Parser.prototype.formatErrorMessage_ = function () {\r\n        return 'Unexpected `' + this.token_.value + '` at position ' +\r\n            this.token_.position + ' in `' + this.lexer_.wkt + '`';\r\n    };\r\n    /**\r\n     * @return {!import(\"../geom/Geometry.js\").default} The geometry.\r\n     * @private\r\n     */\r\n    Parser.prototype.parseGeometry_ = function () {\r\n        var token = this.token_;\r\n        if (this.match(TokenType.TEXT)) {\r\n            var geomType = token.value;\r\n            this.layout_ = this.parseGeometryLayout_();\r\n            if (geomType == 'GEOMETRYCOLLECTION') {\r\n                var geometries = this.parseGeometryCollectionText_();\r\n                return new GeometryCollection(geometries);\r\n            }\r\n            else {\r\n                var ctor = GeometryConstructor[geomType];\r\n                if (!ctor) {\r\n                    throw new Error('Invalid geometry type: ' + geomType);\r\n                }\r\n                var coordinates = void 0;\r\n                switch (geomType) {\r\n                    case 'POINT': {\r\n                        coordinates = this.parsePointText_();\r\n                        break;\r\n                    }\r\n                    case 'LINESTRING': {\r\n                        coordinates = this.parseLineStringText_();\r\n                        break;\r\n                    }\r\n                    case 'POLYGON': {\r\n                        coordinates = this.parsePolygonText_();\r\n                        break;\r\n                    }\r\n                    case 'MULTIPOINT': {\r\n                        coordinates = this.parseMultiPointText_();\r\n                        break;\r\n                    }\r\n                    case 'MULTILINESTRING': {\r\n                        coordinates = this.parseMultiLineStringText_();\r\n                        break;\r\n                    }\r\n                    case 'MULTIPOLYGON': {\r\n                        coordinates = this.parseMultiPolygonText_();\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        throw new Error('Invalid geometry type: ' + geomType);\r\n                    }\r\n                }\r\n                if (!coordinates) {\r\n                    if (ctor === GeometryConstructor['POINT']) {\r\n                        coordinates = [NaN, NaN];\r\n                    }\r\n                    else {\r\n                        coordinates = [];\r\n                    }\r\n                }\r\n                return new ctor(coordinates, this.layout_);\r\n            }\r\n        }\r\n        throw new Error(this.formatErrorMessage_());\r\n    };\r\n    return Parser;\r\n}());\r\n/**\r\n * @classdesc\r\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\r\n * format.\r\n *\r\n * @api\r\n */\r\nvar WKT = /** @class */ (function (_super) {\r\n    __extends(WKT, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function WKT(opt_options) {\r\n        var _this = _super.call(this) || this;\r\n        var options = opt_options ? opt_options : {};\r\n        /**\r\n         * Split GeometryCollection into multiple features.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.splitCollection_ = options.splitCollection !== undefined ?\r\n            options.splitCollection : false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parse a WKT string.\r\n     * @param {string} wkt WKT string.\r\n     * @return {import(\"../geom/Geometry.js\").default|undefined}\r\n     *     The geometry created.\r\n     * @private\r\n     */\r\n    WKT.prototype.parse_ = function (wkt) {\r\n        var lexer = new Lexer(wkt);\r\n        var parser = new Parser(lexer);\r\n        return parser.parse();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WKT.prototype.readFeatureFromText = function (text, opt_options) {\r\n        var geom = this.readGeometryFromText(text, opt_options);\r\n        if (geom) {\r\n            var feature = new Feature();\r\n            feature.setGeometry(geom);\r\n            return feature;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WKT.prototype.readFeaturesFromText = function (text, opt_options) {\r\n        var geometries = [];\r\n        var geometry = this.readGeometryFromText(text, opt_options);\r\n        if (this.splitCollection_ &&\r\n            geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\r\n            geometries = ( /** @type {GeometryCollection} */(geometry))\r\n                .getGeometriesArray();\r\n        }\r\n        else {\r\n            geometries = [geometry];\r\n        }\r\n        var features = [];\r\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n            var feature = new Feature();\r\n            feature.setGeometry(geometries[i]);\r\n            features.push(feature);\r\n        }\r\n        return features;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WKT.prototype.readGeometryFromText = function (text, opt_options) {\r\n        var geometry = this.parse_(text);\r\n        if (geometry) {\r\n            return transformGeometryWithOptions(geometry, false, opt_options);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WKT.prototype.writeFeatureText = function (feature, opt_options) {\r\n        var geometry = feature.getGeometry();\r\n        if (geometry) {\r\n            return this.writeGeometryText(geometry, opt_options);\r\n        }\r\n        return '';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WKT.prototype.writeFeaturesText = function (features, opt_options) {\r\n        if (features.length == 1) {\r\n            return this.writeFeatureText(features[0], opt_options);\r\n        }\r\n        var geometries = [];\r\n        for (var i = 0, ii = features.length; i < ii; ++i) {\r\n            geometries.push(features[i].getGeometry());\r\n        }\r\n        var collection = new GeometryCollection(geometries);\r\n        return this.writeGeometryText(collection, opt_options);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WKT.prototype.writeGeometryText = function (geometry, opt_options) {\r\n        return encode(/** @type {import(\"../geom/Geometry.js\").default} */ (transformGeometryWithOptions(geometry, true, opt_options)));\r\n    };\r\n    return WKT;\r\n}(TextFeature));\r\n/**\r\n * @param {Point} geom Point geometry.\r\n * @return {string} Coordinates part of Point as WKT.\r\n */\r\nfunction encodePointGeometry(geom) {\r\n    var coordinates = geom.getCoordinates();\r\n    if (coordinates.length === 0) {\r\n        return '';\r\n    }\r\n    return coordinates.join(' ');\r\n}\r\n/**\r\n * @param {MultiPoint} geom MultiPoint geometry.\r\n * @return {string} Coordinates part of MultiPoint as WKT.\r\n */\r\nfunction encodeMultiPointGeometry(geom) {\r\n    var array = [];\r\n    var components = geom.getPoints();\r\n    for (var i = 0, ii = components.length; i < ii; ++i) {\r\n        array.push('(' + encodePointGeometry(components[i]) + ')');\r\n    }\r\n    return array.join(',');\r\n}\r\n/**\r\n * @param {GeometryCollection} geom GeometryCollection geometry.\r\n * @return {string} Coordinates part of GeometryCollection as WKT.\r\n */\r\nfunction encodeGeometryCollectionGeometry(geom) {\r\n    var array = [];\r\n    var geoms = geom.getGeometries();\r\n    for (var i = 0, ii = geoms.length; i < ii; ++i) {\r\n        array.push(encode(geoms[i]));\r\n    }\r\n    return array.join(',');\r\n}\r\n/**\r\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\r\n * @return {string} Coordinates part of LineString as WKT.\r\n */\r\nfunction encodeLineStringGeometry(geom) {\r\n    var coordinates = geom.getCoordinates();\r\n    var array = [];\r\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        array.push(coordinates[i].join(' '));\r\n    }\r\n    return array.join(',');\r\n}\r\n/**\r\n * @param {MultiLineString} geom MultiLineString geometry.\r\n * @return {string} Coordinates part of MultiLineString as WKT.\r\n */\r\nfunction encodeMultiLineStringGeometry(geom) {\r\n    var array = [];\r\n    var components = geom.getLineStrings();\r\n    for (var i = 0, ii = components.length; i < ii; ++i) {\r\n        array.push('(' + encodeLineStringGeometry(components[i]) + ')');\r\n    }\r\n    return array.join(',');\r\n}\r\n/**\r\n * @param {Polygon} geom Polygon geometry.\r\n * @return {string} Coordinates part of Polygon as WKT.\r\n */\r\nfunction encodePolygonGeometry(geom) {\r\n    var array = [];\r\n    var rings = geom.getLinearRings();\r\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\r\n        array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\r\n    }\r\n    return array.join(',');\r\n}\r\n/**\r\n * @param {MultiPolygon} geom MultiPolygon geometry.\r\n * @return {string} Coordinates part of MultiPolygon as WKT.\r\n */\r\nfunction encodeMultiPolygonGeometry(geom) {\r\n    var array = [];\r\n    var components = geom.getPolygons();\r\n    for (var i = 0, ii = components.length; i < ii; ++i) {\r\n        array.push('(' + encodePolygonGeometry(components[i]) + ')');\r\n    }\r\n    return array.join(',');\r\n}\r\n/**\r\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\r\n * @return {string} Potential dimensional information for WKT type.\r\n */\r\nfunction encodeGeometryLayout(geom) {\r\n    var layout = geom.getLayout();\r\n    var dimInfo = '';\r\n    if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\r\n        dimInfo += Z;\r\n    }\r\n    if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\r\n        dimInfo += M;\r\n    }\r\n    return dimInfo;\r\n}\r\n/**\r\n * @const\r\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\r\n */\r\nvar GeometryEncoder = {\r\n    'Point': encodePointGeometry,\r\n    'LineString': encodeLineStringGeometry,\r\n    'Polygon': encodePolygonGeometry,\r\n    'MultiPoint': encodeMultiPointGeometry,\r\n    'MultiLineString': encodeMultiLineStringGeometry,\r\n    'MultiPolygon': encodeMultiPolygonGeometry,\r\n    'GeometryCollection': encodeGeometryCollectionGeometry\r\n};\r\n/**\r\n * Encode a geometry as WKT.\r\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\r\n * @return {string} WKT string for the geometry.\r\n */\r\nfunction encode(geom) {\r\n    var type = geom.getType();\r\n    var geometryEncoder = GeometryEncoder[type];\r\n    var enc = geometryEncoder(geom);\r\n    type = type.toUpperCase();\r\n    if (typeof /** @type {?} */ (geom).getFlatCoordinates === 'function') {\r\n        var dimInfo = encodeGeometryLayout(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom));\r\n        if (dimInfo.length > 0) {\r\n            type += ' ' + dimInfo;\r\n        }\r\n    }\r\n    if (enc.length === 0) {\r\n        return type + ' ' + EMPTY;\r\n    }\r\n    return type + '(' + enc + ')';\r\n}\r\nexport default WKT;\r\n//# sourceMappingURL=WKT.js.map","/**\r\n * @module ol/format/XLink\r\n */\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\r\n/**\r\n * @param {Element} node Node.\r\n * @return {string|undefined} href.\r\n */\r\nexport function readHref(node) {\r\n    return node.getAttributeNS(NAMESPACE_URI, 'href');\r\n}\r\n//# sourceMappingURL=XLink.js.map","/**\r\n * @module ol/format/XML\r\n */\r\nimport { isDocument, parse } from '../xml.js';\r\n/**\r\n * @classdesc\r\n * Generic format for reading non-feature XML data\r\n *\r\n * @abstract\r\n */\r\nvar XML = /** @class */ (function () {\r\n    function XML() {\r\n    }\r\n    /**\r\n     * Read the source document.\r\n     *\r\n     * @param {Document|Element|string} source The XML source.\r\n     * @return {Object} An object representing the source.\r\n     * @api\r\n     */\r\n    XML.prototype.read = function (source) {\r\n        if (!source) {\r\n            return null;\r\n        }\r\n        else if (typeof source === 'string') {\r\n            var doc = parse(source);\r\n            return this.readFromDocument(doc);\r\n        }\r\n        else if (isDocument(source)) {\r\n            return this.readFromDocument(/** @type {Document} */ (source));\r\n        }\r\n        else {\r\n            return this.readFromNode(/** @type {Element} */ (source));\r\n        }\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {Document} doc Document.\r\n     * @return {Object} Object\r\n     */\r\n    XML.prototype.readFromDocument = function (doc) { };\r\n    /**\r\n     * @abstract\r\n     * @param {Element} node Node.\r\n     * @return {Object} Object\r\n     */\r\n    XML.prototype.readFromNode = function (node) { };\r\n    return XML;\r\n}());\r\nexport default XML;\r\n//# sourceMappingURL=XML.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/WMSCapabilities\r\n */\r\nimport { readHref } from './XLink.js';\r\nimport XML from './XML.js';\r\nimport { readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString } from './xsd.js';\r\nimport { makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop } from '../xml.js';\r\n/**\r\n * @const\r\n * @type {Array<null|string>}\r\n */\r\nvar NAMESPACE_URIS = [\r\n    null,\r\n    'http://www.opengis.net/wms'\r\n];\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Service': makeObjectPropertySetter(readService),\r\n    'Capability': makeObjectPropertySetter(readCapability)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar CAPABILITY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Request': makeObjectPropertySetter(readRequest),\r\n    'Exception': makeObjectPropertySetter(readException),\r\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\r\n});\r\n/**\r\n * @classdesc\r\n * Format for reading WMS capabilities data\r\n *\r\n * @api\r\n */\r\nvar WMSCapabilities = /** @class */ (function (_super) {\r\n    __extends(WMSCapabilities, _super);\r\n    function WMSCapabilities() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @type {string|undefined}\r\n         */\r\n        _this.version = undefined;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WMSCapabilities.prototype.readFromDocument = function (doc) {\r\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\r\n            if (n.nodeType == Node.ELEMENT_NODE) {\r\n                return this.readFromNode(n);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WMSCapabilities.prototype.readFromNode = function (node) {\r\n        this.version = node.getAttribute('version').trim();\r\n        var wmsCapabilityObject = pushParseAndPop({\r\n            'version': this.version\r\n        }, PARSERS, node, []);\r\n        return wmsCapabilityObject ? wmsCapabilityObject : null;\r\n    };\r\n    return WMSCapabilities;\r\n}(XML));\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar SERVICE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Name': makeObjectPropertySetter(readString),\r\n    'Title': makeObjectPropertySetter(readString),\r\n    'Abstract': makeObjectPropertySetter(readString),\r\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\r\n    'OnlineResource': makeObjectPropertySetter(readHref),\r\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\r\n    'Fees': makeObjectPropertySetter(readString),\r\n    'AccessConstraints': makeObjectPropertySetter(readString),\r\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar CONTACT_INFORMATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\r\n    'ContactPosition': makeObjectPropertySetter(readString),\r\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\r\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\r\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\r\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar CONTACT_PERSON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'ContactPerson': makeObjectPropertySetter(readString),\r\n    'ContactOrganization': makeObjectPropertySetter(readString)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar CONTACT_ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'AddressType': makeObjectPropertySetter(readString),\r\n    'Address': makeObjectPropertySetter(readString),\r\n    'City': makeObjectPropertySetter(readString),\r\n    'StateOrProvince': makeObjectPropertySetter(readString),\r\n    'PostCode': makeObjectPropertySetter(readString),\r\n    'Country': makeObjectPropertySetter(readString)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar EXCEPTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Format': makeArrayPusher(readString)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Name': makeObjectPropertySetter(readString),\r\n    'Title': makeObjectPropertySetter(readString),\r\n    'Abstract': makeObjectPropertySetter(readString),\r\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\r\n    'CRS': makeObjectPropertyPusher(readString),\r\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\r\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\r\n    'Dimension': makeObjectPropertyPusher(readDimension),\r\n    'Attribution': makeObjectPropertySetter(readAttribution),\r\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\r\n    'Identifier': makeObjectPropertyPusher(readString),\r\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\r\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\r\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\r\n    'Style': makeObjectPropertyPusher(readStyle),\r\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\r\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\r\n    'Layer': makeObjectPropertyPusher(readLayer)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar ATTRIBUTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Title': makeObjectPropertySetter(readString),\r\n    'OnlineResource': makeObjectPropertySetter(readHref),\r\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'westBoundLongitude': makeObjectPropertySetter(readDecimal),\r\n    'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\r\n    'southBoundLatitude': makeObjectPropertySetter(readDecimal),\r\n    'northBoundLatitude': makeObjectPropertySetter(readDecimal)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar REQUEST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\r\n    'GetMap': makeObjectPropertySetter(readOperationType),\r\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar OPERATIONTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Format': makeObjectPropertyPusher(readString),\r\n    'DCPType': makeObjectPropertyPusher(readDCPType)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar DCPTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'HTTP': makeObjectPropertySetter(readHTTP)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\r\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Name': makeObjectPropertySetter(readString),\r\n    'Title': makeObjectPropertySetter(readString),\r\n    'Abstract': makeObjectPropertySetter(readString),\r\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\r\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\r\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar FORMAT_ONLINERESOURCE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Format': makeObjectPropertySetter(readString),\r\n    'OnlineResource': makeObjectPropertySetter(readHref)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar KEYWORDLIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Keyword': makeArrayPusher(readString)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Attribution object.\r\n */\r\nfunction readAttribution(node, objectStack) {\r\n    return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object} Bounding box object.\r\n */\r\nfunction readBoundingBox(node, objectStack) {\r\n    var extent = [\r\n        readDecimalString(node.getAttribute('minx')),\r\n        readDecimalString(node.getAttribute('miny')),\r\n        readDecimalString(node.getAttribute('maxx')),\r\n        readDecimalString(node.getAttribute('maxy'))\r\n    ];\r\n    var resolutions = [\r\n        readDecimalString(node.getAttribute('resx')),\r\n        readDecimalString(node.getAttribute('resy'))\r\n    ];\r\n    return {\r\n        'crs': node.getAttribute('CRS'),\r\n        'extent': extent,\r\n        'res': resolutions\r\n    };\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\r\n */\r\nfunction readEXGeographicBoundingBox(node, objectStack) {\r\n    var geographicBoundingBox = pushParseAndPop({}, EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS, node, objectStack);\r\n    if (!geographicBoundingBox) {\r\n        return undefined;\r\n    }\r\n    var westBoundLongitude = /** @type {number|undefined} */ (geographicBoundingBox['westBoundLongitude']);\r\n    var southBoundLatitude = /** @type {number|undefined} */ (geographicBoundingBox['southBoundLatitude']);\r\n    var eastBoundLongitude = /** @type {number|undefined} */ (geographicBoundingBox['eastBoundLongitude']);\r\n    var northBoundLatitude = /** @type {number|undefined} */ (geographicBoundingBox['northBoundLatitude']);\r\n    if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\r\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\r\n        return undefined;\r\n    }\r\n    return [\r\n        westBoundLongitude, southBoundLatitude,\r\n        eastBoundLongitude, northBoundLatitude\r\n    ];\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Capability object.\r\n */\r\nfunction readCapability(node, objectStack) {\r\n    return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Service object.\r\n */\r\nfunction readService(node, objectStack) {\r\n    return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Contact information object.\r\n */\r\nfunction readContactInformation(node, objectStack) {\r\n    return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Contact person object.\r\n */\r\nfunction readContactPersonPrimary(node, objectStack) {\r\n    return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Contact address object.\r\n */\r\nfunction readContactAddress(node, objectStack) {\r\n    return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<string>|undefined} Format array.\r\n */\r\nfunction readException(node, objectStack) {\r\n    return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Layer object.\r\n */\r\nfunction readCapabilityLayer(node, objectStack) {\r\n    return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Layer object.\r\n */\r\nfunction readLayer(node, objectStack) {\r\n    var parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\r\n    var layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\r\n    if (!layerObject) {\r\n        return undefined;\r\n    }\r\n    var queryable = readBooleanString(node.getAttribute('queryable'));\r\n    if (queryable === undefined) {\r\n        queryable = parentLayerObject['queryable'];\r\n    }\r\n    layerObject['queryable'] = queryable !== undefined ? queryable : false;\r\n    var cascaded = readNonNegativeIntegerString(node.getAttribute('cascaded'));\r\n    if (cascaded === undefined) {\r\n        cascaded = parentLayerObject['cascaded'];\r\n    }\r\n    layerObject['cascaded'] = cascaded;\r\n    var opaque = readBooleanString(node.getAttribute('opaque'));\r\n    if (opaque === undefined) {\r\n        opaque = parentLayerObject['opaque'];\r\n    }\r\n    layerObject['opaque'] = opaque !== undefined ? opaque : false;\r\n    var noSubsets = readBooleanString(node.getAttribute('noSubsets'));\r\n    if (noSubsets === undefined) {\r\n        noSubsets = parentLayerObject['noSubsets'];\r\n    }\r\n    layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\r\n    var fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\r\n    if (!fixedWidth) {\r\n        fixedWidth = parentLayerObject['fixedWidth'];\r\n    }\r\n    layerObject['fixedWidth'] = fixedWidth;\r\n    var fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\r\n    if (!fixedHeight) {\r\n        fixedHeight = parentLayerObject['fixedHeight'];\r\n    }\r\n    layerObject['fixedHeight'] = fixedHeight;\r\n    // See 7.2.4.8\r\n    var addKeys = ['Style', 'CRS', 'AuthorityURL'];\r\n    addKeys.forEach(function (key) {\r\n        if (key in parentLayerObject) {\r\n            var childValue = layerObject[key] || [];\r\n            layerObject[key] = childValue.concat(parentLayerObject[key]);\r\n        }\r\n    });\r\n    var replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\r\n        'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\r\n    replaceKeys.forEach(function (key) {\r\n        if (!(key in layerObject)) {\r\n            var parentValue = parentLayerObject[key];\r\n            layerObject[key] = parentValue;\r\n        }\r\n    });\r\n    return layerObject;\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object} Dimension object.\r\n */\r\nfunction readDimension(node, objectStack) {\r\n    var dimensionObject = {\r\n        'name': node.getAttribute('name'),\r\n        'units': node.getAttribute('units'),\r\n        'unitSymbol': node.getAttribute('unitSymbol'),\r\n        'default': node.getAttribute('default'),\r\n        'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\r\n        'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\r\n        'current': readBooleanString(node.getAttribute('current')),\r\n        'values': readString(node)\r\n    };\r\n    return dimensionObject;\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Online resource object.\r\n */\r\nfunction readFormatOnlineresource(node, objectStack) {\r\n    return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Request object.\r\n */\r\nfunction readRequest(node, objectStack) {\r\n    return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} DCP type object.\r\n */\r\nfunction readDCPType(node, objectStack) {\r\n    return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} HTTP object.\r\n */\r\nfunction readHTTP(node, objectStack) {\r\n    return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Operation type object.\r\n */\r\nfunction readOperationType(node, objectStack) {\r\n    return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Online resource object.\r\n */\r\nfunction readSizedFormatOnlineresource(node, objectStack) {\r\n    var formatOnlineresource = readFormatOnlineresource(node, objectStack);\r\n    if (formatOnlineresource) {\r\n        var size = [\r\n            readNonNegativeIntegerString(node.getAttribute('width')),\r\n            readNonNegativeIntegerString(node.getAttribute('height'))\r\n        ];\r\n        formatOnlineresource['size'] = size;\r\n        return formatOnlineresource;\r\n    }\r\n    return undefined;\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Authority URL object.\r\n */\r\nfunction readAuthorityURL(node, objectStack) {\r\n    var authorityObject = readFormatOnlineresource(node, objectStack);\r\n    if (authorityObject) {\r\n        authorityObject['name'] = node.getAttribute('name');\r\n        return authorityObject;\r\n    }\r\n    return undefined;\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Metadata URL object.\r\n */\r\nfunction readMetadataURL(node, objectStack) {\r\n    var metadataObject = readFormatOnlineresource(node, objectStack);\r\n    if (metadataObject) {\r\n        metadataObject['type'] = node.getAttribute('type');\r\n        return metadataObject;\r\n    }\r\n    return undefined;\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Style object.\r\n */\r\nfunction readStyle(node, objectStack) {\r\n    return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<string>|undefined} Keyword list.\r\n */\r\nfunction readKeywordList(node, objectStack) {\r\n    return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\r\n}\r\nexport default WMSCapabilities;\r\n//# sourceMappingURL=WMSCapabilities.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/WMSGetFeatureInfo\r\n */\r\nimport { extend, includes } from '../array.js';\r\nimport GML2 from './GML2.js';\r\nimport XMLFeature from './XMLFeature.js';\r\nimport { assign } from '../obj.js';\r\nimport { makeArrayPusher, makeStructureNS, pushParseAndPop } from '../xml.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\r\n */\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar featureIdentifier = '_feature';\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar layerIdentifier = '_layer';\r\n/**\r\n * @classdesc\r\n * Format for reading WMSGetFeatureInfo format. It uses\r\n * {@link module:ol/format/GML2~GML2} to read features.\r\n *\r\n * @api\r\n */\r\nvar WMSGetFeatureInfo = /** @class */ (function (_super) {\r\n    __extends(WMSGetFeatureInfo, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function WMSGetFeatureInfo(opt_options) {\r\n        var _this = _super.call(this) || this;\r\n        var options = opt_options ? opt_options : {};\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\r\n        /**\r\n         * @private\r\n         * @type {GML2}\r\n         */\r\n        _this.gmlFormat_ = new GML2();\r\n        /**\r\n         * @private\r\n         * @type {Array<string>}\r\n         */\r\n        _this.layers_ = options.layers ? options.layers : null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {Array<string>} layers\r\n     */\r\n    WMSGetFeatureInfo.prototype.getLayers = function () {\r\n        return this.layers_;\r\n    };\r\n    /**\r\n     * @param {Array<string>} layers Layers to parse.\r\n     */\r\n    WMSGetFeatureInfo.prototype.setLayers = function (layers) {\r\n        this.layers_ = layers;\r\n    };\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @return {Array<import(\"../Feature.js\").default>} Features.\r\n     * @private\r\n     */\r\n    WMSGetFeatureInfo.prototype.readFeatures_ = function (node, objectStack) {\r\n        node.setAttribute('namespaceURI', this.featureNS_);\r\n        var localName = node.localName;\r\n        /** @type {Array<import(\"../Feature.js\").default>} */\r\n        var features = [];\r\n        if (node.childNodes.length === 0) {\r\n            return features;\r\n        }\r\n        if (localName == 'msGMLOutput') {\r\n            for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\r\n                var layer = node.childNodes[i];\r\n                if (layer.nodeType !== Node.ELEMENT_NODE) {\r\n                    continue;\r\n                }\r\n                var layerElement = /** @type {Element} */ (layer);\r\n                var context = objectStack[0];\r\n                var toRemove = layerIdentifier;\r\n                var layerName = layerElement.localName.replace(toRemove, '');\r\n                if (this.layers_ && !includes(this.layers_, layerName)) {\r\n                    continue;\r\n                }\r\n                var featureType = layerName +\r\n                    featureIdentifier;\r\n                context['featureType'] = featureType;\r\n                context['featureNS'] = this.featureNS_;\r\n                /** @type {Object<string, import(\"../xml.js\").Parser>} */\r\n                var parsers = {};\r\n                parsers[featureType] = makeArrayPusher(this.gmlFormat_.readFeatureElement, this.gmlFormat_);\r\n                var parsersNS = makeStructureNS([context['featureNS'], null], parsers);\r\n                layerElement.setAttribute('namespaceURI', this.featureNS_);\r\n                var layerFeatures = pushParseAndPop([], parsersNS, layerElement, objectStack, this.gmlFormat_);\r\n                if (layerFeatures) {\r\n                    extend(features, layerFeatures);\r\n                }\r\n            }\r\n        }\r\n        if (localName == 'FeatureCollection') {\r\n            var gmlFeatures = pushParseAndPop([], this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node, [{}], this.gmlFormat_);\r\n            if (gmlFeatures) {\r\n                features = gmlFeatures;\r\n            }\r\n        }\r\n        return features;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WMSGetFeatureInfo.prototype.readFeaturesFromNode = function (node, opt_options) {\r\n        var options = {};\r\n        if (opt_options) {\r\n            assign(options, this.getReadOptions(node, opt_options));\r\n        }\r\n        return this.readFeatures_(node, [options]);\r\n    };\r\n    return WMSGetFeatureInfo;\r\n}(XMLFeature));\r\nexport default WMSGetFeatureInfo;\r\n//# sourceMappingURL=WMSGetFeatureInfo.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/OWS\r\n */\r\nimport { readHref } from './XLink.js';\r\nimport XML from './XML.js';\r\nimport { readString } from './xsd.js';\r\nimport { makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop } from '../xml.js';\r\n/**\r\n * @const\r\n * @type {Array<null|string>}\r\n */\r\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\r\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\r\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\r\n});\r\nvar OWS = /** @class */ (function (_super) {\r\n    __extends(OWS, _super);\r\n    function OWS() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    OWS.prototype.readFromDocument = function (doc) {\r\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\r\n            if (n.nodeType == Node.ELEMENT_NODE) {\r\n                return this.readFromNode(n);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    OWS.prototype.readFromNode = function (node) {\r\n        var owsObject = pushParseAndPop({}, PARSERS, node, []);\r\n        return owsObject ? owsObject : null;\r\n    };\r\n    return OWS;\r\n}(XML));\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'DeliveryPoint': makeObjectPropertySetter(readString),\r\n    'City': makeObjectPropertySetter(readString),\r\n    'AdministrativeArea': makeObjectPropertySetter(readString),\r\n    'PostalCode': makeObjectPropertySetter(readString),\r\n    'Country': makeObjectPropertySetter(readString),\r\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Value': makeObjectPropertyPusher(readValue)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Phone': makeObjectPropertySetter(readPhone),\r\n    'Address': makeObjectPropertySetter(readAddress)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'HTTP': makeObjectPropertySetter(readHttp)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Get': makeObjectPropertyPusher(readGet),\r\n    'Post': undefined // TODO\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'DCP': makeObjectPropertySetter(readDcp)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Operation': readOperation\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Voice': makeObjectPropertySetter(readString),\r\n    'Facsimile': makeObjectPropertySetter(readString)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Constraint': makeObjectPropertyPusher(readConstraint)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'IndividualName': makeObjectPropertySetter(readString),\r\n    'PositionName': makeObjectPropertySetter(readString),\r\n    'ContactInfo': makeObjectPropertySetter(readContactInfo)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Abstract': makeObjectPropertySetter(readString),\r\n    'AccessConstraints': makeObjectPropertySetter(readString),\r\n    'Fees': makeObjectPropertySetter(readString),\r\n    'Title': makeObjectPropertySetter(readString),\r\n    'ServiceTypeVersion': makeObjectPropertySetter(readString),\r\n    'ServiceType': makeObjectPropertySetter(readString)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'ProviderName': makeObjectPropertySetter(readString),\r\n    'ProviderSite': makeObjectPropertySetter(readHref),\r\n    'ServiceContact': makeObjectPropertySetter(readServiceContact)\r\n});\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The address.\r\n */\r\nfunction readAddress(node, objectStack) {\r\n    return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The values.\r\n */\r\nfunction readAllowedValues(node, objectStack) {\r\n    return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The constraint.\r\n */\r\nfunction readConstraint(node, objectStack) {\r\n    var name = node.getAttribute('name');\r\n    if (!name) {\r\n        return undefined;\r\n    }\r\n    return pushParseAndPop({ 'name': name }, CONSTRAINT_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The contact info.\r\n */\r\nfunction readContactInfo(node, objectStack) {\r\n    return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The DCP.\r\n */\r\nfunction readDcp(node, objectStack) {\r\n    return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The GET object.\r\n */\r\nfunction readGet(node, objectStack) {\r\n    var href = readHref(node);\r\n    if (!href) {\r\n        return undefined;\r\n    }\r\n    return pushParseAndPop({ 'href': href }, REQUEST_METHOD_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The HTTP object.\r\n */\r\nfunction readHttp(node, objectStack) {\r\n    return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The operation.\r\n */\r\nfunction readOperation(node, objectStack) {\r\n    var name = node.getAttribute('name');\r\n    var value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\r\n    if (!value) {\r\n        return undefined;\r\n    }\r\n    var object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    object[name] = value;\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The operations metadata.\r\n */\r\nfunction readOperationsMetadata(node, objectStack) {\r\n    return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The phone.\r\n */\r\nfunction readPhone(node, objectStack) {\r\n    return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The service identification.\r\n */\r\nfunction readServiceIdentification(node, objectStack) {\r\n    return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The service contact.\r\n */\r\nfunction readServiceContact(node, objectStack) {\r\n    return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The service provider.\r\n */\r\nfunction readServiceProvider(node, objectStack) {\r\n    return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {string|undefined} The value.\r\n */\r\nfunction readValue(node, objectStack) {\r\n    return readString(node);\r\n}\r\nexport default OWS;\r\n//# sourceMappingURL=OWS.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/format/WMTSCapabilities\r\n */\r\nimport { boundingExtent } from '../extent.js';\r\nimport OWS from './OWS.js';\r\nimport { readHref } from './XLink.js';\r\nimport XML from './XML.js';\r\nimport { readString, readNonNegativeInteger, readDecimal } from './xsd.js';\r\nimport { pushParseAndPop, makeStructureNS, makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher } from '../xml.js';\r\n/**\r\n * @const\r\n * @type {Array<null|string>}\r\n */\r\nvar NAMESPACE_URIS = [\r\n    null,\r\n    'http://www.opengis.net/wmts/1.0'\r\n];\r\n/**\r\n * @const\r\n * @type {Array<null|string>}\r\n */\r\nvar OWS_NAMESPACE_URIS = [\r\n    null,\r\n    'http://www.opengis.net/ows/1.1'\r\n];\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Contents': makeObjectPropertySetter(readContents)\r\n});\r\n/**\r\n * @classdesc\r\n * Format for reading WMTS capabilities data.\r\n *\r\n * @api\r\n */\r\nvar WMTSCapabilities = /** @class */ (function (_super) {\r\n    __extends(WMTSCapabilities, _super);\r\n    function WMTSCapabilities() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @type {OWS}\r\n         * @private\r\n         */\r\n        _this.owsParser_ = new OWS();\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WMTSCapabilities.prototype.readFromDocument = function (doc) {\r\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\r\n            if (n.nodeType == Node.ELEMENT_NODE) {\r\n                return this.readFromNode(n);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WMTSCapabilities.prototype.readFromNode = function (node) {\r\n        var version = node.getAttribute('version').trim();\r\n        var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\r\n        if (!WMTSCapabilityObject) {\r\n            return null;\r\n        }\r\n        WMTSCapabilityObject['version'] = version;\r\n        WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\r\n        return WMTSCapabilityObject ? WMTSCapabilityObject : null;\r\n    };\r\n    return WMTSCapabilities;\r\n}(XML));\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Layer': makeObjectPropertyPusher(readLayer),\r\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Style': makeObjectPropertyPusher(readStyle),\r\n    'Format': makeObjectPropertyPusher(readString),\r\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\r\n    'Dimension': makeObjectPropertyPusher(readDimensions),\r\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\r\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\r\n    'Title': makeObjectPropertySetter(readString),\r\n    'Abstract': makeObjectPropertySetter(readString),\r\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\r\n    'Identifier': makeObjectPropertySetter(readString)\r\n}));\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\r\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\r\n    'Title': makeObjectPropertySetter(readString),\r\n    'Identifier': makeObjectPropertySetter(readString)\r\n}));\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'TileMatrixSet': makeObjectPropertySetter(readString),\r\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'TileMatrix': makeObjectPropertySetter(readString),\r\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar DIMENSION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'Default': makeObjectPropertySetter(readString),\r\n    'Value': makeObjectPropertyPusher(readString)\r\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\r\n    'Identifier': makeObjectPropertySetter(readString)\r\n}));\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\r\n    'LowerCorner': makeArrayPusher(readCoordinates),\r\n    'UpperCorner': makeArrayPusher(readCoordinates)\r\n});\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TMS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\r\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\r\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\r\n    'SupportedCRS': makeObjectPropertySetter(readString),\r\n    'Identifier': makeObjectPropertySetter(readString)\r\n}));\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TM_PARSERS = makeStructureNS(NAMESPACE_URIS, {\r\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\r\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\r\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\r\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\r\n    'Identifier': makeObjectPropertySetter(readString)\r\n}));\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Attribution object.\r\n */\r\nfunction readContents(node, objectStack) {\r\n    return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Layers object.\r\n */\r\nfunction readLayer(node, objectStack) {\r\n    return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Tile Matrix Set object.\r\n */\r\nfunction readTileMatrixSet(node, objectStack) {\r\n    return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Style object.\r\n */\r\nfunction readStyle(node, objectStack) {\r\n    var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\r\n    if (!style) {\r\n        return undefined;\r\n    }\r\n    var isDefault = node.getAttribute('isDefault') === 'true';\r\n    style['isDefault'] = isDefault;\r\n    return style;\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Tile Matrix Set Link object.\r\n */\r\nfunction readTileMatrixSetLink(node, objectStack) {\r\n    return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Dimension object.\r\n */\r\nfunction readDimensions(node, objectStack) {\r\n    return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Resource URL object.\r\n */\r\nfunction readResourceUrl(node, objectStack) {\r\n    var format = node.getAttribute('format');\r\n    var template = node.getAttribute('template');\r\n    var resourceType = node.getAttribute('resourceType');\r\n    var resource = {};\r\n    if (format) {\r\n        resource['format'] = format;\r\n    }\r\n    if (template) {\r\n        resource['template'] = template;\r\n    }\r\n    if (resourceType) {\r\n        resource['resourceType'] = resourceType;\r\n    }\r\n    return resource;\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} WGS84 BBox object.\r\n */\r\nfunction readWgs84BoundingBox(node, objectStack) {\r\n    var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\r\n    if (coordinates.length != 2) {\r\n        return undefined;\r\n    }\r\n    return boundingExtent(coordinates);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Legend object.\r\n */\r\nfunction readLegendUrl(node, objectStack) {\r\n    var legend = {};\r\n    legend['format'] = node.getAttribute('format');\r\n    legend['href'] = readHref(node);\r\n    return legend;\r\n}\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Coordinates object.\r\n */\r\nfunction readCoordinates(node, objectStack) {\r\n    var coordinates = readString(node).split(/\\s+/);\r\n    if (!coordinates || coordinates.length != 2) {\r\n        return undefined;\r\n    }\r\n    var x = +coordinates[0];\r\n    var y = +coordinates[1];\r\n    if (isNaN(x) || isNaN(y)) {\r\n        return undefined;\r\n    }\r\n    return [x, y];\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} TileMatrix object.\r\n */\r\nfunction readTileMatrix(node, objectStack) {\r\n    return pushParseAndPop({}, TM_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} TileMatrixSetLimits Object.\r\n */\r\nfunction readTileMatrixLimitsList(node, objectStack) {\r\n    return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\r\n}\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} TileMatrixLimits Array.\r\n */\r\nfunction readTileMatrixLimits(node, objectStack) {\r\n    return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\r\n}\r\nexport default WMTSCapabilities;\r\n//# sourceMappingURL=WMTSCapabilities.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/Geolocation\r\n */\r\nimport BaseObject, { getChangeEventType } from './Object.js';\r\nimport { listen } from './events.js';\r\nimport Event from './events/Event.js';\r\nimport EventType from './events/EventType.js';\r\nimport { circular as circularPolygon } from './geom/Polygon.js';\r\nimport { GEOLOCATION } from './has.js';\r\nimport { toRadians } from './math.js';\r\nimport { get as getProjection, getTransformFromProjections, identityTransform } from './proj.js';\r\n/**\r\n * @enum {string}\r\n */\r\nvar Property = {\r\n    ACCURACY: 'accuracy',\r\n    ACCURACY_GEOMETRY: 'accuracyGeometry',\r\n    ALTITUDE: 'altitude',\r\n    ALTITUDE_ACCURACY: 'altitudeAccuracy',\r\n    HEADING: 'heading',\r\n    POSITION: 'position',\r\n    PROJECTION: 'projection',\r\n    SPEED: 'speed',\r\n    TRACKING: 'tracking',\r\n    TRACKING_OPTIONS: 'trackingOptions'\r\n};\r\n/**\r\n * @classdesc\r\n * Events emitted on Geolocation error.\r\n */\r\nvar GeolocationError = /** @class */ (function (_super) {\r\n    __extends(GeolocationError, _super);\r\n    /**\r\n     * @param {PositionError} error error object.\r\n     */\r\n    function GeolocationError(error) {\r\n        var _this = _super.call(this, EventType.ERROR) || this;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.code = error.code;\r\n        /**\r\n         * @type {string}\r\n         */\r\n        _this.message = error.message;\r\n        return _this;\r\n    }\r\n    return GeolocationError;\r\n}(Event));\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean} [tracking=false] Start Tracking right after\r\n * instantiation.\r\n * @property {PositionOptions} [trackingOptions] Tracking options.\r\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\r\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\r\n * is reported in.\r\n */\r\n/**\r\n * @classdesc\r\n * Helper class for providing HTML5 Geolocation capabilities.\r\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\r\n * is used to locate a user's position.\r\n *\r\n * To get notified of position changes, register a listener for the generic\r\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\r\n *\r\n * Example:\r\n *\r\n *     var geolocation = new Geolocation({\r\n *       // take the projection to use from the map's view\r\n *       projection: view.getProjection()\r\n *     });\r\n *     // listen to changes in position\r\n *     geolocation.on('change', function(evt) {\r\n *       window.console.log(geolocation.getPosition());\r\n *     });\r\n *\r\n * @fires error\r\n * @api\r\n */\r\nvar Geolocation = /** @class */ (function (_super) {\r\n    __extends(Geolocation, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function Geolocation(opt_options) {\r\n        var _this = _super.call(this) || this;\r\n        var options = opt_options || {};\r\n        /**\r\n         * The unprojected (EPSG:4326) device position.\r\n         * @private\r\n         * @type {import(\"./coordinate.js\").Coordinate}\r\n         */\r\n        _this.position_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./proj.js\").TransformFunction}\r\n         */\r\n        _this.transform_ = identityTransform;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.watchId_ = undefined;\r\n        listen(_this, getChangeEventType(Property.PROJECTION), _this.handleProjectionChanged_, _this);\r\n        listen(_this, getChangeEventType(Property.TRACKING), _this.handleTrackingChanged_, _this);\r\n        if (options.projection !== undefined) {\r\n            _this.setProjection(options.projection);\r\n        }\r\n        if (options.trackingOptions !== undefined) {\r\n            _this.setTrackingOptions(options.trackingOptions);\r\n        }\r\n        _this.setTracking(options.tracking !== undefined ? options.tracking : false);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Geolocation.prototype.disposeInternal = function () {\r\n        this.setTracking(false);\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    Geolocation.prototype.handleProjectionChanged_ = function () {\r\n        var projection = this.getProjection();\r\n        if (projection) {\r\n            this.transform_ = getTransformFromProjections(getProjection('EPSG:4326'), projection);\r\n            if (this.position_) {\r\n                this.set(Property.POSITION, this.transform_(this.position_));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    Geolocation.prototype.handleTrackingChanged_ = function () {\r\n        if (GEOLOCATION) {\r\n            var tracking = this.getTracking();\r\n            if (tracking && this.watchId_ === undefined) {\r\n                this.watchId_ = navigator.geolocation.watchPosition(this.positionChange_.bind(this), this.positionError_.bind(this), this.getTrackingOptions());\r\n            }\r\n            else if (!tracking && this.watchId_ !== undefined) {\r\n                navigator.geolocation.clearWatch(this.watchId_);\r\n                this.watchId_ = undefined;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {Position} position position event.\r\n     */\r\n    Geolocation.prototype.positionChange_ = function (position) {\r\n        var coords = position.coords;\r\n        this.set(Property.ACCURACY, coords.accuracy);\r\n        this.set(Property.ALTITUDE, coords.altitude === null ? undefined : coords.altitude);\r\n        this.set(Property.ALTITUDE_ACCURACY, coords.altitudeAccuracy === null ?\r\n            undefined : coords.altitudeAccuracy);\r\n        this.set(Property.HEADING, coords.heading === null ?\r\n            undefined : toRadians(coords.heading));\r\n        if (!this.position_) {\r\n            this.position_ = [coords.longitude, coords.latitude];\r\n        }\r\n        else {\r\n            this.position_[0] = coords.longitude;\r\n            this.position_[1] = coords.latitude;\r\n        }\r\n        var projectedPosition = this.transform_(this.position_);\r\n        this.set(Property.POSITION, projectedPosition);\r\n        this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\r\n        var geometry = circularPolygon(this.position_, coords.accuracy);\r\n        geometry.applyTransform(this.transform_);\r\n        this.set(Property.ACCURACY_GEOMETRY, geometry);\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Triggered when the Geolocation returns an error.\r\n     * @event error\r\n     * @api\r\n     */\r\n    /**\r\n     * @private\r\n     * @param {PositionError} error error object.\r\n     */\r\n    Geolocation.prototype.positionError_ = function (error) {\r\n        this.setTracking(false);\r\n        this.dispatchEvent(new GeolocationError(error));\r\n    };\r\n    /**\r\n     * Get the accuracy of the position in meters.\r\n     * @return {number|undefined} The accuracy of the position measurement in\r\n     *     meters.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Geolocation.prototype.getAccuracy = function () {\r\n        return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\r\n    };\r\n    /**\r\n     * Get a geometry of the position accuracy.\r\n     * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Geolocation.prototype.getAccuracyGeometry = function () {\r\n        return (\r\n        /** @type {?import(\"./geom/Polygon.js\").default} */ (this.get(Property.ACCURACY_GEOMETRY) || null));\r\n    };\r\n    /**\r\n     * Get the altitude associated with the position.\r\n     * @return {number|undefined} The altitude of the position in meters above mean\r\n     *     sea level.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Geolocation.prototype.getAltitude = function () {\r\n        return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\r\n    };\r\n    /**\r\n     * Get the altitude accuracy of the position.\r\n     * @return {number|undefined} The accuracy of the altitude measurement in\r\n     *     meters.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Geolocation.prototype.getAltitudeAccuracy = function () {\r\n        return /** @type {number|undefined} */ (this.get(Property.ALTITUDE_ACCURACY));\r\n    };\r\n    /**\r\n     * Get the heading as radians clockwise from North.\r\n     * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\r\n     * is set to `true` in the tracking options.\r\n     * @return {number|undefined} The heading of the device in radians from north.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Geolocation.prototype.getHeading = function () {\r\n        return /** @type {number|undefined} */ (this.get(Property.HEADING));\r\n    };\r\n    /**\r\n     * Get the position of the device.\r\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\r\n     *     in the current projection.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Geolocation.prototype.getPosition = function () {\r\n        return (\r\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION)));\r\n    };\r\n    /**\r\n     * Get the projection associated with the position.\r\n     * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\r\n     *     reported in.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Geolocation.prototype.getProjection = function () {\r\n        return (\r\n        /** @type {import(\"./proj/Projection.js\").default|undefined} */ (this.get(Property.PROJECTION)));\r\n    };\r\n    /**\r\n     * Get the speed in meters per second.\r\n     * @return {number|undefined} The instantaneous speed of the device in meters\r\n     *     per second.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Geolocation.prototype.getSpeed = function () {\r\n        return /** @type {number|undefined} */ (this.get(Property.SPEED));\r\n    };\r\n    /**\r\n     * Determine if the device location is being tracked.\r\n     * @return {boolean} The device location is being tracked.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Geolocation.prototype.getTracking = function () {\r\n        return /** @type {boolean} */ (this.get(Property.TRACKING));\r\n    };\r\n    /**\r\n     * Get the tracking options.\r\n     * See http://www.w3.org/TR/geolocation-API/#position-options.\r\n     * @return {PositionOptions|undefined} PositionOptions as defined by\r\n     *     the [HTML5 Geolocation spec\r\n     *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\r\n     * @observable\r\n     * @api\r\n     */\r\n    Geolocation.prototype.getTrackingOptions = function () {\r\n        return /** @type {PositionOptions|undefined} */ (this.get(Property.TRACKING_OPTIONS));\r\n    };\r\n    /**\r\n     * Set the projection to use for transforming the coordinates.\r\n     * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\r\n     *     reported in.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Geolocation.prototype.setProjection = function (projection) {\r\n        this.set(Property.PROJECTION, getProjection(projection));\r\n    };\r\n    /**\r\n     * Enable or disable tracking.\r\n     * @param {boolean} tracking Enable tracking.\r\n     * @observable\r\n     * @api\r\n     */\r\n    Geolocation.prototype.setTracking = function (tracking) {\r\n        this.set(Property.TRACKING, tracking);\r\n    };\r\n    /**\r\n     * Set the tracking options.\r\n     * See http://www.w3.org/TR/geolocation-API/#position-options.\r\n     * @param {PositionOptions} options PositionOptions as defined by the\r\n     *     [HTML5 Geolocation spec\r\n     *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\r\n     * @observable\r\n     * @api\r\n     */\r\n    Geolocation.prototype.setTrackingOptions = function (options) {\r\n        this.set(Property.TRACKING_OPTIONS, options);\r\n    };\r\n    return Geolocation;\r\n}(BaseObject));\r\nexport default Geolocation;\r\n//# sourceMappingURL=Geolocation.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/geom/Circle\r\n */\r\nimport { createOrUpdate, forEachCorner, intersects } from '../extent.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport { deflateCoordinate } from './flat/deflate.js';\r\n/**\r\n * @classdesc\r\n * Circle geometry.\r\n *\r\n * @api\r\n */\r\nvar Circle = /** @class */ (function (_super) {\r\n    __extends(Circle, _super);\r\n    /**\r\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\r\n     *     For internal use, flat coordinates in combination with `opt_layout` and no\r\n     *     `opt_radius` are also accepted.\r\n     * @param {number=} opt_radius Radius.\r\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\r\n     */\r\n    function Circle(center, opt_radius, opt_layout) {\r\n        var _this = _super.call(this) || this;\r\n        if (opt_layout !== undefined && opt_radius === undefined) {\r\n            _this.setFlatCoordinates(opt_layout, center);\r\n        }\r\n        else {\r\n            var radius = opt_radius ? opt_radius : 0;\r\n            _this.setCenterAndRadius(center, radius, opt_layout);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Make a complete copy of the geometry.\r\n     * @return {!Circle} Clone.\r\n     * @override\r\n     * @api\r\n     */\r\n    Circle.prototype.clone = function () {\r\n        return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Circle.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\r\n        var flatCoordinates = this.flatCoordinates;\r\n        var dx = x - flatCoordinates[0];\r\n        var dy = y - flatCoordinates[1];\r\n        var squaredDistance = dx * dx + dy * dy;\r\n        if (squaredDistance < minSquaredDistance) {\r\n            if (squaredDistance === 0) {\r\n                for (var i = 0; i < this.stride; ++i) {\r\n                    closestPoint[i] = flatCoordinates[i];\r\n                }\r\n            }\r\n            else {\r\n                var delta = this.getRadius() / Math.sqrt(squaredDistance);\r\n                closestPoint[0] = flatCoordinates[0] + delta * dx;\r\n                closestPoint[1] = flatCoordinates[1] + delta * dy;\r\n                for (var i = 2; i < this.stride; ++i) {\r\n                    closestPoint[i] = flatCoordinates[i];\r\n                }\r\n            }\r\n            closestPoint.length = this.stride;\r\n            return squaredDistance;\r\n        }\r\n        else {\r\n            return minSquaredDistance;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Circle.prototype.containsXY = function (x, y) {\r\n        var flatCoordinates = this.flatCoordinates;\r\n        var dx = x - flatCoordinates[0];\r\n        var dy = y - flatCoordinates[1];\r\n        return dx * dx + dy * dy <= this.getRadiusSquared_();\r\n    };\r\n    /**\r\n     * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\r\n     * @return {import(\"../coordinate.js\").Coordinate} Center.\r\n     * @api\r\n     */\r\n    Circle.prototype.getCenter = function () {\r\n        return this.flatCoordinates.slice(0, this.stride);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Circle.prototype.computeExtent = function (extent) {\r\n        var flatCoordinates = this.flatCoordinates;\r\n        var radius = flatCoordinates[this.stride] - flatCoordinates[0];\r\n        return createOrUpdate(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);\r\n    };\r\n    /**\r\n     * Return the radius of the circle.\r\n     * @return {number} Radius.\r\n     * @api\r\n     */\r\n    Circle.prototype.getRadius = function () {\r\n        return Math.sqrt(this.getRadiusSquared_());\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Radius squared.\r\n     */\r\n    Circle.prototype.getRadiusSquared_ = function () {\r\n        var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\r\n        var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\r\n        return dx * dx + dy * dy;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    Circle.prototype.getType = function () {\r\n        return GeometryType.CIRCLE;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    Circle.prototype.intersectsExtent = function (extent) {\r\n        var circleExtent = this.getExtent();\r\n        if (intersects(extent, circleExtent)) {\r\n            var center = this.getCenter();\r\n            if (extent[0] <= center[0] && extent[2] >= center[0]) {\r\n                return true;\r\n            }\r\n            if (extent[1] <= center[1] && extent[3] >= center[1]) {\r\n                return true;\r\n            }\r\n            return forEachCorner(extent, this.intersectsCoordinate, this);\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\r\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\r\n     * @api\r\n     */\r\n    Circle.prototype.setCenter = function (center) {\r\n        var stride = this.stride;\r\n        var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\r\n        var flatCoordinates = center.slice();\r\n        flatCoordinates[stride] = flatCoordinates[0] + radius;\r\n        for (var i = 1; i < stride; ++i) {\r\n            flatCoordinates[stride + i] = center[i];\r\n        }\r\n        this.setFlatCoordinates(this.layout, flatCoordinates);\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\r\n     * number) of the circle.\r\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\r\n     * @param {number} radius Radius.\r\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\r\n     * @api\r\n     */\r\n    Circle.prototype.setCenterAndRadius = function (center, radius, opt_layout) {\r\n        this.setLayout(opt_layout, center, 0);\r\n        if (!this.flatCoordinates) {\r\n            this.flatCoordinates = [];\r\n        }\r\n        /** @type {Array<number>} */\r\n        var flatCoordinates = this.flatCoordinates;\r\n        var offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\r\n        flatCoordinates[offset++] = flatCoordinates[0] + radius;\r\n        for (var i = 1, ii = this.stride; i < ii; ++i) {\r\n            flatCoordinates[offset++] = flatCoordinates[i];\r\n        }\r\n        flatCoordinates.length = offset;\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Circle.prototype.getCoordinates = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Circle.prototype.setCoordinates = function (coordinates, opt_layout) { };\r\n    /**\r\n     * Set the radius of the circle. The radius is in the units of the projection.\r\n     * @param {number} radius Radius.\r\n     * @api\r\n     */\r\n    Circle.prototype.setRadius = function (radius) {\r\n        this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\r\n        this.changed();\r\n    };\r\n    return Circle;\r\n}(SimpleGeometry));\r\n/**\r\n * Transform each coordinate of the circle from one coordinate reference system\r\n * to another. The geometry is modified in place.\r\n * If you do not want the geometry modified in place, first clone() it and\r\n * then use this function on the clone.\r\n *\r\n * Internally a circle is currently represented by two points: the center of\r\n * the circle `[cx, cy]`, and the point to the right of the circle\r\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\r\n * So the resulting geometry is also a circle, and that circle does not\r\n * correspond to the shape that would be obtained by transforming every point\r\n * of the original circle.\r\n *\r\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\r\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\r\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\r\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\r\n * @return {Circle} This geometry.  Note that original geometry is\r\n *     modified in place.\r\n * @function\r\n * @api\r\n */\r\nCircle.prototype.transform;\r\nexport default Circle;\r\n//# sourceMappingURL=Circle.js.map","/**\r\n * @module ol/interaction/DragAndDrop\r\n */\r\n// FIXME should handle all geo-referenced data, not just vector data\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { TRUE } from '../functions.js';\r\nimport { listen, unlistenByKey } from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport Interaction from './Interaction.js';\r\nimport { get as getProjection } from '../proj.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\r\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\r\n * all existing features will be removed and new features will be added when\r\n * they are dropped on the target.  If you want to add features to a vector\r\n * source without removing the existing features (append only), instead of\r\n * providing the source option listen for the \"addfeatures\" event.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\r\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nvar DragAndDropEventType = {\r\n    /**\r\n     * Triggered when features are added\r\n     * @event DragAndDropEvent#addfeatures\r\n     * @api\r\n     */\r\n    ADD_FEATURES: 'addfeatures'\r\n};\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\r\n * of this type.\r\n */\r\nvar DragAndDropEvent = /** @class */ (function (_super) {\r\n    __extends(DragAndDropEvent, _super);\r\n    /**\r\n     * @param {DragAndDropEventType} type Type.\r\n     * @param {File} file File.\r\n     * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\r\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\r\n     */\r\n    function DragAndDropEvent(type, file, opt_features, opt_projection) {\r\n        var _this = _super.call(this, type) || this;\r\n        /**\r\n         * The features parsed from dropped data.\r\n         * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\r\n         * @api\r\n         */\r\n        _this.features = opt_features;\r\n        /**\r\n         * The dropped file.\r\n         * @type {File}\r\n         * @api\r\n         */\r\n        _this.file = file;\r\n        /**\r\n         * The feature projection.\r\n         * @type {import(\"../proj/Projection.js\").default|undefined}\r\n         * @api\r\n         */\r\n        _this.projection = opt_projection;\r\n        return _this;\r\n    }\r\n    return DragAndDropEvent;\r\n}(Event));\r\n/**\r\n * @classdesc\r\n * Handles input of vector data by drag and drop.\r\n * @api\r\n *\r\n * @fires DragAndDropEvent\r\n */\r\nvar DragAndDrop = /** @class */ (function (_super) {\r\n    __extends(DragAndDrop, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function DragAndDrop(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        _this = _super.call(this, {\r\n            handleEvent: TRUE\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {Array<typeof import(\"../format/Feature.js\").default>}\r\n         */\r\n        _this.formatConstructors_ = options.formatConstructors ?\r\n            options.formatConstructors : [];\r\n        /**\r\n         * @private\r\n         * @type {import(\"../proj/Projection.js\").default}\r\n         */\r\n        _this.projection_ = options.projection ?\r\n            getProjection(options.projection) : null;\r\n        /**\r\n         * @private\r\n         * @type {Array<import(\"../events.js\").EventsKey>}\r\n         */\r\n        _this.dropListenKeys_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../source/Vector.js\").default}\r\n         */\r\n        _this.source_ = options.source || null;\r\n        /**\r\n         * @private\r\n         * @type {HTMLElement}\r\n         */\r\n        _this.target = options.target ? options.target : null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {File} file File.\r\n     * @param {Event} event Load event.\r\n     * @private\r\n     */\r\n    DragAndDrop.prototype.handleResult_ = function (file, event) {\r\n        var result = event.target.result;\r\n        var map = this.getMap();\r\n        var projection = this.projection_;\r\n        if (!projection) {\r\n            var view = map.getView();\r\n            projection = view.getProjection();\r\n        }\r\n        var formatConstructors = this.formatConstructors_;\r\n        var features = [];\r\n        for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\r\n            var format = new formatConstructors[i]();\r\n            features = this.tryReadFeatures_(format, result, {\r\n                featureProjection: projection\r\n            });\r\n            if (features && features.length > 0) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.source_) {\r\n            this.source_.clear();\r\n            this.source_.addFeatures(features);\r\n        }\r\n        this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    DragAndDrop.prototype.registerListeners_ = function () {\r\n        var map = this.getMap();\r\n        if (map) {\r\n            var dropArea = this.target ? this.target : map.getViewport();\r\n            this.dropListenKeys_ = [\r\n                listen(dropArea, EventType.DROP, handleDrop, this),\r\n                listen(dropArea, EventType.DRAGENTER, handleStop, this),\r\n                listen(dropArea, EventType.DRAGOVER, handleStop, this),\r\n                listen(dropArea, EventType.DROP, handleStop, this)\r\n            ];\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DragAndDrop.prototype.setActive = function (active) {\r\n        _super.prototype.setActive.call(this, active);\r\n        if (active) {\r\n            this.registerListeners_();\r\n        }\r\n        else {\r\n            this.unregisterListeners_();\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DragAndDrop.prototype.setMap = function (map) {\r\n        this.unregisterListeners_();\r\n        _super.prototype.setMap.call(this, map);\r\n        if (this.getActive()) {\r\n            this.registerListeners_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../format/Feature.js\").default} format Format.\r\n     * @param {string} text Text.\r\n     * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\r\n     * @private\r\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\r\n     */\r\n    DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {\r\n        try {\r\n            return format.readFeatures(text, options);\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    DragAndDrop.prototype.unregisterListeners_ = function () {\r\n        if (this.dropListenKeys_) {\r\n            this.dropListenKeys_.forEach(unlistenByKey);\r\n            this.dropListenKeys_ = null;\r\n        }\r\n    };\r\n    return DragAndDrop;\r\n}(Interaction));\r\n/**\r\n * @param {DragEvent} event Event.\r\n * @this {DragAndDrop}\r\n */\r\nfunction handleDrop(event) {\r\n    var files = event.dataTransfer.files;\r\n    for (var i = 0, ii = files.length; i < ii; ++i) {\r\n        var file = files.item(i);\r\n        var reader = new FileReader();\r\n        reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\r\n        reader.readAsText(file);\r\n    }\r\n}\r\n/**\r\n * @param {DragEvent} event Event.\r\n */\r\nfunction handleStop(event) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'copy';\r\n}\r\nexport default DragAndDrop;\r\n//# sourceMappingURL=DragAndDrop.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/DragRotateAndZoom\r\n */\r\nimport { disable } from '../rotationconstraint.js';\r\nimport ViewHint from '../ViewHint.js';\r\nimport { shiftKeyOnly, mouseOnly } from '../events/condition.js';\r\nimport { rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints } from './Interaction.js';\r\nimport PointerInteraction from './Pointer.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\r\n * @property {number} [duration=400] Animation duration in milliseconds.\r\n */\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom and rotate the map by clicking and dragging\r\n * on the map.  By default, this interaction is limited to when the shift\r\n * key is held down.\r\n *\r\n * This interaction is only supported for mouse devices.\r\n *\r\n * And this interaction is not included in the default interactions.\r\n * @api\r\n */\r\nvar DragRotateAndZoom = /** @class */ (function (_super) {\r\n    __extends(DragRotateAndZoom, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function DragRotateAndZoom(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         */\r\n        _this.condition_ = options.condition ? options.condition : shiftKeyOnly;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.lastAngle_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.lastMagnitude_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.lastScaleDelta_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DragRotateAndZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\r\n        if (!mouseOnly(mapBrowserEvent)) {\r\n            return;\r\n        }\r\n        var map = mapBrowserEvent.map;\r\n        var size = map.getSize();\r\n        var offset = mapBrowserEvent.pixel;\r\n        var deltaX = offset[0] - size[0] / 2;\r\n        var deltaY = size[1] / 2 - offset[1];\r\n        var theta = Math.atan2(deltaY, deltaX);\r\n        var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n        var view = map.getView();\r\n        if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\r\n            var angleDelta = theta - this.lastAngle_;\r\n            rotateWithoutConstraints(view, view.getRotation() - angleDelta);\r\n        }\r\n        this.lastAngle_ = theta;\r\n        if (this.lastMagnitude_ !== undefined) {\r\n            var resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\r\n            zoomWithoutConstraints(view, resolution);\r\n        }\r\n        if (this.lastMagnitude_ !== undefined) {\r\n            this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\r\n        }\r\n        this.lastMagnitude_ = magnitude;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DragRotateAndZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\r\n        if (!mouseOnly(mapBrowserEvent)) {\r\n            return true;\r\n        }\r\n        var map = mapBrowserEvent.map;\r\n        var view = map.getView();\r\n        view.setHint(ViewHint.INTERACTING, -1);\r\n        var direction = this.lastScaleDelta_ - 1;\r\n        rotate(view, view.getRotation());\r\n        zoom(view, view.getResolution(), undefined, this.duration_, direction);\r\n        this.lastScaleDelta_ = 0;\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DragRotateAndZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\r\n        if (!mouseOnly(mapBrowserEvent)) {\r\n            return false;\r\n        }\r\n        if (this.condition_(mapBrowserEvent)) {\r\n            mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\r\n            this.lastAngle_ = undefined;\r\n            this.lastMagnitude_ = undefined;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    return DragRotateAndZoom;\r\n}(PointerInteraction));\r\nexport default DragRotateAndZoom;\r\n//# sourceMappingURL=DragRotateAndZoom.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/layer/BaseVector\r\n */\r\nimport Layer from './Layer.js';\r\nimport { assign } from '../obj.js';\r\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\r\n * features before rendering. By default features are drawn in the order that they are created. Use\r\n * `null` to avoid the sort, but get an undefined draw order.\r\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\r\n * renderer when getting features from the vector source for the rendering or hit-detection.\r\n * Recommended value: the size of the largest symbol, line width or label.\r\n * @property {import(\"../source/Vector.js\").default} [source] Source.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\r\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\r\n * means higher priority.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\r\n * {@link module:ol/style} for default style which will be used if this is not defined.\r\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\r\n * be recreated during animations. This means that no vectors will be shown clipped, but the\r\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\r\n * batches will be recreated when no animation is active.\r\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\r\n * be recreated during interactions. See also `updateWhileAnimating`.\r\n */\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nvar Property = {\r\n    RENDER_ORDER: 'renderOrder'\r\n};\r\n/**\r\n * @classdesc\r\n * Vector data that is rendered client-side.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nvar BaseVectorLayer = /** @class */ (function (_super) {\r\n    __extends(BaseVectorLayer, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function BaseVectorLayer(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ?\r\n            opt_options : /** @type {Options} */ ({});\r\n        var baseOptions = assign({}, options);\r\n        delete baseOptions.style;\r\n        delete baseOptions.renderBuffer;\r\n        delete baseOptions.updateWhileAnimating;\r\n        delete baseOptions.updateWhileInteracting;\r\n        _this = _super.call(this, baseOptions) || this;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\r\n            options.renderBuffer : 100;\r\n        /**\r\n         * User provided style.\r\n         * @type {import(\"../style/Style.js\").StyleLike}\r\n         * @private\r\n         */\r\n        _this.style_ = null;\r\n        /**\r\n         * Style function for use within the library.\r\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\r\n         * @private\r\n         */\r\n        _this.styleFunction_ = undefined;\r\n        _this.setStyle(options.style);\r\n        /**\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\r\n            options.updateWhileAnimating : false;\r\n        /**\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\r\n            options.updateWhileInteracting : false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {boolean} Declutter.\r\n     */\r\n    BaseVectorLayer.prototype.getDeclutter = function () {\r\n        return this.declutter_;\r\n    };\r\n    /**\r\n     * @param {boolean} declutter Declutter.\r\n     */\r\n    BaseVectorLayer.prototype.setDeclutter = function (declutter) {\r\n        this.declutter_ = declutter;\r\n    };\r\n    /**\r\n     * @return {number|undefined} Render buffer.\r\n     */\r\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\r\n        return this.renderBuffer_;\r\n    };\r\n    /**\r\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\r\n     *     order.\r\n     */\r\n    BaseVectorLayer.prototype.getRenderOrder = function () {\r\n        return (\r\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\r\n    };\r\n    /**\r\n     * Get the style for features.  This returns whatever was passed to the `style`\r\n     * option at construction or to the `setStyle` method.\r\n     * @return {import(\"../style/Style.js\").StyleLike}\r\n     *     Layer style.\r\n     * @api\r\n     */\r\n    BaseVectorLayer.prototype.getStyle = function () {\r\n        return this.style_;\r\n    };\r\n    /**\r\n     * Get the style function.\r\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\r\n     * @api\r\n     */\r\n    BaseVectorLayer.prototype.getStyleFunction = function () {\r\n        return this.styleFunction_;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the rendered layer should be updated while\r\n     *     animating.\r\n     */\r\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\r\n        return this.updateWhileAnimating_;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the rendered layer should be updated while\r\n     *     interacting.\r\n     */\r\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\r\n        return this.updateWhileInteracting_;\r\n    };\r\n    /**\r\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\r\n     *     Render order.\r\n     */\r\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\r\n        this.set(Property.RENDER_ORDER, renderOrder);\r\n    };\r\n    /**\r\n     * Set the style for features.  This can be a single style object, an array\r\n     * of styles, or a function that takes a feature and resolution and returns\r\n     * an array of styles. If it is `undefined` the default style is used. If\r\n     * it is `null` the layer has no style (a `null` style), so only features\r\n     * that have their own styles will be rendered in the layer. See\r\n     * {@link module:ol/style} for information on the default style.\r\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\r\n     * @api\r\n     */\r\n    BaseVectorLayer.prototype.setStyle = function (style) {\r\n        this.style_ = style !== undefined ? style : createDefaultStyle;\r\n        this.styleFunction_ = style === null ?\r\n            undefined : toStyleFunction(this.style_);\r\n        this.changed();\r\n    };\r\n    return BaseVectorLayer;\r\n}(Layer));\r\n/**\r\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\r\n * @function\r\n * @return {import(\"../source/Vector.js\").default} Source.\r\n * @api\r\n */\r\nBaseVectorLayer.prototype.getSource;\r\nexport default BaseVectorLayer;\r\n//# sourceMappingURL=BaseVector.js.map","/**\r\n * @module ol/render/VectorContext\r\n */\r\n/**\r\n * @classdesc\r\n * Context for drawing geometries.  A vector context is available on render\r\n * events and does not need to be constructed directly.\r\n * @api\r\n */\r\nvar VectorContext = /** @class */ (function () {\r\n    function VectorContext() {\r\n    }\r\n    /**\r\n     * Render a geometry with a custom renderer.\r\n     *\r\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n     * @param {Function} renderer Renderer.\r\n     */\r\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\r\n    /**\r\n     * Render a geometry.\r\n     *\r\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\r\n     */\r\n    VectorContext.prototype.drawGeometry = function (geometry) { };\r\n    /**\r\n     * Set the rendering style.\r\n     *\r\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\r\n     */\r\n    VectorContext.prototype.setStyle = function (style) { };\r\n    /**\r\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     */\r\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\r\n    /**\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     * @param {import(\"../style/Style.js\").default} style Style.\r\n     */\r\n    VectorContext.prototype.drawFeature = function (feature, style) { };\r\n    /**\r\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     */\r\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\r\n    /**\r\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\r\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n     */\r\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\r\n    /**\r\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\r\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n     */\r\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\r\n    /**\r\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\r\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n     */\r\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\r\n    /**\r\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\r\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n     */\r\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\r\n    /**\r\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\r\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n     */\r\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\r\n    /**\r\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\r\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n     */\r\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\r\n    /**\r\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\r\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n     */\r\n    VectorContext.prototype.drawText = function (geometry, feature) { };\r\n    /**\r\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\r\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\r\n     */\r\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\r\n    /**\r\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\r\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\r\n     */\r\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\r\n    /**\r\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\r\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\r\n     */\r\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroup) { };\r\n    return VectorContext;\r\n}());\r\nexport default VectorContext;\r\n//# sourceMappingURL=VectorContext.js.map","/**\r\n * @module ol/render/canvas/Instruction\r\n */\r\n/**\r\n * @enum {number}\r\n */\r\nvar Instruction = {\r\n    BEGIN_GEOMETRY: 0,\r\n    BEGIN_PATH: 1,\r\n    CIRCLE: 2,\r\n    CLOSE_PATH: 3,\r\n    CUSTOM: 4,\r\n    DRAW_CHARS: 5,\r\n    DRAW_IMAGE: 6,\r\n    END_GEOMETRY: 7,\r\n    FILL: 8,\r\n    MOVE_TO_LINE_TO: 9,\r\n    SET_FILL_STYLE: 10,\r\n    SET_STROKE_STYLE: 11,\r\n    STROKE: 12\r\n};\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport var fillInstruction = [Instruction.FILL];\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport var strokeInstruction = [Instruction.STROKE];\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\r\nexport default Instruction;\r\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/render/canvas/Builder\r\n */\r\nimport { equals, reverseSubArray } from '../../array.js';\r\nimport { asColorLike } from '../../colorlike.js';\r\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\r\nimport Relationship from '../../extent/Relationship.js';\r\nimport GeometryType from '../../geom/GeometryType.js';\r\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\r\nimport VectorContext from '../VectorContext.js';\r\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\r\nimport CanvasInstruction from './Instruction.js';\r\n/**\r\n * @typedef {Object} SerializableInstructions\r\n * @property {Array<*>} instructions The rendering instructions.\r\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\r\n * @property {Array<number>} coordinates The array of all coordinates.\r\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\r\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\r\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\r\n */\r\nvar CanvasBuilder = /** @class */ (function (_super) {\r\n    __extends(CanvasBuilder, _super);\r\n    /**\r\n     * @param {number} tolerance Tolerance.\r\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n     * @param {number} resolution Resolution.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     */\r\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @protected\r\n         * @type {number}\r\n         */\r\n        _this.tolerance = tolerance;\r\n        /**\r\n         * @protected\r\n         * @const\r\n         * @type {import(\"../../extent.js\").Extent}\r\n         */\r\n        _this.maxExtent = maxExtent;\r\n        /**\r\n         * @protected\r\n         * @type {number}\r\n         */\r\n        _this.pixelRatio = pixelRatio;\r\n        /**\r\n         * @protected\r\n         * @type {number}\r\n         */\r\n        _this.maxLineWidth = 0;\r\n        /**\r\n         * @protected\r\n         * @const\r\n         * @type {number}\r\n         */\r\n        _this.resolution = resolution;\r\n        /**\r\n         * @private\r\n         * @type {Array<*>}\r\n         */\r\n        _this.beginGeometryInstruction1_ = null;\r\n        /**\r\n         * @private\r\n         * @type {Array<*>}\r\n         */\r\n        _this.beginGeometryInstruction2_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../../extent.js\").Extent}\r\n         */\r\n        _this.bufferedMaxExtent_ = null;\r\n        /**\r\n         * @protected\r\n         * @type {Array<*>}\r\n         */\r\n        _this.instructions = [];\r\n        /**\r\n         * @protected\r\n         * @type {Array<number>}\r\n         */\r\n        _this.coordinates = [];\r\n        /**\r\n         * @private\r\n         * @type {import(\"../../coordinate.js\").Coordinate}\r\n         */\r\n        _this.tmpCoordinate_ = [];\r\n        /**\r\n         * @protected\r\n         * @type {Array<*>}\r\n         */\r\n        _this.hitDetectionInstructions = [];\r\n        /**\r\n         * @protected\r\n         * @type {import(\"../canvas.js\").FillStrokeState}\r\n         */\r\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @param {Array<number>} dashArray Dash array.\r\n     * @return {Array<number>} Dash array with pixel ratio applied\r\n     */\r\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\r\n        var pixelRatio = this.pixelRatio;\r\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\r\n            return dash * pixelRatio;\r\n        });\r\n    };\r\n    /**\r\n     * @param {Array<number>} flatCoordinates Flat coordinates.\r\n     * @param {number} offset Offset.\r\n     * @param {number} end End.\r\n     * @param {number} stride Stride.\r\n     * @param {boolean} closed Last input coordinate equals first.\r\n     * @param {boolean} skipFirst Skip first coordinate.\r\n     * @protected\r\n     * @return {number} My end.\r\n     */\r\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\r\n        var myEnd = this.coordinates.length;\r\n        var extent = this.getBufferedMaxExtent();\r\n        if (skipFirst) {\r\n            offset += stride;\r\n        }\r\n        var lastXCoord = flatCoordinates[offset];\r\n        var lastYCoord = flatCoordinates[offset + 1];\r\n        var nextCoord = this.tmpCoordinate_;\r\n        var skipped = true;\r\n        var i, lastRel, nextRel;\r\n        for (i = offset + stride; i < end; i += stride) {\r\n            nextCoord[0] = flatCoordinates[i];\r\n            nextCoord[1] = flatCoordinates[i + 1];\r\n            nextRel = coordinateRelationship(extent, nextCoord);\r\n            if (nextRel !== lastRel) {\r\n                if (skipped) {\r\n                    this.coordinates[myEnd++] = lastXCoord;\r\n                    this.coordinates[myEnd++] = lastYCoord;\r\n                }\r\n                this.coordinates[myEnd++] = nextCoord[0];\r\n                this.coordinates[myEnd++] = nextCoord[1];\r\n                skipped = false;\r\n            }\r\n            else if (nextRel === Relationship.INTERSECTING) {\r\n                this.coordinates[myEnd++] = nextCoord[0];\r\n                this.coordinates[myEnd++] = nextCoord[1];\r\n                skipped = false;\r\n            }\r\n            else {\r\n                skipped = true;\r\n            }\r\n            lastXCoord = nextCoord[0];\r\n            lastYCoord = nextCoord[1];\r\n            lastRel = nextRel;\r\n        }\r\n        // Last coordinate equals first or only one point to append:\r\n        if ((closed && skipped) || i === offset + stride) {\r\n            this.coordinates[myEnd++] = lastXCoord;\r\n            this.coordinates[myEnd++] = lastYCoord;\r\n        }\r\n        return myEnd;\r\n    };\r\n    /**\r\n     * @param {Array<number>} flatCoordinates Flat coordinates.\r\n     * @param {number} offset Offset.\r\n     * @param {Array<number>} ends Ends.\r\n     * @param {number} stride Stride.\r\n     * @param {Array<number>} builderEnds Builder ends.\r\n     * @return {number} Offset.\r\n     */\r\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\r\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n            var end = ends[i];\r\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\r\n            builderEnds.push(builderEnd);\r\n            offset = end;\r\n        }\r\n        return offset;\r\n    };\r\n    /**\r\n     * @inheritDoc.\r\n     */\r\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\r\n        this.beginGeometry(geometry, feature);\r\n        var type = geometry.getType();\r\n        var stride = geometry.getStride();\r\n        var builderBegin = this.coordinates.length;\r\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\r\n        var offset;\r\n        if (type == GeometryType.MULTI_POLYGON) {\r\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\r\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\r\n            builderEndss = [];\r\n            var endss = geometry.getEndss();\r\n            offset = 0;\r\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n                var myEnds = [];\r\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\r\n                builderEndss.push(myEnds);\r\n            }\r\n            this.instructions.push([CanvasInstruction.CUSTOM,\r\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\r\n        }\r\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\r\n            builderEnds = [];\r\n            flatCoordinates = (type == GeometryType.POLYGON) ?\r\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\r\n                geometry.getFlatCoordinates();\r\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \r\n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\r\n            this.instructions.push([CanvasInstruction.CUSTOM,\r\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\r\n        }\r\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\r\n            flatCoordinates = geometry.getFlatCoordinates();\r\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\r\n            this.instructions.push([CanvasInstruction.CUSTOM,\r\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\r\n        }\r\n        else if (type == GeometryType.POINT) {\r\n            flatCoordinates = geometry.getFlatCoordinates();\r\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\r\n            builderEnd = this.coordinates.length;\r\n            this.instructions.push([CanvasInstruction.CUSTOM,\r\n                builderBegin, builderEnd, geometry, renderer]);\r\n        }\r\n        this.endGeometry(geometry, feature);\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n     */\r\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\r\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\r\n        this.instructions.push(this.beginGeometryInstruction1_);\r\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\r\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\r\n    };\r\n    /**\r\n     * @return {SerializableInstructions} the serializable instructions.\r\n     */\r\n    CanvasBuilder.prototype.finish = function () {\r\n        return {\r\n            instructions: this.instructions,\r\n            hitDetectionInstructions: this.hitDetectionInstructions,\r\n            coordinates: this.coordinates\r\n        };\r\n    };\r\n    /**\r\n     * Reverse the hit detection instructions.\r\n     */\r\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\r\n        var hitDetectionInstructions = this.hitDetectionInstructions;\r\n        // step 1 - reverse array\r\n        hitDetectionInstructions.reverse();\r\n        // step 2 - reverse instructions within geometry blocks\r\n        var i;\r\n        var n = hitDetectionInstructions.length;\r\n        var instruction;\r\n        var type;\r\n        var begin = -1;\r\n        for (i = 0; i < n; ++i) {\r\n            instruction = hitDetectionInstructions[i];\r\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\r\n            if (type == CanvasInstruction.END_GEOMETRY) {\r\n                begin = i;\r\n            }\r\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\r\n                instruction[2] = i;\r\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\r\n                begin = -1;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\r\n        var state = this.state;\r\n        if (fillStyle) {\r\n            var fillStyleColor = fillStyle.getColor();\r\n            state.fillStyle = asColorLike(fillStyleColor ?\r\n                fillStyleColor : defaultFillStyle);\r\n        }\r\n        else {\r\n            state.fillStyle = undefined;\r\n        }\r\n        if (strokeStyle) {\r\n            var strokeStyleColor = strokeStyle.getColor();\r\n            state.strokeStyle = asColorLike(strokeStyleColor ?\r\n                strokeStyleColor : defaultStrokeStyle);\r\n            var strokeStyleLineCap = strokeStyle.getLineCap();\r\n            state.lineCap = strokeStyleLineCap !== undefined ?\r\n                strokeStyleLineCap : defaultLineCap;\r\n            var strokeStyleLineDash = strokeStyle.getLineDash();\r\n            state.lineDash = strokeStyleLineDash ?\r\n                strokeStyleLineDash.slice() : defaultLineDash;\r\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\r\n            state.lineDashOffset = strokeStyleLineDashOffset ?\r\n                strokeStyleLineDashOffset : defaultLineDashOffset;\r\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\r\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\r\n                strokeStyleLineJoin : defaultLineJoin;\r\n            var strokeStyleWidth = strokeStyle.getWidth();\r\n            state.lineWidth = strokeStyleWidth !== undefined ?\r\n                strokeStyleWidth : defaultLineWidth;\r\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\r\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\r\n                strokeStyleMiterLimit : defaultMiterLimit;\r\n            if (state.lineWidth > this.maxLineWidth) {\r\n                this.maxLineWidth = state.lineWidth;\r\n                // invalidate the buffered max extent cache\r\n                this.bufferedMaxExtent_ = null;\r\n            }\r\n        }\r\n        else {\r\n            state.strokeStyle = undefined;\r\n            state.lineCap = undefined;\r\n            state.lineDash = null;\r\n            state.lineDashOffset = undefined;\r\n            state.lineJoin = undefined;\r\n            state.lineWidth = undefined;\r\n            state.miterLimit = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n     * @return {Array<*>} Fill instruction.\r\n     */\r\n    CanvasBuilder.prototype.createFill = function (state, geometry) {\r\n        var fillStyle = state.fillStyle;\r\n        /** @type {Array<*>} */\r\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\r\n        if (typeof fillStyle !== 'string') {\r\n            // Fill is a pattern or gradient - align it!\r\n            fillInstruction.push(true);\r\n        }\r\n        return fillInstruction;\r\n    };\r\n    /**\r\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n     */\r\n    CanvasBuilder.prototype.applyStroke = function (state) {\r\n        this.instructions.push(this.createStroke(state));\r\n    };\r\n    /**\r\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n     * @return {Array<*>} Stroke instruction.\r\n     */\r\n    CanvasBuilder.prototype.createStroke = function (state) {\r\n        return [\r\n            CanvasInstruction.SET_STROKE_STYLE,\r\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\r\n            state.lineJoin, state.miterLimit,\r\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\r\n        ];\r\n    };\r\n    /**\r\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\r\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n     */\r\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill, geometry) {\r\n        var fillStyle = state.fillStyle;\r\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\r\n            if (fillStyle !== undefined) {\r\n                this.instructions.push(createFill.call(this, state, geometry));\r\n            }\r\n            state.currentFillStyle = fillStyle;\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\r\n     */\r\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\r\n        var strokeStyle = state.strokeStyle;\r\n        var lineCap = state.lineCap;\r\n        var lineDash = state.lineDash;\r\n        var lineDashOffset = state.lineDashOffset;\r\n        var lineJoin = state.lineJoin;\r\n        var lineWidth = state.lineWidth;\r\n        var miterLimit = state.miterLimit;\r\n        if (state.currentStrokeStyle != strokeStyle ||\r\n            state.currentLineCap != lineCap ||\r\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\r\n            state.currentLineDashOffset != lineDashOffset ||\r\n            state.currentLineJoin != lineJoin ||\r\n            state.currentLineWidth != lineWidth ||\r\n            state.currentMiterLimit != miterLimit) {\r\n            if (strokeStyle !== undefined) {\r\n                applyStroke.call(this, state);\r\n            }\r\n            state.currentStrokeStyle = strokeStyle;\r\n            state.currentLineCap = lineCap;\r\n            state.currentLineDash = lineDash;\r\n            state.currentLineDashOffset = lineDashOffset;\r\n            state.currentLineJoin = lineJoin;\r\n            state.currentLineWidth = lineWidth;\r\n            state.currentMiterLimit = miterLimit;\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n     */\r\n    CanvasBuilder.prototype.endGeometry = function (geometry, feature) {\r\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\r\n        this.beginGeometryInstruction1_ = null;\r\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\r\n        this.beginGeometryInstruction2_ = null;\r\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\r\n        this.instructions.push(endGeometryInstruction);\r\n        this.hitDetectionInstructions.push(endGeometryInstruction);\r\n    };\r\n    /**\r\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\r\n     * provided to the constructor.  To account for symbolizers that may intersect\r\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\r\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\r\n     * @protected\r\n     */\r\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\r\n        if (!this.bufferedMaxExtent_) {\r\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\r\n            if (this.maxLineWidth > 0) {\r\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\r\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\r\n            }\r\n        }\r\n        return this.bufferedMaxExtent_;\r\n    };\r\n    return CanvasBuilder;\r\n}(VectorContext));\r\nexport default CanvasBuilder;\r\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/render/canvas/ImageBuilder\r\n */\r\nimport CanvasInstruction from './Instruction.js';\r\nimport CanvasBuilder from './Builder.js';\r\nvar CanvasImageBuilder = /** @class */ (function (_super) {\r\n    __extends(CanvasImageBuilder, _super);\r\n    /**\r\n     * @param {number} tolerance Tolerance.\r\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n     * @param {number} resolution Resolution.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     */\r\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\r\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../canvas.js\").DeclutterGroup}\r\n         */\r\n        _this.declutterGroup_ = null;\r\n        /**\r\n         * @private\r\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\r\n         */\r\n        _this.hitDetectionImage_ = null;\r\n        /**\r\n         * @private\r\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\r\n         */\r\n        _this.image_ = null;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.anchorX_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.anchorY_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.height_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.opacity_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.originX_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.originY_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {boolean|undefined}\r\n         */\r\n        _this.rotateWithView_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.rotation_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.scale_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.width_ = undefined;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {Array<number>} flatCoordinates Flat coordinates.\r\n     * @param {number} offset Offset.\r\n     * @param {number} end End.\r\n     * @param {number} stride Stride.\r\n     * @private\r\n     * @return {number} My end.\r\n     */\r\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\r\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\r\n        if (!this.image_) {\r\n            return;\r\n        }\r\n        this.beginGeometry(pointGeometry, feature);\r\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\r\n        var stride = pointGeometry.getStride();\r\n        var myBegin = this.coordinates.length;\r\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n        this.instructions.push([\r\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\r\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\r\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\r\n            this.scale_ * this.pixelRatio, this.width_\r\n        ]);\r\n        this.hitDetectionInstructions.push([\r\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\r\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\r\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\r\n            this.scale_, this.width_\r\n        ]);\r\n        this.endGeometry(pointGeometry, feature);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\r\n        if (!this.image_) {\r\n            return;\r\n        }\r\n        this.beginGeometry(multiPointGeometry, feature);\r\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\r\n        var stride = multiPointGeometry.getStride();\r\n        var myBegin = this.coordinates.length;\r\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n        this.instructions.push([\r\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\r\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\r\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\r\n            this.scale_ * this.pixelRatio, this.width_\r\n        ]);\r\n        this.hitDetectionInstructions.push([\r\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\r\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\r\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\r\n            this.scale_, this.width_\r\n        ]);\r\n        this.endGeometry(multiPointGeometry, feature);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasImageBuilder.prototype.finish = function () {\r\n        this.reverseHitDetectionInstructions();\r\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\r\n        this.anchorX_ = undefined;\r\n        this.anchorY_ = undefined;\r\n        this.hitDetectionImage_ = null;\r\n        this.image_ = null;\r\n        this.height_ = undefined;\r\n        this.scale_ = undefined;\r\n        this.opacity_ = undefined;\r\n        this.originX_ = undefined;\r\n        this.originY_ = undefined;\r\n        this.rotateWithView_ = undefined;\r\n        this.rotation_ = undefined;\r\n        this.width_ = undefined;\r\n        return _super.prototype.finish.call(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroup) {\r\n        var anchor = imageStyle.getAnchor();\r\n        var size = imageStyle.getSize();\r\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\r\n        var image = imageStyle.getImage(1);\r\n        var origin = imageStyle.getOrigin();\r\n        this.anchorX_ = anchor[0];\r\n        this.anchorY_ = anchor[1];\r\n        this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\r\n        this.hitDetectionImage_ = hitDetectionImage;\r\n        this.image_ = image;\r\n        this.height_ = size[1];\r\n        this.opacity_ = imageStyle.getOpacity();\r\n        this.originX_ = origin[0];\r\n        this.originY_ = origin[1];\r\n        this.rotateWithView_ = imageStyle.getRotateWithView();\r\n        this.rotation_ = imageStyle.getRotation();\r\n        this.scale_ = imageStyle.getScale();\r\n        this.width_ = size[0];\r\n    };\r\n    return CanvasImageBuilder;\r\n}(CanvasBuilder));\r\nexport default CanvasImageBuilder;\r\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/render/canvas/LineStringBuilder\r\n */\r\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\r\nimport CanvasBuilder from './Builder.js';\r\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\r\n    __extends(CanvasLineStringBuilder, _super);\r\n    /**\r\n     * @param {number} tolerance Tolerance.\r\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n     * @param {number} resolution Resolution.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     */\r\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\r\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\r\n    }\r\n    /**\r\n     * @param {Array<number>} flatCoordinates Flat coordinates.\r\n     * @param {number} offset Offset.\r\n     * @param {number} end End.\r\n     * @param {number} stride Stride.\r\n     * @private\r\n     * @return {number} end.\r\n     */\r\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\r\n        var myBegin = this.coordinates.length;\r\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\r\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\r\n        this.instructions.push(moveToLineToInstruction);\r\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\r\n        return end;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\r\n        var state = this.state;\r\n        var strokeStyle = state.strokeStyle;\r\n        var lineWidth = state.lineWidth;\r\n        if (strokeStyle === undefined || lineWidth === undefined) {\r\n            return;\r\n        }\r\n        this.updateStrokeStyle(state, this.applyStroke);\r\n        this.beginGeometry(lineStringGeometry, feature);\r\n        this.hitDetectionInstructions.push([\r\n            CanvasInstruction.SET_STROKE_STYLE,\r\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\r\n            state.miterLimit, state.lineDash, state.lineDashOffset\r\n        ], beginPathInstruction);\r\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\r\n        var stride = lineStringGeometry.getStride();\r\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n        this.hitDetectionInstructions.push(strokeInstruction);\r\n        this.endGeometry(lineStringGeometry, feature);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\r\n        var state = this.state;\r\n        var strokeStyle = state.strokeStyle;\r\n        var lineWidth = state.lineWidth;\r\n        if (strokeStyle === undefined || lineWidth === undefined) {\r\n            return;\r\n        }\r\n        this.updateStrokeStyle(state, this.applyStroke);\r\n        this.beginGeometry(multiLineStringGeometry, feature);\r\n        this.hitDetectionInstructions.push([\r\n            CanvasInstruction.SET_STROKE_STYLE,\r\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\r\n            state.miterLimit, state.lineDash, state.lineDashOffset\r\n        ], beginPathInstruction);\r\n        var ends = multiLineStringGeometry.getEnds();\r\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\r\n        var stride = multiLineStringGeometry.getStride();\r\n        var offset = 0;\r\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\r\n        }\r\n        this.hitDetectionInstructions.push(strokeInstruction);\r\n        this.endGeometry(multiLineStringGeometry, feature);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasLineStringBuilder.prototype.finish = function () {\r\n        var state = this.state;\r\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\r\n            this.instructions.push(strokeInstruction);\r\n        }\r\n        this.reverseHitDetectionInstructions();\r\n        this.state = null;\r\n        return _super.prototype.finish.call(this);\r\n    };\r\n    /**\r\n     * @inheritDoc.\r\n     */\r\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\r\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\r\n            this.instructions.push(strokeInstruction);\r\n            state.lastStroke = this.coordinates.length;\r\n        }\r\n        state.lastStroke = 0;\r\n        _super.prototype.applyStroke.call(this, state);\r\n        this.instructions.push(beginPathInstruction);\r\n    };\r\n    return CanvasLineStringBuilder;\r\n}(CanvasBuilder));\r\nexport default CanvasLineStringBuilder;\r\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/render/canvas/PolygonBuilder\r\n */\r\nimport { asString } from '../../color.js';\r\nimport { snap } from '../../geom/flat/simplify.js';\r\nimport { defaultFillStyle } from '../canvas.js';\r\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\r\nimport CanvasBuilder from './Builder.js';\r\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\r\n    __extends(CanvasPolygonBuilder, _super);\r\n    /**\r\n     * @param {number} tolerance Tolerance.\r\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n     * @param {number} resolution Resolution.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     */\r\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\r\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\r\n    }\r\n    /**\r\n     * @param {Array<number>} flatCoordinates Flat coordinates.\r\n     * @param {number} offset Offset.\r\n     * @param {Array<number>} ends Ends.\r\n     * @param {number} stride Stride.\r\n     * @private\r\n     * @return {number} End.\r\n     */\r\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\r\n        var state = this.state;\r\n        var fill = state.fillStyle !== undefined;\r\n        var stroke = state.strokeStyle != undefined;\r\n        var numEnds = ends.length;\r\n        this.instructions.push(beginPathInstruction);\r\n        this.hitDetectionInstructions.push(beginPathInstruction);\r\n        for (var i = 0; i < numEnds; ++i) {\r\n            var end = ends[i];\r\n            var myBegin = this.coordinates.length;\r\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\r\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\r\n            this.instructions.push(moveToLineToInstruction);\r\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\r\n            if (stroke) {\r\n                // Performance optimization: only call closePath() when we have a stroke.\r\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\r\n                this.instructions.push(closePathInstruction);\r\n                this.hitDetectionInstructions.push(closePathInstruction);\r\n            }\r\n            offset = end;\r\n        }\r\n        if (fill) {\r\n            this.instructions.push(fillInstruction);\r\n            this.hitDetectionInstructions.push(fillInstruction);\r\n        }\r\n        if (stroke) {\r\n            this.instructions.push(strokeInstruction);\r\n            this.hitDetectionInstructions.push(strokeInstruction);\r\n        }\r\n        return offset;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\r\n        var state = this.state;\r\n        var fillStyle = state.fillStyle;\r\n        var strokeStyle = state.strokeStyle;\r\n        if (fillStyle === undefined && strokeStyle === undefined) {\r\n            return;\r\n        }\r\n        this.setFillStrokeStyles_(circleGeometry);\r\n        this.beginGeometry(circleGeometry, feature);\r\n        if (state.fillStyle !== undefined) {\r\n            this.hitDetectionInstructions.push([\r\n                CanvasInstruction.SET_FILL_STYLE,\r\n                asString(defaultFillStyle)\r\n            ]);\r\n        }\r\n        if (state.strokeStyle !== undefined) {\r\n            this.hitDetectionInstructions.push([\r\n                CanvasInstruction.SET_STROKE_STYLE,\r\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\r\n                state.miterLimit, state.lineDash, state.lineDashOffset\r\n            ]);\r\n        }\r\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\r\n        var stride = circleGeometry.getStride();\r\n        var myBegin = this.coordinates.length;\r\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\r\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\r\n        this.instructions.push(beginPathInstruction, circleInstruction);\r\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\r\n        this.hitDetectionInstructions.push(fillInstruction);\r\n        if (state.fillStyle !== undefined) {\r\n            this.instructions.push(fillInstruction);\r\n        }\r\n        if (state.strokeStyle !== undefined) {\r\n            this.instructions.push(strokeInstruction);\r\n            this.hitDetectionInstructions.push(strokeInstruction);\r\n        }\r\n        this.endGeometry(circleGeometry, feature);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\r\n        var state = this.state;\r\n        var fillStyle = state.fillStyle;\r\n        var strokeStyle = state.strokeStyle;\r\n        if (fillStyle === undefined && strokeStyle === undefined) {\r\n            return;\r\n        }\r\n        this.setFillStrokeStyles_(polygonGeometry);\r\n        this.beginGeometry(polygonGeometry, feature);\r\n        if (state.fillStyle !== undefined) {\r\n            this.hitDetectionInstructions.push([\r\n                CanvasInstruction.SET_FILL_STYLE,\r\n                asString(defaultFillStyle)\r\n            ]);\r\n        }\r\n        if (state.strokeStyle !== undefined) {\r\n            this.hitDetectionInstructions.push([\r\n                CanvasInstruction.SET_STROKE_STYLE,\r\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\r\n                state.miterLimit, state.lineDash, state.lineDashOffset\r\n            ]);\r\n        }\r\n        var ends = polygonGeometry.getEnds();\r\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\r\n        var stride = polygonGeometry.getStride();\r\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\r\n        this.endGeometry(polygonGeometry, feature);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\r\n        var state = this.state;\r\n        var fillStyle = state.fillStyle;\r\n        var strokeStyle = state.strokeStyle;\r\n        if (fillStyle === undefined && strokeStyle === undefined) {\r\n            return;\r\n        }\r\n        this.setFillStrokeStyles_(multiPolygonGeometry);\r\n        this.beginGeometry(multiPolygonGeometry, feature);\r\n        if (state.fillStyle !== undefined) {\r\n            this.hitDetectionInstructions.push([\r\n                CanvasInstruction.SET_FILL_STYLE,\r\n                asString(defaultFillStyle)\r\n            ]);\r\n        }\r\n        if (state.strokeStyle !== undefined) {\r\n            this.hitDetectionInstructions.push([\r\n                CanvasInstruction.SET_STROKE_STYLE,\r\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\r\n                state.miterLimit, state.lineDash, state.lineDashOffset\r\n            ]);\r\n        }\r\n        var endss = multiPolygonGeometry.getEndss();\r\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\r\n        var stride = multiPolygonGeometry.getStride();\r\n        var offset = 0;\r\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\r\n        }\r\n        this.endGeometry(multiPolygonGeometry, feature);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasPolygonBuilder.prototype.finish = function () {\r\n        this.reverseHitDetectionInstructions();\r\n        this.state = null;\r\n        // We want to preserve topology when drawing polygons.  Polygons are\r\n        // simplified using quantization and point elimination. However, we might\r\n        // have received a mix of quantized and non-quantized geometries, so ensure\r\n        // that all are quantized by quantizing all coordinates in the batch.\r\n        var tolerance = this.tolerance;\r\n        if (tolerance !== 0) {\r\n            var coordinates = this.coordinates;\r\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\r\n                coordinates[i] = snap(coordinates[i], tolerance);\r\n            }\r\n        }\r\n        return _super.prototype.finish.call(this);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n     */\r\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function (geometry) {\r\n        var state = this.state;\r\n        var fillStyle = state.fillStyle;\r\n        if (fillStyle !== undefined) {\r\n            this.updateFillStyle(state, this.createFill, geometry);\r\n        }\r\n        if (state.strokeStyle !== undefined) {\r\n            this.updateStrokeStyle(state, this.applyStroke);\r\n        }\r\n    };\r\n    return CanvasPolygonBuilder;\r\n}(CanvasBuilder));\r\nexport default CanvasPolygonBuilder;\r\n//# sourceMappingURL=PolygonBuilder.js.map","/**\r\n * @module ol/geom/flat/straightchunk\r\n */\r\n/**\r\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {Array<number>} Start and end of the first suitable chunk of the\r\n * given `flatCoordinates`.\r\n */\r\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\r\n    var chunkStart = offset;\r\n    var chunkEnd = offset;\r\n    var chunkM = 0;\r\n    var m = 0;\r\n    var start = offset;\r\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\r\n    for (i = offset; i < end; i += stride) {\r\n        var x2 = flatCoordinates[i];\r\n        var y2 = flatCoordinates[i + 1];\r\n        if (x1 !== undefined) {\r\n            x23 = x2 - x1;\r\n            y23 = y2 - y1;\r\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\r\n            if (x12 !== undefined) {\r\n                m += m12;\r\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\r\n                if (acos > maxAngle) {\r\n                    if (m > chunkM) {\r\n                        chunkM = m;\r\n                        chunkStart = start;\r\n                        chunkEnd = i;\r\n                    }\r\n                    m = 0;\r\n                    start = i - stride;\r\n                }\r\n            }\r\n            m12 = m23;\r\n            x12 = x23;\r\n            y12 = y23;\r\n        }\r\n        x1 = x2;\r\n        y1 = y2;\r\n    }\r\n    m += m23;\r\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\r\n}\r\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/render/canvas/TextBuilder\r\n */\r\nimport { getUid } from '../../util.js';\r\nimport { asColorLike } from '../../colorlike.js';\r\nimport { intersects } from '../../extent.js';\r\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\r\nimport GeometryType from '../../geom/GeometryType.js';\r\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\r\nimport CanvasInstruction from './Instruction.js';\r\nimport CanvasBuilder from './Builder.js';\r\nimport TextPlacement from '../../style/TextPlacement.js';\r\n/**\r\n * @const\r\n * @enum {number}\r\n */\r\nexport var TEXT_ALIGN = {};\r\nTEXT_ALIGN['left'] = 0;\r\nTEXT_ALIGN['end'] = 0;\r\nTEXT_ALIGN['center'] = 0.5;\r\nTEXT_ALIGN['right'] = 1;\r\nTEXT_ALIGN['start'] = 1;\r\nTEXT_ALIGN['top'] = 0;\r\nTEXT_ALIGN['middle'] = 0.5;\r\nTEXT_ALIGN['hanging'] = 0.2;\r\nTEXT_ALIGN['alphabetic'] = 0.8;\r\nTEXT_ALIGN['ideographic'] = 0.8;\r\nTEXT_ALIGN['bottom'] = 1;\r\nvar CanvasTextBuilder = /** @class */ (function (_super) {\r\n    __extends(CanvasTextBuilder, _super);\r\n    /**\r\n     * @param {number} tolerance Tolerance.\r\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n     * @param {number} resolution Resolution.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     */\r\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\r\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../canvas.js\").DeclutterGroup}\r\n         */\r\n        _this.declutterGroup_;\r\n        /**\r\n         * @private\r\n         * @type {Array<HTMLCanvasElement>}\r\n         */\r\n        _this.labels_ = null;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.text_ = '';\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.textOffsetX_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.textOffsetY_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {boolean|undefined}\r\n         */\r\n        _this.textRotateWithView_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.textRotation_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../canvas.js\").FillState}\r\n         */\r\n        _this.textFillState_ = null;\r\n        /**\r\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\r\n         */\r\n        _this.fillStates = {};\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../canvas.js\").StrokeState}\r\n         */\r\n        _this.textStrokeState_ = null;\r\n        /**\r\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\r\n         */\r\n        _this.strokeStates = {};\r\n        /**\r\n         * @private\r\n         * @type {import(\"../canvas.js\").TextState}\r\n         */\r\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\r\n        /**\r\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\r\n         */\r\n        _this.textStates = {};\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.textKey_ = '';\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.fillKey_ = '';\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.strokeKey_ = '';\r\n        labelCache.prune();\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasTextBuilder.prototype.finish = function () {\r\n        var instructions = _super.prototype.finish.call(this);\r\n        instructions.textStates = this.textStates;\r\n        instructions.fillStates = this.fillStates;\r\n        instructions.strokeStates = this.strokeStates;\r\n        return instructions;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\r\n        var fillState = this.textFillState_;\r\n        var strokeState = this.textStrokeState_;\r\n        var textState = this.textState_;\r\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\r\n            return;\r\n        }\r\n        var begin = this.coordinates.length;\r\n        var geometryType = geometry.getType();\r\n        var flatCoordinates = null;\r\n        var end = 2;\r\n        var stride = 2;\r\n        var i, ii;\r\n        if (textState.placement === TextPlacement.LINE) {\r\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\r\n                return;\r\n            }\r\n            var ends = void 0;\r\n            flatCoordinates = geometry.getFlatCoordinates();\r\n            stride = geometry.getStride();\r\n            if (geometryType == GeometryType.LINE_STRING) {\r\n                ends = [flatCoordinates.length];\r\n            }\r\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\r\n                ends = geometry.getEnds();\r\n            }\r\n            else if (geometryType == GeometryType.POLYGON) {\r\n                ends = geometry.getEnds().slice(0, 1);\r\n            }\r\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\r\n                var endss = geometry.getEndss();\r\n                ends = [];\r\n                for (i = 0, ii = endss.length; i < ii; ++i) {\r\n                    ends.push(endss[i][0]);\r\n                }\r\n            }\r\n            this.beginGeometry(geometry, feature);\r\n            var textAlign = textState.textAlign;\r\n            var flatOffset = 0;\r\n            var flatEnd = void 0;\r\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\r\n                if (textAlign == undefined) {\r\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\r\n                    flatOffset = range[0];\r\n                    flatEnd = range[1];\r\n                }\r\n                else {\r\n                    flatEnd = ends[o];\r\n                }\r\n                for (i = flatOffset; i < flatEnd; i += stride) {\r\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\r\n                }\r\n                end = this.coordinates.length;\r\n                flatOffset = ends[o];\r\n                this.drawChars_(begin, end, this.declutterGroup_);\r\n                begin = end;\r\n            }\r\n            this.endGeometry(geometry, feature);\r\n        }\r\n        else {\r\n            var geometryWidths = null;\r\n            if (!textState.overflow) {\r\n                geometryWidths = [];\r\n            }\r\n            switch (geometryType) {\r\n                case GeometryType.POINT:\r\n                case GeometryType.MULTI_POINT:\r\n                    flatCoordinates = geometry.getFlatCoordinates();\r\n                    end = flatCoordinates.length;\r\n                    break;\r\n                case GeometryType.LINE_STRING:\r\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\r\n                    break;\r\n                case GeometryType.CIRCLE:\r\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\r\n                    break;\r\n                case GeometryType.MULTI_LINE_STRING:\r\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\r\n                    end = flatCoordinates.length;\r\n                    break;\r\n                case GeometryType.POLYGON:\r\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\r\n                    if (!textState.overflow) {\r\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\r\n                    }\r\n                    stride = 3;\r\n                    break;\r\n                case GeometryType.MULTI_POLYGON:\r\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\r\n                    flatCoordinates = [];\r\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\r\n                        if (!textState.overflow) {\r\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\r\n                        }\r\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\r\n                    }\r\n                    end = flatCoordinates.length;\r\n                    if (end == 0) {\r\n                        return;\r\n                    }\r\n                    break;\r\n                default:\r\n            }\r\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\r\n            this.saveTextStates_();\r\n            if (textState.backgroundFill || textState.backgroundStroke) {\r\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\r\n                if (textState.backgroundFill) {\r\n                    this.updateFillStyle(this.state, this.createFill, geometry);\r\n                    this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\r\n                }\r\n                if (textState.backgroundStroke) {\r\n                    this.updateStrokeStyle(this.state, this.applyStroke);\r\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\r\n                }\r\n            }\r\n            this.beginGeometry(geometry, feature);\r\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\r\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\r\n            // render time.\r\n            var pixelRatio_1 = this.pixelRatio;\r\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\r\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\r\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\r\n                textState.padding == defaultPadding ?\r\n                    defaultPadding : textState.padding.map(function (p) {\r\n                    return p * pixelRatio_1;\r\n                }),\r\n                !!textState.backgroundFill, !!textState.backgroundStroke,\r\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\r\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\r\n            ]);\r\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\r\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\r\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\r\n                textState.padding,\r\n                !!textState.backgroundFill, !!textState.backgroundStroke,\r\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\r\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\r\n            ]);\r\n            this.endGeometry(geometry, feature);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\r\n        var strokeState = this.textStrokeState_;\r\n        var textState = this.textState_;\r\n        var fillState = this.textFillState_;\r\n        var strokeKey = this.strokeKey_;\r\n        if (strokeState) {\r\n            if (!(strokeKey in this.strokeStates)) {\r\n                this.strokeStates[strokeKey] = {\r\n                    strokeStyle: strokeState.strokeStyle,\r\n                    lineCap: strokeState.lineCap,\r\n                    lineDashOffset: strokeState.lineDashOffset,\r\n                    lineWidth: strokeState.lineWidth,\r\n                    lineJoin: strokeState.lineJoin,\r\n                    miterLimit: strokeState.miterLimit,\r\n                    lineDash: strokeState.lineDash\r\n                };\r\n            }\r\n        }\r\n        var textKey = this.textKey_;\r\n        if (!(textKey in this.textStates)) {\r\n            this.textStates[textKey] = {\r\n                font: textState.font,\r\n                textAlign: textState.textAlign || defaultTextAlign,\r\n                textBaseline: textState.textBaseline || defaultTextBaseline,\r\n                scale: textState.scale\r\n            };\r\n        }\r\n        var fillKey = this.fillKey_;\r\n        if (fillState) {\r\n            if (!(fillKey in this.fillStates)) {\r\n                this.fillStates[fillKey] = {\r\n                    fillStyle: fillState.fillStyle\r\n                };\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {number} begin Begin.\r\n     * @param {number} end End.\r\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\r\n     */\r\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\r\n        var strokeState = this.textStrokeState_;\r\n        var textState = this.textState_;\r\n        var strokeKey = this.strokeKey_;\r\n        var textKey = this.textKey_;\r\n        var fillKey = this.fillKey_;\r\n        this.saveTextStates_();\r\n        var pixelRatio = this.pixelRatio;\r\n        var baseline = TEXT_ALIGN[textState.textBaseline];\r\n        var offsetY = this.textOffsetY_ * pixelRatio;\r\n        var text = this.text_;\r\n        var textScale = textState.scale;\r\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\r\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\r\n            begin, end, baseline, declutterGroup,\r\n            textState.overflow, fillKey, textState.maxAngle,\r\n            pixelRatio,\r\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\r\n        ]);\r\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\r\n            begin, end, baseline, declutterGroup,\r\n            textState.overflow, fillKey, textState.maxAngle,\r\n            1,\r\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\r\n        ]);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroup) {\r\n        var textState, fillState, strokeState;\r\n        if (!textStyle) {\r\n            this.text_ = '';\r\n        }\r\n        else {\r\n            this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\r\n            var textFillStyle = textStyle.getFill();\r\n            if (!textFillStyle) {\r\n                fillState = this.textFillState_ = null;\r\n            }\r\n            else {\r\n                fillState = this.textFillState_;\r\n                if (!fillState) {\r\n                    fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\r\n                }\r\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\r\n            }\r\n            var textStrokeStyle = textStyle.getStroke();\r\n            if (!textStrokeStyle) {\r\n                strokeState = this.textStrokeState_ = null;\r\n            }\r\n            else {\r\n                strokeState = this.textStrokeState_;\r\n                if (!strokeState) {\r\n                    strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\r\n                }\r\n                var lineDash = textStrokeStyle.getLineDash();\r\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\r\n                var lineWidth = textStrokeStyle.getWidth();\r\n                var miterLimit = textStrokeStyle.getMiterLimit();\r\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\r\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\r\n                strokeState.lineDashOffset =\r\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\r\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\r\n                strokeState.lineWidth =\r\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\r\n                strokeState.miterLimit =\r\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\r\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\r\n            }\r\n            textState = this.textState_;\r\n            var font = textStyle.getFont() || defaultFont;\r\n            checkFont(font);\r\n            var textScale = textStyle.getScale();\r\n            textState.overflow = textStyle.getOverflow();\r\n            textState.font = font;\r\n            textState.maxAngle = textStyle.getMaxAngle();\r\n            textState.placement = textStyle.getPlacement();\r\n            textState.textAlign = textStyle.getTextAlign();\r\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\r\n            textState.backgroundFill = textStyle.getBackgroundFill();\r\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\r\n            textState.padding = textStyle.getPadding() || defaultPadding;\r\n            textState.scale = textScale === undefined ? 1 : textScale;\r\n            var textOffsetX = textStyle.getOffsetX();\r\n            var textOffsetY = textStyle.getOffsetY();\r\n            var textRotateWithView = textStyle.getRotateWithView();\r\n            var textRotation = textStyle.getRotation();\r\n            this.text_ = textStyle.getText() || '';\r\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\r\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\r\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\r\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\r\n            this.strokeKey_ = strokeState ?\r\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\r\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\r\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\r\n                '';\r\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\r\n            this.fillKey_ = fillState ?\r\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\r\n                '';\r\n        }\r\n    };\r\n    return CanvasTextBuilder;\r\n}(CanvasBuilder));\r\nexport default CanvasTextBuilder;\r\n//# sourceMappingURL=TextBuilder.js.map","/**\r\n * @module ol/render/canvas/BuilderGroup\r\n */\r\nimport { createEmpty } from '../../extent.js';\r\nimport Builder from './Builder.js';\r\nimport ImageBuilder from './ImageBuilder.js';\r\nimport LineStringBuilder from './LineStringBuilder.js';\r\nimport PolygonBuilder from './PolygonBuilder.js';\r\nimport TextBuilder from './TextBuilder.js';\r\n/**\r\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\r\n */\r\nvar BATCH_CONSTRUCTORS = {\r\n    'Circle': PolygonBuilder,\r\n    'Default': Builder,\r\n    'Image': ImageBuilder,\r\n    'LineString': LineStringBuilder,\r\n    'Polygon': PolygonBuilder,\r\n    'Text': TextBuilder\r\n};\r\nvar BuilderGroup = /** @class */ (function () {\r\n    /**\r\n     * @param {number} tolerance Tolerance.\r\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\r\n     * @param {number} resolution Resolution.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {boolean} declutter Decluttering enabled.\r\n     */\r\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\r\n        /**\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this.declutter_ = declutter;\r\n        /**\r\n         * @type {import(\"../canvas.js\").DeclutterGroup}\r\n         * @private\r\n         */\r\n        this.declutterGroup_ = null;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.tolerance_ = tolerance;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../../extent.js\").Extent}\r\n         */\r\n        this.maxExtent_ = maxExtent;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.pixelRatio_ = pixelRatio;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.resolution_ = resolution;\r\n        /**\r\n         * @private\r\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\r\n         */\r\n        this.buildersByZIndex_ = {};\r\n    }\r\n    /**\r\n     * @param {boolean} group Group with previous builder.\r\n     * @return {Array<*>} The resulting instruction group.\r\n     */\r\n    BuilderGroup.prototype.addDeclutter = function (group) {\r\n        var declutter = null;\r\n        if (this.declutter_) {\r\n            if (group) {\r\n                declutter = this.declutterGroup_;\r\n                /** @type {number} */ (declutter[4])++;\r\n            }\r\n            else {\r\n                declutter = this.declutterGroup_ = createEmpty();\r\n                declutter.push(1);\r\n            }\r\n        }\r\n        return declutter;\r\n    };\r\n    /**\r\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\r\n     */\r\n    BuilderGroup.prototype.finish = function () {\r\n        var builderInstructions = {};\r\n        for (var zKey in this.buildersByZIndex_) {\r\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\r\n            var builders = this.buildersByZIndex_[zKey];\r\n            for (var builderKey in builders) {\r\n                var builderInstruction = builders[builderKey].finish();\r\n                builderInstructions[zKey][builderKey] = builderInstruction;\r\n            }\r\n        }\r\n        return builderInstructions;\r\n    };\r\n    /**\r\n     * @param {number|undefined} zIndex Z index.\r\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\r\n     * @return {import(\"../VectorContext.js\").default} Replay.\r\n     */\r\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\r\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\r\n        var replays = this.buildersByZIndex_[zIndexKey];\r\n        if (replays === undefined) {\r\n            replays = {};\r\n            this.buildersByZIndex_[zIndexKey] = replays;\r\n        }\r\n        var replay = replays[builderType];\r\n        if (replay === undefined) {\r\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\r\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\r\n            replays[builderType] = replay;\r\n        }\r\n        return replay;\r\n    };\r\n    return BuilderGroup;\r\n}());\r\nexport default BuilderGroup;\r\n//# sourceMappingURL=BuilderGroup.js.map","/**\r\n * @module ol/render/canvas/BuilderType\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n    CIRCLE: 'Circle',\r\n    DEFAULT: 'Default',\r\n    IMAGE: 'Image',\r\n    LINE_STRING: 'LineString',\r\n    POLYGON: 'Polygon',\r\n    TEXT: 'Text'\r\n};\r\n//# sourceMappingURL=BuilderType.js.map","/**\r\n * @module ol/geom/flat/textpath\r\n */\r\nimport { lerp } from '../../math.js';\r\n/**\r\n * @param {Array<number>} flatCoordinates Path to put text on.\r\n * @param {number} offset Start offset of the `flatCoordinates`.\r\n * @param {number} end End offset of the `flatCoordinates`.\r\n * @param {number} stride Stride.\r\n * @param {string} text Text to place on the path.\r\n * @param {number} startM m along the path where the text starts.\r\n * @param {number} maxAngle Max angle between adjacent chars in radians.\r\n * @param {number} scale The product of the text scale and the device pixel ratio.\r\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\r\n * @param {string} font The font.\r\n * @param {Object<string, number>} cache A cache of measured widths.\r\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\r\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\r\n */\r\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\r\n    var result = [];\r\n    // Keep text upright\r\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\r\n    var numChars = text.length;\r\n    var x1 = flatCoordinates[offset];\r\n    var y1 = flatCoordinates[offset + 1];\r\n    offset += stride;\r\n    var x2 = flatCoordinates[offset];\r\n    var y2 = flatCoordinates[offset + 1];\r\n    var segmentM = 0;\r\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\r\n    var chunk = '';\r\n    var chunkLength = 0;\r\n    var data, index, previousAngle;\r\n    for (var i = 0; i < numChars; ++i) {\r\n        index = reverse ? numChars - i - 1 : i;\r\n        var char = text.charAt(index);\r\n        chunk = reverse ? char + chunk : chunk + char;\r\n        var charLength = scale * measureAndCacheTextWidth(font, chunk, cache) - chunkLength;\r\n        chunkLength += charLength;\r\n        var charM = startM + charLength / 2;\r\n        while (offset < end - stride && segmentM + segmentLength < charM) {\r\n            x1 = x2;\r\n            y1 = y2;\r\n            offset += stride;\r\n            x2 = flatCoordinates[offset];\r\n            y2 = flatCoordinates[offset + 1];\r\n            segmentM += segmentLength;\r\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\r\n        }\r\n        var segmentPos = charM - segmentM;\r\n        var angle = Math.atan2(y2 - y1, x2 - x1);\r\n        if (reverse) {\r\n            angle += angle > 0 ? -Math.PI : Math.PI;\r\n        }\r\n        if (previousAngle !== undefined) {\r\n            var delta = angle - previousAngle;\r\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\r\n            if (Math.abs(delta) > maxAngle) {\r\n                return null;\r\n            }\r\n        }\r\n        var interpolate = segmentPos / segmentLength;\r\n        var x = lerp(x1, x2, interpolate);\r\n        var y = lerp(y1, y2, interpolate);\r\n        if (previousAngle == angle) {\r\n            if (reverse) {\r\n                data[0] = x;\r\n                data[1] = y;\r\n                data[2] = charLength / 2;\r\n            }\r\n            data[4] = chunk;\r\n        }\r\n        else {\r\n            chunk = char;\r\n            chunkLength = charLength;\r\n            data = [x, y, charLength / 2, angle, chunk];\r\n            if (reverse) {\r\n                result.unshift(data);\r\n            }\r\n            else {\r\n                result.push(data);\r\n            }\r\n            previousAngle = angle;\r\n        }\r\n        startM += charLength;\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=textpath.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/render/canvas/Executor\r\n */\r\nimport { getUid } from '../../util.js';\r\nimport { equals } from '../../array.js';\r\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\r\nimport { lineStringLength } from '../../geom/flat/length.js';\r\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\r\nimport { transform2D } from '../../geom/flat/transform.js';\r\nimport { isEmpty } from '../../obj.js';\r\nimport { drawImage, resetTransform, defaultPadding, defaultTextBaseline } from '../canvas.js';\r\nimport CanvasInstruction from './Instruction.js';\r\nimport { TEXT_ALIGN } from './TextBuilder.js';\r\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\r\nimport { createCanvasContext2D } from '../../dom.js';\r\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\r\nimport Disposable from '../../Disposable.js';\r\n/**\r\n * @typedef {Object} SerializableInstructions\r\n * @property {Array<*>} instructions The rendering instructions.\r\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\r\n * @property {Array<number>} coordinates The array of all coordinates.\r\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\r\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\r\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\r\n */\r\n/**\r\n * @type {import(\"../../extent.js\").Extent}\r\n */\r\nvar tmpExtent = createEmpty();\r\n/**\r\n * @type {!import(\"../../transform.js\").Transform}\r\n */\r\nvar tmpTransform = createTransform();\r\n/** @type {import(\"../../coordinate.js\").Coordinate} */\r\nvar p1 = [];\r\n/** @type {import(\"../../coordinate.js\").Coordinate} */\r\nvar p2 = [];\r\n/** @type {import(\"../../coordinate.js\").Coordinate} */\r\nvar p3 = [];\r\n/** @type {import(\"../../coordinate.js\").Coordinate} */\r\nvar p4 = [];\r\nvar Executor = /** @class */ (function (_super) {\r\n    __extends(Executor, _super);\r\n    /**\r\n     * @param {number} resolution Resolution.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {boolean} overlaps The replay can have overlapping geometries.\r\n     * @param {?} declutterTree Declutter tree.\r\n     * @param {SerializableInstructions} instructions The serializable instructions\r\n     */\r\n    function Executor(resolution, pixelRatio, overlaps, declutterTree, instructions) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @type {?}\r\n         */\r\n        _this.declutterTree = declutterTree;\r\n        /**\r\n         * @protected\r\n         * @type {boolean}\r\n         */\r\n        _this.overlaps = overlaps;\r\n        /**\r\n         * @protected\r\n         * @type {number}\r\n         */\r\n        _this.pixelRatio = pixelRatio;\r\n        /**\r\n         * @protected\r\n         * @const\r\n         * @type {number}\r\n         */\r\n        _this.resolution = resolution;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.alignFill_;\r\n        /**\r\n         * @protected\r\n         * @type {Array<*>}\r\n         */\r\n        _this.instructions = instructions.instructions;\r\n        /**\r\n         * @protected\r\n         * @type {Array<number>}\r\n         */\r\n        _this.coordinates = instructions.coordinates;\r\n        /**\r\n         * @private\r\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\r\n         */\r\n        _this.coordinateCache_ = {};\r\n        /**\r\n         * @private\r\n         * @type {!import(\"../../transform.js\").Transform}\r\n         */\r\n        _this.renderedTransform_ = createTransform();\r\n        /**\r\n         * @protected\r\n         * @type {Array<*>}\r\n         */\r\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        _this.pixelCoordinates_ = null;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.viewRotation_ = 0;\r\n        /**\r\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\r\n         */\r\n        _this.fillStates = instructions.fillStates || {};\r\n        /**\r\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\r\n         */\r\n        _this.strokeStates = instructions.strokeStates || {};\r\n        /**\r\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\r\n         */\r\n        _this.textStates = instructions.textStates || {};\r\n        /**\r\n         * @private\r\n         * @type {Object<string, Object<string, number>>}\r\n         */\r\n        _this.widths_ = {};\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Executor.prototype.disposeInternal = function () {\r\n        labelCache.release(this);\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    /**\r\n     * @param {string} text Text.\r\n     * @param {string} textKey Text style key.\r\n     * @param {string} fillKey Fill style key.\r\n     * @param {string} strokeKey Stroke style key.\r\n     * @return {HTMLCanvasElement} Image.\r\n     */\r\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\r\n        var label;\r\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\r\n        if (!labelCache.containsKey(key)) {\r\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\r\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\r\n            var textState = this.textStates[textKey];\r\n            var pixelRatio = this.pixelRatio;\r\n            var scale = textState.scale * pixelRatio;\r\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\r\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\r\n            var lines = text.split('\\n');\r\n            var numLines = lines.length;\r\n            var widths = [];\r\n            var width = measureTextWidths(textState.font, lines, widths);\r\n            var lineHeight = measureTextHeight(textState.font);\r\n            var height = lineHeight * numLines;\r\n            var renderWidth = (width + strokeWidth);\r\n            var context = createCanvasContext2D(Math.ceil(renderWidth * scale), Math.ceil((height + strokeWidth) * scale));\r\n            label = context.canvas;\r\n            labelCache.set(key, label);\r\n            if (scale != 1) {\r\n                context.scale(scale, scale);\r\n            }\r\n            context.font = textState.font;\r\n            if (strokeKey) {\r\n                context.strokeStyle = strokeState.strokeStyle;\r\n                context.lineWidth = strokeWidth;\r\n                context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\r\n                context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\r\n                context.miterLimit = strokeState.miterLimit;\r\n                if (context.setLineDash && strokeState.lineDash.length) {\r\n                    context.setLineDash(strokeState.lineDash);\r\n                    context.lineDashOffset = strokeState.lineDashOffset;\r\n                }\r\n            }\r\n            if (fillKey) {\r\n                context.fillStyle = fillState.fillStyle;\r\n            }\r\n            context.textBaseline = 'middle';\r\n            context.textAlign = 'center';\r\n            var leftRight = (0.5 - align);\r\n            var x = align * label.width / scale + leftRight * strokeWidth;\r\n            var i = void 0;\r\n            if (strokeKey) {\r\n                for (i = 0; i < numLines; ++i) {\r\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\r\n                }\r\n            }\r\n            if (fillKey) {\r\n                for (i = 0; i < numLines; ++i) {\r\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\r\n                }\r\n            }\r\n        }\r\n        return labelCache.get(key, this);\r\n    };\r\n    /**\r\n     * @param {CanvasRenderingContext2D} context Context.\r\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\r\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\r\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\r\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\r\n     * @param {Array<*>} fillInstruction Fill instruction.\r\n     * @param {Array<*>} strokeInstruction Stroke instruction.\r\n     */\r\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\r\n        context.beginPath();\r\n        context.moveTo.apply(context, p1);\r\n        context.lineTo.apply(context, p2);\r\n        context.lineTo.apply(context, p3);\r\n        context.lineTo.apply(context, p4);\r\n        context.lineTo.apply(context, p1);\r\n        if (fillInstruction) {\r\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\r\n            this.fill_(context);\r\n        }\r\n        if (strokeInstruction) {\r\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\r\n            context.stroke();\r\n        }\r\n    };\r\n    /**\r\n     * @param {CanvasRenderingContext2D} context Context.\r\n     * @param {number} x X.\r\n     * @param {number} y Y.\r\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\r\n     * @param {number} anchorX Anchor X.\r\n     * @param {number} anchorY Anchor Y.\r\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\r\n     * @param {number} height Height.\r\n     * @param {number} opacity Opacity.\r\n     * @param {number} originX Origin X.\r\n     * @param {number} originY Origin Y.\r\n     * @param {number} rotation Rotation.\r\n     * @param {number} scale Scale.\r\n     * @param {boolean} snapToPixel Snap to pixel.\r\n     * @param {number} width Width.\r\n     * @param {Array<number>} padding Padding.\r\n     * @param {Array<*>} fillInstruction Fill instruction.\r\n     * @param {Array<*>} strokeInstruction Stroke instruction.\r\n     */\r\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\r\n        var fillStroke = fillInstruction || strokeInstruction;\r\n        anchorX *= scale;\r\n        anchorY *= scale;\r\n        x -= anchorX;\r\n        y -= anchorY;\r\n        var w = (width + originX > image.width) ? image.width - originX : width;\r\n        var h = (height + originY > image.height) ? image.height - originY : height;\r\n        var boxW = padding[3] + w * scale + padding[1];\r\n        var boxH = padding[0] + h * scale + padding[2];\r\n        var boxX = x - padding[3];\r\n        var boxY = y - padding[0];\r\n        if (fillStroke || rotation !== 0) {\r\n            p1[0] = p4[0] = boxX;\r\n            p1[1] = p2[1] = boxY;\r\n            p2[0] = p3[0] = boxX + boxW;\r\n            p3[1] = p4[1] = boxY + boxH;\r\n        }\r\n        var transform = null;\r\n        if (rotation !== 0) {\r\n            var centerX = x + anchorX;\r\n            var centerY = y + anchorY;\r\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\r\n            applyTransform(tmpTransform, p1);\r\n            applyTransform(tmpTransform, p2);\r\n            applyTransform(tmpTransform, p3);\r\n            applyTransform(tmpTransform, p4);\r\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\r\n        }\r\n        else {\r\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\r\n        }\r\n        var canvas = context.canvas;\r\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\r\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\r\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\r\n        if (snapToPixel) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n        if (declutterGroup) {\r\n            if (!intersects && declutterGroup[4] == 1) {\r\n                return;\r\n            }\r\n            extend(declutterGroup, tmpExtent);\r\n            var declutterArgs = intersects ?\r\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\r\n                null;\r\n            if (declutterArgs && fillStroke) {\r\n                declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\r\n            }\r\n            declutterGroup.push(declutterArgs);\r\n        }\r\n        else if (intersects) {\r\n            if (fillStroke) {\r\n                this.replayTextBackground_(context, p1, p2, p3, p4, \r\n                /** @type {Array<*>} */ (fillInstruction), \r\n                /** @type {Array<*>} */ (strokeInstruction));\r\n            }\r\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} context Context.\r\n     */\r\n    Executor.prototype.fill_ = function (context) {\r\n        if (this.alignFill_) {\r\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\r\n            var repeatSize = 512 * this.pixelRatio;\r\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\r\n            context.rotate(this.viewRotation_);\r\n        }\r\n        context.fill();\r\n        if (this.alignFill_) {\r\n            context.setTransform.apply(context, resetTransform);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} context Context.\r\n     * @param {Array<*>} instruction Instruction.\r\n     */\r\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\r\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\r\n        context.lineWidth = /** @type {number} */ (instruction[2]);\r\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\r\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\r\n        context.miterLimit = /** @type {number} */ (instruction[5]);\r\n        if (context.setLineDash) {\r\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\r\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\r\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n     */\r\n    Executor.prototype.renderDeclutter_ = function (declutterGroup, feature) {\r\n        if (declutterGroup && declutterGroup.length > 5) {\r\n            var groupCount = declutterGroup[4];\r\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\r\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\r\n                var box = {\r\n                    minX: /** @type {number} */ (declutterGroup[0]),\r\n                    minY: /** @type {number} */ (declutterGroup[1]),\r\n                    maxX: /** @type {number} */ (declutterGroup[2]),\r\n                    maxY: /** @type {number} */ (declutterGroup[3]),\r\n                    value: feature\r\n                };\r\n                if (!this.declutterTree.collides(box)) {\r\n                    this.declutterTree.insert(box);\r\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\r\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\r\n                        if (declutterData) {\r\n                            if (declutterData.length > 11) {\r\n                                this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\r\n                            }\r\n                            drawImage.apply(undefined, declutterData);\r\n                        }\r\n                    }\r\n                }\r\n                declutterGroup.length = 5;\r\n                createOrUpdateEmpty(declutterGroup);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {string} text The text to draw.\r\n     * @param {string} textKey The key of the text state.\r\n     * @param {string} strokeKey The key for the stroke state.\r\n     * @param {string} fillKey The key for the fill state.\r\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\r\n     */\r\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\r\n        var textState = this.textStates[textKey];\r\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\r\n        var strokeState = this.strokeStates[strokeKey];\r\n        var pixelRatio = this.pixelRatio;\r\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\r\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\r\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\r\n        var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\r\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\r\n        return {\r\n            label: label,\r\n            anchorX: anchorX,\r\n            anchorY: anchorY\r\n        };\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {CanvasRenderingContext2D} context Context.\r\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\r\n     *     to skip.\r\n     * @param {Array<*>} instructions Instructions array.\r\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\r\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\r\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\r\n     *     extent.\r\n     * @return {T|undefined} Callback result.\r\n     * @template T\r\n     */\r\n    Executor.prototype.execute_ = function (context, transform, skippedFeaturesHash, instructions, snapToPixel, featureCallback, opt_hitExtent) {\r\n        /** @type {Array<number>} */\r\n        var pixelCoordinates;\r\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\r\n            pixelCoordinates = this.pixelCoordinates_;\r\n        }\r\n        else {\r\n            if (!this.pixelCoordinates_) {\r\n                this.pixelCoordinates_ = [];\r\n            }\r\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\r\n            transformSetFromArray(this.renderedTransform_, transform);\r\n        }\r\n        var skipFeatures = !isEmpty(skippedFeaturesHash);\r\n        var i = 0; // instruction index\r\n        var ii = instructions.length; // end of instructions\r\n        var d = 0; // data index\r\n        var dd; // end of per-instruction data\r\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\r\n        var strokeKey, fillKey;\r\n        var pendingFill = 0;\r\n        var pendingStroke = 0;\r\n        var lastFillInstruction = null;\r\n        var lastStrokeInstruction = null;\r\n        var coordinateCache = this.coordinateCache_;\r\n        var viewRotation = this.viewRotation_;\r\n        var state = /** @type {import(\"../../render.js\").State} */ ({\r\n            context: context,\r\n            pixelRatio: this.pixelRatio,\r\n            resolution: this.resolution,\r\n            rotation: viewRotation\r\n        });\r\n        // When the batch size gets too big, performance decreases. 200 is a good\r\n        // balance between batch size and number of fill/stroke instructions.\r\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\r\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\r\n        var x, y;\r\n        while (i < ii) {\r\n            var instruction = instructions[i];\r\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\r\n            switch (type) {\r\n                case CanvasInstruction.BEGIN_GEOMETRY:\r\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\r\n                    if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\r\n                        i = /** @type {number} */ (instruction[2]);\r\n                    }\r\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, feature.getGeometry().getExtent())) {\r\n                        i = /** @type {number} */ (instruction[2]) + 1;\r\n                    }\r\n                    else {\r\n                        ++i;\r\n                    }\r\n                    break;\r\n                case CanvasInstruction.BEGIN_PATH:\r\n                    if (pendingFill > batchSize) {\r\n                        this.fill_(context);\r\n                        pendingFill = 0;\r\n                    }\r\n                    if (pendingStroke > batchSize) {\r\n                        context.stroke();\r\n                        pendingStroke = 0;\r\n                    }\r\n                    if (!pendingFill && !pendingStroke) {\r\n                        context.beginPath();\r\n                        prevX = prevY = NaN;\r\n                    }\r\n                    ++i;\r\n                    break;\r\n                case CanvasInstruction.CIRCLE:\r\n                    d = /** @type {number} */ (instruction[1]);\r\n                    var x1 = pixelCoordinates[d];\r\n                    var y1 = pixelCoordinates[d + 1];\r\n                    var x2 = pixelCoordinates[d + 2];\r\n                    var y2 = pixelCoordinates[d + 3];\r\n                    var dx = x2 - x1;\r\n                    var dy = y2 - y1;\r\n                    var r = Math.sqrt(dx * dx + dy * dy);\r\n                    context.moveTo(x1 + r, y1);\r\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\r\n                    ++i;\r\n                    break;\r\n                case CanvasInstruction.CLOSE_PATH:\r\n                    context.closePath();\r\n                    ++i;\r\n                    break;\r\n                case CanvasInstruction.CUSTOM:\r\n                    d = /** @type {number} */ (instruction[1]);\r\n                    dd = instruction[2];\r\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\r\n                    var renderer = instruction[4];\r\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\r\n                    state.geometry = geometry;\r\n                    state.feature = feature;\r\n                    if (!(i in coordinateCache)) {\r\n                        coordinateCache[i] = [];\r\n                    }\r\n                    var coords = coordinateCache[i];\r\n                    if (fn) {\r\n                        fn(pixelCoordinates, d, dd, 2, coords);\r\n                    }\r\n                    else {\r\n                        coords[0] = pixelCoordinates[d];\r\n                        coords[1] = pixelCoordinates[d + 1];\r\n                        coords.length = 2;\r\n                    }\r\n                    renderer(coords, state);\r\n                    ++i;\r\n                    break;\r\n                case CanvasInstruction.DRAW_IMAGE:\r\n                    d = /** @type {number} */ (instruction[1]);\r\n                    dd = /** @type {number} */ (instruction[2]);\r\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\r\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\r\n                    anchorX = /** @type {number} */ (instruction[4]);\r\n                    anchorY = /** @type {number} */ (instruction[5]);\r\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\r\n                    var height = /** @type {number} */ (instruction[7]);\r\n                    var opacity = /** @type {number} */ (instruction[8]);\r\n                    var originX = /** @type {number} */ (instruction[9]);\r\n                    var originY = /** @type {number} */ (instruction[10]);\r\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\r\n                    var rotation = /** @type {number} */ (instruction[12]);\r\n                    var scale = /** @type {number} */ (instruction[13]);\r\n                    var width = /** @type {number} */ (instruction[14]);\r\n                    if (!image && instruction.length >= 19) {\r\n                        // create label images\r\n                        text = /** @type {string} */ (instruction[18]);\r\n                        textKey = /** @type {string} */ (instruction[19]);\r\n                        strokeKey = /** @type {string} */ (instruction[20]);\r\n                        fillKey = /** @type {string} */ (instruction[21]);\r\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\r\n                        image = instruction[3] = labelWithAnchor.label;\r\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\r\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\r\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\r\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\r\n                        height = instruction[7] = image.height;\r\n                        width = instruction[14] = image.width;\r\n                    }\r\n                    var geometryWidths = void 0;\r\n                    if (instruction.length > 24) {\r\n                        geometryWidths = /** @type {number} */ (instruction[24]);\r\n                    }\r\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\r\n                    if (instruction.length > 16) {\r\n                        padding = /** @type {Array<number>} */ (instruction[15]);\r\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\r\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\r\n                    }\r\n                    else {\r\n                        padding = defaultPadding;\r\n                        backgroundFill = backgroundStroke = false;\r\n                    }\r\n                    if (rotateWithView) {\r\n                        rotation += viewRotation;\r\n                    }\r\n                    var widthIndex = 0;\r\n                    for (; d < dd; d += 2) {\r\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\r\n                            continue;\r\n                        }\r\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\r\n                    }\r\n                    this.renderDeclutter_(declutterGroup, feature);\r\n                    ++i;\r\n                    break;\r\n                case CanvasInstruction.DRAW_CHARS:\r\n                    var begin = /** @type {number} */ (instruction[1]);\r\n                    var end = /** @type {number} */ (instruction[2]);\r\n                    var baseline = /** @type {number} */ (instruction[3]);\r\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\r\n                    var overflow = /** @type {number} */ (instruction[5]);\r\n                    fillKey = /** @type {string} */ (instruction[6]);\r\n                    var maxAngle = /** @type {number} */ (instruction[7]);\r\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\r\n                    var offsetY = /** @type {number} */ (instruction[9]);\r\n                    strokeKey = /** @type {string} */ (instruction[10]);\r\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\r\n                    text = /** @type {string} */ (instruction[12]);\r\n                    textKey = /** @type {string} */ (instruction[13]);\r\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\r\n                    var textState = this.textStates[textKey];\r\n                    var font = textState.font;\r\n                    var textScale = textState.scale * measurePixelRatio;\r\n                    var cachedWidths = void 0;\r\n                    if (font in this.widths_) {\r\n                        cachedWidths = this.widths_[font];\r\n                    }\r\n                    else {\r\n                        cachedWidths = this.widths_[font] = {};\r\n                    }\r\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\r\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\r\n                    if (overflow || textLength <= pathLength) {\r\n                        var textAlign = this.textStates[textKey].textAlign;\r\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\r\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\r\n                        if (parts) {\r\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\r\n                            if (strokeKey) {\r\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\r\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\r\n                                    chars = /** @type {string} */ (part[4]);\r\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\r\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\r\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\r\n                                    this.replayImage_(context, \r\n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \r\n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\r\n                                }\r\n                            }\r\n                            if (fillKey) {\r\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\r\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\r\n                                    chars = /** @type {string} */ (part[4]);\r\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\r\n                                    anchorX = /** @type {number} */ (part[2]);\r\n                                    anchorY = baseline * label.height - offsetY;\r\n                                    this.replayImage_(context, \r\n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \r\n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    this.renderDeclutter_(declutterGroup, feature);\r\n                    ++i;\r\n                    break;\r\n                case CanvasInstruction.END_GEOMETRY:\r\n                    if (featureCallback !== undefined) {\r\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\r\n                        var result = featureCallback(feature);\r\n                        if (result) {\r\n                            return result;\r\n                        }\r\n                    }\r\n                    ++i;\r\n                    break;\r\n                case CanvasInstruction.FILL:\r\n                    if (batchSize) {\r\n                        pendingFill++;\r\n                    }\r\n                    else {\r\n                        this.fill_(context);\r\n                    }\r\n                    ++i;\r\n                    break;\r\n                case CanvasInstruction.MOVE_TO_LINE_TO:\r\n                    d = /** @type {number} */ (instruction[1]);\r\n                    dd = /** @type {number} */ (instruction[2]);\r\n                    x = pixelCoordinates[d];\r\n                    y = pixelCoordinates[d + 1];\r\n                    roundX = (x + 0.5) | 0;\r\n                    roundY = (y + 0.5) | 0;\r\n                    if (roundX !== prevX || roundY !== prevY) {\r\n                        context.moveTo(x, y);\r\n                        prevX = roundX;\r\n                        prevY = roundY;\r\n                    }\r\n                    for (d += 2; d < dd; d += 2) {\r\n                        x = pixelCoordinates[d];\r\n                        y = pixelCoordinates[d + 1];\r\n                        roundX = (x + 0.5) | 0;\r\n                        roundY = (y + 0.5) | 0;\r\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\r\n                            context.lineTo(x, y);\r\n                            prevX = roundX;\r\n                            prevY = roundY;\r\n                        }\r\n                    }\r\n                    ++i;\r\n                    break;\r\n                case CanvasInstruction.SET_FILL_STYLE:\r\n                    lastFillInstruction = instruction;\r\n                    this.alignFill_ = instruction[2];\r\n                    if (pendingFill) {\r\n                        this.fill_(context);\r\n                        pendingFill = 0;\r\n                        if (pendingStroke) {\r\n                            context.stroke();\r\n                            pendingStroke = 0;\r\n                        }\r\n                    }\r\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\r\n                    ++i;\r\n                    break;\r\n                case CanvasInstruction.SET_STROKE_STYLE:\r\n                    lastStrokeInstruction = instruction;\r\n                    if (pendingStroke) {\r\n                        context.stroke();\r\n                        pendingStroke = 0;\r\n                    }\r\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\r\n                    ++i;\r\n                    break;\r\n                case CanvasInstruction.STROKE:\r\n                    if (batchSize) {\r\n                        pendingStroke++;\r\n                    }\r\n                    else {\r\n                        context.stroke();\r\n                    }\r\n                    ++i;\r\n                    break;\r\n                default:\r\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\r\n                    break;\r\n            }\r\n        }\r\n        if (pendingFill) {\r\n            this.fill_(context);\r\n        }\r\n        if (pendingStroke) {\r\n            context.stroke();\r\n        }\r\n        return undefined;\r\n    };\r\n    /**\r\n     * @param {CanvasRenderingContext2D} context Context.\r\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n     * @param {number} viewRotation View rotation.\r\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\r\n     *     to skip.\r\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\r\n     */\r\n    Executor.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\r\n        this.viewRotation_ = viewRotation;\r\n        this.execute_(context, transform, skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\r\n    };\r\n    /**\r\n     * @param {CanvasRenderingContext2D} context Context.\r\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n     * @param {number} viewRotation View rotation.\r\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\r\n     *     to skip.\r\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\r\n     *     Feature callback.\r\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\r\n     *     extent.\r\n     * @return {T|undefined} Callback result.\r\n     * @template T\r\n     */\r\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, skippedFeaturesHash, opt_featureCallback, opt_hitExtent) {\r\n        this.viewRotation_ = viewRotation;\r\n        return this.execute_(context, transform, skippedFeaturesHash, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\r\n    };\r\n    return Executor;\r\n}(Disposable));\r\nexport default Executor;\r\n//# sourceMappingURL=Executor.js.map","/**\r\n * @module ol/render/canvas/ExecutorGroup\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { numberSafeCompareFunction } from '../../array.js';\r\nimport { createCanvasContext2D } from '../../dom.js';\r\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\r\nimport { transform2D } from '../../geom/flat/transform.js';\r\nimport { isEmpty } from '../../obj.js';\r\nimport BuilderType from './BuilderType.js';\r\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\r\nimport Executor from './Executor.js';\r\nimport Disposable from '../../Disposable.js';\r\n/**\r\n * @const\r\n * @type {Array<BuilderType>}\r\n */\r\nvar ORDER = [\r\n    BuilderType.POLYGON,\r\n    BuilderType.CIRCLE,\r\n    BuilderType.LINE_STRING,\r\n    BuilderType.IMAGE,\r\n    BuilderType.TEXT,\r\n    BuilderType.DEFAULT\r\n];\r\nvar ExecutorGroup = /** @class */ (function (_super) {\r\n    __extends(ExecutorGroup, _super);\r\n    /**\r\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\r\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\r\n     * should be set here, unless the target context does not exceet that extent (which\r\n     * can be the case when rendering to tiles).\r\n     * @param {number} resolution Resolution.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\r\n     * @param {?} declutterTree Declutter tree for declutter processing in postrender.\r\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\r\n     * The serializable instructions.\r\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\r\n     */\r\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, declutterTree, allInstructions, opt_renderBuffer) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Declutter tree.\r\n         * @private\r\n         */\r\n        _this.declutterTree_ = declutterTree;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../../extent.js\").Extent}\r\n         */\r\n        _this.maxExtent_ = maxExtent;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.overlaps_ = overlaps;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.pixelRatio_ = pixelRatio;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.resolution_ = resolution;\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.renderBuffer_ = opt_renderBuffer;\r\n        /**\r\n         * @private\r\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\r\n         */\r\n        _this.executorsByZIndex_ = {};\r\n        /**\r\n         * @private\r\n         * @type {CanvasRenderingContext2D}\r\n         */\r\n        _this.hitDetectionContext_ = createCanvasContext2D(1, 1);\r\n        /**\r\n         * @private\r\n         * @type {import(\"../../transform.js\").Transform}\r\n         */\r\n        _this.hitDetectionTransform_ = createTransform();\r\n        _this.createExecutors_(allInstructions);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {CanvasRenderingContext2D} context Context.\r\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n     */\r\n    ExecutorGroup.prototype.clip = function (context, transform) {\r\n        var flatClipCoords = this.getClipCoords(transform);\r\n        context.beginPath();\r\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\r\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\r\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\r\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\r\n        context.clip();\r\n    };\r\n    /**\r\n     * Create executors and populate them using the provided instructions.\r\n     * @private\r\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\r\n     */\r\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\r\n        for (var zIndex in allInstructions) {\r\n            var executors = this.executorsByZIndex_[zIndex];\r\n            if (executors === undefined) {\r\n                this.executorsByZIndex_[zIndex] = executors = {};\r\n            }\r\n            var instructionByZindex = allInstructions[zIndex];\r\n            for (var builderType in instructionByZindex) {\r\n                var instructions = instructionByZindex[builderType];\r\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_, instructions);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ExecutorGroup.prototype.disposeInternal = function () {\r\n        for (var z in this.executorsByZIndex_) {\r\n            var executors = this.executorsByZIndex_[z];\r\n            for (var key in executors) {\r\n                executors[key].disposeInternal();\r\n            }\r\n        }\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    /**\r\n     * @param {Array<BuilderType>} executors Executors.\r\n     * @return {boolean} Has executors of the provided types.\r\n     */\r\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\r\n        for (var zIndex in this.executorsByZIndex_) {\r\n            var candidates = this.executorsByZIndex_[zIndex];\r\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\r\n                if (executors[i] in candidates) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @param {number} resolution Resolution.\r\n     * @param {number} rotation Rotation.\r\n     * @param {number} hitTolerance Hit tolerance in pixels.\r\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\r\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\r\n     * @return {T|undefined} Callback result.\r\n     * @template T\r\n     */\r\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\r\n        hitTolerance = Math.round(hitTolerance);\r\n        var contextSize = hitTolerance * 2 + 1;\r\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\r\n        var context = this.hitDetectionContext_;\r\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\r\n            context.canvas.width = contextSize;\r\n            context.canvas.height = contextSize;\r\n        }\r\n        else {\r\n            context.clearRect(0, 0, contextSize, contextSize);\r\n        }\r\n        /**\r\n         * @type {import(\"../../extent.js\").Extent}\r\n         */\r\n        var hitExtent;\r\n        if (this.renderBuffer_ !== undefined) {\r\n            hitExtent = createEmpty();\r\n            extendCoordinate(hitExtent, coordinate);\r\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\r\n        }\r\n        var mask = getCircleArray(hitTolerance);\r\n        var declutteredFeatures;\r\n        if (this.declutterTree_) {\r\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\r\n                return entry.value;\r\n            });\r\n        }\r\n        var builderType;\r\n        /**\r\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n         * @return {?} Callback result.\r\n         */\r\n        function featureCallback(feature) {\r\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\r\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\r\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\r\n                    if (mask[i_1][j_1]) {\r\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\r\n                            var result_1 = void 0;\r\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\r\n                                declutteredFeatures.indexOf(feature) !== -1) {\r\n                                result_1 = callback(feature);\r\n                            }\r\n                            if (result_1) {\r\n                                return result_1;\r\n                            }\r\n                            else {\r\n                                context.clearRect(0, 0, contextSize, contextSize);\r\n                                return undefined;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        /** @type {Array<number>} */\r\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\r\n        zs.sort(numberSafeCompareFunction);\r\n        var i, j, executors, executor, result;\r\n        for (i = zs.length - 1; i >= 0; --i) {\r\n            var zIndexKey = zs[i].toString();\r\n            executors = this.executorsByZIndex_[zIndexKey];\r\n            for (j = ORDER.length - 1; j >= 0; --j) {\r\n                builderType = ORDER[j];\r\n                executor = executors[builderType];\r\n                if (executor !== undefined) {\r\n                    if (declutterReplays &&\r\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\r\n                        var declutter = declutterReplays[zIndexKey];\r\n                        if (!declutter) {\r\n                            declutterReplays[zIndexKey] = [executor, transform.slice(0)];\r\n                        }\r\n                        else {\r\n                            declutter.push(executor, transform.slice(0));\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = executor.executeHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\r\n                        if (result) {\r\n                            return result;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    /**\r\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n     * @return {Array<number>} Clip coordinates.\r\n     */\r\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\r\n        var maxExtent = this.maxExtent_;\r\n        if (!maxExtent) {\r\n            return null;\r\n        }\r\n        var minX = maxExtent[0];\r\n        var minY = maxExtent[1];\r\n        var maxX = maxExtent[2];\r\n        var maxY = maxExtent[3];\r\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\r\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\r\n        return flatClipCoords;\r\n    };\r\n    /**\r\n     * @param {number|undefined} zIndex Z index.\r\n     * @param {import(\"./BuilderType.js\").default} builderType Builder type.\r\n     * @return {import(\"../VectorContext.js\").default} Executor.\r\n     */\r\n    ExecutorGroup.prototype.getExecutor = function (zIndex, builderType) {\r\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\r\n        var executors = this.executorsByZIndex_[zIndexKey];\r\n        if (executors === undefined) {\r\n            executors = {};\r\n            this.executorsByZIndex_[zIndexKey] = executors;\r\n        }\r\n        var executor = executors[builderType];\r\n        if (executor === undefined) {\r\n            // FIXME: it should not be possible to ask for an executor that does not exist\r\n            executor = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, {\r\n                instructions: [],\r\n                hitDetectionInstructions: [],\r\n                coordinates: []\r\n            }, this.declutterTree_);\r\n            executors[builderType] = executor;\r\n        }\r\n        return executor;\r\n    };\r\n    /**\r\n     * @return {Object<string, Object<BuilderType, CanvasReplay>>} Replays.\r\n     */\r\n    ExecutorGroup.prototype.getExecutors = function () {\r\n        return this.executorsByZIndex_;\r\n    };\r\n    /**\r\n     * @return {boolean} Is empty.\r\n     */\r\n    ExecutorGroup.prototype.isEmpty = function () {\r\n        return isEmpty(this.executorsByZIndex_);\r\n    };\r\n    /**\r\n     * @param {CanvasRenderingContext2D} context Context.\r\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n     * @param {number} viewRotation View rotation.\r\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\r\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\r\n     *     Default is {@link module:ol/render/replay~ORDER}\r\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\r\n     */\r\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes, opt_declutterReplays) {\r\n        /** @type {Array<number>} */\r\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\r\n        zs.sort(numberSafeCompareFunction);\r\n        // setup clipping so that the parts of over-simplified geometries are not\r\n        // visible outside the current extent when panning\r\n        if (this.maxExtent_) {\r\n            context.save();\r\n            this.clip(context, transform);\r\n        }\r\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\r\n        var i, ii, j, jj, replays, replay;\r\n        for (i = 0, ii = zs.length; i < ii; ++i) {\r\n            var zIndexKey = zs[i].toString();\r\n            replays = this.executorsByZIndex_[zIndexKey];\r\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\r\n                var builderType = builderTypes[j];\r\n                replay = replays[builderType];\r\n                if (replay !== undefined) {\r\n                    if (opt_declutterReplays &&\r\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\r\n                        var declutter = opt_declutterReplays[zIndexKey];\r\n                        if (!declutter) {\r\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\r\n                        }\r\n                        else {\r\n                            declutter.push(replay, transform.slice(0));\r\n                        }\r\n                    }\r\n                    else {\r\n                        replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.maxExtent_) {\r\n            context.restore();\r\n        }\r\n    };\r\n    return ExecutorGroup;\r\n}(Disposable));\r\n/**\r\n * This cache is used for storing calculated pixel circles for increasing performance.\r\n * It is a static property to allow each Replaygroup to access it.\r\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\r\n */\r\nvar circleArrayCache = {\r\n    0: [[true]]\r\n};\r\n/**\r\n * This method fills a row in the array from the given coordinate to the\r\n * middle with `true`.\r\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\r\n * @param {number} x X coordinate.\r\n * @param {number} y Y coordinate.\r\n */\r\nfunction fillCircleArrayRowToMiddle(array, x, y) {\r\n    var i;\r\n    var radius = Math.floor(array.length / 2);\r\n    if (x >= radius) {\r\n        for (i = radius; i < x; i++) {\r\n            array[i][y] = true;\r\n        }\r\n    }\r\n    else if (x < radius) {\r\n        for (i = x + 1; i < radius; i++) {\r\n            array[i][y] = true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * This methods creates a circle inside a fitting array. Points inside the\r\n * circle are marked by true, points on the outside are undefined.\r\n * It uses the midpoint circle algorithm.\r\n * A cache is used to increase performance.\r\n * @param {number} radius Radius.\r\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\r\n */\r\nexport function getCircleArray(radius) {\r\n    if (circleArrayCache[radius] !== undefined) {\r\n        return circleArrayCache[radius];\r\n    }\r\n    var arraySize = radius * 2 + 1;\r\n    var arr = new Array(arraySize);\r\n    for (var i = 0; i < arraySize; i++) {\r\n        arr[i] = new Array(arraySize);\r\n    }\r\n    var x = radius;\r\n    var y = 0;\r\n    var error = 0;\r\n    while (x >= y) {\r\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\r\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\r\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\r\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\r\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\r\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\r\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\r\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\r\n        y++;\r\n        error += 1 + 2 * y;\r\n        if (2 * (error - x) + 1 > 0) {\r\n            x -= 1;\r\n            error += 1 - 2 * x;\r\n        }\r\n    }\r\n    circleArrayCache[radius] = arr;\r\n    return arr;\r\n}\r\n/**\r\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\r\n * @param {CanvasRenderingContext2D} context Context.\r\n * @param {number} rotation Rotation.\r\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\r\n */\r\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\r\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\r\n    var skippedFeatureUids = {};\r\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\r\n        var executorData = declutterReplays[zs[z].toString()];\r\n        for (var i = 0, ii = executorData.length; i < ii;) {\r\n            var executor = executorData[i++];\r\n            var transform = executorData[i++];\r\n            executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\r\n        }\r\n    }\r\n}\r\nexport default ExecutorGroup;\r\n//# sourceMappingURL=ExecutorGroup.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/renderer/Layer\r\n */\r\nimport { getUid, abstract } from '../util.js';\r\nimport ImageState from '../ImageState.js';\r\nimport Observable from '../Observable.js';\r\nimport TileState from '../TileState.js';\r\nimport { listen } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport SourceState from '../source/State.js';\r\nvar LayerRenderer = /** @class */ (function (_super) {\r\n    __extends(LayerRenderer, _super);\r\n    /**\r\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n     */\r\n    function LayerRenderer(layer) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../layer/Layer.js\").default}\r\n         */\r\n        _this.layer_ = layer;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Determine whether render should be called.\r\n     * @abstract\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\r\n     * @return {boolean} Layer is ready to be rendered.\r\n     */\r\n    LayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Render the layer.\r\n     * @abstract\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\r\n     * @return {HTMLElement} The rendered element.\r\n     */\r\n    LayerRenderer.prototype.renderFrame = function (frameState, layerState) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\r\n     * @param {number} zoom Zoom level.\r\n     * @param {import(\"../Tile.js\").default} tile Tile.\r\n     */\r\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\r\n        if (!tiles[zoom]) {\r\n            tiles[zoom] = {};\r\n        }\r\n        tiles[zoom][tile.tileCoord.toString()] = tile;\r\n    };\r\n    /**\r\n     * Create a function that adds loaded tiles to the tile lookup.\r\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\r\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\r\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\r\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\r\n     * @protected\r\n     */\r\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\r\n        return (\r\n        /**\r\n         * @param {number} zoom Zoom level.\r\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\r\n         * @return {boolean} The tile range is fully loaded.\r\n         * @this {LayerRenderer}\r\n         */\r\n        function (zoom, tileRange) {\r\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\r\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\r\n        }).bind(this);\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @param {number} hitTolerance Hit tolerance in pixels.\r\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\r\n     * @return {T|void} Callback result.\r\n     * @template T\r\n     */\r\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback) { };\r\n    /**\r\n     * @abstract\r\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n     * @param {number} hitTolerance Hit tolerance in pixels.\r\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\r\n     *    location, null will be returned.  If there is data, but pixel values cannot be\r\n     *    returned, and empty array will be returned.\r\n     */\r\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * @return {import(\"../layer/Layer.js\").default} Layer.\r\n     */\r\n    LayerRenderer.prototype.getLayer = function () {\r\n        return this.layer_;\r\n    };\r\n    /**\r\n     * Handle changes in image state.\r\n     * @param {import(\"../events/Event.js\").default} event Image change event.\r\n     * @private\r\n     */\r\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\r\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\r\n        if (image.getState() === ImageState.LOADED) {\r\n            this.renderIfReadyAndVisible();\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @return {boolean} Is there a feature at the given coordinate?\r\n     */\r\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Load the image if not already loaded, and register the image change\r\n     * listener if needed.\r\n     * @param {import(\"../ImageBase.js\").default} image Image.\r\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\r\n     * @protected\r\n     */\r\n    LayerRenderer.prototype.loadImage = function (image) {\r\n        var imageState = image.getState();\r\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\r\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\r\n        }\r\n        if (imageState == ImageState.IDLE) {\r\n            image.load();\r\n            imageState = image.getState();\r\n        }\r\n        return imageState == ImageState.LOADED;\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\r\n        var layer = this.getLayer();\r\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\r\n            layer.changed();\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\r\n     * @protected\r\n     */\r\n    LayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\r\n        if (tileSource.canExpireCache()) {\r\n            /**\r\n             * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\r\n             * @param {import(\"../PluggableMap.js\").default} map Map.\r\n             * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n             */\r\n            var postRenderFunction = function (tileSource, map, frameState) {\r\n                var tileSourceKey = getUid(tileSource);\r\n                if (tileSourceKey in frameState.usedTiles) {\r\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\r\n                }\r\n            }.bind(null, tileSource);\r\n            frameState.postRenderFunctions.push(\r\n            /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\r\n     * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\r\n     * @param {import('../Tile.js').default} tile Tile.\r\n     * @protected\r\n     */\r\n    LayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\r\n        // FIXME should we use tilesToDrawByZ instead?\r\n        var tileSourceKey = getUid(tileSource);\r\n        if (!(tileSourceKey in usedTiles)) {\r\n            usedTiles[tileSourceKey] = {};\r\n        }\r\n        usedTiles[tileSourceKey][tile.getKey()] = true;\r\n    };\r\n    /**\r\n     * Manage tile pyramid.\r\n     * This function performs a number of functions related to the tiles at the\r\n     * current zoom and lower zoom levels:\r\n     * - registers idle tiles in frameState.wantedTiles so that they are not\r\n     *   discarded by the tile queue\r\n     * - enqueues missing tiles\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\r\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {number} currentZ Current Z.\r\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\r\n     * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\r\n     * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\r\n     * @protected\r\n     * @template T\r\n     */\r\n    LayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback, opt_this) {\r\n        var tileSourceKey = getUid(tileSource);\r\n        if (!(tileSourceKey in frameState.wantedTiles)) {\r\n            frameState.wantedTiles[tileSourceKey] = {};\r\n        }\r\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\r\n        var tileQueue = frameState.tileQueue;\r\n        var minZoom = tileGrid.getMinZoom();\r\n        var tile, tileRange, tileResolution, x, y, z;\r\n        for (z = minZoom; z <= currentZ; ++z) {\r\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\r\n            tileResolution = tileGrid.getResolution(z);\r\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\r\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\r\n                    if (currentZ - z <= preload) {\r\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\r\n                        if (tile.getState() == TileState.IDLE) {\r\n                            wantedTiles[tile.getKey()] = true;\r\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\r\n                                tileQueue.enqueue([tile, tileSourceKey,\r\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\r\n                            }\r\n                        }\r\n                        if (opt_tileCallback !== undefined) {\r\n                            opt_tileCallback.call(opt_this, tile);\r\n                        }\r\n                    }\r\n                    else {\r\n                        tileSource.useTile(z, x, y, projection);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return LayerRenderer;\r\n}(Observable));\r\nexport default LayerRenderer;\r\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/renderer/canvas/Layer\r\n */\r\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\r\nimport { createCanvasContext2D } from '../../dom.js';\r\nimport RenderEvent from '../../render/Event.js';\r\nimport RenderEventType from '../../render/EventType.js';\r\nimport { rotateAtOffset } from '../../render/canvas.js';\r\nimport LayerRenderer from '../Layer.js';\r\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\r\n/**\r\n * @abstract\r\n */\r\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\r\n    __extends(CanvasLayerRenderer, _super);\r\n    /**\r\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\r\n     */\r\n    function CanvasLayerRenderer(layer) {\r\n        var _this = _super.call(this, layer) || this;\r\n        /**\r\n         * @protected\r\n         * @type {number}\r\n         */\r\n        _this.renderedResolution;\r\n        /**\r\n         * A temporary transform.  The values in this transform should only be used in a\r\n         * function that sets the values.\r\n         * @private\r\n         * @type {import(\"../../transform.js\").Transform}\r\n         */\r\n        _this.tempTransform_ = createTransform();\r\n        /**\r\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\r\n         * be set when rendering a frame and may be used by other functions after rendering.\r\n         * @private\r\n         * @type {import(\"../../transform.js\").Transform}\r\n         */\r\n        _this.pixelTransform_ = createTransform();\r\n        /**\r\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\r\n         * be set when rendering a frame and may be used by other functions after rendering.\r\n         * @private\r\n         * @type {import(\"../../transform.js\").Transform}\r\n         */\r\n        _this.inversePixelTransform_ = createTransform();\r\n        /**\r\n         * @protected\r\n         * @type {CanvasRenderingContext2D}\r\n         */\r\n        _this.context = createCanvasContext2D();\r\n        var canvas = _this.context.canvas;\r\n        canvas.style.position = 'absolute';\r\n        canvas.style.transformOrigin = 'top left';\r\n        canvas.className = _this.getLayer().getClassName();\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {CanvasRenderingContext2D} context Context.\r\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\r\n     * @protected\r\n     */\r\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\r\n        var pixelRatio = frameState.pixelRatio;\r\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\r\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\r\n        var rotation = frameState.viewState.rotation;\r\n        var topLeft = getTopLeft(extent);\r\n        var topRight = getTopRight(extent);\r\n        var bottomRight = getBottomRight(extent);\r\n        var bottomLeft = getBottomLeft(extent);\r\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\r\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\r\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\r\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\r\n        context.save();\r\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\r\n        context.beginPath();\r\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\r\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\r\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\r\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\r\n        context.clip();\r\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\r\n    };\r\n    /**\r\n     * @param {CanvasRenderingContext2D} context Context.\r\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\r\n     * @protected\r\n     */\r\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\r\n        var topLeft = getTopLeft(extent);\r\n        var topRight = getTopRight(extent);\r\n        var bottomRight = getBottomRight(extent);\r\n        var bottomLeft = getBottomLeft(extent);\r\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\r\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\r\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\r\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\r\n        var inverted = this.inversePixelTransform_;\r\n        applyTransform(inverted, topLeft);\r\n        applyTransform(inverted, topRight);\r\n        applyTransform(inverted, bottomRight);\r\n        applyTransform(inverted, bottomLeft);\r\n        context.save();\r\n        context.beginPath();\r\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\r\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\r\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\r\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\r\n        context.clip();\r\n    };\r\n    /**\r\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\r\n     * @param {CanvasRenderingContext2D} context Context.\r\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @private\r\n     */\r\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\r\n        var layer = this.getLayer();\r\n        if (layer.hasListener(type)) {\r\n            var event_1 = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\r\n            layer.dispatchEvent(event_1);\r\n        }\r\n    };\r\n    /**\r\n     * @param {CanvasRenderingContext2D} context Context.\r\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @protected\r\n     */\r\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\r\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\r\n    };\r\n    /**\r\n     * @param {CanvasRenderingContext2D} context Context.\r\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @protected\r\n     */\r\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\r\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\r\n    };\r\n    /**\r\n     * Creates a transform for rendering to an element that will be rotated after rendering.\r\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @param {number} width Width of the rendered element (in pixels).\r\n     * @param {number} height Height of the rendered element (in pixels).\r\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\r\n     * @protected\r\n     * @return {!import(\"../../transform.js\").Transform} Transform.\r\n     */\r\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\r\n        var viewState = frameState.viewState;\r\n        var pixelRatio = frameState.pixelRatio;\r\n        var dx1 = width / 2;\r\n        var dy1 = height / 2;\r\n        var sx = pixelRatio / viewState.resolution;\r\n        var sy = -sx;\r\n        var dx2 = -viewState.center[0] + offsetX;\r\n        var dy2 = -viewState.center[1];\r\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\r\n    };\r\n    /**\r\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\r\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\r\n     * @param {number} hitTolerance Hit tolerance in pixels.\r\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\r\n     *    location, null will be returned.  If there is data, but pixel values cannot be\r\n     *    returned, and empty array will be returned.\r\n     */\r\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\r\n        var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\r\n        var context = this.context;\r\n        var data;\r\n        try {\r\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\r\n        }\r\n        catch (err) {\r\n            if (err.name === 'SecurityError') {\r\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\r\n                return new Uint8Array();\r\n            }\r\n            return data;\r\n        }\r\n        if (data[3] === 0) {\r\n            return null;\r\n        }\r\n        return data;\r\n    };\r\n    return CanvasLayerRenderer;\r\n}(LayerRenderer));\r\nexport default CanvasLayerRenderer;\r\n//# sourceMappingURL=Layer.js.map","/**\r\n * @module ol/renderer/vector\r\n */\r\nimport { getUid } from '../util.js';\r\nimport ImageState from '../ImageState.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport BuilderType from '../render/canvas/BuilderType.js';\r\n/**\r\n * Tolerance for geometry simplification in device pixels.\r\n * @type {number}\r\n */\r\nvar SIMPLIFY_TOLERANCE = 0.5;\r\n/**\r\n * @const\r\n * @type {Object<import(\"../geom/GeometryType.js\").default,\r\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\r\n *                         import(\"../style/Style.js\").default, Object): void>}\r\n */\r\nvar GEOMETRY_RENDERERS = {\r\n    'Point': renderPointGeometry,\r\n    'LineString': renderLineStringGeometry,\r\n    'Polygon': renderPolygonGeometry,\r\n    'MultiPoint': renderMultiPointGeometry,\r\n    'MultiLineString': renderMultiLineStringGeometry,\r\n    'MultiPolygon': renderMultiPolygonGeometry,\r\n    'GeometryCollection': renderGeometryCollectionGeometry,\r\n    'Circle': renderCircleGeometry\r\n};\r\n/**\r\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\r\n * @return {number} Order.\r\n */\r\nexport function defaultOrder(feature1, feature2) {\r\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\r\n}\r\n/**\r\n * @param {number} resolution Resolution.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @return {number} Squared pixel tolerance.\r\n */\r\nexport function getSquaredTolerance(resolution, pixelRatio) {\r\n    var tolerance = getTolerance(resolution, pixelRatio);\r\n    return tolerance * tolerance;\r\n}\r\n/**\r\n * @param {number} resolution Resolution.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @return {number} Pixel tolerance.\r\n */\r\nexport function getTolerance(resolution, pixelRatio) {\r\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\r\n}\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\r\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n */\r\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\r\n    var fillStyle = style.getFill();\r\n    var strokeStyle = style.getStroke();\r\n    if (fillStyle || strokeStyle) {\r\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\r\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n        circleReplay.drawCircle(geometry, feature);\r\n    }\r\n    var textStyle = style.getText();\r\n    if (textStyle) {\r\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\r\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\r\n        textReplay.drawText(geometry, feature);\r\n    }\r\n}\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\r\n * @param {T} thisArg Value to use as `this` when executing `listener`.\r\n * @return {boolean} `true` if style is loading.\r\n * @template T\r\n */\r\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\r\n    var loading = false;\r\n    var imageStyle = style.getImage();\r\n    if (imageStyle) {\r\n        var imageState = imageStyle.getImageState();\r\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\r\n            imageStyle.unlistenImageChange(listener, thisArg);\r\n        }\r\n        else {\r\n            if (imageState == ImageState.IDLE) {\r\n                imageStyle.load();\r\n            }\r\n            imageState = imageStyle.getImageState();\r\n            imageStyle.listenImageChange(listener, thisArg);\r\n            loading = true;\r\n        }\r\n    }\r\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\r\n    return loading;\r\n}\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n */\r\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\r\n    var geometry = style.getGeometryFunction()(feature);\r\n    if (!geometry) {\r\n        return;\r\n    }\r\n    var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\r\n    var renderer = style.getRenderer();\r\n    if (renderer) {\r\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\r\n    }\r\n    else {\r\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\r\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\r\n    }\r\n}\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderGeometry(replayGroup, geometry, style, feature) {\r\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\r\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\r\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n            renderGeometry(replayGroup, geometries[i], style, feature);\r\n        }\r\n        return;\r\n    }\r\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\r\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\r\n}\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n */\r\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\r\n    var geometries = geometry.getGeometriesArray();\r\n    var i, ii;\r\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\r\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\r\n        geometryRenderer(replayGroup, geometries[i], style, feature);\r\n    }\r\n}\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\r\n    var strokeStyle = style.getStroke();\r\n    if (strokeStyle) {\r\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\r\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\r\n        lineStringReplay.drawLineString(geometry, feature);\r\n    }\r\n    var textStyle = style.getText();\r\n    if (textStyle) {\r\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\r\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\r\n        textReplay.drawText(geometry, feature);\r\n    }\r\n}\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\r\n    var strokeStyle = style.getStroke();\r\n    if (strokeStyle) {\r\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\r\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\r\n        lineStringReplay.drawMultiLineString(geometry, feature);\r\n    }\r\n    var textStyle = style.getText();\r\n    if (textStyle) {\r\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\r\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\r\n        textReplay.drawText(geometry, feature);\r\n    }\r\n}\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n */\r\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\r\n    var fillStyle = style.getFill();\r\n    var strokeStyle = style.getStroke();\r\n    if (strokeStyle || fillStyle) {\r\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\r\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n        polygonReplay.drawMultiPolygon(geometry, feature);\r\n    }\r\n    var textStyle = style.getText();\r\n    if (textStyle) {\r\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\r\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\r\n        textReplay.drawText(geometry, feature);\r\n    }\r\n}\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\r\n    var imageStyle = style.getImage();\r\n    if (imageStyle) {\r\n        if (imageStyle.getImageState() != ImageState.LOADED) {\r\n            return;\r\n        }\r\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\r\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\r\n        imageReplay.drawPoint(geometry, feature);\r\n    }\r\n    var textStyle = style.getText();\r\n    if (textStyle) {\r\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\r\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\r\n        textReplay.drawText(geometry, feature);\r\n    }\r\n}\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\r\n    var imageStyle = style.getImage();\r\n    if (imageStyle) {\r\n        if (imageStyle.getImageState() != ImageState.LOADED) {\r\n            return;\r\n        }\r\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\r\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\r\n        imageReplay.drawMultiPoint(geometry, feature);\r\n    }\r\n    var textStyle = style.getText();\r\n    if (textStyle) {\r\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\r\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\r\n        textReplay.drawText(geometry, feature);\r\n    }\r\n}\r\n/**\r\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\r\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\r\n    var fillStyle = style.getFill();\r\n    var strokeStyle = style.getStroke();\r\n    if (fillStyle || strokeStyle) {\r\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\r\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n        polygonReplay.drawPolygon(geometry, feature);\r\n    }\r\n    var textStyle = style.getText();\r\n    if (textStyle) {\r\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\r\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\r\n        textReplay.drawText(geometry, feature);\r\n    }\r\n}\r\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/renderer/canvas/VectorLayer\r\n */\r\nimport { getUid } from '../../util.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport { listen, unlisten } from '../../events.js';\r\nimport EventType from '../../events/EventType.js';\r\nimport rbush from 'rbush';\r\nimport { buffer, createEmpty, containsExtent, getWidth } from '../../extent.js';\r\nimport { labelCache } from '../../render/canvas.js';\r\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\r\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\r\nimport CanvasLayerRenderer from './Layer.js';\r\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\r\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\r\n/**\r\n * @classdesc\r\n * Canvas renderer for vector layers.\r\n * @api\r\n */\r\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\r\n    __extends(CanvasVectorLayerRenderer, _super);\r\n    /**\r\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\r\n     */\r\n    function CanvasVectorLayerRenderer(vectorLayer) {\r\n        var _this = _super.call(this, vectorLayer) || this;\r\n        /**\r\n         * Declutter tree.\r\n         * @private\r\n         */\r\n        _this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.dirty_ = false;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.renderedRevision_ = -1;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.renderedResolution_ = NaN;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../../extent.js\").Extent}\r\n         */\r\n        _this.renderedExtent_ = createEmpty();\r\n        /**\r\n         * @private\r\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\r\n         */\r\n        _this.renderedRenderOrder_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\r\n         */\r\n        _this.replayGroup_ = null;\r\n        /**\r\n         * A new replay group had to be created by `prepareFrame()`\r\n         * @type {boolean}\r\n         */\r\n        _this.replayGroupChanged = true;\r\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasVectorLayerRenderer.prototype.disposeInternal = function () {\r\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\r\n        var context = this.context;\r\n        var canvas = context.canvas;\r\n        var replayGroup = this.replayGroup_;\r\n        if (!replayGroup || replayGroup.isEmpty()) {\r\n            if (canvas.width > 0) {\r\n                canvas.width = 0;\r\n            }\r\n            return canvas;\r\n        }\r\n        var pixelRatio = frameState.pixelRatio;\r\n        // set forward and inverse pixel transforms\r\n        makeScale(this.pixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\r\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\r\n        // resize and clear\r\n        var width = Math.round(frameState.size[0] * pixelRatio);\r\n        var height = Math.round(frameState.size[1] * pixelRatio);\r\n        if (canvas.width != width || canvas.height != height) {\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            var canvasTransform = transformToString(this.pixelTransform_);\r\n            if (canvas.style.transform !== canvasTransform) {\r\n                canvas.style.transform = canvasTransform;\r\n            }\r\n        }\r\n        else {\r\n            context.clearRect(0, 0, width, height);\r\n        }\r\n        this.preRender(context, frameState);\r\n        var extent = frameState.extent;\r\n        var viewState = frameState.viewState;\r\n        var projection = viewState.projection;\r\n        var rotation = viewState.rotation;\r\n        var projectionExtent = projection.getExtent();\r\n        var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\r\n        // clipped rendering if layer extent is set\r\n        var clipExtent = layerState.extent;\r\n        var clipped = clipExtent !== undefined;\r\n        if (clipped) {\r\n            this.clip(context, frameState, clipExtent);\r\n        }\r\n        if (this.declutterTree_) {\r\n            this.declutterTree_.clear();\r\n        }\r\n        var viewHints = frameState.viewHints;\r\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\r\n        var transform = this.getRenderTransform(frameState, width, height, 0);\r\n        var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\r\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\r\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\r\n            var startX = extent[0];\r\n            var worldWidth = getWidth(projectionExtent);\r\n            var world = 0;\r\n            var offsetX = void 0;\r\n            while (startX < projectionExtent[0]) {\r\n                --world;\r\n                offsetX = worldWidth * world;\r\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\r\n                replayGroup.execute(context, transform_1, rotation, skippedFeatureUids, snapToPixel);\r\n                startX += worldWidth;\r\n            }\r\n            world = 0;\r\n            startX = extent[2];\r\n            while (startX > projectionExtent[2]) {\r\n                ++world;\r\n                offsetX = worldWidth * world;\r\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\r\n                replayGroup.execute(context, transform_2, rotation, skippedFeatureUids, snapToPixel);\r\n                startX -= worldWidth;\r\n            }\r\n        }\r\n        if (clipped) {\r\n            context.restore();\r\n        }\r\n        this.postRender(context, frameState);\r\n        var opacity = layerState.opacity;\r\n        if (opacity !== parseFloat(canvas.style.opacity)) {\r\n            canvas.style.opacity = opacity;\r\n        }\r\n        return canvas;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg) {\r\n        if (!this.replayGroup_) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            var resolution = frameState.viewState.resolution;\r\n            var rotation = frameState.viewState.rotation;\r\n            var layer_1 = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n            /** @type {!Object<string, boolean>} */\r\n            var features_1 = {};\r\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \r\n            /**\r\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n             * @return {?} Callback result.\r\n             */\r\n            function (feature) {\r\n                var key = getUid(feature);\r\n                if (!(key in features_1)) {\r\n                    features_1[key] = true;\r\n                    return callback.call(thisArg, feature, layer_1);\r\n                }\r\n            }, null);\r\n            return result;\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../../events/Event.js\").default} event Event.\r\n     */\r\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function (event) {\r\n        var layer = this.getLayer();\r\n        if (layer.getVisible() && this.replayGroup_) {\r\n            layer.changed();\r\n        }\r\n    };\r\n    /**\r\n     * Handle changes in image style state.\r\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\r\n     * @private\r\n     */\r\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\r\n        this.renderIfReadyAndVisible();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\r\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n        var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\r\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\r\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\r\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\r\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\r\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\r\n            (!updateWhileInteracting && interacting)) {\r\n            return true;\r\n        }\r\n        var frameStateExtent = frameState.extent;\r\n        var viewState = frameState.viewState;\r\n        var projection = viewState.projection;\r\n        var resolution = viewState.resolution;\r\n        var pixelRatio = frameState.pixelRatio;\r\n        var vectorLayerRevision = vectorLayer.getRevision();\r\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\r\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\r\n        if (vectorLayerRenderOrder === undefined) {\r\n            vectorLayerRenderOrder = defaultRenderOrder;\r\n        }\r\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\r\n        var projectionExtent = viewState.projection.getExtent();\r\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\r\n            !containsExtent(projectionExtent, frameState.extent)) {\r\n            // For the replay group, we need an extent that intersects the real world\r\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\r\n            // to +540°, we add at least 1 world width on each side of the projection\r\n            // extent. If the viewport is wider than the world, we need to add half of\r\n            // the viewport width to make sure we cover the whole viewport.\r\n            var worldWidth = getWidth(projectionExtent);\r\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\r\n            extent[0] = projectionExtent[0] - gutter;\r\n            extent[2] = projectionExtent[2] + gutter;\r\n        }\r\n        if (!this.dirty_ &&\r\n            this.renderedResolution_ == resolution &&\r\n            this.renderedRevision_ == vectorLayerRevision &&\r\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\r\n            containsExtent(this.renderedExtent_, extent)) {\r\n            this.replayGroupChanged = false;\r\n            return true;\r\n        }\r\n        if (this.replayGroup_) {\r\n            this.replayGroup_.dispose();\r\n        }\r\n        this.replayGroup_ = null;\r\n        this.dirty_ = false;\r\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, !!this.declutterTree_);\r\n        vectorSource.loadFeatures(extent, resolution, projection);\r\n        /**\r\n         * @param {import(\"../../Feature.js\").default} feature Feature.\r\n         * @this {CanvasVectorLayerRenderer}\r\n         */\r\n        var render = function (feature) {\r\n            var styles;\r\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\r\n            if (styleFunction) {\r\n                styles = styleFunction(feature, resolution);\r\n            }\r\n            if (styles) {\r\n                var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\r\n                this.dirty_ = this.dirty_ || dirty;\r\n            }\r\n        }.bind(this);\r\n        if (vectorLayerRenderOrder) {\r\n            /** @type {Array<import(\"../../Feature.js\").default>} */\r\n            var features_2 = [];\r\n            vectorSource.forEachFeatureInExtent(extent, \r\n            /**\r\n             * @param {import(\"../../Feature.js\").default} feature Feature.\r\n             */\r\n            function (feature) {\r\n                features_2.push(feature);\r\n            });\r\n            features_2.sort(vectorLayerRenderOrder);\r\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\r\n                render(features_2[i]);\r\n            }\r\n        }\r\n        else {\r\n            vectorSource.forEachFeatureInExtent(extent, render);\r\n        }\r\n        var replayGroupInstructions = replayGroup.finish();\r\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, replayGroupInstructions, vectorLayer.getRenderBuffer());\r\n        this.renderedResolution_ = resolution;\r\n        this.renderedRevision_ = vectorLayerRevision;\r\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\r\n        this.renderedExtent_ = extent;\r\n        this.replayGroup_ = executorGroup;\r\n        this.replayGroupChanged = true;\r\n        return true;\r\n    };\r\n    /**\r\n     * @param {import(\"../../Feature.js\").default} feature Feature.\r\n     * @param {number} resolution Resolution.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\r\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\r\n     * @return {boolean} `true` if an image is loading.\r\n     */\r\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, resolution, pixelRatio, styles, builderGroup) {\r\n        if (!styles) {\r\n            return false;\r\n        }\r\n        var loading = false;\r\n        if (Array.isArray(styles)) {\r\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\r\n                loading = renderFeature(builderGroup, feature, styles[i], getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\r\n            }\r\n        }\r\n        else {\r\n            loading = renderFeature(builderGroup, feature, styles, getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\r\n        }\r\n        return loading;\r\n    };\r\n    return CanvasVectorLayerRenderer;\r\n}(CanvasLayerRenderer));\r\nexport default CanvasVectorLayerRenderer;\r\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/layer/Vector\r\n */\r\nimport BaseVectorLayer from './BaseVector.js';\r\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\r\n/**\r\n * @typedef {import(\"./BaseVector.js\").Options} Options\r\n */\r\n/**\r\n * @classdesc\r\n * Vector data that is rendered client-side.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nvar VectorLayer = /** @class */ (function (_super) {\r\n    __extends(VectorLayer, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function VectorLayer(opt_options) {\r\n        return _super.call(this, opt_options) || this;\r\n    }\r\n    /**\r\n     * Create a renderer for this layer.\r\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\r\n     * @protected\r\n     */\r\n    VectorLayer.prototype.createRenderer = function () {\r\n        return new CanvasVectorLayerRenderer(this);\r\n    };\r\n    return VectorLayer;\r\n}(BaseVectorLayer));\r\nexport default VectorLayer;\r\n//# sourceMappingURL=Vector.js.map","/**\r\n * @module ol/loadingstrategy\r\n */\r\n/**\r\n * Strategy function for loading all features with a single request.\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number} resolution Resolution.\r\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\r\n * @api\r\n */\r\nexport function all(extent, resolution) {\r\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\r\n}\r\n/**\r\n * Strategy function for loading features based on the view's extent and\r\n * resolution.\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number} resolution Resolution.\r\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\r\n * @api\r\n */\r\nexport function bbox(extent, resolution) {\r\n    return [extent];\r\n}\r\n/**\r\n * Creates a strategy function for loading features based on a tile grid.\r\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\r\n * @api\r\n */\r\nexport function tile(tileGrid) {\r\n    return (\r\n    /**\r\n     * @param {import(\"./extent.js\").Extent} extent Extent.\r\n     * @param {number} resolution Resolution.\r\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\r\n     */\r\n    function (extent, resolution) {\r\n        var z = tileGrid.getZForResolution(resolution);\r\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\r\n        /** @type {Array<import(\"./extent.js\").Extent>} */\r\n        var extents = [];\r\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\r\n        var tileCoord = [z, 0, 0];\r\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\r\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\r\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\r\n            }\r\n        }\r\n        return extents;\r\n    });\r\n}\r\n//# sourceMappingURL=loadingstrategy.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/source/Source\r\n */\r\nimport { abstract } from '../util.js';\r\nimport BaseObject from '../Object.js';\r\nimport { get as getProjection } from '../proj.js';\r\nimport SourceState from './State.js';\r\n/**\r\n * A function that returns a string or an array of strings representing source\r\n * attributions.\r\n *\r\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\r\n */\r\n/**\r\n * A type that can be used to provide attribution information for data sources.\r\n *\r\n * It represents either\r\n * * a simple string (e.g. `'© Acme Inc.'`)\r\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\r\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\r\n *\r\n * @typedef {string|Array<string>|Attribution} AttributionLike\r\n */\r\n/**\r\n * @typedef {Object} Options\r\n * @property {AttributionLike} [attributions]\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {SourceState} [state='ready']\r\n * @property {boolean} [wrapX=false]\r\n */\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\r\n *\r\n * A generic `change` event is triggered when the state of the source changes.\r\n * @abstract\r\n * @api\r\n */\r\nvar Source = /** @class */ (function (_super) {\r\n    __extends(Source, _super);\r\n    /**\r\n     * @param {Options} options Source options.\r\n     */\r\n    function Source(options) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../proj/Projection.js\").default}\r\n         */\r\n        _this.projection_ = getProjection(options.projection);\r\n        /**\r\n         * @private\r\n         * @type {?Attribution}\r\n         */\r\n        _this.attributions_ = adaptAttributions(options.attributions);\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\r\n            options.attributionsCollapsible : true;\r\n        /**\r\n         * This source is currently loading data. Sources that defer loading to the\r\n         * map's tile queue never set this to `true`.\r\n         * @type {boolean}\r\n         */\r\n        _this.loading = false;\r\n        /**\r\n         * @private\r\n         * @type {SourceState}\r\n         */\r\n        _this.state_ = options.state !== undefined ?\r\n            options.state : SourceState.READY;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get the attribution function for the source.\r\n     * @return {?Attribution} Attribution function.\r\n     */\r\n    Source.prototype.getAttributions = function () {\r\n        return this.attributions_;\r\n    };\r\n    /**\r\n     * @return {boolean} Attributions are collapsible.\r\n     */\r\n    Source.prototype.getAttributionsCollapsible = function () {\r\n        return this.attributionsCollapsible_;\r\n    };\r\n    /**\r\n     * Get the projection of the source.\r\n     * @return {import(\"../proj/Projection.js\").default} Projection.\r\n     * @api\r\n     */\r\n    Source.prototype.getProjection = function () {\r\n        return this.projection_;\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @return {Array<number>|undefined} Resolutions.\r\n     */\r\n    Source.prototype.getResolutions = function () {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\r\n     * @return {SourceState} State.\r\n     * @api\r\n     */\r\n    Source.prototype.getState = function () {\r\n        return this.state_;\r\n    };\r\n    /**\r\n     * @return {boolean|undefined} Wrap X.\r\n     */\r\n    Source.prototype.getWrapX = function () {\r\n        return this.wrapX_;\r\n    };\r\n    /**\r\n     * Refreshes the source and finally dispatches a 'change' event.\r\n     * @api\r\n     */\r\n    Source.prototype.refresh = function () {\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Set the attributions of the source.\r\n     * @param {AttributionLike|undefined} attributions Attributions.\r\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\r\n     *     or `undefined`.\r\n     * @api\r\n     */\r\n    Source.prototype.setAttributions = function (attributions) {\r\n        this.attributions_ = adaptAttributions(attributions);\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Set the state of the source.\r\n     * @param {SourceState} state State.\r\n     * @protected\r\n     */\r\n    Source.prototype.setState = function (state) {\r\n        this.state_ = state;\r\n        this.changed();\r\n    };\r\n    return Source;\r\n}(BaseObject));\r\n/**\r\n * Turns the attributions option into an attributions function.\r\n * @param {AttributionLike|undefined} attributionLike The attribution option.\r\n * @return {?Attribution} An attribution function (or null).\r\n */\r\nfunction adaptAttributions(attributionLike) {\r\n    if (!attributionLike) {\r\n        return null;\r\n    }\r\n    if (Array.isArray(attributionLike)) {\r\n        return function (frameState) {\r\n            return attributionLike;\r\n        };\r\n    }\r\n    if (typeof attributionLike === 'function') {\r\n        return attributionLike;\r\n    }\r\n    return function (frameState) {\r\n        return [attributionLike];\r\n    };\r\n}\r\nexport default Source;\r\n//# sourceMappingURL=Source.js.map","/**\r\n * @module ol/source/VectorEventType\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n    /**\r\n     * Triggered when a feature is added to the source.\r\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\r\n     * @api\r\n     */\r\n    ADDFEATURE: 'addfeature',\r\n    /**\r\n     * Triggered when a feature is updated.\r\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\r\n     * @api\r\n     */\r\n    CHANGEFEATURE: 'changefeature',\r\n    /**\r\n     * Triggered when the clear method is called on the source.\r\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\r\n     * @api\r\n     */\r\n    CLEAR: 'clear',\r\n    /**\r\n     * Triggered when a feature is removed from the source.\r\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\r\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\r\n     * @api\r\n     */\r\n    REMOVEFEATURE: 'removefeature'\r\n};\r\n//# sourceMappingURL=VectorEventType.js.map","/**\r\n * @module ol/structs/RBush\r\n */\r\nimport { getUid } from '../util.js';\r\nimport rbush from 'rbush';\r\nimport { createOrUpdate, equals } from '../extent.js';\r\nimport { isEmpty } from '../obj.js';\r\n/**\r\n * @typedef {Object} Entry\r\n * @property {number} minX\r\n * @property {number} minY\r\n * @property {number} maxX\r\n * @property {number} maxY\r\n * @property {Object} [value]\r\n */\r\n/**\r\n * @classdesc\r\n * Wrapper around the RBush by Vladimir Agafonkin.\r\n * See https://github.com/mourner/rbush.\r\n *\r\n * @template T\r\n */\r\nvar RBush = /** @class */ (function () {\r\n    /**\r\n     * @param {number=} opt_maxEntries Max entries.\r\n     */\r\n    function RBush(opt_maxEntries) {\r\n        /**\r\n         * @private\r\n         */\r\n        this.rbush_ = rbush(opt_maxEntries, undefined);\r\n        /**\r\n         * A mapping between the objects added to this rbush wrapper\r\n         * and the objects that are actually added to the internal rbush.\r\n         * @private\r\n         * @type {Object<string, Entry>}\r\n         */\r\n        this.items_ = {};\r\n    }\r\n    /**\r\n     * Insert a value into the RBush.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {T} value Value.\r\n     */\r\n    RBush.prototype.insert = function (extent, value) {\r\n        /** @type {Entry} */\r\n        var item = {\r\n            minX: extent[0],\r\n            minY: extent[1],\r\n            maxX: extent[2],\r\n            maxY: extent[3],\r\n            value: value\r\n        };\r\n        this.rbush_.insert(item);\r\n        this.items_[getUid(value)] = item;\r\n    };\r\n    /**\r\n     * Bulk-insert values into the RBush.\r\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\r\n     * @param {Array<T>} values Values.\r\n     */\r\n    RBush.prototype.load = function (extents, values) {\r\n        var items = new Array(values.length);\r\n        for (var i = 0, l = values.length; i < l; i++) {\r\n            var extent = extents[i];\r\n            var value = values[i];\r\n            /** @type {Entry} */\r\n            var item = {\r\n                minX: extent[0],\r\n                minY: extent[1],\r\n                maxX: extent[2],\r\n                maxY: extent[3],\r\n                value: value\r\n            };\r\n            items[i] = item;\r\n            this.items_[getUid(value)] = item;\r\n        }\r\n        this.rbush_.load(items);\r\n    };\r\n    /**\r\n     * Remove a value from the RBush.\r\n     * @param {T} value Value.\r\n     * @return {boolean} Removed.\r\n     */\r\n    RBush.prototype.remove = function (value) {\r\n        var uid = getUid(value);\r\n        // get the object in which the value was wrapped when adding to the\r\n        // internal rbush. then use that object to do the removal.\r\n        var item = this.items_[uid];\r\n        delete this.items_[uid];\r\n        return this.rbush_.remove(item) !== null;\r\n    };\r\n    /**\r\n     * Update the extent of a value in the RBush.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {T} value Value.\r\n     */\r\n    RBush.prototype.update = function (extent, value) {\r\n        var item = this.items_[getUid(value)];\r\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\r\n        if (!equals(bbox, extent)) {\r\n            this.remove(value);\r\n            this.insert(extent, value);\r\n        }\r\n    };\r\n    /**\r\n     * Return all values in the RBush.\r\n     * @return {Array<T>} All.\r\n     */\r\n    RBush.prototype.getAll = function () {\r\n        var items = this.rbush_.all();\r\n        return items.map(function (item) {\r\n            return item.value;\r\n        });\r\n    };\r\n    /**\r\n     * Return all values in the given extent.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @return {Array<T>} All in extent.\r\n     */\r\n    RBush.prototype.getInExtent = function (extent) {\r\n        /** @type {Entry} */\r\n        var bbox = {\r\n            minX: extent[0],\r\n            minY: extent[1],\r\n            maxX: extent[2],\r\n            maxY: extent[3]\r\n        };\r\n        var items = this.rbush_.search(bbox);\r\n        return items.map(function (item) {\r\n            return item.value;\r\n        });\r\n    };\r\n    /**\r\n     * Calls a callback function with each value in the tree.\r\n     * If the callback returns a truthy value, this value is returned without\r\n     * checking the rest of the tree.\r\n     * @param {function(this: S, T): *} callback Callback.\r\n     * @param {S=} opt_this The object to use as `this` in `callback`.\r\n     * @return {*} Callback return value.\r\n     * @template S\r\n     */\r\n    RBush.prototype.forEach = function (callback, opt_this) {\r\n        return this.forEach_(this.getAll(), callback, opt_this);\r\n    };\r\n    /**\r\n     * Calls a callback function with each value in the provided extent.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {function(this: S, T): *} callback Callback.\r\n     * @param {S=} opt_this The object to use as `this` in `callback`.\r\n     * @return {*} Callback return value.\r\n     * @template S\r\n     */\r\n    RBush.prototype.forEachInExtent = function (extent, callback, opt_this) {\r\n        return this.forEach_(this.getInExtent(extent), callback, opt_this);\r\n    };\r\n    /**\r\n     * @param {Array<T>} values Values.\r\n     * @param {function(this: S, T): *} callback Callback.\r\n     * @param {S=} opt_this The object to use as `this` in `callback`.\r\n     * @private\r\n     * @return {*} Callback return value.\r\n     * @template S\r\n     */\r\n    RBush.prototype.forEach_ = function (values, callback, opt_this) {\r\n        var result;\r\n        for (var i = 0, l = values.length; i < l; i++) {\r\n            result = callback.call(opt_this, values[i]);\r\n            if (result) {\r\n                return result;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @return {boolean} Is empty.\r\n     */\r\n    RBush.prototype.isEmpty = function () {\r\n        return isEmpty(this.items_);\r\n    };\r\n    /**\r\n     * Remove all values from the RBush.\r\n     */\r\n    RBush.prototype.clear = function () {\r\n        this.rbush_.clear();\r\n        this.items_ = {};\r\n    };\r\n    /**\r\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\r\n     * @return {import(\"../extent.js\").Extent} Extent.\r\n     */\r\n    RBush.prototype.getExtent = function (opt_extent) {\r\n        var data = this.rbush_.toJSON();\r\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\r\n    };\r\n    /**\r\n     * @param {RBush} rbush R-Tree.\r\n     */\r\n    RBush.prototype.concat = function (rbush) {\r\n        this.rbush_.load(rbush.rbush_.all());\r\n        for (var i in rbush.items_) {\r\n            this.items_[i] = rbush.items_[i];\r\n        }\r\n    };\r\n    return RBush;\r\n}());\r\nexport default RBush;\r\n//# sourceMappingURL=RBush.js.map","/**\r\n * @module ol/source/Vector\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { getUid } from '../util.js';\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport { extend } from '../array.js';\r\nimport { assert } from '../asserts.js';\r\nimport { listen, unlistenByKey } from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { containsExtent, equals } from '../extent.js';\r\nimport { xhr } from '../featureloader.js';\r\nimport { TRUE, VOID } from '../functions.js';\r\nimport { all as allStrategy } from '../loadingstrategy.js';\r\nimport { isEmpty, getValues } from '../obj.js';\r\nimport Source from './Source.js';\r\nimport SourceState from './State.js';\r\nimport VectorEventType from './VectorEventType.js';\r\nimport RBush from '../structs/RBush.js';\r\n/**\r\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\r\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\r\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\r\n *\r\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\r\n * @api\r\n */\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\r\n * type.\r\n */\r\nvar VectorSourceEvent = /** @class */ (function (_super) {\r\n    __extends(VectorSourceEvent, _super);\r\n    /**\r\n     * @param {string} type Type.\r\n     * @param {import(\"../Feature.js\").default=} opt_feature Feature.\r\n     */\r\n    function VectorSourceEvent(type, opt_feature) {\r\n        var _this = _super.call(this, type) || this;\r\n        /**\r\n         * The feature being added or removed.\r\n         * @type {import(\"../Feature.js\").default|undefined}\r\n         * @api\r\n         */\r\n        _this.feature = opt_feature;\r\n        return _this;\r\n    }\r\n    return VectorSourceEvent;\r\n}(Event));\r\nexport { VectorSourceEvent };\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\r\n * Features. If provided as {@link module:ol/Collection}, the features in the source\r\n * and the collection will stay in sync.\r\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\r\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\r\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\r\n * The loader function used to load features, from a remote source for example.\r\n * If this is not set and `url` is set, the source will create and use an XHR\r\n * feature loader.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * import {Vector} from 'ol/source';\r\n * import {GeoJSON} from 'ol/format';\r\n * import {bbox} from 'ol/loadingstrategy';\r\n *\r\n * var vectorSource = new Vector({\r\n *   format: new GeoJSON(),\r\n *   loader: function(extent, resolution, projection) {\r\n *      var proj = projection.getCode();\r\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\r\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\r\n *          'outputFormat=application/json&srsname=' + proj + '&' +\r\n *          'bbox=' + extent.join(',') + ',' + proj;\r\n *      var xhr = new XMLHttpRequest();\r\n *      xhr.open('GET', url);\r\n *      var onError = function() {\r\n *        vectorSource.removeLoadedExtent(extent);\r\n *      }\r\n *      xhr.onerror = onError;\r\n *      xhr.onload = function() {\r\n *        if (xhr.status == 200) {\r\n *          vectorSource.addFeatures(\r\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\r\n *        } else {\r\n *          onError();\r\n *        }\r\n *      }\r\n *      xhr.send();\r\n *    },\r\n *    strategy: bbox\r\n *  });\r\n * ```\r\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\r\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\r\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\r\n * stroke operations.\r\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\r\n * By default an {@link module:ol/loadingstrategy~all}\r\n * strategy is used, a one-off strategy which loads all features at once.\r\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\r\n * Setting this option instructs the source to load features using an XHR loader\r\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\r\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\r\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\r\n * other loading strategies.\r\n * Requires `format` to be set as well.\r\n * When default XHR feature loader is provided, the features will\r\n * be transformed from the data projection to the view projection\r\n * during parsing. If your remote data source does not advertise its projection\r\n * properly, this transformation will be incorrect. For some formats, the\r\n * default projection (usually EPSG:4326) can be overridden by setting the\r\n * dataProjection constructor option on the format.\r\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\r\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\r\n * @property {boolean} [useSpatialIndex=true]\r\n * By default, an RTree is used as spatial index. When features are removed and\r\n * added frequently, and the total number of features is low, setting this to\r\n * `false` may improve performance.\r\n *\r\n * Note that\r\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\r\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\r\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\r\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\r\n * through all features.\r\n *\r\n * When set to `false`, the features will be maintained in an\r\n * {@link module:ol/Collection}, which can be retrieved through\r\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\r\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\r\n * -180° and 180° meridians to work properly, this should be set to `false`. The\r\n * resulting geometry coordinates will then exceed the world bounds.\r\n */\r\n/**\r\n * @classdesc\r\n * Provides a source of features for vector layers. Vector features provided\r\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\r\n * vector data that is optimized for rendering.\r\n *\r\n * @fires VectorSourceEvent\r\n * @api\r\n */\r\nvar VectorSource = /** @class */ (function (_super) {\r\n    __extends(VectorSource, _super);\r\n    /**\r\n     * @param {Options=} opt_options Vector source options.\r\n     */\r\n    function VectorSource(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options || {};\r\n        _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            projection: undefined,\r\n            state: SourceState.READY,\r\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../featureloader.js\").FeatureLoader}\r\n         */\r\n        _this.loader_ = VOID;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../format/Feature.js\").default|undefined}\r\n         */\r\n        _this.format_ = options.format;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\r\n        /**\r\n         * @private\r\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\r\n         */\r\n        _this.url_ = options.url;\r\n        if (options.loader !== undefined) {\r\n            _this.loader_ = options.loader;\r\n        }\r\n        else if (_this.url_ !== undefined) {\r\n            assert(_this.format_, 7); // `format` must be set when `url` is set\r\n            // create a XHR feature loader for \"url\" and \"format\"\r\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\r\n        }\r\n        /**\r\n         * @private\r\n         * @type {LoadingStrategy}\r\n         */\r\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\r\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\r\n        /**\r\n         * @private\r\n         * @type {RBush<import(\"../Feature.js\").default>}\r\n         */\r\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\r\n        /**\r\n         * @private\r\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\r\n         */\r\n        _this.loadedExtentsRtree_ = new RBush();\r\n        /**\r\n         * @private\r\n         * @type {!Object<string, import(\"../Feature.js\").default>}\r\n         */\r\n        _this.nullGeometryFeatures_ = {};\r\n        /**\r\n         * A lookup of features by id (the return from feature.getId()).\r\n         * @private\r\n         * @type {!Object<string, import(\"../Feature.js\").default>}\r\n         */\r\n        _this.idIndex_ = {};\r\n        /**\r\n         * A lookup of features without id (keyed by getUid(feature)).\r\n         * @private\r\n         * @type {!Object<string, import(\"../Feature.js\").default>}\r\n         */\r\n        _this.undefIdIndex_ = {};\r\n        /**\r\n         * @private\r\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\r\n         */\r\n        _this.featureChangeKeys_ = {};\r\n        /**\r\n         * @private\r\n         * @type {Collection<import(\"../Feature.js\").default>}\r\n         */\r\n        _this.featuresCollection_ = null;\r\n        var collection, features;\r\n        if (Array.isArray(options.features)) {\r\n            features = options.features;\r\n        }\r\n        else if (options.features) {\r\n            collection = options.features;\r\n            features = collection.getArray();\r\n        }\r\n        if (!useSpatialIndex && collection === undefined) {\r\n            collection = new Collection(features);\r\n        }\r\n        if (features !== undefined) {\r\n            _this.addFeaturesInternal(features);\r\n        }\r\n        if (collection !== undefined) {\r\n            _this.bindFeaturesCollection_(collection);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Add a single feature to the source.  If you want to add a batch of features\r\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\r\n     * instead. A feature will not be added to the source if feature with\r\n     * the same id is already there. The reason for this behavior is to avoid\r\n     * feature duplication when using bbox or tile loading strategies.\r\n     * @param {import(\"../Feature.js\").default} feature Feature to add.\r\n     * @api\r\n     */\r\n    VectorSource.prototype.addFeature = function (feature) {\r\n        this.addFeatureInternal(feature);\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Add a feature without firing a `change` event.\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     * @protected\r\n     */\r\n    VectorSource.prototype.addFeatureInternal = function (feature) {\r\n        var featureKey = getUid(feature);\r\n        if (!this.addToIndex_(featureKey, feature)) {\r\n            return;\r\n        }\r\n        this.setupChangeEvents_(featureKey, feature);\r\n        var geometry = feature.getGeometry();\r\n        if (geometry) {\r\n            var extent = geometry.getExtent();\r\n            if (this.featuresRtree_) {\r\n                this.featuresRtree_.insert(extent, feature);\r\n            }\r\n        }\r\n        else {\r\n            this.nullGeometryFeatures_[featureKey] = feature;\r\n        }\r\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\r\n    };\r\n    /**\r\n     * @param {string} featureKey Unique identifier for the feature.\r\n     * @param {import(\"../Feature.js\").default} feature The feature.\r\n     * @private\r\n     */\r\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\r\n        this.featureChangeKeys_[featureKey] = [\r\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\r\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\r\n        ];\r\n    };\r\n    /**\r\n     * @param {string} featureKey Unique identifier for the feature.\r\n     * @param {import(\"../Feature.js\").default} feature The feature.\r\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\r\n     *     candidate for insertion into the Rtree.\r\n     * @private\r\n     */\r\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\r\n        var valid = true;\r\n        var id = feature.getId();\r\n        if (id !== undefined) {\r\n            if (!(id.toString() in this.idIndex_)) {\r\n                this.idIndex_[id.toString()] = feature;\r\n            }\r\n            else {\r\n                valid = false;\r\n            }\r\n        }\r\n        else {\r\n            assert(!(featureKey in this.undefIdIndex_), 30); // The passed `feature` was already added to the source\r\n            this.undefIdIndex_[featureKey] = feature;\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Add a batch of features to the source.\r\n     * @param {Array<import(\"../Feature.js\").default>} features Features to add.\r\n     * @api\r\n     */\r\n    VectorSource.prototype.addFeatures = function (features) {\r\n        this.addFeaturesInternal(features);\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Add features without firing a `change` event.\r\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n     * @protected\r\n     */\r\n    VectorSource.prototype.addFeaturesInternal = function (features) {\r\n        var extents = [];\r\n        var newFeatures = [];\r\n        var geometryFeatures = [];\r\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\r\n            var feature = features[i];\r\n            var featureKey = getUid(feature);\r\n            if (this.addToIndex_(featureKey, feature)) {\r\n                newFeatures.push(feature);\r\n            }\r\n        }\r\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\r\n            var feature = newFeatures[i];\r\n            var featureKey = getUid(feature);\r\n            this.setupChangeEvents_(featureKey, feature);\r\n            var geometry = feature.getGeometry();\r\n            if (geometry) {\r\n                var extent = geometry.getExtent();\r\n                extents.push(extent);\r\n                geometryFeatures.push(feature);\r\n            }\r\n            else {\r\n                this.nullGeometryFeatures_[featureKey] = feature;\r\n            }\r\n        }\r\n        if (this.featuresRtree_) {\r\n            this.featuresRtree_.load(extents, geometryFeatures);\r\n        }\r\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\r\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\r\n     * @private\r\n     */\r\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\r\n        var modifyingCollection = false;\r\n        listen(this, VectorEventType.ADDFEATURE, \r\n        /**\r\n         * @param {VectorSourceEvent} evt The vector source event\r\n         */\r\n        function (evt) {\r\n            if (!modifyingCollection) {\r\n                modifyingCollection = true;\r\n                collection.push(evt.feature);\r\n                modifyingCollection = false;\r\n            }\r\n        });\r\n        listen(this, VectorEventType.REMOVEFEATURE, \r\n        /**\r\n         * @param {VectorSourceEvent} evt The vector source event\r\n         */\r\n        function (evt) {\r\n            if (!modifyingCollection) {\r\n                modifyingCollection = true;\r\n                collection.remove(evt.feature);\r\n                modifyingCollection = false;\r\n            }\r\n        });\r\n        listen(collection, CollectionEventType.ADD, \r\n        /**\r\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\r\n         */\r\n        function (evt) {\r\n            if (!modifyingCollection) {\r\n                modifyingCollection = true;\r\n                this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\r\n                modifyingCollection = false;\r\n            }\r\n        }, this);\r\n        listen(collection, CollectionEventType.REMOVE, \r\n        /**\r\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\r\n         */\r\n        function (evt) {\r\n            if (!modifyingCollection) {\r\n                modifyingCollection = true;\r\n                this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\r\n                modifyingCollection = false;\r\n            }\r\n        }, this);\r\n        this.featuresCollection_ = collection;\r\n    };\r\n    /**\r\n     * Remove all features from the source.\r\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\r\n     * @api\r\n     */\r\n    VectorSource.prototype.clear = function (opt_fast) {\r\n        if (opt_fast) {\r\n            for (var featureId in this.featureChangeKeys_) {\r\n                var keys = this.featureChangeKeys_[featureId];\r\n                keys.forEach(unlistenByKey);\r\n            }\r\n            if (!this.featuresCollection_) {\r\n                this.featureChangeKeys_ = {};\r\n                this.idIndex_ = {};\r\n                this.undefIdIndex_ = {};\r\n            }\r\n        }\r\n        else {\r\n            if (this.featuresRtree_) {\r\n                this.featuresRtree_.forEach(this.removeFeatureInternal, this);\r\n                for (var id in this.nullGeometryFeatures_) {\r\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\r\n                }\r\n            }\r\n        }\r\n        if (this.featuresCollection_) {\r\n            this.featuresCollection_.clear();\r\n        }\r\n        if (this.featuresRtree_) {\r\n            this.featuresRtree_.clear();\r\n        }\r\n        this.loadedExtentsRtree_.clear();\r\n        this.nullGeometryFeatures_ = {};\r\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\r\n        this.dispatchEvent(clearEvent);\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Iterate through all features on the source, calling the provided callback\r\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\r\n     * stop and the function will return the same value.\r\n     * Note: this function only iterate through the feature that have a defined geometry.\r\n     *\r\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\r\n     *     on the source.  Return a truthy value to stop iteration.\r\n     * @return {T|undefined} The return value from the last call to the callback.\r\n     * @template T\r\n     * @api\r\n     */\r\n    VectorSource.prototype.forEachFeature = function (callback) {\r\n        if (this.featuresRtree_) {\r\n            return this.featuresRtree_.forEach(callback);\r\n        }\r\n        else if (this.featuresCollection_) {\r\n            this.featuresCollection_.forEach(callback);\r\n        }\r\n    };\r\n    /**\r\n     * Iterate through all features whose geometries contain the provided\r\n     * coordinate, calling the callback with each feature.  If the callback returns\r\n     * a \"truthy\" value, iteration will stop and the function will return the same\r\n     * value.\r\n     *\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\r\n     *     whose goemetry contains the provided coordinate.\r\n     * @return {T|undefined} The return value from the last call to the callback.\r\n     * @template T\r\n     */\r\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\r\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\r\n        return this.forEachFeatureInExtent(extent, function (feature) {\r\n            var geometry = feature.getGeometry();\r\n            if (geometry.intersectsCoordinate(coordinate)) {\r\n                return callback(feature);\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Iterate through all features whose bounding box intersects the provided\r\n     * extent (note that the feature's geometry may not intersect the extent),\r\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\r\n     * value, iteration will stop and the function will return the same value.\r\n     *\r\n     * If you are interested in features whose geometry intersects an extent, call\r\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\r\n     *\r\n     * When `useSpatialIndex` is set to false, this method will loop through all\r\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\r\n     *\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\r\n     *     whose bounding box intersects the provided extent.\r\n     * @return {T|undefined} The return value from the last call to the callback.\r\n     * @template T\r\n     * @api\r\n     */\r\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\r\n        if (this.featuresRtree_) {\r\n            return this.featuresRtree_.forEachInExtent(extent, callback);\r\n        }\r\n        else if (this.featuresCollection_) {\r\n            this.featuresCollection_.forEach(callback);\r\n        }\r\n    };\r\n    /**\r\n     * Iterate through all features whose geometry intersects the provided extent,\r\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\r\n     * value, iteration will stop and the function will return the same value.\r\n     *\r\n     * If you only want to test for bounding box intersection, call the\r\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\r\n     *\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\r\n     *     whose geometry intersects the provided extent.\r\n     * @return {T|undefined} The return value from the last call to the callback.\r\n     * @template T\r\n     * @api\r\n     */\r\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\r\n        return this.forEachFeatureInExtent(extent, \r\n        /**\r\n         * @param {import(\"../Feature.js\").default} feature Feature.\r\n         * @return {T|undefined} The return value from the last call to the callback.\r\n         */\r\n        function (feature) {\r\n            var geometry = feature.getGeometry();\r\n            if (geometry.intersectsExtent(extent)) {\r\n                var result = callback(feature);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Get the features collection associated with this source. Will be `null`\r\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\r\n     * with an {@link module:ol/Collection} as `features`.\r\n     * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\r\n     * @api\r\n     */\r\n    VectorSource.prototype.getFeaturesCollection = function () {\r\n        return this.featuresCollection_;\r\n    };\r\n    /**\r\n     * Get all features on the source in random order.\r\n     * @return {Array<import(\"../Feature.js\").default>} Features.\r\n     * @api\r\n     */\r\n    VectorSource.prototype.getFeatures = function () {\r\n        var features;\r\n        if (this.featuresCollection_) {\r\n            features = this.featuresCollection_.getArray();\r\n        }\r\n        else if (this.featuresRtree_) {\r\n            features = this.featuresRtree_.getAll();\r\n            if (!isEmpty(this.nullGeometryFeatures_)) {\r\n                extend(features, getValues(this.nullGeometryFeatures_));\r\n            }\r\n        }\r\n        return (\r\n        /** @type {Array<import(\"../Feature.js\").default>} */ (features));\r\n    };\r\n    /**\r\n     * Get all features whose geometry intersects the provided coordinate.\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @return {Array<import(\"../Feature.js\").default>} Features.\r\n     * @api\r\n     */\r\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\r\n        var features = [];\r\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\r\n            features.push(feature);\r\n        });\r\n        return features;\r\n    };\r\n    /**\r\n     * Get all features in the provided extent.  Note that this returns an array of\r\n     * all features intersecting the given extent in random order (so it may include\r\n     * features whose geometries do not intersect the extent).\r\n     *\r\n     * This method is not available when the source is configured with\r\n     * `useSpatialIndex` set to `false`.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @return {Array<import(\"../Feature.js\").default>} Features.\r\n     * @api\r\n     */\r\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\r\n        return this.featuresRtree_.getInExtent(extent);\r\n    };\r\n    /**\r\n     * Get the closest feature to the provided coordinate.\r\n     *\r\n     * This method is not available when the source is configured with\r\n     * `useSpatialIndex` set to `false`.\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\r\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\r\n     *     and it should return a boolean value. By default, no filtering is made.\r\n     * @return {import(\"../Feature.js\").default} Closest feature.\r\n     * @api\r\n     */\r\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\r\n        // Find the closest feature using branch and bound.  We start searching an\r\n        // infinite extent, and find the distance from the first feature found.  This\r\n        // becomes the closest feature.  We then compute a smaller extent which any\r\n        // closer feature must intersect.  We continue searching with this smaller\r\n        // extent, trying to find a closer feature.  Every time we find a closer\r\n        // feature, we update the extent being searched so that any even closer\r\n        // feature must intersect it.  We continue until we run out of features.\r\n        var x = coordinate[0];\r\n        var y = coordinate[1];\r\n        var closestFeature = null;\r\n        var closestPoint = [NaN, NaN];\r\n        var minSquaredDistance = Infinity;\r\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\r\n        var filter = opt_filter ? opt_filter : TRUE;\r\n        this.featuresRtree_.forEachInExtent(extent, \r\n        /**\r\n         * @param {import(\"../Feature.js\").default} feature Feature.\r\n         */\r\n        function (feature) {\r\n            if (filter(feature)) {\r\n                var geometry = feature.getGeometry();\r\n                var previousMinSquaredDistance = minSquaredDistance;\r\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\r\n                if (minSquaredDistance < previousMinSquaredDistance) {\r\n                    closestFeature = feature;\r\n                    // This is sneaky.  Reduce the extent that it is currently being\r\n                    // searched while the R-Tree traversal using this same extent object\r\n                    // is still in progress.  This is safe because the new extent is\r\n                    // strictly contained by the old extent.\r\n                    var minDistance = Math.sqrt(minSquaredDistance);\r\n                    extent[0] = x - minDistance;\r\n                    extent[1] = y - minDistance;\r\n                    extent[2] = x + minDistance;\r\n                    extent[3] = y + minDistance;\r\n                }\r\n            }\r\n        });\r\n        return closestFeature;\r\n    };\r\n    /**\r\n     * Get the extent of the features currently in the source.\r\n     *\r\n     * This method is not available when the source is configured with\r\n     * `useSpatialIndex` set to `false`.\r\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\r\n     *     will be created. Instead, that extent's coordinates will be overwritten.\r\n     * @return {import(\"../extent.js\").Extent} Extent.\r\n     * @api\r\n     */\r\n    VectorSource.prototype.getExtent = function (opt_extent) {\r\n        return this.featuresRtree_.getExtent(opt_extent);\r\n    };\r\n    /**\r\n     * Get a feature by its identifier (the value returned by feature.getId()).\r\n     * Note that the index treats string and numeric identifiers as the same.  So\r\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\r\n     *\r\n     * @param {string|number} id Feature identifier.\r\n     * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\r\n     * @api\r\n     */\r\n    VectorSource.prototype.getFeatureById = function (id) {\r\n        var feature = this.idIndex_[id.toString()];\r\n        return feature !== undefined ? feature : null;\r\n    };\r\n    /**\r\n     * Get the format associated with this source.\r\n     *\r\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\r\n     * @api\r\n     */\r\n    VectorSource.prototype.getFormat = function () {\r\n        return this.format_;\r\n    };\r\n    /**\r\n     * @return {boolean} The source can have overlapping geometries.\r\n     */\r\n    VectorSource.prototype.getOverlaps = function () {\r\n        return this.overlaps_;\r\n    };\r\n    /**\r\n     * Get the url associated with this source.\r\n     *\r\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\r\n     * @api\r\n     */\r\n    VectorSource.prototype.getUrl = function () {\r\n        return this.url_;\r\n    };\r\n    /**\r\n     * @param {Event} event Event.\r\n     * @private\r\n     */\r\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\r\n        var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\r\n        var featureKey = getUid(feature);\r\n        var geometry = feature.getGeometry();\r\n        if (!geometry) {\r\n            if (!(featureKey in this.nullGeometryFeatures_)) {\r\n                if (this.featuresRtree_) {\r\n                    this.featuresRtree_.remove(feature);\r\n                }\r\n                this.nullGeometryFeatures_[featureKey] = feature;\r\n            }\r\n        }\r\n        else {\r\n            var extent = geometry.getExtent();\r\n            if (featureKey in this.nullGeometryFeatures_) {\r\n                delete this.nullGeometryFeatures_[featureKey];\r\n                if (this.featuresRtree_) {\r\n                    this.featuresRtree_.insert(extent, feature);\r\n                }\r\n            }\r\n            else {\r\n                if (this.featuresRtree_) {\r\n                    this.featuresRtree_.update(extent, feature);\r\n                }\r\n            }\r\n        }\r\n        var id = feature.getId();\r\n        if (id !== undefined) {\r\n            var sid = id.toString();\r\n            if (featureKey in this.undefIdIndex_) {\r\n                delete this.undefIdIndex_[featureKey];\r\n                this.idIndex_[sid] = feature;\r\n            }\r\n            else {\r\n                if (this.idIndex_[sid] !== feature) {\r\n                    this.removeFromIdIndex_(feature);\r\n                    this.idIndex_[sid] = feature;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (!(featureKey in this.undefIdIndex_)) {\r\n                this.removeFromIdIndex_(feature);\r\n                this.undefIdIndex_[featureKey] = feature;\r\n            }\r\n        }\r\n        this.changed();\r\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\r\n    };\r\n    /**\r\n     * Returns true if the feature is contained within the source.\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     * @return {boolean} Has feature.\r\n     * @api\r\n     */\r\n    VectorSource.prototype.hasFeature = function (feature) {\r\n        var id = feature.getId();\r\n        if (id !== undefined) {\r\n            return id in this.idIndex_;\r\n        }\r\n        else {\r\n            return getUid(feature) in this.undefIdIndex_;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean} Is empty.\r\n     */\r\n    VectorSource.prototype.isEmpty = function () {\r\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\r\n    };\r\n    /**\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {number} resolution Resolution.\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     */\r\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\r\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\r\n        var extentsToLoad = this.strategy_(extent, resolution);\r\n        this.loading = false;\r\n        var _loop_1 = function (i, ii) {\r\n            var extentToLoad = extentsToLoad[i];\r\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \r\n            /**\r\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\r\n             * @return {boolean} Contains.\r\n             */\r\n            function (object) {\r\n                return containsExtent(object.extent, extentToLoad);\r\n            });\r\n            if (!alreadyLoaded) {\r\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\r\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\r\n                this_1.loading = this_1.loader_ !== VOID;\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\r\n            _loop_1(i, ii);\r\n        }\r\n    };\r\n    /**\r\n     * Remove an extent from the list of loaded extents.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @api\r\n     */\r\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\r\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\r\n        var obj;\r\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\r\n            if (equals(object.extent, extent)) {\r\n                obj = object;\r\n                return true;\r\n            }\r\n        });\r\n        if (obj) {\r\n            loadedExtentsRtree.remove(obj);\r\n        }\r\n    };\r\n    /**\r\n     * Remove a single feature from the source.  If you want to remove all features\r\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\r\n     * instead.\r\n     * @param {import(\"../Feature.js\").default} feature Feature to remove.\r\n     * @api\r\n     */\r\n    VectorSource.prototype.removeFeature = function (feature) {\r\n        var featureKey = getUid(feature);\r\n        if (featureKey in this.nullGeometryFeatures_) {\r\n            delete this.nullGeometryFeatures_[featureKey];\r\n        }\r\n        else {\r\n            if (this.featuresRtree_) {\r\n                this.featuresRtree_.remove(feature);\r\n            }\r\n        }\r\n        this.removeFeatureInternal(feature);\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Remove feature without firing a `change` event.\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     * @protected\r\n     */\r\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\r\n        var featureKey = getUid(feature);\r\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\r\n        delete this.featureChangeKeys_[featureKey];\r\n        var id = feature.getId();\r\n        if (id !== undefined) {\r\n            delete this.idIndex_[id.toString()];\r\n        }\r\n        else {\r\n            delete this.undefIdIndex_[featureKey];\r\n        }\r\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\r\n    };\r\n    /**\r\n     * Remove a feature from the id index.  Called internally when the feature id\r\n     * may have changed.\r\n     * @param {import(\"../Feature.js\").default} feature The feature.\r\n     * @return {boolean} Removed the feature from the index.\r\n     * @private\r\n     */\r\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\r\n        var removed = false;\r\n        for (var id in this.idIndex_) {\r\n            if (this.idIndex_[id] === feature) {\r\n                delete this.idIndex_[id];\r\n                removed = true;\r\n                break;\r\n            }\r\n        }\r\n        return removed;\r\n    };\r\n    /**\r\n     * Set the new loader of the source. The next loadFeatures call will use the\r\n     * new loader.\r\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\r\n     * @api\r\n     */\r\n    VectorSource.prototype.setLoader = function (loader) {\r\n        this.loader_ = loader;\r\n    };\r\n    return VectorSource;\r\n}(Source));\r\nexport default VectorSource;\r\n//# sourceMappingURL=Vector.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/Draw\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport Feature from '../Feature.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\r\nimport { getChangeEventType } from '../Object.js';\r\nimport { squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\r\nimport { listen } from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport { noModifierKeys, always, shiftKeyOnly } from '../events/condition.js';\r\nimport { boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../extent.js';\r\nimport { TRUE, FALSE } from '../functions.js';\r\nimport Circle from '../geom/Circle.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport { POINTER_TYPE } from '../pointer/MouseSource.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon, { fromCircle, makeRegular } from '../geom/Polygon.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport InteractionProperty from './Property.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport { createEditingStyle } from '../style/Style.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {GeometryType} type Geometry type of\r\n * the geometries being drawn with this instance.\r\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\r\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\r\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\r\n * was chosen for the draw interaction to behave correctly on mouse as well as\r\n * on touch devices.\r\n * @property {import(\"../Collection.js\").default<Feature>} [features]\r\n * Destination collection for the drawn features.\r\n * @property {VectorSource} [source] Destination source for\r\n * the drawn features.\r\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\r\n * before the current vertex can be dragged to its exact position.\r\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\r\n * drawing finish.\r\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\r\n * doubleclick events from firing during drawing.\r\n * @property {number} [maxPoints] The number of points that can be drawn before\r\n * a polygon ring or line string is finished. By default there is no\r\n * restriction.\r\n * @property {number} [minPoints] The number of points that must be drawn\r\n * before a polygon ring or line string can be finished. Default is `3` for\r\n * polygon rings and `2` for line strings.\r\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether the drawing can be finished.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style]\r\n * Style for sketch features.\r\n * @property {GeometryFunction} [geometryFunction]\r\n * Function that is called when a geometry's coordinates are updated.\r\n * @property {string} [geometryName] Geometry name to use for features created\r\n * by the draw interaction.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\r\n * adds a vertex or deactivates freehand drawing.\r\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\r\n * polygons, and circles.  This makes the interaction always operate in freehand\r\n * mode and takes precedence over any `freehandCondition` option.\r\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\r\n * Condition that activates freehand drawing for lines and polygons. This\r\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\r\n * returns a boolean to indicate whether that event should be handled. The\r\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\r\n * Shift key activates freehand drawing.\r\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\r\n * overlay.\r\n */\r\n/**\r\n * Coordinate type when drawing points.\r\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\r\n */\r\n/**\r\n * Coordinate type when drawing lines.\r\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\r\n */\r\n/**\r\n * Coordinate type when drawing polygons.\r\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\r\n */\r\n/**\r\n * Types used for drawing coordinates.\r\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\r\n */\r\n/**\r\n * Function that takes an array of coordinates and an optional existing geometry as\r\n * arguments, and returns a geometry. The optional existing geometry is the\r\n * geometry that is returned when the function is called without a second\r\n * argument.\r\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\r\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\r\n */\r\n/**\r\n * Draw mode.  This collapses multi-part geometry types with their single-part\r\n * cousins.\r\n * @enum {string}\r\n */\r\nvar Mode = {\r\n    POINT: 'Point',\r\n    LINE_STRING: 'LineString',\r\n    POLYGON: 'Polygon',\r\n    CIRCLE: 'Circle'\r\n};\r\n/**\r\n * @enum {string}\r\n */\r\nvar DrawEventType = {\r\n    /**\r\n     * Triggered upon feature draw start\r\n     * @event DrawEvent#drawstart\r\n     * @api\r\n     */\r\n    DRAWSTART: 'drawstart',\r\n    /**\r\n     * Triggered upon feature draw end\r\n     * @event DrawEvent#drawend\r\n     * @api\r\n     */\r\n    DRAWEND: 'drawend'\r\n};\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\r\n * instances of this type.\r\n */\r\nvar DrawEvent = /** @class */ (function (_super) {\r\n    __extends(DrawEvent, _super);\r\n    /**\r\n     * @param {DrawEventType} type Type.\r\n     * @param {Feature} feature The feature drawn.\r\n     */\r\n    function DrawEvent(type, feature) {\r\n        var _this = _super.call(this, type) || this;\r\n        /**\r\n         * The feature being drawn.\r\n         * @type {Feature}\r\n         * @api\r\n         */\r\n        _this.feature = feature;\r\n        return _this;\r\n    }\r\n    return DrawEvent;\r\n}(Event));\r\n/**\r\n * @classdesc\r\n * Interaction for drawing feature geometries.\r\n *\r\n * @fires DrawEvent\r\n * @api\r\n */\r\nvar Draw = /** @class */ (function (_super) {\r\n    __extends(Draw, _super);\r\n    /**\r\n     * @param {Options} options Options.\r\n     */\r\n    function Draw(options) {\r\n        var _this = this;\r\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\r\n        if (!pointerOptions.stopDown) {\r\n            pointerOptions.stopDown = FALSE;\r\n        }\r\n        _this = _super.call(this, pointerOptions) || this;\r\n        /**\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.shouldHandle_ = false;\r\n        /**\r\n         * @type {import(\"../pixel.js\").Pixel}\r\n         * @private\r\n         */\r\n        _this.downPx_ = null;\r\n        /**\r\n         * @type {?}\r\n         * @private\r\n         */\r\n        _this.downTimeout_;\r\n        /**\r\n         * @type {number|undefined}\r\n         * @private\r\n         */\r\n        _this.lastDragTime_;\r\n        /**\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.freehand_ = false;\r\n        /**\r\n         * Target source for drawn features.\r\n         * @type {VectorSource}\r\n         * @private\r\n         */\r\n        _this.source_ = options.source ? options.source : null;\r\n        /**\r\n         * Target collection for drawn features.\r\n         * @type {import(\"../Collection.js\").default<Feature>}\r\n         * @private\r\n         */\r\n        _this.features_ = options.features ? options.features : null;\r\n        /**\r\n         * Pixel distance for snapping.\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\r\n        /**\r\n         * Geometry type.\r\n         * @type {GeometryType}\r\n         * @private\r\n         */\r\n        _this.type_ = /** @type {GeometryType} */ (options.type);\r\n        /**\r\n         * Drawing mode (derived from geometry type.\r\n         * @type {Mode}\r\n         * @private\r\n         */\r\n        _this.mode_ = getMode(_this.type_);\r\n        /**\r\n         * Stop click, singleclick, and doubleclick events from firing during drawing.\r\n         * Default is `false`.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.stopClick_ = !!options.stopClick;\r\n        /**\r\n         * The number of points that must be drawn before a polygon ring or line\r\n         * string can be finished.  The default is 3 for polygon rings and 2 for\r\n         * line strings.\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.minPoints_ = options.minPoints ?\r\n            options.minPoints :\r\n            (_this.mode_ === Mode.POLYGON ? 3 : 2);\r\n        /**\r\n         * The number of points that can be drawn before a polygon ring or line string\r\n         * is finished. The default is no restriction.\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\r\n        /**\r\n         * A function to decide if a potential finish coordinate is permissible\r\n         * @private\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         */\r\n        _this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\r\n        var geometryFunction = options.geometryFunction;\r\n        if (!geometryFunction) {\r\n            if (_this.type_ === GeometryType.CIRCLE) {\r\n                /**\r\n                 * @param {!LineCoordType} coordinates The coordinates.\r\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\r\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\r\n                 */\r\n                geometryFunction = function (coordinates, opt_geometry) {\r\n                    var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\r\n                        new Circle([NaN, NaN]);\r\n                    var squaredLength = squaredCoordinateDistance(coordinates[0], coordinates[1]);\r\n                    circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\r\n                    return circle;\r\n                };\r\n            }\r\n            else {\r\n                var Constructor_1;\r\n                var mode_1 = _this.mode_;\r\n                if (mode_1 === Mode.POINT) {\r\n                    Constructor_1 = Point;\r\n                }\r\n                else if (mode_1 === Mode.LINE_STRING) {\r\n                    Constructor_1 = LineString;\r\n                }\r\n                else if (mode_1 === Mode.POLYGON) {\r\n                    Constructor_1 = Polygon;\r\n                }\r\n                /**\r\n                 * @param {!LineCoordType} coordinates The coordinates.\r\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\r\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\r\n                 */\r\n                geometryFunction = function (coordinates, opt_geometry) {\r\n                    var geometry = opt_geometry;\r\n                    if (geometry) {\r\n                        if (mode_1 === Mode.POLYGON) {\r\n                            if (coordinates[0].length) {\r\n                                // Add a closing coordinate to match the first\r\n                                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\r\n                            }\r\n                            else {\r\n                                geometry.setCoordinates([]);\r\n                            }\r\n                        }\r\n                        else {\r\n                            geometry.setCoordinates(coordinates);\r\n                        }\r\n                    }\r\n                    else {\r\n                        geometry = new Constructor_1(coordinates);\r\n                    }\r\n                    return geometry;\r\n                };\r\n            }\r\n        }\r\n        /**\r\n         * @type {GeometryFunction}\r\n         * @private\r\n         */\r\n        _this.geometryFunction_ = geometryFunction;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\r\n        /**\r\n         * Finish coordinate for the feature (first point for polygons, last point for\r\n         * linestrings).\r\n         * @type {import(\"../coordinate.js\").Coordinate}\r\n         * @private\r\n         */\r\n        _this.finishCoordinate_ = null;\r\n        /**\r\n         * Sketch feature.\r\n         * @type {Feature}\r\n         * @private\r\n         */\r\n        _this.sketchFeature_ = null;\r\n        /**\r\n         * Sketch point.\r\n         * @type {Feature}\r\n         * @private\r\n         */\r\n        _this.sketchPoint_ = null;\r\n        /**\r\n         * Sketch coordinates. Used when drawing a line or polygon.\r\n         * @type {SketchCoordType}\r\n         * @private\r\n         */\r\n        _this.sketchCoords_ = null;\r\n        /**\r\n         * Sketch line. Used when drawing polygon.\r\n         * @type {Feature}\r\n         * @private\r\n         */\r\n        _this.sketchLine_ = null;\r\n        /**\r\n         * Sketch line coordinates. Used when drawing a polygon or circle.\r\n         * @type {LineCoordType}\r\n         * @private\r\n         */\r\n        _this.sketchLineCoords_ = null;\r\n        /**\r\n         * Squared tolerance for handling up events.  If the squared distance\r\n         * between a down and up event is greater than this tolerance, up events\r\n         * will not be handled.\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.squaredClickTolerance_ = options.clickTolerance ?\r\n            options.clickTolerance * options.clickTolerance : 36;\r\n        /**\r\n         * Draw overlay where our sketch features are drawn.\r\n         * @type {VectorLayer}\r\n         * @private\r\n         */\r\n        _this.overlay_ = new VectorLayer({\r\n            source: new VectorSource({\r\n                useSpatialIndex: false,\r\n                wrapX: options.wrapX ? options.wrapX : false\r\n            }),\r\n            style: options.style ? options.style :\r\n                getDefaultStyleFunction(),\r\n            updateWhileInteracting: true\r\n        });\r\n        /**\r\n         * Name of the geometry attribute for newly created features.\r\n         * @type {string|undefined}\r\n         * @private\r\n         */\r\n        _this.geometryName_ = options.geometryName;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         */\r\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         */\r\n        _this.freehandCondition_;\r\n        if (options.freehand) {\r\n            _this.freehandCondition_ = always;\r\n        }\r\n        else {\r\n            _this.freehandCondition_ = options.freehandCondition ?\r\n                options.freehandCondition : shiftKeyOnly;\r\n        }\r\n        listen(_this, getChangeEventType(InteractionProperty.ACTIVE), _this.updateState_, _this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Draw.prototype.setMap = function (map) {\r\n        _super.prototype.setMap.call(this, map);\r\n        this.updateState_();\r\n    };\r\n    /**\r\n     * Get the overlay layer that this interaction renders sketch features to.\r\n     * @return {VectorLayer} Overlay layer.\r\n     * @api\r\n     */\r\n    Draw.prototype.getOverlay = function () {\r\n        return this.overlay_;\r\n    };\r\n    /**\r\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\r\n     * @override\r\n     * @api\r\n     */\r\n    Draw.prototype.handleEvent = function (event) {\r\n        if (event.originalEvent.type === EventType.CONTEXTMENU) {\r\n            // Avoid context menu for long taps when drawing on mobile\r\n            event.preventDefault();\r\n        }\r\n        this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\r\n        var move = event.type === MapBrowserEventType.POINTERMOVE;\r\n        var pass = true;\r\n        if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\r\n            var now = Date.now();\r\n            if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\r\n                this.downPx_ = event.pixel;\r\n                this.shouldHandle_ = !this.freehand_;\r\n                move = true;\r\n            }\r\n            else {\r\n                this.lastDragTime_ = undefined;\r\n            }\r\n            if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\r\n                clearTimeout(this.downTimeout_);\r\n                this.downTimeout_ = undefined;\r\n            }\r\n        }\r\n        if (this.freehand_ &&\r\n            event.type === MapBrowserEventType.POINTERDRAG &&\r\n            this.sketchFeature_ !== null) {\r\n            this.addToDrawing_(event);\r\n            pass = false;\r\n        }\r\n        else if (this.freehand_ &&\r\n            event.type === MapBrowserEventType.POINTERDOWN) {\r\n            pass = false;\r\n        }\r\n        else if (move) {\r\n            pass = event.type === MapBrowserEventType.POINTERMOVE;\r\n            if (pass && this.freehand_) {\r\n                pass = this.handlePointerMove_(event);\r\n            }\r\n            else if ( /** @type {MapBrowserPointerEvent} */(event).pointerEvent.pointerType == POINTER_TYPE ||\r\n                (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\r\n                this.handlePointerMove_(event);\r\n            }\r\n        }\r\n        else if (event.type === MapBrowserEventType.DBLCLICK) {\r\n            pass = false;\r\n        }\r\n        return _super.prototype.handleEvent.call(this, event) && pass;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Draw.prototype.handleDownEvent = function (event) {\r\n        this.shouldHandle_ = !this.freehand_;\r\n        if (this.freehand_) {\r\n            this.downPx_ = event.pixel;\r\n            if (!this.finishCoordinate_) {\r\n                this.startDrawing_(event);\r\n            }\r\n            return true;\r\n        }\r\n        else if (this.condition_(event)) {\r\n            this.lastDragTime_ = Date.now();\r\n            this.downTimeout_ = setTimeout(function () {\r\n                this.handlePointerMove_(new MapBrowserPointerEvent(MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\r\n            }.bind(this), this.dragVertexDelay_);\r\n            this.downPx_ = event.pixel;\r\n            return true;\r\n        }\r\n        else {\r\n            this.lastDragTime_ = undefined;\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Draw.prototype.handleUpEvent = function (event) {\r\n        var pass = true;\r\n        if (this.downTimeout_) {\r\n            clearTimeout(this.downTimeout_);\r\n            this.downTimeout_ = undefined;\r\n        }\r\n        this.handlePointerMove_(event);\r\n        var circleMode = this.mode_ === Mode.CIRCLE;\r\n        if (this.shouldHandle_) {\r\n            if (!this.finishCoordinate_) {\r\n                this.startDrawing_(event);\r\n                if (this.mode_ === Mode.POINT) {\r\n                    this.finishDrawing();\r\n                }\r\n            }\r\n            else if (this.freehand_ || circleMode) {\r\n                this.finishDrawing();\r\n            }\r\n            else if (this.atFinish_(event)) {\r\n                if (this.finishCondition_(event)) {\r\n                    this.finishDrawing();\r\n                }\r\n            }\r\n            else {\r\n                this.addToDrawing_(event);\r\n            }\r\n            pass = false;\r\n        }\r\n        else if (this.freehand_) {\r\n            this.finishCoordinate_ = null;\r\n            this.abortDrawing_();\r\n        }\r\n        if (!pass && this.stopClick_) {\r\n            event.stopPropagation();\r\n        }\r\n        return pass;\r\n    };\r\n    /**\r\n     * Handle move events.\r\n     * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\r\n     * @return {boolean} Pass the event to other interactions.\r\n     * @private\r\n     */\r\n    Draw.prototype.handlePointerMove_ = function (event) {\r\n        if (this.downPx_ &&\r\n            ((!this.freehand_ && this.shouldHandle_) ||\r\n                (this.freehand_ && !this.shouldHandle_))) {\r\n            var downPx = this.downPx_;\r\n            var clickPx = event.pixel;\r\n            var dx = downPx[0] - clickPx[0];\r\n            var dy = downPx[1] - clickPx[1];\r\n            var squaredDistance = dx * dx + dy * dy;\r\n            this.shouldHandle_ = this.freehand_ ?\r\n                squaredDistance > this.squaredClickTolerance_ :\r\n                squaredDistance <= this.squaredClickTolerance_;\r\n            if (!this.shouldHandle_) {\r\n                return true;\r\n            }\r\n        }\r\n        if (this.finishCoordinate_) {\r\n            this.modifyDrawing_(event);\r\n        }\r\n        else {\r\n            this.createOrUpdateSketchPoint_(event);\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Determine if an event is within the snapping tolerance of the start coord.\r\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n     * @return {boolean} The event is within the snapping tolerance of the start.\r\n     * @private\r\n     */\r\n    Draw.prototype.atFinish_ = function (event) {\r\n        var at = false;\r\n        if (this.sketchFeature_) {\r\n            var potentiallyDone = false;\r\n            var potentiallyFinishCoordinates = [this.finishCoordinate_];\r\n            if (this.mode_ === Mode.LINE_STRING) {\r\n                potentiallyDone = this.sketchCoords_.length > this.minPoints_;\r\n            }\r\n            else if (this.mode_ === Mode.POLYGON) {\r\n                var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\r\n                potentiallyDone = sketchCoords[0].length > this.minPoints_;\r\n                potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\r\n            }\r\n            if (potentiallyDone) {\r\n                var map = event.map;\r\n                for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\r\n                    var finishCoordinate = potentiallyFinishCoordinates[i];\r\n                    var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\r\n                    var pixel = event.pixel;\r\n                    var dx = pixel[0] - finishPixel[0];\r\n                    var dy = pixel[1] - finishPixel[1];\r\n                    var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\r\n                    at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\r\n                    if (at) {\r\n                        this.finishCoordinate_ = finishCoordinate;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return at;\r\n    };\r\n    /**\r\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n     * @private\r\n     */\r\n    Draw.prototype.createOrUpdateSketchPoint_ = function (event) {\r\n        var coordinates = event.coordinate.slice();\r\n        if (!this.sketchPoint_) {\r\n            this.sketchPoint_ = new Feature(new Point(coordinates));\r\n            this.updateSketchFeatures_();\r\n        }\r\n        else {\r\n            var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\r\n            sketchPointGeom.setCoordinates(coordinates);\r\n        }\r\n    };\r\n    /**\r\n     * Start the drawing.\r\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n     * @private\r\n     */\r\n    Draw.prototype.startDrawing_ = function (event) {\r\n        var start = event.coordinate;\r\n        this.finishCoordinate_ = start;\r\n        if (this.mode_ === Mode.POINT) {\r\n            this.sketchCoords_ = start.slice();\r\n        }\r\n        else if (this.mode_ === Mode.POLYGON) {\r\n            this.sketchCoords_ = [[start.slice(), start.slice()]];\r\n            this.sketchLineCoords_ = this.sketchCoords_[0];\r\n        }\r\n        else {\r\n            this.sketchCoords_ = [start.slice(), start.slice()];\r\n        }\r\n        if (this.sketchLineCoords_) {\r\n            this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\r\n        }\r\n        var geometry = this.geometryFunction_(this.sketchCoords_);\r\n        this.sketchFeature_ = new Feature();\r\n        if (this.geometryName_) {\r\n            this.sketchFeature_.setGeometryName(this.geometryName_);\r\n        }\r\n        this.sketchFeature_.setGeometry(geometry);\r\n        this.updateSketchFeatures_();\r\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\r\n    };\r\n    /**\r\n     * Modify the drawing.\r\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n     * @private\r\n     */\r\n    Draw.prototype.modifyDrawing_ = function (event) {\r\n        var coordinate = event.coordinate;\r\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\r\n        var coordinates, last;\r\n        if (this.mode_ === Mode.POINT) {\r\n            last = this.sketchCoords_;\r\n        }\r\n        else if (this.mode_ === Mode.POLYGON) {\r\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\r\n            last = coordinates[coordinates.length - 1];\r\n            if (this.atFinish_(event)) {\r\n                // snap to finish\r\n                coordinate = this.finishCoordinate_.slice();\r\n            }\r\n        }\r\n        else {\r\n            coordinates = this.sketchCoords_;\r\n            last = coordinates[coordinates.length - 1];\r\n        }\r\n        last[0] = coordinate[0];\r\n        last[1] = coordinate[1];\r\n        this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\r\n        if (this.sketchPoint_) {\r\n            var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\r\n            sketchPointGeom.setCoordinates(coordinate);\r\n        }\r\n        /** @type {LineString} */\r\n        var sketchLineGeom;\r\n        if (geometry.getType() == GeometryType.POLYGON &&\r\n            this.mode_ !== Mode.POLYGON) {\r\n            if (!this.sketchLine_) {\r\n                this.sketchLine_ = new Feature();\r\n            }\r\n            var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\r\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\r\n            if (!sketchLineGeom) {\r\n                sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\r\n                this.sketchLine_.setGeometry(sketchLineGeom);\r\n            }\r\n            else {\r\n                sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());\r\n                sketchLineGeom.changed();\r\n            }\r\n        }\r\n        else if (this.sketchLineCoords_) {\r\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\r\n            sketchLineGeom.setCoordinates(this.sketchLineCoords_);\r\n        }\r\n        this.updateSketchFeatures_();\r\n    };\r\n    /**\r\n     * Add a new coordinate to the drawing.\r\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n     * @private\r\n     */\r\n    Draw.prototype.addToDrawing_ = function (event) {\r\n        var coordinate = event.coordinate;\r\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\r\n        var done;\r\n        var coordinates;\r\n        if (this.mode_ === Mode.LINE_STRING) {\r\n            this.finishCoordinate_ = coordinate.slice();\r\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\r\n            if (coordinates.length >= this.maxPoints_) {\r\n                if (this.freehand_) {\r\n                    coordinates.pop();\r\n                }\r\n                else {\r\n                    done = true;\r\n                }\r\n            }\r\n            coordinates.push(coordinate.slice());\r\n            this.geometryFunction_(coordinates, geometry);\r\n        }\r\n        else if (this.mode_ === Mode.POLYGON) {\r\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\r\n            if (coordinates.length >= this.maxPoints_) {\r\n                if (this.freehand_) {\r\n                    coordinates.pop();\r\n                }\r\n                else {\r\n                    done = true;\r\n                }\r\n            }\r\n            coordinates.push(coordinate.slice());\r\n            if (done) {\r\n                this.finishCoordinate_ = coordinates[0];\r\n            }\r\n            this.geometryFunction_(this.sketchCoords_, geometry);\r\n        }\r\n        this.updateSketchFeatures_();\r\n        if (done) {\r\n            this.finishDrawing();\r\n        }\r\n    };\r\n    /**\r\n     * Remove last point of the feature currently being drawn.\r\n     * @api\r\n     */\r\n    Draw.prototype.removeLastPoint = function () {\r\n        if (!this.sketchFeature_) {\r\n            return;\r\n        }\r\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\r\n        var coordinates;\r\n        /** @type {LineString} */\r\n        var sketchLineGeom;\r\n        if (this.mode_ === Mode.LINE_STRING) {\r\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\r\n            coordinates.splice(-2, 1);\r\n            this.geometryFunction_(coordinates, geometry);\r\n            if (coordinates.length >= 2) {\r\n                this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\r\n            }\r\n        }\r\n        else if (this.mode_ === Mode.POLYGON) {\r\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\r\n            coordinates.splice(-2, 1);\r\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\r\n            sketchLineGeom.setCoordinates(coordinates);\r\n            this.geometryFunction_(this.sketchCoords_, geometry);\r\n        }\r\n        if (coordinates.length === 0) {\r\n            this.finishCoordinate_ = null;\r\n        }\r\n        this.updateSketchFeatures_();\r\n    };\r\n    /**\r\n     * Stop drawing and add the sketch feature to the target layer.\r\n     * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\r\n     * dispatched before inserting the feature.\r\n     * @api\r\n     */\r\n    Draw.prototype.finishDrawing = function () {\r\n        var sketchFeature = this.abortDrawing_();\r\n        if (!sketchFeature) {\r\n            return;\r\n        }\r\n        var coordinates = this.sketchCoords_;\r\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\r\n        if (this.mode_ === Mode.LINE_STRING) {\r\n            // remove the redundant last point\r\n            coordinates.pop();\r\n            this.geometryFunction_(coordinates, geometry);\r\n        }\r\n        else if (this.mode_ === Mode.POLYGON) {\r\n            // remove the redundant last point in ring\r\n            /** @type {PolyCoordType} */ (coordinates)[0].pop();\r\n            this.geometryFunction_(coordinates, geometry);\r\n            coordinates = geometry.getCoordinates();\r\n        }\r\n        // cast multi-part geometries\r\n        if (this.type_ === GeometryType.MULTI_POINT) {\r\n            sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */ (coordinates)]));\r\n        }\r\n        else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\r\n            sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */ (coordinates)]));\r\n        }\r\n        else if (this.type_ === GeometryType.MULTI_POLYGON) {\r\n            sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]));\r\n        }\r\n        // First dispatch event to allow full set up of feature\r\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\r\n        // Then insert feature\r\n        if (this.features_) {\r\n            this.features_.push(sketchFeature);\r\n        }\r\n        if (this.source_) {\r\n            this.source_.addFeature(sketchFeature);\r\n        }\r\n    };\r\n    /**\r\n     * Stop drawing without adding the sketch feature to the target layer.\r\n     * @return {Feature} The sketch feature (or null if none).\r\n     * @private\r\n     */\r\n    Draw.prototype.abortDrawing_ = function () {\r\n        this.finishCoordinate_ = null;\r\n        var sketchFeature = this.sketchFeature_;\r\n        if (sketchFeature) {\r\n            this.sketchFeature_ = null;\r\n            this.sketchPoint_ = null;\r\n            this.sketchLine_ = null;\r\n            /** @type {VectorSource} */ (this.overlay_.getSource()).clear(true);\r\n        }\r\n        return sketchFeature;\r\n    };\r\n    /**\r\n     * Extend an existing geometry by adding additional points. This only works\r\n     * on features with `LineString` geometries, where the interaction will\r\n     * extend lines by adding points to the end of the coordinates array.\r\n     * @param {!Feature} feature Feature to be extended.\r\n     * @api\r\n     */\r\n    Draw.prototype.extend = function (feature) {\r\n        var geometry = feature.getGeometry();\r\n        var lineString = /** @type {LineString} */ (geometry);\r\n        this.sketchFeature_ = feature;\r\n        this.sketchCoords_ = lineString.getCoordinates();\r\n        var last = this.sketchCoords_[this.sketchCoords_.length - 1];\r\n        this.finishCoordinate_ = last.slice();\r\n        this.sketchCoords_.push(last.slice());\r\n        this.updateSketchFeatures_();\r\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\r\n    };\r\n    /**\r\n     * Redraw the sketch features.\r\n     * @private\r\n     */\r\n    Draw.prototype.updateSketchFeatures_ = function () {\r\n        var sketchFeatures = [];\r\n        if (this.sketchFeature_) {\r\n            sketchFeatures.push(this.sketchFeature_);\r\n        }\r\n        if (this.sketchLine_) {\r\n            sketchFeatures.push(this.sketchLine_);\r\n        }\r\n        if (this.sketchPoint_) {\r\n            sketchFeatures.push(this.sketchPoint_);\r\n        }\r\n        var overlaySource = /** @type {VectorSource} */ (this.overlay_.getSource());\r\n        overlaySource.clear(true);\r\n        overlaySource.addFeatures(sketchFeatures);\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    Draw.prototype.updateState_ = function () {\r\n        var map = this.getMap();\r\n        var active = this.getActive();\r\n        if (!map || !active) {\r\n            this.abortDrawing_();\r\n        }\r\n        this.overlay_.setMap(active ? map : null);\r\n    };\r\n    return Draw;\r\n}(PointerInteraction));\r\n/**\r\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\r\n */\r\nfunction getDefaultStyleFunction() {\r\n    var styles = createEditingStyle();\r\n    return function (feature, resolution) {\r\n        return styles[feature.getGeometry().getType()];\r\n    };\r\n}\r\n/**\r\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\r\n * polygon with a user specified number of sides and start angle instead of an\r\n * `import(\"../geom/Circle.js\").Circle` geometry.\r\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\r\n *     32.\r\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\r\n *     Default is the angle defined by the heading from the center of the\r\n *     regular polygon to the current pointer position.\r\n * @return {GeometryFunction} Function that draws a\r\n *     polygon.\r\n * @api\r\n */\r\nexport function createRegularPolygon(opt_sides, opt_angle) {\r\n    return function (coordinates, opt_geometry) {\r\n        var center = /** @type {LineCoordType} */ (coordinates)[0];\r\n        var end = /** @type {LineCoordType} */ (coordinates)[1];\r\n        var radius = Math.sqrt(squaredCoordinateDistance(center, end));\r\n        var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\r\n            fromCircle(new Circle(center), opt_sides);\r\n        var angle = opt_angle;\r\n        if (!opt_angle) {\r\n            var x = end[0] - center[0];\r\n            var y = end[1] - center[1];\r\n            angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\r\n        }\r\n        makeRegular(geometry, center, radius, angle);\r\n        return geometry;\r\n    };\r\n}\r\n/**\r\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\r\n * with the coordinate system axes).  Use this with the draw interaction and\r\n * `type: 'Circle'` to return a box instead of a circle geometry.\r\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\r\n * @api\r\n */\r\nexport function createBox() {\r\n    return (function (coordinates, opt_geometry) {\r\n        var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\r\n        var boxCoordinates = [[\r\n                getBottomLeft(extent),\r\n                getBottomRight(extent),\r\n                getTopRight(extent),\r\n                getTopLeft(extent),\r\n                getBottomLeft(extent)\r\n            ]];\r\n        var geometry = opt_geometry;\r\n        if (geometry) {\r\n            geometry.setCoordinates(boxCoordinates);\r\n        }\r\n        else {\r\n            geometry = new Polygon(boxCoordinates);\r\n        }\r\n        return geometry;\r\n    });\r\n}\r\n/**\r\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\r\n * their single-part cousins.\r\n * @param {GeometryType} type Geometry type.\r\n * @return {Mode} Drawing mode.\r\n */\r\nfunction getMode(type) {\r\n    var mode;\r\n    if (type === GeometryType.POINT ||\r\n        type === GeometryType.MULTI_POINT) {\r\n        mode = Mode.POINT;\r\n    }\r\n    else if (type === GeometryType.LINE_STRING ||\r\n        type === GeometryType.MULTI_LINE_STRING) {\r\n        mode = Mode.LINE_STRING;\r\n    }\r\n    else if (type === GeometryType.POLYGON ||\r\n        type === GeometryType.MULTI_POLYGON) {\r\n        mode = Mode.POLYGON;\r\n    }\r\n    else if (type === GeometryType.CIRCLE) {\r\n        mode = Mode.CIRCLE;\r\n    }\r\n    return (\r\n    /** @type {!Mode} */ (mode));\r\n}\r\nexport default Draw;\r\n//# sourceMappingURL=Draw.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/Extent\r\n */\r\nimport Feature from '../Feature.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport { squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\r\nimport Event from '../events/Event.js';\r\nimport { boundingExtent, getArea } from '../extent.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport Point from '../geom/Point.js';\r\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport { createEditingStyle } from '../style/Style.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\r\n * initial extent.\r\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\r\n * Style for the drawn extent box. Defaults to\r\n * {@link module:ol/style/Style~createEditing()['Polygon']}\r\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\r\n * pointer close enough to a segment or vertex for editing.\r\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\r\n * Style for the cursor used to draw the extent. Defaults to\r\n * {@link module:ol/style/Style~createEditing()['Point']}\r\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\r\n * in the X direction? Only affects visuals, not functionality.\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nvar ExtentEventType = {\r\n    /**\r\n     * Triggered after the extent is changed\r\n     * @event ExtentEventType#extentchanged\r\n     * @api\r\n     */\r\n    EXTENTCHANGED: 'extentchanged'\r\n};\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Extent~ExtentInteraction} instances are\r\n * instances of this type.\r\n */\r\nvar ExtentInteractionEvent = /** @class */ (function (_super) {\r\n    __extends(ExtentInteractionEvent, _super);\r\n    /**\r\n     * @param {import(\"../extent.js\").Extent} extent the new extent\r\n     */\r\n    function ExtentInteractionEvent(extent) {\r\n        var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\r\n        /**\r\n         * The current extent.\r\n         * @type {import(\"../extent.js\").Extent}\r\n         * @api\r\n         */\r\n        _this.extent = extent;\r\n        return _this;\r\n    }\r\n    return ExtentInteractionEvent;\r\n}(Event));\r\n/**\r\n * @classdesc\r\n * Allows the user to draw a vector box by clicking and dragging on the map.\r\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\r\n * This interaction is only supported for mouse devices.\r\n *\r\n * @fires Event\r\n * @api\r\n */\r\nvar ExtentInteraction = /** @class */ (function (_super) {\r\n    __extends(ExtentInteraction, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function ExtentInteraction(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options || {};\r\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\r\n        /**\r\n         * Extent of the drawn box\r\n         * @type {import(\"../extent.js\").Extent}\r\n         * @private\r\n         */\r\n        _this.extent_ = null;\r\n        /**\r\n         * Handler for pointer move events\r\n         * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\r\n         * @private\r\n         */\r\n        _this.pointerHandler_ = null;\r\n        /**\r\n         * Pixel threshold to snap to extent\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\r\n            options.pixelTolerance : 10;\r\n        /**\r\n         * Is the pointer snapped to an extent vertex\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.snappedToVertex_ = false;\r\n        /**\r\n         * Feature for displaying the visible extent\r\n         * @type {Feature}\r\n         * @private\r\n         */\r\n        _this.extentFeature_ = null;\r\n        /**\r\n         * Feature for displaying the visible pointer\r\n         * @type {Feature}\r\n         * @private\r\n         */\r\n        _this.vertexFeature_ = null;\r\n        if (!opt_options) {\r\n            opt_options = {};\r\n        }\r\n        /**\r\n         * Layer for the extentFeature\r\n         * @type {VectorLayer}\r\n         * @private\r\n         */\r\n        _this.extentOverlay_ = new VectorLayer({\r\n            source: new VectorSource({\r\n                useSpatialIndex: false,\r\n                wrapX: !!opt_options.wrapX\r\n            }),\r\n            style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\r\n            updateWhileAnimating: true,\r\n            updateWhileInteracting: true\r\n        });\r\n        /**\r\n         * Layer for the vertexFeature\r\n         * @type {VectorLayer}\r\n         * @private\r\n         */\r\n        _this.vertexOverlay_ = new VectorLayer({\r\n            source: new VectorSource({\r\n                useSpatialIndex: false,\r\n                wrapX: !!opt_options.wrapX\r\n            }),\r\n            style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\r\n            updateWhileAnimating: true,\r\n            updateWhileInteracting: true\r\n        });\r\n        if (opt_options.extent) {\r\n            _this.setExtent(opt_options.extent);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {import(\"../pixel.js\").Pixel} pixel cursor location\r\n     * @param {import(\"../PluggableMap.js\").default} map map\r\n     * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\r\n     * @private\r\n     */\r\n    ExtentInteraction.prototype.snapToVertex_ = function (pixel, map) {\r\n        var pixelCoordinate = map.getCoordinateFromPixel(pixel);\r\n        var sortByDistance = function (a, b) {\r\n            return squaredDistanceToSegment(pixelCoordinate, a) -\r\n                squaredDistanceToSegment(pixelCoordinate, b);\r\n        };\r\n        var extent = this.getExtent();\r\n        if (extent) {\r\n            //convert extents to line segments and find the segment closest to pixelCoordinate\r\n            var segments = getSegments(extent);\r\n            segments.sort(sortByDistance);\r\n            var closestSegment = segments[0];\r\n            var vertex = (closestOnSegment(pixelCoordinate, closestSegment));\r\n            var vertexPixel = map.getPixelFromCoordinate(vertex);\r\n            //if the distance is within tolerance, snap to the segment\r\n            if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\r\n                //test if we should further snap to a vertex\r\n                var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n                var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n                var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\r\n                var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\r\n                var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n                this.snappedToVertex_ = dist <= this.pixelTolerance_;\r\n                if (this.snappedToVertex_) {\r\n                    vertex = squaredDist1 > squaredDist2 ?\r\n                        closestSegment[1] : closestSegment[0];\r\n                }\r\n                return vertex;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\r\n     * @private\r\n     */\r\n    ExtentInteraction.prototype.handlePointerMove_ = function (mapBrowserEvent) {\r\n        var pixel = mapBrowserEvent.pixel;\r\n        var map = mapBrowserEvent.map;\r\n        var vertex = this.snapToVertex_(pixel, map);\r\n        if (!vertex) {\r\n            vertex = map.getCoordinateFromPixel(pixel);\r\n        }\r\n        this.createOrUpdatePointerFeature_(vertex);\r\n    };\r\n    /**\r\n     * @param {import(\"../extent.js\").Extent} extent extent\r\n     * @returns {Feature} extent as featrue\r\n     * @private\r\n     */\r\n    ExtentInteraction.prototype.createOrUpdateExtentFeature_ = function (extent) {\r\n        var extentFeature = this.extentFeature_;\r\n        if (!extentFeature) {\r\n            if (!extent) {\r\n                extentFeature = new Feature({});\r\n            }\r\n            else {\r\n                extentFeature = new Feature(polygonFromExtent(extent));\r\n            }\r\n            this.extentFeature_ = extentFeature;\r\n            /** @type {VectorSource} */ (this.extentOverlay_.getSource()).addFeature(extentFeature);\r\n        }\r\n        else {\r\n            if (!extent) {\r\n                extentFeature.setGeometry(undefined);\r\n            }\r\n            else {\r\n                extentFeature.setGeometry(polygonFromExtent(extent));\r\n            }\r\n        }\r\n        return extentFeature;\r\n    };\r\n    /**\r\n     * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\r\n     * @returns {Feature} vertex as feature\r\n     * @private\r\n     */\r\n    ExtentInteraction.prototype.createOrUpdatePointerFeature_ = function (vertex) {\r\n        var vertexFeature = this.vertexFeature_;\r\n        if (!vertexFeature) {\r\n            vertexFeature = new Feature(new Point(vertex));\r\n            this.vertexFeature_ = vertexFeature;\r\n            /** @type {VectorSource} */ (this.vertexOverlay_.getSource()).addFeature(vertexFeature);\r\n        }\r\n        else {\r\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\r\n            geometry.setCoordinates(vertex);\r\n        }\r\n        return vertexFeature;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ExtentInteraction.prototype.handleEvent = function (mapBrowserEvent) {\r\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\r\n            return true;\r\n        }\r\n        //display pointer (if not dragging)\r\n        if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\r\n            this.handlePointerMove_(mapBrowserEvent);\r\n        }\r\n        //call pointer to determine up/down/drag\r\n        _super.prototype.handleEvent.call(this, mapBrowserEvent);\r\n        //return false to stop propagation\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ExtentInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\r\n        var pixel = mapBrowserEvent.pixel;\r\n        var map = mapBrowserEvent.map;\r\n        var extent = this.getExtent();\r\n        var vertex = this.snapToVertex_(pixel, map);\r\n        //find the extent corner opposite the passed corner\r\n        var getOpposingPoint = function (point) {\r\n            var x_ = null;\r\n            var y_ = null;\r\n            if (point[0] == extent[0]) {\r\n                x_ = extent[2];\r\n            }\r\n            else if (point[0] == extent[2]) {\r\n                x_ = extent[0];\r\n            }\r\n            if (point[1] == extent[1]) {\r\n                y_ = extent[3];\r\n            }\r\n            else if (point[1] == extent[3]) {\r\n                y_ = extent[1];\r\n            }\r\n            if (x_ !== null && y_ !== null) {\r\n                return [x_, y_];\r\n            }\r\n            return null;\r\n        };\r\n        if (vertex && extent) {\r\n            var x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\r\n            var y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\r\n            //snap to point\r\n            if (x !== null && y !== null) {\r\n                this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\r\n                //snap to edge\r\n            }\r\n            else if (x !== null) {\r\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\r\n            }\r\n            else if (y !== null) {\r\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\r\n            }\r\n            //no snap - new bbox\r\n        }\r\n        else {\r\n            vertex = map.getCoordinateFromPixel(pixel);\r\n            this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\r\n            this.pointerHandler_ = getPointHandler(vertex);\r\n        }\r\n        return true; //event handled; start downup sequence\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ExtentInteraction.prototype.handleDragEvent = function (mapBrowserEvent) {\r\n        if (this.pointerHandler_) {\r\n            var pixelCoordinate = mapBrowserEvent.coordinate;\r\n            this.setExtent(this.pointerHandler_(pixelCoordinate));\r\n            this.createOrUpdatePointerFeature_(pixelCoordinate);\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ExtentInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\r\n        this.pointerHandler_ = null;\r\n        //If bbox is zero area, set to null;\r\n        var extent = this.getExtent();\r\n        if (!extent || getArea(extent) === 0) {\r\n            this.setExtent(null);\r\n        }\r\n        return false; //Stop handling downup sequence\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ExtentInteraction.prototype.setMap = function (map) {\r\n        this.extentOverlay_.setMap(map);\r\n        this.vertexOverlay_.setMap(map);\r\n        _super.prototype.setMap.call(this, map);\r\n    };\r\n    /**\r\n     * Returns the current drawn extent in the view projection\r\n     *\r\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\r\n     * @api\r\n     */\r\n    ExtentInteraction.prototype.getExtent = function () {\r\n        return this.extent_;\r\n    };\r\n    /**\r\n     * Manually sets the drawn extent, using the view projection.\r\n     *\r\n     * @param {import(\"../extent.js\").Extent} extent Extent\r\n     * @api\r\n     */\r\n    ExtentInteraction.prototype.setExtent = function (extent) {\r\n        //Null extent means no bbox\r\n        this.extent_ = extent ? extent : null;\r\n        this.createOrUpdateExtentFeature_(extent);\r\n        this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\r\n    };\r\n    return ExtentInteraction;\r\n}(PointerInteraction));\r\n/**\r\n * Returns the default style for the drawn bbox\r\n *\r\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\r\n */\r\nfunction getDefaultExtentStyleFunction() {\r\n    var style = createEditingStyle();\r\n    return function (feature, resolution) {\r\n        return style[GeometryType.POLYGON];\r\n    };\r\n}\r\n/**\r\n * Returns the default style for the pointer\r\n *\r\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\r\n */\r\nfunction getDefaultPointerStyleFunction() {\r\n    var style = createEditingStyle();\r\n    return function (feature, resolution) {\r\n        return style[GeometryType.POINT];\r\n    };\r\n}\r\n/**\r\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\r\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\r\n */\r\nfunction getPointHandler(fixedPoint) {\r\n    return function (point) {\r\n        return boundingExtent([fixedPoint, point]);\r\n    };\r\n}\r\n/**\r\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\r\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\r\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\r\n */\r\nfunction getEdgeHandler(fixedP1, fixedP2) {\r\n    if (fixedP1[0] == fixedP2[0]) {\r\n        return function (point) {\r\n            return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\r\n        };\r\n    }\r\n    else if (fixedP1[1] == fixedP2[1]) {\r\n        return function (point) {\r\n            return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\r\n        };\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * @param {import(\"../extent.js\").Extent} extent extent\r\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\r\n */\r\nfunction getSegments(extent) {\r\n    return [\r\n        [[extent[0], extent[1]], [extent[0], extent[3]]],\r\n        [[extent[0], extent[3]], [extent[2], extent[3]]],\r\n        [[extent[2], extent[3]], [extent[2], extent[1]]],\r\n        [[extent[2], extent[1]], [extent[0], extent[1]]]\r\n    ];\r\n}\r\nexport default ExtentInteraction;\r\n//# sourceMappingURL=Extent.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/Modify\r\n */\r\nimport { getUid } from '../util.js';\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport Feature from '../Feature.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport { equals } from '../array.js';\r\nimport { equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment } from '../coordinate.js';\r\nimport { listen, unlisten } from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { always, primaryAction, altKeyOnly, singleClick } from '../events/condition.js';\r\nimport { boundingExtent, buffer, createOrUpdateFromCoordinate } from '../extent.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport Point from '../geom/Point.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport VectorEventType from '../source/VectorEventType.js';\r\nimport RBush from '../structs/RBush.js';\r\nimport { createEditingStyle } from '../style/Style.js';\r\n/**\r\n * The segment index assigned to a circle's center when\r\n * breaking up a circle into ModifySegmentDataType segments.\r\n * @type {number}\r\n */\r\nvar CIRCLE_CENTER_INDEX = 0;\r\n/**\r\n * The segment index assigned to a circle's circumference when\r\n * breaking up a circle into ModifySegmentDataType segments.\r\n * @type {number}\r\n */\r\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\r\n/**\r\n * @enum {string}\r\n */\r\nvar ModifyEventType = {\r\n    /**\r\n     * Triggered upon feature modification start\r\n     * @event ModifyEvent#modifystart\r\n     * @api\r\n     */\r\n    MODIFYSTART: 'modifystart',\r\n    /**\r\n     * Triggered upon feature modification end\r\n     * @event ModifyEvent#modifyend\r\n     * @api\r\n     */\r\n    MODIFYEND: 'modifyend'\r\n};\r\n/**\r\n * @typedef {Object} SegmentData\r\n * @property {Array<number>} [depth]\r\n * @property {Feature} feature\r\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\r\n * @property {number} [index]\r\n * @property {Array<import(\"../extent.js\").Extent>} segment\r\n * @property {Array<SegmentData>} [featureSegments]\r\n */\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event will be considered to add or move a\r\n * vertex to the sketch. Default is\r\n * {@link module:ol/events/condition~primaryAction}.\r\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. By default,\r\n * {@link module:ol/events/condition~singleClick} with\r\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\r\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\r\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\r\n * returns a boolean to indicate whether a new vertex should be added to the sketch\r\n * features. Default is {@link module:ol/events/condition~always}.\r\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\r\n * pointer close enough to a segment or vertex for editing.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style]\r\n * Style used for the features being modified. By default the default edit\r\n * style is used (see {@link module:ol/style}).\r\n * @property {VectorSource} [source] The vector source with\r\n * features to modify.  If a vector source is not provided, a feature collection\r\n * must be provided with the features option.\r\n * @property {Collection<Feature>} [features]\r\n * The features the interaction works on.  If a feature collection is not\r\n * provided, a vector source must be provided with the source option.\r\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\r\n * overlay.\r\n */\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\r\n * instances of this type.\r\n */\r\nvar ModifyEvent = /** @class */ (function (_super) {\r\n    __extends(ModifyEvent, _super);\r\n    /**\r\n     * @param {ModifyEventType} type Type.\r\n     * @param {Collection<Feature>} features\r\n     * The features modified.\r\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserPointerEvent\r\n     * Associated {@link module:ol/MapBrowserPointerEvent}.\r\n     */\r\n    function ModifyEvent(type, features, mapBrowserPointerEvent) {\r\n        var _this = _super.call(this, type) || this;\r\n        /**\r\n         * The features being modified.\r\n         * @type {Collection<Feature>}\r\n         * @api\r\n         */\r\n        _this.features = features;\r\n        /**\r\n         * Associated {@link module:ol/MapBrowserEvent}.\r\n         * @type {import(\"../MapBrowserEvent.js\").default}\r\n         * @api\r\n         */\r\n        _this.mapBrowserEvent = mapBrowserPointerEvent;\r\n        return _this;\r\n    }\r\n    return ModifyEvent;\r\n}(Event));\r\nexport { ModifyEvent };\r\n/**\r\n * @classdesc\r\n * Interaction for modifying feature geometries.  To modify features that have\r\n * been added to an existing source, construct the modify interaction with the\r\n * `source` option.  If you want to modify features in a collection (for example,\r\n * the collection used by a select interaction), construct the interaction with\r\n * the `features` option.  The interaction must be constructed with either a\r\n * `source` or `features` option.\r\n *\r\n * By default, the interaction will allow deletion of vertices when the `alt`\r\n * key is pressed.  To configure the interaction with a different condition\r\n * for deletion, use the `deleteCondition` option.\r\n * @fires ModifyEvent\r\n * @api\r\n */\r\nvar Modify = /** @class */ (function (_super) {\r\n    __extends(Modify, _super);\r\n    /**\r\n     * @param {Options} options Options.\r\n     */\r\n    function Modify(options) {\r\n        var _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         */\r\n        _this.condition_ = options.condition ? options.condition : primaryAction;\r\n        /**\r\n         * @private\r\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\r\n         * @return {boolean} Combined condition result.\r\n         */\r\n        _this.defaultDeleteCondition_ = function (mapBrowserEvent) {\r\n            return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\r\n        };\r\n        /**\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         * @private\r\n         */\r\n        _this.deleteCondition_ = options.deleteCondition ?\r\n            options.deleteCondition : _this.defaultDeleteCondition_;\r\n        /**\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         * @private\r\n         */\r\n        _this.insertVertexCondition_ = options.insertVertexCondition ?\r\n            options.insertVertexCondition : always;\r\n        /**\r\n         * Editing vertex.\r\n         * @type {Feature}\r\n         * @private\r\n         */\r\n        _this.vertexFeature_ = null;\r\n        /**\r\n         * Segments intersecting {@link this.vertexFeature_} by segment uid.\r\n         * @type {Object<string, boolean>}\r\n         * @private\r\n         */\r\n        _this.vertexSegments_ = null;\r\n        /**\r\n         * @type {import(\"../pixel.js\").Pixel}\r\n         * @private\r\n         */\r\n        _this.lastPixel_ = [0, 0];\r\n        /**\r\n         * Tracks if the next `singleclick` event should be ignored to prevent\r\n         * accidental deletion right after vertex creation.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.ignoreNextSingleClick_ = false;\r\n        /**\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.modified_ = false;\r\n        /**\r\n         * Segment RTree for each layer\r\n         * @type {RBush<SegmentData>}\r\n         * @private\r\n         */\r\n        _this.rBush_ = new RBush();\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\r\n            options.pixelTolerance : 10;\r\n        /**\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.snappedToVertex_ = false;\r\n        /**\r\n         * Indicate whether the interaction is currently changing a feature's\r\n         * coordinates.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.changingFeature_ = false;\r\n        /**\r\n         * @type {Array}\r\n         * @private\r\n         */\r\n        _this.dragSegments_ = [];\r\n        /**\r\n         * Draw overlay where sketch features are drawn.\r\n         * @type {VectorLayer}\r\n         * @private\r\n         */\r\n        _this.overlay_ = new VectorLayer({\r\n            source: new VectorSource({\r\n                useSpatialIndex: false,\r\n                wrapX: !!options.wrapX\r\n            }),\r\n            style: options.style ? options.style :\r\n                getDefaultStyleFunction(),\r\n            updateWhileAnimating: true,\r\n            updateWhileInteracting: true\r\n        });\r\n        /**\r\n         * @const\r\n         * @private\r\n         * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\r\n         */\r\n        _this.SEGMENT_WRITERS_ = {\r\n            'Point': _this.writePointGeometry_,\r\n            'LineString': _this.writeLineStringGeometry_,\r\n            'LinearRing': _this.writeLineStringGeometry_,\r\n            'Polygon': _this.writePolygonGeometry_,\r\n            'MultiPoint': _this.writeMultiPointGeometry_,\r\n            'MultiLineString': _this.writeMultiLineStringGeometry_,\r\n            'MultiPolygon': _this.writeMultiPolygonGeometry_,\r\n            'Circle': _this.writeCircleGeometry_,\r\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_\r\n        };\r\n        /**\r\n         * @type {VectorSource}\r\n         * @private\r\n         */\r\n        _this.source_ = null;\r\n        var features;\r\n        if (options.source) {\r\n            _this.source_ = options.source;\r\n            features = new Collection(_this.source_.getFeatures());\r\n            listen(_this.source_, VectorEventType.ADDFEATURE, _this.handleSourceAdd_, _this);\r\n            listen(_this.source_, VectorEventType.REMOVEFEATURE, _this.handleSourceRemove_, _this);\r\n        }\r\n        else {\r\n            features = options.features;\r\n        }\r\n        if (!features) {\r\n            throw new Error('The modify interaction requires features or a source');\r\n        }\r\n        /**\r\n         * @type {Collection<Feature>}\r\n         * @private\r\n         */\r\n        _this.features_ = features;\r\n        _this.features_.forEach(_this.addFeature_.bind(_this));\r\n        listen(_this.features_, CollectionEventType.ADD, _this.handleFeatureAdd_, _this);\r\n        listen(_this.features_, CollectionEventType.REMOVE, _this.handleFeatureRemove_, _this);\r\n        /**\r\n         * @type {import(\"../MapBrowserPointerEvent.js\").default}\r\n         * @private\r\n         */\r\n        _this.lastPointerEvent_ = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {Feature} feature Feature.\r\n     * @private\r\n     */\r\n    Modify.prototype.addFeature_ = function (feature) {\r\n        var geometry = feature.getGeometry();\r\n        if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\r\n            this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\r\n        }\r\n        var map = this.getMap();\r\n        if (map && map.isRendered() && this.getActive()) {\r\n            this.handlePointerAtPixel_(this.lastPixel_, map);\r\n        }\r\n        listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\r\n    };\r\n    /**\r\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\r\n     * @private\r\n     */\r\n    Modify.prototype.willModifyFeatures_ = function (evt) {\r\n        if (!this.modified_) {\r\n            this.modified_ = true;\r\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYSTART, this.features_, evt));\r\n        }\r\n    };\r\n    /**\r\n     * @param {Feature} feature Feature.\r\n     * @private\r\n     */\r\n    Modify.prototype.removeFeature_ = function (feature) {\r\n        this.removeFeatureSegmentData_(feature);\r\n        // Remove the vertex feature if the collection of canditate features\r\n        // is empty.\r\n        if (this.vertexFeature_ && this.features_.getLength() === 0) {\r\n            /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\r\n            this.vertexFeature_ = null;\r\n        }\r\n        unlisten(feature, EventType.CHANGE, this.handleFeatureChange_, this);\r\n    };\r\n    /**\r\n     * @param {Feature} feature Feature.\r\n     * @private\r\n     */\r\n    Modify.prototype.removeFeatureSegmentData_ = function (feature) {\r\n        var rBush = this.rBush_;\r\n        var /** @type {Array<SegmentData>} */ nodesToRemove = [];\r\n        rBush.forEach(\r\n        /**\r\n         * @param {SegmentData} node RTree node.\r\n         */\r\n        function (node) {\r\n            if (feature === node.feature) {\r\n                nodesToRemove.push(node);\r\n            }\r\n        });\r\n        for (var i = nodesToRemove.length - 1; i >= 0; --i) {\r\n            var nodeToRemove = nodesToRemove[i];\r\n            for (var j = this.dragSegments_.length - 1; j >= 0; --j) {\r\n                if (this.dragSegments_[j][0] === nodeToRemove) {\r\n                    this.dragSegments_.splice(j, 1);\r\n                }\r\n            }\r\n            rBush.remove(nodeToRemove);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Modify.prototype.setActive = function (active) {\r\n        if (this.vertexFeature_ && !active) {\r\n            /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\r\n            this.vertexFeature_ = null;\r\n        }\r\n        _super.prototype.setActive.call(this, active);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Modify.prototype.setMap = function (map) {\r\n        this.overlay_.setMap(map);\r\n        _super.prototype.setMap.call(this, map);\r\n    };\r\n    /**\r\n     * Get the overlay layer that this interaction renders sketch features to.\r\n     * @return {VectorLayer} Overlay layer.\r\n     * @api\r\n     */\r\n    Modify.prototype.getOverlay = function () {\r\n        return this.overlay_;\r\n    };\r\n    /**\r\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\r\n     * @private\r\n     */\r\n    Modify.prototype.handleSourceAdd_ = function (event) {\r\n        if (event.feature) {\r\n            this.features_.push(event.feature);\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\r\n     * @private\r\n     */\r\n    Modify.prototype.handleSourceRemove_ = function (event) {\r\n        if (event.feature) {\r\n            this.features_.remove(event.feature);\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\r\n     * @private\r\n     */\r\n    Modify.prototype.handleFeatureAdd_ = function (evt) {\r\n        this.addFeature_(/** @type {Feature} */ (evt.element));\r\n    };\r\n    /**\r\n     * @param {import(\"../events/Event.js\").default} evt Event.\r\n     * @private\r\n     */\r\n    Modify.prototype.handleFeatureChange_ = function (evt) {\r\n        if (!this.changingFeature_) {\r\n            var feature = /** @type {Feature} */ (evt.target);\r\n            this.removeFeature_(feature);\r\n            this.addFeature_(feature);\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\r\n     * @private\r\n     */\r\n    Modify.prototype.handleFeatureRemove_ = function (evt) {\r\n        var feature = /** @type {Feature} */ (evt.element);\r\n        this.removeFeature_(feature);\r\n    };\r\n    /**\r\n     * @param {Feature} feature Feature\r\n     * @param {Point} geometry Geometry.\r\n     * @private\r\n     */\r\n    Modify.prototype.writePointGeometry_ = function (feature, geometry) {\r\n        var coordinates = geometry.getCoordinates();\r\n        var segmentData = /** @type {SegmentData} */ ({\r\n            feature: feature,\r\n            geometry: geometry,\r\n            segment: [coordinates, coordinates]\r\n        });\r\n        this.rBush_.insert(geometry.getExtent(), segmentData);\r\n    };\r\n    /**\r\n     * @param {Feature} feature Feature\r\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\r\n     * @private\r\n     */\r\n    Modify.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\r\n        var points = geometry.getCoordinates();\r\n        for (var i = 0, ii = points.length; i < ii; ++i) {\r\n            var coordinates = points[i];\r\n            var segmentData = /** @type {SegmentData} */ ({\r\n                feature: feature,\r\n                geometry: geometry,\r\n                depth: [i],\r\n                index: i,\r\n                segment: [coordinates, coordinates]\r\n            });\r\n            this.rBush_.insert(geometry.getExtent(), segmentData);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Feature} feature Feature\r\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\r\n     * @private\r\n     */\r\n    Modify.prototype.writeLineStringGeometry_ = function (feature, geometry) {\r\n        var coordinates = geometry.getCoordinates();\r\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n            var segment = coordinates.slice(i, i + 2);\r\n            var segmentData = /** @type {SegmentData} */ ({\r\n                feature: feature,\r\n                geometry: geometry,\r\n                index: i,\r\n                segment: segment\r\n            });\r\n            this.rBush_.insert(boundingExtent(segment), segmentData);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Feature} feature Feature\r\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\r\n     * @private\r\n     */\r\n    Modify.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\r\n        var lines = geometry.getCoordinates();\r\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\r\n            var coordinates = lines[j];\r\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n                var segment = coordinates.slice(i, i + 2);\r\n                var segmentData = /** @type {SegmentData} */ ({\r\n                    feature: feature,\r\n                    geometry: geometry,\r\n                    depth: [j],\r\n                    index: i,\r\n                    segment: segment\r\n                });\r\n                this.rBush_.insert(boundingExtent(segment), segmentData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {Feature} feature Feature\r\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\r\n     * @private\r\n     */\r\n    Modify.prototype.writePolygonGeometry_ = function (feature, geometry) {\r\n        var rings = geometry.getCoordinates();\r\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\r\n            var coordinates = rings[j];\r\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n                var segment = coordinates.slice(i, i + 2);\r\n                var segmentData = /** @type {SegmentData} */ ({\r\n                    feature: feature,\r\n                    geometry: geometry,\r\n                    depth: [j],\r\n                    index: i,\r\n                    segment: segment\r\n                });\r\n                this.rBush_.insert(boundingExtent(segment), segmentData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {Feature} feature Feature\r\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\r\n     * @private\r\n     */\r\n    Modify.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\r\n        var polygons = geometry.getCoordinates();\r\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\r\n            var rings = polygons[k];\r\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\r\n                var coordinates = rings[j];\r\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n                    var segment = coordinates.slice(i, i + 2);\r\n                    var segmentData = /** @type {SegmentData} */ ({\r\n                        feature: feature,\r\n                        geometry: geometry,\r\n                        depth: [j, k],\r\n                        index: i,\r\n                        segment: segment\r\n                    });\r\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * We convert a circle into two segments.  The segment at index\r\n     * {@link CIRCLE_CENTER_INDEX} is the\r\n     * circle's center (a point).  The segment at index\r\n     * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\r\n     * the circumference, and is not a line segment.\r\n     *\r\n     * @param {Feature} feature Feature.\r\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\r\n     * @private\r\n     */\r\n    Modify.prototype.writeCircleGeometry_ = function (feature, geometry) {\r\n        var coordinates = geometry.getCenter();\r\n        var centerSegmentData = /** @type {SegmentData} */ ({\r\n            feature: feature,\r\n            geometry: geometry,\r\n            index: CIRCLE_CENTER_INDEX,\r\n            segment: [coordinates, coordinates]\r\n        });\r\n        var circumferenceSegmentData = /** @type {SegmentData} */ ({\r\n            feature: feature,\r\n            geometry: geometry,\r\n            index: CIRCLE_CIRCUMFERENCE_INDEX,\r\n            segment: [coordinates, coordinates]\r\n        });\r\n        var featureSegments = [centerSegmentData, circumferenceSegmentData];\r\n        centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\r\n        this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\r\n        this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\r\n    };\r\n    /**\r\n     * @param {Feature} feature Feature\r\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\r\n     * @private\r\n     */\r\n    Modify.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\r\n        var geometries = geometry.getGeometriesArray();\r\n        for (var i = 0; i < geometries.length; ++i) {\r\n            this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\r\n     * @return {Feature} Vertex feature.\r\n     * @private\r\n     */\r\n    Modify.prototype.createOrUpdateVertexFeature_ = function (coordinates) {\r\n        var vertexFeature = this.vertexFeature_;\r\n        if (!vertexFeature) {\r\n            vertexFeature = new Feature(new Point(coordinates));\r\n            this.vertexFeature_ = vertexFeature;\r\n            /** @type {VectorSource} */ (this.overlay_.getSource()).addFeature(vertexFeature);\r\n        }\r\n        else {\r\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\r\n            geometry.setCoordinates(coordinates);\r\n        }\r\n        return vertexFeature;\r\n    };\r\n    /**\r\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\r\n     * @override\r\n     */\r\n    Modify.prototype.handleEvent = function (mapBrowserEvent) {\r\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\r\n            return true;\r\n        }\r\n        this.lastPointerEvent_ = mapBrowserEvent;\r\n        var handled;\r\n        if (!mapBrowserEvent.map.getView().getInteracting() &&\r\n            mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\r\n            !this.handlingDownUpSequence) {\r\n            this.handlePointerMove_(mapBrowserEvent);\r\n        }\r\n        if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\r\n            if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\r\n                handled = this.removePoint();\r\n            }\r\n            else {\r\n                handled = true;\r\n            }\r\n        }\r\n        if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\r\n            this.ignoreNextSingleClick_ = false;\r\n        }\r\n        return _super.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Modify.prototype.handleDragEvent = function (evt) {\r\n        this.ignoreNextSingleClick_ = false;\r\n        this.willModifyFeatures_(evt);\r\n        var vertex = evt.coordinate;\r\n        for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\r\n            var dragSegment = this.dragSegments_[i];\r\n            var segmentData = dragSegment[0];\r\n            var depth = segmentData.depth;\r\n            var geometry = segmentData.geometry;\r\n            var coordinates = void 0;\r\n            var segment = segmentData.segment;\r\n            var index = dragSegment[1];\r\n            while (vertex.length < geometry.getStride()) {\r\n                vertex.push(segment[index][vertex.length]);\r\n            }\r\n            switch (geometry.getType()) {\r\n                case GeometryType.POINT:\r\n                    coordinates = vertex;\r\n                    segment[0] = segment[1] = vertex;\r\n                    break;\r\n                case GeometryType.MULTI_POINT:\r\n                    coordinates = geometry.getCoordinates();\r\n                    coordinates[segmentData.index] = vertex;\r\n                    segment[0] = segment[1] = vertex;\r\n                    break;\r\n                case GeometryType.LINE_STRING:\r\n                    coordinates = geometry.getCoordinates();\r\n                    coordinates[segmentData.index + index] = vertex;\r\n                    segment[index] = vertex;\r\n                    break;\r\n                case GeometryType.MULTI_LINE_STRING:\r\n                    coordinates = geometry.getCoordinates();\r\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\r\n                    segment[index] = vertex;\r\n                    break;\r\n                case GeometryType.POLYGON:\r\n                    coordinates = geometry.getCoordinates();\r\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\r\n                    segment[index] = vertex;\r\n                    break;\r\n                case GeometryType.MULTI_POLYGON:\r\n                    coordinates = geometry.getCoordinates();\r\n                    coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\r\n                    segment[index] = vertex;\r\n                    break;\r\n                case GeometryType.CIRCLE:\r\n                    segment[0] = segment[1] = vertex;\r\n                    if (segmentData.index === CIRCLE_CENTER_INDEX) {\r\n                        this.changingFeature_ = true;\r\n                        geometry.setCenter(vertex);\r\n                        this.changingFeature_ = false;\r\n                    }\r\n                    else { // We're dragging the circle's circumference:\r\n                        this.changingFeature_ = true;\r\n                        geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\r\n                        this.changingFeature_ = false;\r\n                    }\r\n                    break;\r\n                default:\r\n                // pass\r\n            }\r\n            if (coordinates) {\r\n                this.setGeometryCoordinates_(geometry, coordinates);\r\n            }\r\n        }\r\n        this.createOrUpdateVertexFeature_(vertex);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Modify.prototype.handleDownEvent = function (evt) {\r\n        if (!this.condition_(evt)) {\r\n            return false;\r\n        }\r\n        this.handlePointerAtPixel_(evt.pixel, evt.map);\r\n        var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\r\n        this.dragSegments_.length = 0;\r\n        this.modified_ = false;\r\n        var vertexFeature = this.vertexFeature_;\r\n        if (vertexFeature) {\r\n            var insertVertices = [];\r\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\r\n            var vertex = geometry.getCoordinates();\r\n            var vertexExtent = boundingExtent([vertex]);\r\n            var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\r\n            var componentSegments = {};\r\n            segmentDataMatches.sort(compareIndexes);\r\n            for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\r\n                var segmentDataMatch = segmentDataMatches[i];\r\n                var segment = segmentDataMatch.segment;\r\n                var uid = getUid(segmentDataMatch.feature);\r\n                var depth = segmentDataMatch.depth;\r\n                if (depth) {\r\n                    uid += '-' + depth.join('-'); // separate feature components\r\n                }\r\n                if (!componentSegments[uid]) {\r\n                    componentSegments[uid] = new Array(2);\r\n                }\r\n                if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\r\n                    segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n                    var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\r\n                    if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\r\n                        this.dragSegments_.push([segmentDataMatch, 0]);\r\n                        componentSegments[uid][0] = segmentDataMatch;\r\n                    }\r\n                }\r\n                else if (coordinatesEqual(segment[0], vertex) &&\r\n                    !componentSegments[uid][0]) {\r\n                    this.dragSegments_.push([segmentDataMatch, 0]);\r\n                    componentSegments[uid][0] = segmentDataMatch;\r\n                }\r\n                else if (coordinatesEqual(segment[1], vertex) &&\r\n                    !componentSegments[uid][1]) {\r\n                    // prevent dragging closed linestrings by the connecting node\r\n                    if ((segmentDataMatch.geometry.getType() ===\r\n                        GeometryType.LINE_STRING ||\r\n                        segmentDataMatch.geometry.getType() ===\r\n                            GeometryType.MULTI_LINE_STRING) &&\r\n                        componentSegments[uid][0] &&\r\n                        componentSegments[uid][0].index === 0) {\r\n                        continue;\r\n                    }\r\n                    this.dragSegments_.push([segmentDataMatch, 1]);\r\n                    componentSegments[uid][1] = segmentDataMatch;\r\n                }\r\n                else if (getUid(segment) in this.vertexSegments_ &&\r\n                    (!componentSegments[uid][0] && !componentSegments[uid][1]) &&\r\n                    this.insertVertexCondition_(evt)) {\r\n                    insertVertices.push([segmentDataMatch, vertex]);\r\n                }\r\n            }\r\n            if (insertVertices.length) {\r\n                this.willModifyFeatures_(evt);\r\n            }\r\n            for (var j = insertVertices.length - 1; j >= 0; --j) {\r\n                this.insertVertex_.apply(this, insertVertices[j]);\r\n            }\r\n        }\r\n        return !!this.vertexFeature_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Modify.prototype.handleUpEvent = function (evt) {\r\n        for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\r\n            var segmentData = this.dragSegments_[i][0];\r\n            var geometry = segmentData.geometry;\r\n            if (geometry.getType() === GeometryType.CIRCLE) {\r\n                // Update a circle object in the R* bush:\r\n                var coordinates = geometry.getCenter();\r\n                var centerSegmentData = segmentData.featureSegments[0];\r\n                var circumferenceSegmentData = segmentData.featureSegments[1];\r\n                centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\r\n                circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\r\n                this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\r\n                this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\r\n            }\r\n            else {\r\n                this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\r\n            }\r\n        }\r\n        if (this.modified_) {\r\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\r\n            this.modified_ = false;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\r\n     * @private\r\n     */\r\n    Modify.prototype.handlePointerMove_ = function (evt) {\r\n        this.lastPixel_ = evt.pixel;\r\n        this.handlePointerAtPixel_(evt.pixel, evt.map);\r\n    };\r\n    /**\r\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\r\n     * @param {import(\"../PluggableMap.js\").default} map Map.\r\n     * @private\r\n     */\r\n    Modify.prototype.handlePointerAtPixel_ = function (pixel, map) {\r\n        var pixelCoordinate = map.getCoordinateFromPixel(pixel);\r\n        var sortByDistance = function (a, b) {\r\n            return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\r\n                pointDistanceToSegmentDataSquared(pixelCoordinate, b);\r\n        };\r\n        var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate), map.getView().getResolution() * this.pixelTolerance_);\r\n        var rBush = this.rBush_;\r\n        var nodes = rBush.getInExtent(box);\r\n        if (nodes.length > 0) {\r\n            nodes.sort(sortByDistance);\r\n            var node = nodes[0];\r\n            var closestSegment = node.segment;\r\n            var vertex = closestOnSegmentData(pixelCoordinate, node);\r\n            var vertexPixel = map.getPixelFromCoordinate(vertex);\r\n            var dist = coordinateDistance(pixel, vertexPixel);\r\n            if (dist <= this.pixelTolerance_) {\r\n                /** @type {Object<string, boolean>} */\r\n                var vertexSegments = {};\r\n                if (node.geometry.getType() === GeometryType.CIRCLE &&\r\n                    node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n                    this.snappedToVertex_ = true;\r\n                    this.createOrUpdateVertexFeature_(vertex);\r\n                }\r\n                else {\r\n                    var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n                    var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n                    var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\r\n                    var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\r\n                    dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n                    this.snappedToVertex_ = dist <= this.pixelTolerance_;\r\n                    if (this.snappedToVertex_) {\r\n                        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\r\n                    }\r\n                    this.createOrUpdateVertexFeature_(vertex);\r\n                    for (var i = 1, ii = nodes.length; i < ii; ++i) {\r\n                        var segment = nodes[i].segment;\r\n                        if ((coordinatesEqual(closestSegment[0], segment[0]) &&\r\n                            coordinatesEqual(closestSegment[1], segment[1]) ||\r\n                            (coordinatesEqual(closestSegment[0], segment[1]) &&\r\n                                coordinatesEqual(closestSegment[1], segment[0])))) {\r\n                            vertexSegments[getUid(segment)] = true;\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                vertexSegments[getUid(closestSegment)] = true;\r\n                this.vertexSegments_ = vertexSegments;\r\n                return;\r\n            }\r\n        }\r\n        if (this.vertexFeature_) {\r\n            /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\r\n            this.vertexFeature_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * @param {SegmentData} segmentData Segment data.\r\n     * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\r\n     * @private\r\n     */\r\n    Modify.prototype.insertVertex_ = function (segmentData, vertex) {\r\n        var segment = segmentData.segment;\r\n        var feature = segmentData.feature;\r\n        var geometry = segmentData.geometry;\r\n        var depth = segmentData.depth;\r\n        var index = /** @type {number} */ (segmentData.index);\r\n        var coordinates;\r\n        while (vertex.length < geometry.getStride()) {\r\n            vertex.push(0);\r\n        }\r\n        switch (geometry.getType()) {\r\n            case GeometryType.MULTI_LINE_STRING:\r\n                coordinates = geometry.getCoordinates();\r\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\r\n                break;\r\n            case GeometryType.POLYGON:\r\n                coordinates = geometry.getCoordinates();\r\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\r\n                break;\r\n            case GeometryType.MULTI_POLYGON:\r\n                coordinates = geometry.getCoordinates();\r\n                coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\r\n                break;\r\n            case GeometryType.LINE_STRING:\r\n                coordinates = geometry.getCoordinates();\r\n                coordinates.splice(index + 1, 0, vertex);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        this.setGeometryCoordinates_(geometry, coordinates);\r\n        var rTree = this.rBush_;\r\n        rTree.remove(segmentData);\r\n        this.updateSegmentIndices_(geometry, index, depth, 1);\r\n        var newSegmentData = /** @type {SegmentData} */ ({\r\n            segment: [segment[0], vertex],\r\n            feature: feature,\r\n            geometry: geometry,\r\n            depth: depth,\r\n            index: index\r\n        });\r\n        rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\r\n        this.dragSegments_.push([newSegmentData, 1]);\r\n        var newSegmentData2 = /** @type {SegmentData} */ ({\r\n            segment: [vertex, segment[1]],\r\n            feature: feature,\r\n            geometry: geometry,\r\n            depth: depth,\r\n            index: index + 1\r\n        });\r\n        rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\r\n        this.dragSegments_.push([newSegmentData2, 0]);\r\n        this.ignoreNextSingleClick_ = true;\r\n    };\r\n    /**\r\n     * Removes the vertex currently being pointed.\r\n     * @return {boolean} True when a vertex was removed.\r\n     * @api\r\n     */\r\n    Modify.prototype.removePoint = function () {\r\n        if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\r\n            var evt = this.lastPointerEvent_;\r\n            this.willModifyFeatures_(evt);\r\n            var removed = this.removeVertex_();\r\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\r\n            this.modified_ = false;\r\n            return removed;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Removes a vertex from all matching features.\r\n     * @return {boolean} True when a vertex was removed.\r\n     * @private\r\n     */\r\n    Modify.prototype.removeVertex_ = function () {\r\n        var dragSegments = this.dragSegments_;\r\n        var segmentsByFeature = {};\r\n        var deleted = false;\r\n        var component, coordinates, dragSegment, geometry, i, index, left;\r\n        var newIndex, right, segmentData, uid;\r\n        for (i = dragSegments.length - 1; i >= 0; --i) {\r\n            dragSegment = dragSegments[i];\r\n            segmentData = dragSegment[0];\r\n            uid = getUid(segmentData.feature);\r\n            if (segmentData.depth) {\r\n                // separate feature components\r\n                uid += '-' + segmentData.depth.join('-');\r\n            }\r\n            if (!(uid in segmentsByFeature)) {\r\n                segmentsByFeature[uid] = {};\r\n            }\r\n            if (dragSegment[1] === 0) {\r\n                segmentsByFeature[uid].right = segmentData;\r\n                segmentsByFeature[uid].index = segmentData.index;\r\n            }\r\n            else if (dragSegment[1] == 1) {\r\n                segmentsByFeature[uid].left = segmentData;\r\n                segmentsByFeature[uid].index = segmentData.index + 1;\r\n            }\r\n        }\r\n        for (uid in segmentsByFeature) {\r\n            right = segmentsByFeature[uid].right;\r\n            left = segmentsByFeature[uid].left;\r\n            index = segmentsByFeature[uid].index;\r\n            newIndex = index - 1;\r\n            if (left !== undefined) {\r\n                segmentData = left;\r\n            }\r\n            else {\r\n                segmentData = right;\r\n            }\r\n            if (newIndex < 0) {\r\n                newIndex = 0;\r\n            }\r\n            geometry = segmentData.geometry;\r\n            coordinates = geometry.getCoordinates();\r\n            component = coordinates;\r\n            deleted = false;\r\n            switch (geometry.getType()) {\r\n                case GeometryType.MULTI_LINE_STRING:\r\n                    if (coordinates[segmentData.depth[0]].length > 2) {\r\n                        coordinates[segmentData.depth[0]].splice(index, 1);\r\n                        deleted = true;\r\n                    }\r\n                    break;\r\n                case GeometryType.LINE_STRING:\r\n                    if (coordinates.length > 2) {\r\n                        coordinates.splice(index, 1);\r\n                        deleted = true;\r\n                    }\r\n                    break;\r\n                case GeometryType.MULTI_POLYGON:\r\n                    component = component[segmentData.depth[1]];\r\n                /* falls through */\r\n                case GeometryType.POLYGON:\r\n                    component = component[segmentData.depth[0]];\r\n                    if (component.length > 4) {\r\n                        if (index == component.length - 1) {\r\n                            index = 0;\r\n                        }\r\n                        component.splice(index, 1);\r\n                        deleted = true;\r\n                        if (index === 0) {\r\n                            // close the ring again\r\n                            component.pop();\r\n                            component.push(component[0]);\r\n                            newIndex = component.length - 1;\r\n                        }\r\n                    }\r\n                    break;\r\n                default:\r\n                // pass\r\n            }\r\n            if (deleted) {\r\n                this.setGeometryCoordinates_(geometry, coordinates);\r\n                var segments = [];\r\n                if (left !== undefined) {\r\n                    this.rBush_.remove(left);\r\n                    segments.push(left.segment[0]);\r\n                }\r\n                if (right !== undefined) {\r\n                    this.rBush_.remove(right);\r\n                    segments.push(right.segment[1]);\r\n                }\r\n                if (left !== undefined && right !== undefined) {\r\n                    var newSegmentData = /** @type {SegmentData} */ ({\r\n                        depth: segmentData.depth,\r\n                        feature: segmentData.feature,\r\n                        geometry: segmentData.geometry,\r\n                        index: newIndex,\r\n                        segment: segments\r\n                    });\r\n                    this.rBush_.insert(boundingExtent(newSegmentData.segment), newSegmentData);\r\n                }\r\n                this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\r\n                if (this.vertexFeature_) {\r\n                    /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\r\n                    this.vertexFeature_ = null;\r\n                }\r\n                dragSegments.length = 0;\r\n            }\r\n        }\r\n        return deleted;\r\n    };\r\n    /**\r\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n     * @param {Array} coordinates Coordinates.\r\n     * @private\r\n     */\r\n    Modify.prototype.setGeometryCoordinates_ = function (geometry, coordinates) {\r\n        this.changingFeature_ = true;\r\n        geometry.setCoordinates(coordinates);\r\n        this.changingFeature_ = false;\r\n    };\r\n    /**\r\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n     * @param {number} index Index.\r\n     * @param {Array<number>|undefined} depth Depth.\r\n     * @param {number} delta Delta (1 or -1).\r\n     * @private\r\n     */\r\n    Modify.prototype.updateSegmentIndices_ = function (geometry, index, depth, delta) {\r\n        this.rBush_.forEachInExtent(geometry.getExtent(), function (segmentDataMatch) {\r\n            if (segmentDataMatch.geometry === geometry &&\r\n                (depth === undefined || segmentDataMatch.depth === undefined ||\r\n                    equals(segmentDataMatch.depth, depth)) &&\r\n                segmentDataMatch.index > index) {\r\n                segmentDataMatch.index += delta;\r\n            }\r\n        });\r\n    };\r\n    return Modify;\r\n}(PointerInteraction));\r\n/**\r\n * @param {SegmentData} a The first segment data.\r\n * @param {SegmentData} b The second segment data.\r\n * @return {number} The difference in indexes.\r\n */\r\nfunction compareIndexes(a, b) {\r\n    return a.index - b.index;\r\n}\r\n/**\r\n * Returns the distance from a point to a line segment.\r\n *\r\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\r\n *        which to calculate the distance.\r\n * @param {SegmentData} segmentData The object describing the line\r\n *        segment we are calculating the distance to.\r\n * @return {number} The square of the distance between a point and a line segment.\r\n */\r\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\r\n    var geometry = segmentData.geometry;\r\n    if (geometry.getType() === GeometryType.CIRCLE) {\r\n        var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\r\n        if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n            var distanceToCenterSquared = squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\r\n            var distanceToCircumference = Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\r\n            return distanceToCircumference * distanceToCircumference;\r\n        }\r\n    }\r\n    return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\r\n}\r\n/**\r\n * Returns the point closest to a given line segment.\r\n *\r\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\r\n *        should be found.\r\n * @param {SegmentData} segmentData The object describing the line\r\n *        segment which should contain the closest point.\r\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\r\n */\r\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\r\n    var geometry = segmentData.geometry;\r\n    if (geometry.getType() === GeometryType.CIRCLE &&\r\n        segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n        return geometry.getClosestPoint(pointCoordinates);\r\n    }\r\n    return closestOnSegment(pointCoordinates, segmentData.segment);\r\n}\r\n/**\r\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\r\n */\r\nfunction getDefaultStyleFunction() {\r\n    var style = createEditingStyle();\r\n    return function (feature, resolution) {\r\n        return style[GeometryType.POINT];\r\n    };\r\n}\r\nexport default Modify;\r\n//# sourceMappingURL=Modify.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/Select\r\n */\r\nimport { getUid } from '../util.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport { extend, includes } from '../array.js';\r\nimport { listen } from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport { singleClick, never, shiftKeyOnly, pointerMove } from '../events/condition.js';\r\nimport { TRUE } from '../functions.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport Interaction from './Interaction.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport { clear } from '../obj.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport { createEditingStyle } from '../style/Style.js';\r\n/**\r\n * @enum {string}\r\n */\r\nvar SelectEventType = {\r\n    /**\r\n     * Triggered when feature(s) has been (de)selected.\r\n     * @event SelectEvent#select\r\n     * @api\r\n     */\r\n    SELECT: 'select'\r\n};\r\n/**\r\n * A function that takes an {@link module:ol/Feature} or\r\n * {@link module:ol/render/Feature} and an\r\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\r\n * selected or `false` otherwise.\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\r\n */\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\r\n * want to use different events for add and remove instead of `toggle`.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. This is the event\r\n * for the selected features as a whole. By default, this is\r\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\r\n * feature and removes any that were in the selection. Clicking outside any\r\n * feature removes all from the selection.\r\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\r\n * from the selection.\r\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\r\n * A list of layers from which features should be selected. Alternatively, a\r\n * filter function can be provided. The function will be called for each layer\r\n * in the map and should return `true` for layers that you want to be\r\n * selectable. If the option is absent, all visible layers will be considered\r\n * selectable.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style]\r\n * Style for the selected features. By default the default edit style is used\r\n * (see {@link module:ol/style}).\r\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\r\n * want to use different events for add and remove instead of `toggle`.\r\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. This is in addition\r\n * to the `condition` event. By default,\r\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\r\n * well as the `condition` event, adds that feature to the current selection if\r\n * it is not currently selected, and removes it if it is. See `add` and `remove`\r\n * if you want to use different events instead of a toggle.\r\n * @property {boolean} [multi=false] A boolean that determines if the default\r\n * behaviour should select only single features or all (overlapping) features at\r\n * the clicked map position. The default of `false` means single select.\r\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\r\n * Collection where the interaction will place selected features. Optional. If\r\n * not set the interaction will create a collection. In any case the collection\r\n * used by the interaction is returned by\r\n * {@link module:ol/interaction/Select~Select#getFeatures}.\r\n * @property {FilterFunction} [filter] A function\r\n * that takes an {@link module:ol/Feature} and an\r\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\r\n * selected or `false` otherwise.\r\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\r\n * overlay.\r\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\r\n * the radius around the given position will be checked for features.\r\n */\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\r\n * this type.\r\n */\r\nvar SelectEvent = /** @class */ (function (_super) {\r\n    __extends(SelectEvent, _super);\r\n    /**\r\n     * @param {SelectEventType} type The event type.\r\n     * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\r\n     * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\r\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\r\n     *     {@link module:ol/MapBrowserEvent}.\r\n     */\r\n    function SelectEvent(type, selected, deselected, mapBrowserEvent) {\r\n        var _this = _super.call(this, type) || this;\r\n        /**\r\n         * Selected features array.\r\n         * @type {Array<import(\"../Feature.js\").default>}\r\n         * @api\r\n         */\r\n        _this.selected = selected;\r\n        /**\r\n         * Deselected features array.\r\n         * @type {Array<import(\"../Feature.js\").default>}\r\n         * @api\r\n         */\r\n        _this.deselected = deselected;\r\n        /**\r\n         * Associated {@link module:ol/MapBrowserEvent}.\r\n         * @type {import(\"../MapBrowserEvent.js\").default}\r\n         * @api\r\n         */\r\n        _this.mapBrowserEvent = mapBrowserEvent;\r\n        return _this;\r\n    }\r\n    return SelectEvent;\r\n}(Event));\r\n/**\r\n * @classdesc\r\n * Interaction for selecting vector features. By default, selected features are\r\n * styled differently, so this interaction can be used for visual highlighting,\r\n * as well as selecting features for other actions, such as modification or\r\n * output. There are three ways of controlling which features are selected:\r\n * using the browser event as defined by the `condition` and optionally the\r\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\r\n * further feature filter using the `filter` option.\r\n *\r\n * Selected features are added to an internal unmanaged layer.\r\n *\r\n * @fires SelectEvent\r\n * @api\r\n */\r\nvar Select = /** @class */ (function (_super) {\r\n    __extends(Select, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function Select(opt_options) {\r\n        var _this = _super.call(this, {\r\n            handleEvent: handleEvent\r\n        }) || this;\r\n        var options = opt_options ? opt_options : {};\r\n        /**\r\n         * @private\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         */\r\n        _this.condition_ = options.condition ? options.condition : singleClick;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         */\r\n        _this.addCondition_ = options.addCondition ? options.addCondition : never;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         */\r\n        _this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../events/condition.js\").Condition}\r\n         */\r\n        _this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.multi_ = options.multi ? options.multi : false;\r\n        /**\r\n         * @private\r\n         * @type {FilterFunction}\r\n         */\r\n        _this.filter_ = options.filter ? options.filter : TRUE;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\r\n        var featureOverlay = new VectorLayer({\r\n            source: new VectorSource({\r\n                useSpatialIndex: false,\r\n                features: options.features,\r\n                wrapX: options.wrapX\r\n            }),\r\n            style: options.style ? options.style :\r\n                getDefaultStyleFunction(),\r\n            updateWhileAnimating: true,\r\n            updateWhileInteracting: true\r\n        });\r\n        /**\r\n         * @private\r\n         * @type {VectorLayer}\r\n         */\r\n        _this.featureOverlay_ = featureOverlay;\r\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\r\n        var layerFilter;\r\n        if (options.layers) {\r\n            if (typeof options.layers === 'function') {\r\n                layerFilter = options.layers;\r\n            }\r\n            else {\r\n                var layers_1 = options.layers;\r\n                layerFilter = function (layer) {\r\n                    return includes(layers_1, layer);\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            layerFilter = TRUE;\r\n        }\r\n        /**\r\n         * @private\r\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\r\n         */\r\n        _this.layerFilter_ = layerFilter;\r\n        /**\r\n         * An association between selected feature (key)\r\n         * and layer (value)\r\n         * @private\r\n         * @type {Object<string, import(\"../layer/Layer.js\").default>}\r\n         */\r\n        _this.featureLayerAssociation_ = {};\r\n        var features = _this.getFeatures();\r\n        listen(features, CollectionEventType.ADD, _this.addFeature_, _this);\r\n        listen(features, CollectionEventType.REMOVE, _this.removeFeature_, _this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n     * @private\r\n     */\r\n    Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\r\n        this.featureLayerAssociation_[getUid(feature)] = layer;\r\n    };\r\n    /**\r\n     * Get the selected features.\r\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\r\n     * @api\r\n     */\r\n    Select.prototype.getFeatures = function () {\r\n        return /** @type {VectorSource} */ (this.featureOverlay_.getSource()).getFeaturesCollection();\r\n    };\r\n    /**\r\n     * Returns the Hit-detection tolerance.\r\n     * @returns {number} Hit tolerance in pixels.\r\n     * @api\r\n     */\r\n    Select.prototype.getHitTolerance = function () {\r\n        return this.hitTolerance_;\r\n    };\r\n    /**\r\n     * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\r\n     * the (last) selected feature. Note that this will not work with any\r\n     * programmatic method like pushing features to\r\n     * {@link module:ol/interaction/Select~Select#getFeatures collection}.\r\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature\r\n     * @return {VectorLayer} Layer.\r\n     * @api\r\n     */\r\n    Select.prototype.getLayer = function (feature) {\r\n        return (\r\n        /** @type {VectorLayer} */ (this.featureLayerAssociation_[getUid(feature)]));\r\n    };\r\n    /**\r\n     * Get the overlay layer that this interaction renders selected features to.\r\n     * @return {VectorLayer} Overlay layer.\r\n     * @api\r\n     */\r\n    Select.prototype.getOverlay = function () {\r\n        return this.featureOverlay_;\r\n    };\r\n    /**\r\n     * Hit-detection tolerance. Pixels inside the radius around the given position\r\n     * will be checked for features.\r\n     * @param {number} hitTolerance Hit tolerance in pixels.\r\n     * @api\r\n     */\r\n    Select.prototype.setHitTolerance = function (hitTolerance) {\r\n        this.hitTolerance_ = hitTolerance;\r\n    };\r\n    /**\r\n     * Remove the interaction from its current map, if any,  and attach it to a new\r\n     * map, if any. Pass `null` to just remove the interaction from the current map.\r\n     * @param {import(\"../PluggableMap.js\").default} map Map.\r\n     * @override\r\n     * @api\r\n     */\r\n    Select.prototype.setMap = function (map) {\r\n        var currentMap = this.getMap();\r\n        var selectedFeatures = this.getFeatures();\r\n        if (currentMap) {\r\n            selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\r\n        }\r\n        _super.prototype.setMap.call(this, map);\r\n        this.featureOverlay_.setMap(map);\r\n        if (map) {\r\n            selectedFeatures.forEach(map.skipFeature.bind(map));\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\r\n     * @private\r\n     */\r\n    Select.prototype.addFeature_ = function (evt) {\r\n        var map = this.getMap();\r\n        if (map) {\r\n            map.skipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\r\n     * @private\r\n     */\r\n    Select.prototype.removeFeature_ = function (evt) {\r\n        var map = this.getMap();\r\n        if (map) {\r\n            map.unskipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n     * @private\r\n     */\r\n    Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\r\n        delete this.featureLayerAssociation_[getUid(feature)];\r\n    };\r\n    return Select;\r\n}(Interaction));\r\n/**\r\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\r\n * selected state of features.\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} `false` to stop event propagation.\r\n * @this {Select}\r\n */\r\nfunction handleEvent(mapBrowserEvent) {\r\n    if (!this.condition_(mapBrowserEvent)) {\r\n        return true;\r\n    }\r\n    var add = this.addCondition_(mapBrowserEvent);\r\n    var remove = this.removeCondition_(mapBrowserEvent);\r\n    var toggle = this.toggleCondition_(mapBrowserEvent);\r\n    var set = !add && !remove && !toggle;\r\n    var map = mapBrowserEvent.map;\r\n    var features = this.getFeatures();\r\n    var deselected = [];\r\n    var selected = [];\r\n    if (set) {\r\n        // Replace the currently selected feature(s) with the feature(s) at the\r\n        // pixel, or clear the selected feature(s) if there is no feature at\r\n        // the pixel.\r\n        clear(this.featureLayerAssociation_);\r\n        map.forEachFeatureAtPixel(mapBrowserEvent.pixel, (\r\n        /**\r\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n         * @return {boolean|undefined} Continue to iterate over the features.\r\n         */\r\n        function (feature, layer) {\r\n            if (this.filter_(feature, layer)) {\r\n                selected.push(feature);\r\n                this.addFeatureLayerAssociation_(feature, layer);\r\n                return !this.multi_;\r\n            }\r\n        }).bind(this), {\r\n            layerFilter: this.layerFilter_,\r\n            hitTolerance: this.hitTolerance_\r\n        });\r\n        for (var i = features.getLength() - 1; i >= 0; --i) {\r\n            var feature = features.item(i);\r\n            var index = selected.indexOf(feature);\r\n            if (index > -1) {\r\n                // feature is already selected\r\n                selected.splice(index, 1);\r\n            }\r\n            else {\r\n                features.remove(feature);\r\n                deselected.push(feature);\r\n            }\r\n        }\r\n        if (selected.length !== 0) {\r\n            features.extend(selected);\r\n        }\r\n    }\r\n    else {\r\n        // Modify the currently selected feature(s).\r\n        map.forEachFeatureAtPixel(mapBrowserEvent.pixel, (\r\n        /**\r\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n         * @return {boolean|undefined} Continue to iterate over the features.\r\n         */\r\n        function (feature, layer) {\r\n            if (this.filter_(feature, layer)) {\r\n                if ((add || toggle) && !includes(features.getArray(), feature)) {\r\n                    selected.push(feature);\r\n                    this.addFeatureLayerAssociation_(feature, layer);\r\n                }\r\n                else if ((remove || toggle) && includes(features.getArray(), feature)) {\r\n                    deselected.push(feature);\r\n                    this.removeFeatureLayerAssociation_(feature);\r\n                }\r\n                return !this.multi_;\r\n            }\r\n        }).bind(this), {\r\n            layerFilter: this.layerFilter_,\r\n            hitTolerance: this.hitTolerance_\r\n        });\r\n        for (var j = deselected.length - 1; j >= 0; --j) {\r\n            features.remove(deselected[j]);\r\n        }\r\n        features.extend(selected);\r\n    }\r\n    if (selected.length > 0 || deselected.length > 0) {\r\n        this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\r\n    }\r\n    return pointerMove(mapBrowserEvent);\r\n}\r\n/**\r\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\r\n */\r\nfunction getDefaultStyleFunction() {\r\n    var styles = createEditingStyle();\r\n    extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\r\n    extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\r\n    return function (feature, resolution) {\r\n        if (!feature.getGeometry()) {\r\n            return null;\r\n        }\r\n        return styles[feature.getGeometry().getType()];\r\n    };\r\n}\r\nexport default Select;\r\n//# sourceMappingURL=Select.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/Snap\r\n */\r\nimport { getUid } from '../util.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport { distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment } from '../coordinate.js';\r\nimport { listen, unlistenByKey } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { boundingExtent, createEmpty } from '../extent.js';\r\nimport { TRUE, FALSE } from '../functions.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport { fromCircle } from '../geom/Polygon.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport { getValues } from '../obj.js';\r\nimport VectorEventType from '../source/VectorEventType.js';\r\nimport RBush from '../structs/RBush.js';\r\n/**\r\n * @typedef {Object} Result\r\n * @property {boolean} snapped\r\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\r\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\r\n */\r\n/**\r\n * @typedef {Object} SegmentData\r\n * @property {import(\"../Feature.js\").default} feature\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\r\n */\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\r\n * @property {boolean} [edge=true] Snap to edges.\r\n * @property {boolean} [vertex=true] Snap to vertices.\r\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\r\n * vertex for snapping.\r\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\r\n */\r\n/**\r\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\r\n * @return {import(\"../Feature.js\").default} Feature.\r\n */\r\nfunction getFeatureFromEvent(evt) {\r\n    if ( /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */(evt).feature) {\r\n        return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\r\n    }\r\n    else if ( /** @type {import(\"../Collection.js\").CollectionEvent} */(evt).element) {\r\n        return /** @type {import(\"../Feature.js\").default} */ ( /** @type {import(\"../Collection.js\").CollectionEvent} */(evt).element);\r\n    }\r\n}\r\n/**\r\n * @classdesc\r\n * Handles snapping of vector features while modifying or drawing them.  The\r\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\r\n * Any interaction object that allows the user to interact\r\n * with the features using the mouse can benefit from the snapping, as long\r\n * as it is added before.\r\n *\r\n * The snap interaction modifies map browser event `coordinate` and `pixel`\r\n * properties to force the snap to occur to any interaction that them.\r\n *\r\n * Example:\r\n *\r\n *     import Snap from 'ol/interaction/Snap';\r\n *\r\n *     var snap = new Snap({\r\n *       source: source\r\n *     });\r\n *\r\n * @api\r\n */\r\nvar Snap = /** @class */ (function (_super) {\r\n    __extends(Snap, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function Snap(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\r\n        if (!pointerOptions.handleDownEvent) {\r\n            pointerOptions.handleDownEvent = TRUE;\r\n        }\r\n        if (!pointerOptions.stopDown) {\r\n            pointerOptions.stopDown = FALSE;\r\n        }\r\n        _this = _super.call(this, pointerOptions) || this;\r\n        /**\r\n         * @type {import(\"../source/Vector.js\").default}\r\n         * @private\r\n         */\r\n        _this.source_ = options.source ? options.source : null;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.vertex_ = options.vertex !== undefined ? options.vertex : true;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.edge_ = options.edge !== undefined ? options.edge : true;\r\n        /**\r\n         * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\r\n         * @private\r\n         */\r\n        _this.features_ = options.features ? options.features : null;\r\n        /**\r\n         * @type {Array<import(\"../events.js\").EventsKey>}\r\n         * @private\r\n         */\r\n        _this.featuresListenerKeys_ = [];\r\n        /**\r\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\r\n         * @private\r\n         */\r\n        _this.featureChangeListenerKeys_ = {};\r\n        /**\r\n         * Extents are preserved so indexed segment can be quickly removed\r\n         * when its feature geometry changes\r\n         * @type {Object<string, import(\"../extent.js\").Extent>}\r\n         * @private\r\n         */\r\n        _this.indexedFeaturesExtents_ = {};\r\n        /**\r\n         * If a feature geometry changes while a pointer drag|move event occurs, the\r\n         * feature doesn't get updated right away.  It will be at the next 'pointerup'\r\n         * event fired.\r\n         * @type {!Object<string, import(\"../Feature.js\").default>}\r\n         * @private\r\n         */\r\n        _this.pendingFeatures_ = {};\r\n        /**\r\n         * Used for distance sorting in sortByDistance_\r\n         * @type {import(\"../coordinate.js\").Coordinate}\r\n         * @private\r\n         */\r\n        _this.pixelCoordinate_ = null;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\r\n            options.pixelTolerance : 10;\r\n        /**\r\n         * @type {function(SegmentData, SegmentData): number}\r\n         * @private\r\n         */\r\n        _this.sortByDistance_ = sortByDistance.bind(_this);\r\n        /**\r\n        * Segment RTree for each layer\r\n        * @type {import(\"../structs/RBush.js\").default<SegmentData>}\r\n        * @private\r\n        */\r\n        _this.rBush_ = new RBush();\r\n        /**\r\n        * @const\r\n        * @private\r\n        * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\r\n        */\r\n        _this.SEGMENT_WRITERS_ = {\r\n            'Point': _this.writePointGeometry_,\r\n            'LineString': _this.writeLineStringGeometry_,\r\n            'LinearRing': _this.writeLineStringGeometry_,\r\n            'Polygon': _this.writePolygonGeometry_,\r\n            'MultiPoint': _this.writeMultiPointGeometry_,\r\n            'MultiLineString': _this.writeMultiLineStringGeometry_,\r\n            'MultiPolygon': _this.writeMultiPolygonGeometry_,\r\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_,\r\n            'Circle': _this.writeCircleGeometry_\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * Add a feature to the collection of features that we may snap to.\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     * @param {boolean=} opt_listen Whether to listen to the feature change or not\r\n     *     Defaults to `true`.\r\n     * @api\r\n     */\r\n    Snap.prototype.addFeature = function (feature, opt_listen) {\r\n        var register = opt_listen !== undefined ? opt_listen : true;\r\n        var feature_uid = getUid(feature);\r\n        var geometry = feature.getGeometry();\r\n        if (geometry) {\r\n            var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\r\n            if (segmentWriter) {\r\n                this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\r\n                segmentWriter.call(this, feature, geometry);\r\n            }\r\n        }\r\n        if (register) {\r\n            this.featureChangeListenerKeys_[feature_uid] = listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     * @private\r\n     */\r\n    Snap.prototype.forEachFeatureAdd_ = function (feature) {\r\n        this.addFeature(feature);\r\n    };\r\n    /**\r\n     * @param {import(\"../Feature.js\").default} feature Feature.\r\n     * @private\r\n     */\r\n    Snap.prototype.forEachFeatureRemove_ = function (feature) {\r\n        this.removeFeature(feature);\r\n    };\r\n    /**\r\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\r\n     * @private\r\n     */\r\n    Snap.prototype.getFeatures_ = function () {\r\n        var features;\r\n        if (this.features_) {\r\n            features = this.features_;\r\n        }\r\n        else if (this.source_) {\r\n            features = this.source_.getFeatures();\r\n        }\r\n        return features;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Snap.prototype.handleEvent = function (evt) {\r\n        var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\r\n        if (result.snapped) {\r\n            evt.coordinate = result.vertex.slice(0, 2);\r\n            evt.pixel = result.vertexPixel;\r\n        }\r\n        return _super.prototype.handleEvent.call(this, evt);\r\n    };\r\n    /**\r\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\r\n     * @private\r\n     */\r\n    Snap.prototype.handleFeatureAdd_ = function (evt) {\r\n        var feature = getFeatureFromEvent(evt);\r\n        this.addFeature(feature);\r\n    };\r\n    /**\r\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\r\n     * @private\r\n     */\r\n    Snap.prototype.handleFeatureRemove_ = function (evt) {\r\n        var feature = getFeatureFromEvent(evt);\r\n        this.removeFeature(feature);\r\n    };\r\n    /**\r\n     * @param {import(\"../events/Event.js\").default} evt Event.\r\n     * @private\r\n     */\r\n    Snap.prototype.handleFeatureChange_ = function (evt) {\r\n        var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\r\n        if (this.handlingDownUpSequence) {\r\n            var uid = getUid(feature);\r\n            if (!(uid in this.pendingFeatures_)) {\r\n                this.pendingFeatures_[uid] = feature;\r\n            }\r\n        }\r\n        else {\r\n            this.updateFeature_(feature);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Snap.prototype.handleUpEvent = function (evt) {\r\n        var featuresToUpdate = getValues(this.pendingFeatures_);\r\n        if (featuresToUpdate.length) {\r\n            featuresToUpdate.forEach(this.updateFeature_.bind(this));\r\n            this.pendingFeatures_ = {};\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Remove a feature from the collection of features that we may snap to.\r\n     * @param {import(\"../Feature.js\").default} feature Feature\r\n     * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\r\n     *     or not. Defaults to `true`.\r\n     * @api\r\n     */\r\n    Snap.prototype.removeFeature = function (feature, opt_unlisten) {\r\n        var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\r\n        var feature_uid = getUid(feature);\r\n        var extent = this.indexedFeaturesExtents_[feature_uid];\r\n        if (extent) {\r\n            var rBush = this.rBush_;\r\n            var nodesToRemove_1 = [];\r\n            rBush.forEachInExtent(extent, function (node) {\r\n                if (feature === node.feature) {\r\n                    nodesToRemove_1.push(node);\r\n                }\r\n            });\r\n            for (var i = nodesToRemove_1.length - 1; i >= 0; --i) {\r\n                rBush.remove(nodesToRemove_1[i]);\r\n            }\r\n        }\r\n        if (unregister) {\r\n            unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\r\n            delete this.featureChangeListenerKeys_[feature_uid];\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Snap.prototype.setMap = function (map) {\r\n        var currentMap = this.getMap();\r\n        var keys = this.featuresListenerKeys_;\r\n        var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\r\n        if (currentMap) {\r\n            keys.forEach(unlistenByKey);\r\n            keys.length = 0;\r\n            features.forEach(this.forEachFeatureRemove_.bind(this));\r\n        }\r\n        _super.prototype.setMap.call(this, map);\r\n        if (map) {\r\n            if (this.features_) {\r\n                keys.push(listen(this.features_, CollectionEventType.ADD, this.handleFeatureAdd_, this), listen(this.features_, CollectionEventType.REMOVE, this.handleFeatureRemove_, this));\r\n            }\r\n            else if (this.source_) {\r\n                keys.push(listen(this.source_, VectorEventType.ADDFEATURE, this.handleFeatureAdd_, this), listen(this.source_, VectorEventType.REMOVEFEATURE, this.handleFeatureRemove_, this));\r\n            }\r\n            features.forEach(this.forEachFeatureAdd_.bind(this));\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\r\n     * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\r\n     * @param {import(\"../PluggableMap.js\").default} map Map.\r\n     * @return {Result} Snap result\r\n     */\r\n    Snap.prototype.snapTo = function (pixel, pixelCoordinate, map) {\r\n        var lowerLeft = map.getCoordinateFromPixel([pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\r\n        var upperRight = map.getCoordinateFromPixel([pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\r\n        var box = boundingExtent([lowerLeft, upperRight]);\r\n        var segments = this.rBush_.getInExtent(box);\r\n        // If snapping on vertices only, don't consider circles\r\n        if (this.vertex_ && !this.edge_) {\r\n            segments = segments.filter(function (segment) {\r\n                return segment.feature.getGeometry().getType() !==\r\n                    GeometryType.CIRCLE;\r\n            });\r\n        }\r\n        var snappedToVertex = false;\r\n        var snapped = false;\r\n        var vertex = null;\r\n        var vertexPixel = null;\r\n        var dist, pixel1, pixel2, squaredDist1, squaredDist2;\r\n        if (segments.length > 0) {\r\n            this.pixelCoordinate_ = pixelCoordinate;\r\n            segments.sort(this.sortByDistance_);\r\n            var closestSegment = segments[0].segment;\r\n            var isCircle = segments[0].feature.getGeometry().getType() ===\r\n                GeometryType.CIRCLE;\r\n            if (this.vertex_ && !this.edge_) {\r\n                pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n                pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n                squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\r\n                squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\r\n                dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n                snappedToVertex = dist <= this.pixelTolerance_;\r\n                if (snappedToVertex) {\r\n                    snapped = true;\r\n                    vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\r\n                    vertexPixel = map.getPixelFromCoordinate(vertex);\r\n                }\r\n            }\r\n            else if (this.edge_) {\r\n                if (isCircle) {\r\n                    vertex = closestOnCircle(pixelCoordinate, \r\n                    /** @type {import(\"../geom/Circle.js\").default} */ (segments[0].feature.getGeometry()));\r\n                }\r\n                else {\r\n                    vertex = closestOnSegment(pixelCoordinate, closestSegment);\r\n                }\r\n                vertexPixel = map.getPixelFromCoordinate(vertex);\r\n                if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\r\n                    snapped = true;\r\n                    if (this.vertex_ && !isCircle) {\r\n                        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n                        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n                        squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\r\n                        squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\r\n                        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n                        snappedToVertex = dist <= this.pixelTolerance_;\r\n                        if (snappedToVertex) {\r\n                            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\r\n                            vertexPixel = map.getPixelFromCoordinate(vertex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (snapped) {\r\n                vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\r\n            }\r\n        }\r\n        return {\r\n            snapped: snapped,\r\n            vertex: vertex,\r\n            vertexPixel: vertexPixel\r\n        };\r\n    };\r\n    /**\r\n     * @param {import(\"../Feature.js\").default} feature Feature\r\n     * @private\r\n     */\r\n    Snap.prototype.updateFeature_ = function (feature) {\r\n        this.removeFeature(feature, false);\r\n        this.addFeature(feature, false);\r\n    };\r\n    /**\r\n     * @param {import(\"../Feature.js\").default} feature Feature\r\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\r\n     * @private\r\n     */\r\n    Snap.prototype.writeCircleGeometry_ = function (feature, geometry) {\r\n        var polygon = fromCircle(geometry);\r\n        var coordinates = polygon.getCoordinates()[0];\r\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n            var segment = coordinates.slice(i, i + 2);\r\n            var segmentData = {\r\n                feature: feature,\r\n                segment: segment\r\n            };\r\n            this.rBush_.insert(boundingExtent(segment), segmentData);\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../Feature.js\").default} feature Feature\r\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\r\n     * @private\r\n     */\r\n    Snap.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\r\n        var geometries = geometry.getGeometriesArray();\r\n        for (var i = 0; i < geometries.length; ++i) {\r\n            var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\r\n            if (segmentWriter) {\r\n                segmentWriter.call(this, feature, geometries[i]);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../Feature.js\").default} feature Feature\r\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\r\n     * @private\r\n     */\r\n    Snap.prototype.writeLineStringGeometry_ = function (feature, geometry) {\r\n        var coordinates = geometry.getCoordinates();\r\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n            var segment = coordinates.slice(i, i + 2);\r\n            var segmentData = {\r\n                feature: feature,\r\n                segment: segment\r\n            };\r\n            this.rBush_.insert(boundingExtent(segment), segmentData);\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../Feature.js\").default} feature Feature\r\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\r\n     * @private\r\n     */\r\n    Snap.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\r\n        var lines = geometry.getCoordinates();\r\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\r\n            var coordinates = lines[j];\r\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n                var segment = coordinates.slice(i, i + 2);\r\n                var segmentData = {\r\n                    feature: feature,\r\n                    segment: segment\r\n                };\r\n                this.rBush_.insert(boundingExtent(segment), segmentData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../Feature.js\").default} feature Feature\r\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\r\n     * @private\r\n     */\r\n    Snap.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\r\n        var points = geometry.getCoordinates();\r\n        for (var i = 0, ii = points.length; i < ii; ++i) {\r\n            var coordinates = points[i];\r\n            var segmentData = {\r\n                feature: feature,\r\n                segment: [coordinates, coordinates]\r\n            };\r\n            this.rBush_.insert(geometry.getExtent(), segmentData);\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../Feature.js\").default} feature Feature\r\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\r\n     * @private\r\n     */\r\n    Snap.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\r\n        var polygons = geometry.getCoordinates();\r\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\r\n            var rings = polygons[k];\r\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\r\n                var coordinates = rings[j];\r\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n                    var segment = coordinates.slice(i, i + 2);\r\n                    var segmentData = {\r\n                        feature: feature,\r\n                        segment: segment\r\n                    };\r\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../Feature.js\").default} feature Feature\r\n     * @param {import(\"../geom/Point.js\").default} geometry Geometry.\r\n     * @private\r\n     */\r\n    Snap.prototype.writePointGeometry_ = function (feature, geometry) {\r\n        var coordinates = geometry.getCoordinates();\r\n        var segmentData = {\r\n            feature: feature,\r\n            segment: [coordinates, coordinates]\r\n        };\r\n        this.rBush_.insert(geometry.getExtent(), segmentData);\r\n    };\r\n    /**\r\n     * @param {import(\"../Feature.js\").default} feature Feature\r\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\r\n     * @private\r\n     */\r\n    Snap.prototype.writePolygonGeometry_ = function (feature, geometry) {\r\n        var rings = geometry.getCoordinates();\r\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\r\n            var coordinates = rings[j];\r\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n                var segment = coordinates.slice(i, i + 2);\r\n                var segmentData = {\r\n                    feature: feature,\r\n                    segment: segment\r\n                };\r\n                this.rBush_.insert(boundingExtent(segment), segmentData);\r\n            }\r\n        }\r\n    };\r\n    return Snap;\r\n}(PointerInteraction));\r\n/**\r\n * Sort segments by distance, helper function\r\n * @param {SegmentData} a The first segment data.\r\n * @param {SegmentData} b The second segment data.\r\n * @return {number} The difference in distance.\r\n * @this {Snap}\r\n */\r\nfunction sortByDistance(a, b) {\r\n    var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\r\n    var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\r\n    return deltaA - deltaB;\r\n}\r\nexport default Snap;\r\n//# sourceMappingURL=Snap.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/interaction/Translate\r\n */\r\nimport Collection from '../Collection.js';\r\nimport { getChangeEventType } from '../Object.js';\r\nimport { listen } from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport { TRUE } from '../functions.js';\r\nimport { includes } from '../array.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport InteractionProperty from './Property.js';\r\n/**\r\n * @enum {string}\r\n */\r\nvar TranslateEventType = {\r\n    /**\r\n     * Triggered upon feature translation start.\r\n     * @event TranslateEvent#translatestart\r\n     * @api\r\n     */\r\n    TRANSLATESTART: 'translatestart',\r\n    /**\r\n     * Triggered upon feature translation.\r\n     * @event TranslateEvent#translating\r\n     * @api\r\n     */\r\n    TRANSLATING: 'translating',\r\n    /**\r\n     * Triggered upon feature translation end.\r\n     * @event TranslateEvent#translateend\r\n     * @api\r\n     */\r\n    TRANSLATEEND: 'translateend'\r\n};\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\r\n * not specified, all features on the map will be able to be translated.\r\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\r\n * translated. Alternatively, a filter function can be provided. The\r\n * function will be called for each layer in the map and should return\r\n * `true` for layers that you want to be translatable. If the option is\r\n * absent, all visible layers will be considered translatable.\r\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\r\n * will be checked for features.\r\n */\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\r\n * are instances of this type.\r\n */\r\nvar TranslateEvent = /** @class */ (function (_super) {\r\n    __extends(TranslateEvent, _super);\r\n    /**\r\n     * @param {TranslateEventType} type Type.\r\n     * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\r\n     */\r\n    function TranslateEvent(type, features, coordinate) {\r\n        var _this = _super.call(this, type) || this;\r\n        /**\r\n         * The features being translated.\r\n         * @type {Collection<import(\"../Feature.js\").default>}\r\n         * @api\r\n         */\r\n        _this.features = features;\r\n        /**\r\n         * The coordinate of the drag event.\r\n         * @const\r\n         * @type {import(\"../coordinate.js\").Coordinate}\r\n         * @api\r\n         */\r\n        _this.coordinate = coordinate;\r\n        return _this;\r\n    }\r\n    return TranslateEvent;\r\n}(Event));\r\nexport { TranslateEvent };\r\n/**\r\n * @classdesc\r\n * Interaction for translating (moving) features.\r\n *\r\n * @fires TranslateEvent\r\n * @api\r\n */\r\nvar Translate = /** @class */ (function (_super) {\r\n    __extends(Translate, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function Translate(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\r\n        /**\r\n         * The last position we translated to.\r\n         * @type {import(\"../coordinate.js\").Coordinate}\r\n         * @private\r\n         */\r\n        _this.lastCoordinate_ = null;\r\n        /**\r\n         * @type {Collection<import(\"../Feature.js\").default>}\r\n         * @private\r\n         */\r\n        _this.features_ = options.features !== undefined ? options.features : null;\r\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\r\n        var layerFilter;\r\n        if (options.layers) {\r\n            if (typeof options.layers === 'function') {\r\n                layerFilter = options.layers;\r\n            }\r\n            else {\r\n                var layers_1 = options.layers;\r\n                layerFilter = function (layer) {\r\n                    return includes(layers_1, layer);\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            layerFilter = TRUE;\r\n        }\r\n        /**\r\n         * @private\r\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\r\n         */\r\n        _this.layerFilter_ = layerFilter;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\r\n        /**\r\n         * @type {import(\"../Feature.js\").default}\r\n         * @private\r\n         */\r\n        _this.lastFeature_ = null;\r\n        listen(_this, getChangeEventType(InteractionProperty.ACTIVE), _this.handleActiveChanged_, _this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Translate.prototype.handleDownEvent = function (event) {\r\n        this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\r\n        if (!this.lastCoordinate_ && this.lastFeature_) {\r\n            this.lastCoordinate_ = event.coordinate;\r\n            this.handleMoveEvent(event);\r\n            var features = this.features_ || new Collection([this.lastFeature_]);\r\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATESTART, features, event.coordinate));\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Translate.prototype.handleUpEvent = function (event) {\r\n        if (this.lastCoordinate_) {\r\n            this.lastCoordinate_ = null;\r\n            this.handleMoveEvent(event);\r\n            var features = this.features_ || new Collection([this.lastFeature_]);\r\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATEEND, features, event.coordinate));\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Translate.prototype.handleDragEvent = function (event) {\r\n        if (this.lastCoordinate_) {\r\n            var newCoordinate = event.coordinate;\r\n            var deltaX_1 = newCoordinate[0] - this.lastCoordinate_[0];\r\n            var deltaY_1 = newCoordinate[1] - this.lastCoordinate_[1];\r\n            var features = this.features_ || new Collection([this.lastFeature_]);\r\n            features.forEach(function (feature) {\r\n                var geom = feature.getGeometry();\r\n                geom.translate(deltaX_1, deltaY_1);\r\n                feature.setGeometry(geom);\r\n            });\r\n            this.lastCoordinate_ = newCoordinate;\r\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATING, features, newCoordinate));\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Translate.prototype.handleMoveEvent = function (event) {\r\n        var elem = event.map.getViewport();\r\n        // Change the cursor to grab/grabbing if hovering any of the features managed\r\n        // by the interaction\r\n        if (this.featuresAtPixel_(event.pixel, event.map)) {\r\n            elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\r\n            elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\r\n        }\r\n        else {\r\n            elem.classList.remove('ol-grab', 'ol-grabbing');\r\n        }\r\n    };\r\n    /**\r\n     * Tests to see if the given coordinates intersects any of our selected\r\n     * features.\r\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\r\n     * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\r\n     * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\r\n     * coordinates.\r\n     * @private\r\n     */\r\n    Translate.prototype.featuresAtPixel_ = function (pixel, map) {\r\n        return map.forEachFeatureAtPixel(pixel, function (feature) {\r\n            if (!this.features_ || includes(this.features_.getArray(), feature)) {\r\n                return feature;\r\n            }\r\n        }.bind(this), {\r\n            layerFilter: this.layerFilter_,\r\n            hitTolerance: this.hitTolerance_\r\n        });\r\n    };\r\n    /**\r\n     * Returns the Hit-detection tolerance.\r\n     * @returns {number} Hit tolerance in pixels.\r\n     * @api\r\n     */\r\n    Translate.prototype.getHitTolerance = function () {\r\n        return this.hitTolerance_;\r\n    };\r\n    /**\r\n     * Hit-detection tolerance. Pixels inside the radius around the given position\r\n     * will be checked for features.\r\n     * @param {number} hitTolerance Hit tolerance in pixels.\r\n     * @api\r\n     */\r\n    Translate.prototype.setHitTolerance = function (hitTolerance) {\r\n        this.hitTolerance_ = hitTolerance;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Translate.prototype.setMap = function (map) {\r\n        var oldMap = this.getMap();\r\n        _super.prototype.setMap.call(this, map);\r\n        this.updateState_(oldMap);\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    Translate.prototype.handleActiveChanged_ = function () {\r\n        this.updateState_(null);\r\n    };\r\n    /**\r\n     * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\r\n     * @private\r\n     */\r\n    Translate.prototype.updateState_ = function (oldMap) {\r\n        var map = this.getMap();\r\n        var active = this.getActive();\r\n        if (!map || !active) {\r\n            map = map || oldMap;\r\n            if (map) {\r\n                var elem = map.getViewport();\r\n                elem.classList.remove('ol-grab', 'ol-grabbing');\r\n            }\r\n        }\r\n    };\r\n    return Translate;\r\n}(PointerInteraction));\r\nexport default Translate;\r\n//# sourceMappingURL=Translate.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/layer/BaseImage\r\n */\r\nimport Layer from './Layer.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\r\n */\r\n/**\r\n * @classdesc\r\n * Server-rendered images that are available for arbitrary extents and\r\n * resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nvar BaseImageLayer = /** @class */ (function (_super) {\r\n    __extends(BaseImageLayer, _super);\r\n    /**\r\n     * @param {Options=} opt_options Layer options.\r\n     */\r\n    function BaseImageLayer(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        _this = _super.call(this, options) || this;\r\n        return _this;\r\n    }\r\n    return BaseImageLayer;\r\n}(Layer));\r\n/**\r\n * Return the associated {@link module:ol/source/Image source} of the image layer.\r\n * @function\r\n * @return {import(\"../source/Image.js\").default} Source.\r\n * @api\r\n */\r\nBaseImageLayer.prototype.getSource;\r\nexport default BaseImageLayer;\r\n//# sourceMappingURL=BaseImage.js.map","/**\r\n * @module ol/layer/TileProperty\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n    PRELOAD: 'preload',\r\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\r\n};\r\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/layer/BaseTile\r\n */\r\nimport Layer from './Layer.js';\r\nimport TileProperty from './TileProperty.js';\r\nimport { assign } from '../obj.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\r\n * means no preloading.\r\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\r\n */\r\n/**\r\n * @classdesc\r\n * For layer sources that provide pre-rendered, tiled images in grids that are\r\n * organized by zoom levels for specific resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nvar BaseTileLayer = /** @class */ (function (_super) {\r\n    __extends(BaseTileLayer, _super);\r\n    /**\r\n     * @param {Options=} opt_options Tile layer options.\r\n     */\r\n    function BaseTileLayer(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        var baseOptions = assign({}, options);\r\n        delete baseOptions.preload;\r\n        delete baseOptions.useInterimTilesOnError;\r\n        _this = _super.call(this, baseOptions) || this;\r\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\r\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\r\n            options.useInterimTilesOnError : true);\r\n        return _this;\r\n    }\r\n    /**\r\n    * Return the level as number to which we will preload tiles up to.\r\n    * @return {number} The level to preload tiles up to.\r\n    * @observable\r\n    * @api\r\n    */\r\n    BaseTileLayer.prototype.getPreload = function () {\r\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\r\n    };\r\n    /**\r\n    * Set the level as number to which we will preload tiles up to.\r\n    * @param {number} preload The level to preload tiles up to.\r\n    * @observable\r\n    * @api\r\n    */\r\n    BaseTileLayer.prototype.setPreload = function (preload) {\r\n        this.set(TileProperty.PRELOAD, preload);\r\n    };\r\n    /**\r\n    * Whether we use interim tiles on error.\r\n    * @return {boolean} Use interim tiles on error.\r\n    * @observable\r\n    * @api\r\n    */\r\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\r\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\r\n    };\r\n    /**\r\n    * Set whether we use interim tiles on error.\r\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\r\n    * @observable\r\n    * @api\r\n    */\r\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\r\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\r\n    };\r\n    return BaseTileLayer;\r\n}(Layer));\r\n/**\r\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\r\n * @function\r\n * @return {import(\"../source/Tile.js\").default} Source.\r\n * @api\r\n */\r\nBaseTileLayer.prototype.getSource;\r\nexport default BaseTileLayer;\r\n//# sourceMappingURL=BaseTile.js.map","/**\r\n * @module ol/geom/flat/geodesic\r\n */\r\nimport { squaredSegmentDistance, toRadians, toDegrees } from '../../math.js';\r\nimport { get as getProjection, getTransform } from '../../proj.js';\r\n/**\r\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\r\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\r\n *     projected coordinates.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nfunction line(interpolate, transform, squaredTolerance) {\r\n    // FIXME reduce garbage generation\r\n    // FIXME optimize stack operations\r\n    /** @type {Array<number>} */\r\n    var flatCoordinates = [];\r\n    var geoA = interpolate(0);\r\n    var geoB = interpolate(1);\r\n    var a = transform(geoA);\r\n    var b = transform(geoB);\r\n    /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\r\n    var geoStack = [geoB, geoA];\r\n    /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\r\n    var stack = [b, a];\r\n    /** @type {Array<number>} */\r\n    var fractionStack = [1, 0];\r\n    /** @type {!Object<string, boolean>} */\r\n    var fractions = {};\r\n    var maxIterations = 1e5;\r\n    var geoM, m, fracA, fracB, fracM, key;\r\n    while (--maxIterations > 0 && fractionStack.length > 0) {\r\n        // Pop the a coordinate off the stack\r\n        fracA = fractionStack.pop();\r\n        geoA = geoStack.pop();\r\n        a = stack.pop();\r\n        // Add the a coordinate if it has not been added yet\r\n        key = fracA.toString();\r\n        if (!(key in fractions)) {\r\n            flatCoordinates.push(a[0], a[1]);\r\n            fractions[key] = true;\r\n        }\r\n        // Pop the b coordinate off the stack\r\n        fracB = fractionStack.pop();\r\n        geoB = geoStack.pop();\r\n        b = stack.pop();\r\n        // Find the m point between the a and b coordinates\r\n        fracM = (fracA + fracB) / 2;\r\n        geoM = interpolate(fracM);\r\n        m = transform(geoM);\r\n        if (squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) < squaredTolerance) {\r\n            // If the m point is sufficiently close to the straight line, then we\r\n            // discard it.  Just use the b coordinate and move on to the next line\r\n            // segment.\r\n            flatCoordinates.push(b[0], b[1]);\r\n            key = fracB.toString();\r\n            fractions[key] = true;\r\n        }\r\n        else {\r\n            // Otherwise, we need to subdivide the current line segment.  Split it\r\n            // into two and push the two line segments onto the stack.\r\n            fractionStack.push(fracB, fracM, fracM, fracA);\r\n            stack.push(b, m, m, a);\r\n            geoStack.push(geoB, geoM, geoM, geoA);\r\n        }\r\n    }\r\n    return flatCoordinates;\r\n}\r\n/**\r\n * Generate a great-circle arcs between two lat/lon points.\r\n * @param {number} lon1 Longitude 1 in degrees.\r\n * @param {number} lat1 Latitude 1 in degrees.\r\n * @param {number} lon2 Longitude 2 in degrees.\r\n * @param {number} lat2 Latitude 2 in degrees.\r\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\r\n    var geoProjection = getProjection('EPSG:4326');\r\n    var cosLat1 = Math.cos(toRadians(lat1));\r\n    var sinLat1 = Math.sin(toRadians(lat1));\r\n    var cosLat2 = Math.cos(toRadians(lat2));\r\n    var sinLat2 = Math.sin(toRadians(lat2));\r\n    var cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\r\n    var sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\r\n    var d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\r\n    return line(\r\n    /**\r\n     * @param {number} frac Fraction.\r\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\r\n     */\r\n    function (frac) {\r\n        if (1 <= d) {\r\n            return [lon2, lat2];\r\n        }\r\n        var D = frac * Math.acos(d);\r\n        var cosD = Math.cos(D);\r\n        var sinD = Math.sin(D);\r\n        var y = sinDeltaLon * cosLat2;\r\n        var x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\r\n        var theta = Math.atan2(y, x);\r\n        var lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\r\n        var lon = toRadians(lon1) +\r\n            Math.atan2(Math.sin(theta) * sinD * cosLat1, cosD - sinLat1 * Math.sin(lat));\r\n        return [toDegrees(lon), toDegrees(lat)];\r\n    }, getTransform(geoProjection, projection), squaredTolerance);\r\n}\r\n/**\r\n * Generate a meridian (line at constant longitude).\r\n * @param {number} lon Longitude.\r\n * @param {number} lat1 Latitude 1.\r\n * @param {number} lat2 Latitude 2.\r\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\r\n    var epsg4326Projection = getProjection('EPSG:4326');\r\n    return line(\r\n    /**\r\n     * @param {number} frac Fraction.\r\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\r\n     */\r\n    function (frac) {\r\n        return [lon, lat1 + ((lat2 - lat1) * frac)];\r\n    }, getTransform(epsg4326Projection, projection), squaredTolerance);\r\n}\r\n/**\r\n * Generate a parallel (line at constant latitude).\r\n * @param {number} lat Latitude.\r\n * @param {number} lon1 Longitude 1.\r\n * @param {number} lon2 Longitude 2.\r\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\r\n    var epsg4326Projection = getProjection('EPSG:4326');\r\n    return line(\r\n    /**\r\n     * @param {number} frac Fraction.\r\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\r\n     */\r\n    function (frac) {\r\n        return [lon1 + ((lon2 - lon1) * frac), lat];\r\n    }, getTransform(epsg4326Projection, projection), squaredTolerance);\r\n}\r\n//# sourceMappingURL=geodesic.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/layer/Graticule\r\n */\r\nimport VectorLayer from './Vector.js';\r\nimport { assign } from '../obj.js';\r\nimport { degreesToStringHDMS } from '../coordinate';\r\nimport Text from '../style/Text';\r\nimport Fill from '../style/Fill';\r\nimport Stroke from '../style/Stroke';\r\nimport LineString from '../geom/LineString.js';\r\nimport VectorSource from '../source/Vector';\r\nimport { equivalent as equivalentProjection, get as getProjection, getTransform, transformExtent } from '../proj';\r\nimport { getCenter, intersects, equals, getIntersection, isEmpty } from '../extent';\r\nimport { clamp } from '../math';\r\nimport Style from '../style/Style';\r\nimport Feature from '../Feature';\r\nimport { bbox } from '../loadingstrategy';\r\nimport { meridian, parallel } from '../geom/flat/geodesic';\r\nimport GeometryLayout from '../geom/GeometryLayout';\r\nimport Point from '../geom/Point';\r\nimport Collection from '../Collection';\r\n/**\r\n * @type {Stroke}\r\n * @private\r\n * @const\r\n */\r\nvar DEFAULT_STROKE_STYLE = new Stroke({\r\n    color: 'rgba(0,0,0,0.2)'\r\n});\r\n/**\r\n * @type {Array<number>}\r\n * @private\r\n */\r\nvar INTERVALS = [\r\n    90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\r\n];\r\n/**\r\n * @typedef {Object} GraticuleLabelDataType\r\n * @property {Point} geom\r\n * @property {string} text\r\n */\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [maxLines=100] The maximum number of meridians and\r\n * parallels from the center of the map. The default value of 100 means that at\r\n * most 200 meridians and 200 parallels will be displayed. The default value is\r\n * appropriate for conformal projections like Spherical Mercator. If you\r\n * increase the value, more lines will be drawn and the drawing performance will\r\n * decrease.\r\n * @property {Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\r\n * stroke style to use for drawing the graticule. If not provided, a not fully\r\n * opaque black will be used.\r\n * @property {number} [targetSize=100] The target size of the graticule cells,\r\n * in pixels.\r\n * @property {boolean} [showLabels=false] Render a label with the respective\r\n * latitude/longitude for each graticule line.\r\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\r\n * longitudes. This function is called with the longitude as argument, and\r\n * should return a formatted string representing the longitude. By default,\r\n * labels are formatted as degrees, minutes, seconds and hemisphere.\r\n * @property {function(number):string} [latLabelFormatter] Label formatter for\r\n * latitudes. This function is called with the latitude as argument, and\r\n * should return a formatted string representing the latitude. By default,\r\n * labels are formatted as degrees, minutes, seconds and hemisphere.\r\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\r\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\r\n * top.\r\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\r\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\r\n * right.\r\n * @property {Text} [lonLabelStyle] Longitude label text\r\n * style. If not provided, the following style will be used:\r\n * ```js\r\n * new Text({\r\n *   font: '12px Calibri,sans-serif',\r\n *   textBaseline: 'bottom',\r\n *   fill: new Fill({\r\n *     color: 'rgba(0,0,0,1)'\r\n *   }),\r\n *   stroke: new Stroke({\r\n *     color: 'rgba(255,255,255,1)',\r\n *     width: 3\r\n *   })\r\n * });\r\n * ```\r\n * Note that the default's `textBaseline` configuration will not work well for\r\n * `lonLabelPosition` configurations that position labels close to the top of\r\n * the viewport.\r\n * @property {Text} [latLabelStyle] Latitude label text style.\r\n * If not provided, the following style will be used:\r\n * ```js\r\n * new Text({\r\n *   font: '12px Calibri,sans-serif',\r\n *   textAlign: 'end',\r\n *   fill: new Fill({\r\n *     color: 'rgba(0,0,0,1)'\r\n *   }),\r\n *   stroke: Stroke({\r\n *     color: 'rgba(255,255,255,1)',\r\n *     width: 3\r\n *   })\r\n * });\r\n * ```\r\n * Note that the default's `textAlign` configuration will not work well for\r\n * `latLabelPosition` configurations that position labels close to the left of\r\n * the viewport.\r\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001]]\r\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\r\n * ```js\r\n * [30, 10]\r\n * ```\r\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\r\n */\r\n/**\r\n * @classdesc\r\n * Layer that renders a grid for a coordinate system.\r\n *\r\n * @fires import(\"../render/Event.js\").RenderEvent\r\n * @api\r\n */\r\nvar Graticule = /** @class */ (function (_super) {\r\n    __extends(Graticule, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function Graticule(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        var baseOptions = assign({}, options);\r\n        delete baseOptions.maxLines;\r\n        delete baseOptions.strokeStyle;\r\n        delete baseOptions.targetSize;\r\n        delete baseOptions.showLabels;\r\n        delete baseOptions.lonLabelFormatter;\r\n        delete baseOptions.latLabelFormatter;\r\n        delete baseOptions.lonLabelPosition;\r\n        delete baseOptions.latLabelPosition;\r\n        delete baseOptions.lonLabelStyle;\r\n        delete baseOptions.latLabelStyle;\r\n        delete baseOptions.intervals;\r\n        _this = _super.call(this, baseOptions) || this;\r\n        /**\r\n         * @type {import(\"../proj/Projection.js\").default}\r\n         */\r\n        _this.projection_ = null;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.maxLat_ = Infinity;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.maxLon_ = Infinity;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.minLat_ = -Infinity;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.minLon_ = -Infinity;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.maxLatP_ = Infinity;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.maxLonP_ = Infinity;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.minLatP_ = -Infinity;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.minLonP_ = -Infinity;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\r\n        /**\r\n         * @type {Array<LineString>}\r\n         * @private\r\n         */\r\n        _this.meridians_ = [];\r\n        /**\r\n         * @type {Array<LineString>}\r\n         * @private\r\n         */\r\n        _this.parallels_ = [];\r\n        /**\r\n         * @type {Stroke}\r\n         * @private\r\n         */\r\n        _this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\r\n        /**\r\n         * @type {import(\"../proj.js\").TransformFunction|undefined}\r\n         * @private\r\n         */\r\n        _this.fromLonLatTransform_ = undefined;\r\n        /**\r\n         * @type {import(\"../proj.js\").TransformFunction|undefined}\r\n         * @private\r\n         */\r\n        _this.toLonLatTransform_ = undefined;\r\n        /**\r\n         * @type {import(\"../coordinate.js\").Coordinate}\r\n         * @private\r\n         */\r\n        _this.projectionCenterLonLat_ = null;\r\n        /**\r\n         * @type {Array<GraticuleLabelDataType>}\r\n         * @private\r\n         */\r\n        _this.meridiansLabels_ = null;\r\n        /**\r\n         * @type {Array<GraticuleLabelDataType>}\r\n         * @private\r\n         */\r\n        _this.parallelsLabels_ = null;\r\n        if (options.showLabels) {\r\n            /**\r\n             * @type {null|function(number):string}\r\n             * @private\r\n             */\r\n            _this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\r\n                degreesToStringHDMS.bind(_this, 'EW') : options.lonLabelFormatter;\r\n            /**\r\n             * @type {function(number):string}\r\n             * @private\r\n             */\r\n            _this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\r\n                degreesToStringHDMS.bind(_this, 'NS') : options.latLabelFormatter;\r\n            /**\r\n             * Longitude label position in fractions (0..1) of view extent. 0 means\r\n             * bottom, 1 means top.\r\n             * @type {number}\r\n             * @private\r\n             */\r\n            _this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\r\n                options.lonLabelPosition;\r\n            /**\r\n             * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\r\n             * means right.\r\n             * @type {number}\r\n             * @private\r\n             */\r\n            _this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\r\n                options.latLabelPosition;\r\n            /**\r\n             * @type {Object.<string,Style>}\r\n             * @private\r\n             */\r\n            _this.lonLabelStyleCache_ = {};\r\n            /**\r\n             * @private\r\n             * @param {import(\"../Feature\").default} feature Feature\r\n             * @return {Style} style\r\n             */\r\n            _this.lonLabelStyle_ = function (feature) {\r\n                var label = feature.get('graticule_label');\r\n                if (!this.lonLabelStyleCache_[label]) {\r\n                    this.lonLabelStyleCache_[label] = new Style({\r\n                        text: options.lonLabelStyle !== undefined ? options.lonLabelStyle :\r\n                            new Text({\r\n                                text: label,\r\n                                font: '12px Calibri,sans-serif',\r\n                                textBaseline: 'bottom',\r\n                                fill: new Fill({\r\n                                    color: 'rgba(0,0,0,1)'\r\n                                }),\r\n                                stroke: new Stroke({\r\n                                    color: 'rgba(255,255,255,1)',\r\n                                    width: 3\r\n                                })\r\n                            })\r\n                    });\r\n                }\r\n                return this.lonLabelStyleCache_[label];\r\n            }.bind(_this);\r\n            /**\r\n             * @type {Object.<string,Style>}\r\n             * @private\r\n             */\r\n            _this.latLabelStyleCache_ = {};\r\n            /**\r\n             * @private\r\n             * @param {import(\"../Feature\").default} feature Feature\r\n             * @return {Style} style\r\n             */\r\n            _this.latLabelStyle_ = function (feature) {\r\n                var label = feature.get('graticule_label');\r\n                if (!this.latLabelStyleCache_[label]) {\r\n                    this.latLabelStyleCache_[label] = new Style({\r\n                        text: options.latLabelStyle !== undefined ? options.latLabelStyle :\r\n                            new Text({\r\n                                text: label,\r\n                                font: '12px Calibri,sans-serif',\r\n                                textAlign: 'right',\r\n                                fill: new Fill({\r\n                                    color: 'rgba(0,0,0,1)'\r\n                                }),\r\n                                stroke: new Stroke({\r\n                                    color: 'rgba(255,255,255,1)',\r\n                                    width: 3\r\n                                })\r\n                            })\r\n                    });\r\n                }\r\n                return this.latLabelStyleCache_[label];\r\n            }.bind(_this);\r\n            _this.meridiansLabels_ = [];\r\n            _this.parallelsLabels_ = [];\r\n        }\r\n        /**\r\n         * @type {Array<number>}\r\n         * @private\r\n         */\r\n        _this.intervals_ = options.intervals !== undefined ? options.intervals : INTERVALS;\r\n        // use a source with a custom loader for lines & text\r\n        _this.setSource(new VectorSource({\r\n            loader: _this.loaderFunction.bind(_this),\r\n            strategy: bbox,\r\n            features: new Collection(),\r\n            overlaps: false,\r\n            useSpatialIndex: false,\r\n            wrapX: options.wrapX\r\n        }));\r\n        /**\r\n         * feature pool to use when updating graticule\r\n         * @type {Array<Feature>}\r\n         * @private\r\n         */\r\n        _this.featurePool_ = [];\r\n        /**\r\n         * @type {Style}\r\n         * @private\r\n         */\r\n        _this.lineStyle_ = new Style({\r\n            stroke: _this.strokeStyle_\r\n        });\r\n        /**\r\n         * @type {import(\"../extent.js\").Extent}\r\n         */\r\n        _this.renderedExtent_ = null;\r\n        _this.setRenderOrder(null);\r\n        _this.renderBuffer_ = 0;\r\n        _this.updateWhileAnimating_ = true;\r\n        _this.updateWhileInteracting_ = true;\r\n        _this.tmpExtent_ = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Update geometries in the source based on current view\r\n     * @param {import(\"../extent\").Extent} extent Extent\r\n     * @param {number} resolution Resolution\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection\r\n     */\r\n    Graticule.prototype.loaderFunction = function (extent, resolution, projection) {\r\n        var source = /** @type {import(\"../source/Vector.js\").default} */ (this.getSource());\r\n        // only consider the intersection between our own extent & the requested one\r\n        var layerExtent = this.getExtent() || [-Infinity, -Infinity, Infinity, Infinity];\r\n        var renderExtent = getIntersection(layerExtent, extent, this.tmpExtent_);\r\n        // we should not keep track of loaded extents\r\n        setTimeout(function () {\r\n            source.removeLoadedExtent(extent);\r\n        }, 0);\r\n        if (this.renderedExtent_ && equals(this.renderedExtent_, renderExtent)) {\r\n            return;\r\n        }\r\n        this.renderedExtent_ = renderExtent;\r\n        // bail out if nothing to render\r\n        if (isEmpty(renderExtent)) {\r\n            return;\r\n        }\r\n        // update projection info\r\n        var center = getCenter(renderExtent);\r\n        var squaredTolerance = resolution * resolution / 4;\r\n        var updateProjectionInfo = !this.projection_ ||\r\n            !equivalentProjection(this.projection_, projection);\r\n        if (updateProjectionInfo) {\r\n            this.updateProjectionInfo_(projection);\r\n        }\r\n        this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\r\n        // first make sure we have enough features in the pool\r\n        var featureCount = this.meridians_.length + this.parallels_.length;\r\n        if (this.meridiansLabels_) {\r\n            featureCount += this.meridiansLabels_.length;\r\n        }\r\n        if (this.parallelsLabels_) {\r\n            featureCount += this.parallelsLabels_.length;\r\n        }\r\n        var feature;\r\n        while (featureCount > this.featurePool_.length) {\r\n            feature = new Feature();\r\n            this.featurePool_.push(feature);\r\n        }\r\n        var featuresColl = source.getFeaturesCollection();\r\n        featuresColl.clear();\r\n        var poolIndex = 0;\r\n        // add features for the lines & labels\r\n        var i, l;\r\n        for (i = 0, l = this.meridians_.length; i < l; ++i) {\r\n            feature = this.featurePool_[poolIndex++];\r\n            feature.setGeometry(this.meridians_[i]);\r\n            feature.setStyle(this.lineStyle_);\r\n            featuresColl.push(feature);\r\n        }\r\n        for (i = 0, l = this.parallels_.length; i < l; ++i) {\r\n            feature = this.featurePool_[poolIndex++];\r\n            feature.setGeometry(this.parallels_[i]);\r\n            feature.setStyle(this.lineStyle_);\r\n            featuresColl.push(feature);\r\n        }\r\n        var labelData;\r\n        if (this.meridiansLabels_) {\r\n            for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\r\n                labelData = this.meridiansLabels_[i];\r\n                feature = this.featurePool_[poolIndex++];\r\n                feature.setGeometry(labelData.geom);\r\n                feature.setStyle(this.lonLabelStyle_);\r\n                feature.set('graticule_label', labelData.text);\r\n                featuresColl.push(feature);\r\n            }\r\n        }\r\n        if (this.parallelsLabels_) {\r\n            for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\r\n                labelData = this.parallelsLabels_[i];\r\n                feature = this.featurePool_[poolIndex++];\r\n                feature.setGeometry(labelData.geom);\r\n                feature.setStyle(this.latLabelStyle_);\r\n                feature.set('graticule_label', labelData.text);\r\n                featuresColl.push(feature);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} lon Longitude.\r\n     * @param {number} minLat Minimal latitude.\r\n     * @param {number} maxLat Maximal latitude.\r\n     * @param {number} squaredTolerance Squared tolerance.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {number} index Index.\r\n     * @return {number} Index.\r\n     * @private\r\n     */\r\n    Graticule.prototype.addMeridian_ = function (lon, minLat, maxLat, squaredTolerance, extent, index) {\r\n        var lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\r\n        if (intersects(lineString.getExtent(), extent)) {\r\n            if (this.meridiansLabels_) {\r\n                var textPoint = this.getMeridianPoint_(lineString, extent, index);\r\n                this.meridiansLabels_[index] = {\r\n                    geom: textPoint,\r\n                    text: this.lonLabelFormatter_(lon)\r\n                };\r\n            }\r\n            this.meridians_[index++] = lineString;\r\n        }\r\n        return index;\r\n    };\r\n    /**\r\n     * @param {number} lat Latitude.\r\n     * @param {number} minLon Minimal longitude.\r\n     * @param {number} maxLon Maximal longitude.\r\n     * @param {number} squaredTolerance Squared tolerance.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {number} index Index.\r\n     * @return {number} Index.\r\n     * @private\r\n     */\r\n    Graticule.prototype.addParallel_ = function (lat, minLon, maxLon, squaredTolerance, extent, index) {\r\n        var lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\r\n        if (intersects(lineString.getExtent(), extent)) {\r\n            if (this.parallelsLabels_) {\r\n                var textPoint = this.getParallelPoint_(lineString, extent, index);\r\n                this.parallelsLabels_[index] = {\r\n                    geom: textPoint,\r\n                    text: this.latLabelFormatter_(lat)\r\n                };\r\n            }\r\n            this.parallels_[index++] = lineString;\r\n        }\r\n        return index;\r\n    };\r\n    /**\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\r\n     * @param {number} resolution Resolution.\r\n     * @param {number} squaredTolerance Squared tolerance.\r\n     * @private\r\n     */\r\n    Graticule.prototype.createGraticule_ = function (extent, center, resolution, squaredTolerance) {\r\n        var interval = this.getInterval_(resolution);\r\n        if (interval == -1) {\r\n            this.meridians_.length = this.parallels_.length = 0;\r\n            if (this.meridiansLabels_) {\r\n                this.meridiansLabels_.length = 0;\r\n            }\r\n            if (this.parallelsLabels_) {\r\n                this.parallelsLabels_.length = 0;\r\n            }\r\n            return;\r\n        }\r\n        var centerLonLat = this.toLonLatTransform_(center);\r\n        var centerLon = centerLonLat[0];\r\n        var centerLat = centerLonLat[1];\r\n        var maxLines = this.maxLines_;\r\n        var cnt, idx, lat, lon;\r\n        var validExtent = [\r\n            Math.max(extent[0], this.minLonP_),\r\n            Math.max(extent[1], this.minLatP_),\r\n            Math.min(extent[2], this.maxLonP_),\r\n            Math.min(extent[3], this.maxLatP_)\r\n        ];\r\n        validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\r\n        var maxLat = validExtent[3];\r\n        var maxLon = validExtent[2];\r\n        var minLat = validExtent[1];\r\n        var minLon = validExtent[0];\r\n        // Create meridians\r\n        centerLon = Math.floor(centerLon / interval) * interval;\r\n        lon = clamp(centerLon, this.minLon_, this.maxLon_);\r\n        idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\r\n        cnt = 0;\r\n        while (lon != this.minLon_ && cnt++ < maxLines) {\r\n            lon = Math.max(lon - interval, this.minLon_);\r\n            idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\r\n        }\r\n        lon = clamp(centerLon, this.minLon_, this.maxLon_);\r\n        cnt = 0;\r\n        while (lon != this.maxLon_ && cnt++ < maxLines) {\r\n            lon = Math.min(lon + interval, this.maxLon_);\r\n            idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\r\n        }\r\n        this.meridians_.length = idx;\r\n        if (this.meridiansLabels_) {\r\n            this.meridiansLabels_.length = idx;\r\n        }\r\n        // Create parallels\r\n        centerLat = Math.floor(centerLat / interval) * interval;\r\n        lat = clamp(centerLat, this.minLat_, this.maxLat_);\r\n        idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\r\n        cnt = 0;\r\n        while (lat != this.minLat_ && cnt++ < maxLines) {\r\n            lat = Math.max(lat - interval, this.minLat_);\r\n            idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\r\n        }\r\n        lat = clamp(centerLat, this.minLat_, this.maxLat_);\r\n        cnt = 0;\r\n        while (lat != this.maxLat_ && cnt++ < maxLines) {\r\n            lat = Math.min(lat + interval, this.maxLat_);\r\n            idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\r\n        }\r\n        this.parallels_.length = idx;\r\n        if (this.parallelsLabels_) {\r\n            this.parallelsLabels_.length = idx;\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} resolution Resolution.\r\n     * @return {number} The interval in degrees.\r\n     * @private\r\n     */\r\n    Graticule.prototype.getInterval_ = function (resolution) {\r\n        var centerLon = this.projectionCenterLonLat_[0];\r\n        var centerLat = this.projectionCenterLonLat_[1];\r\n        var interval = -1;\r\n        var target = Math.pow(this.targetSize_ * resolution, 2);\r\n        /** @type {Array<number>} **/\r\n        var p1 = [];\r\n        /** @type {Array<number>} **/\r\n        var p2 = [];\r\n        for (var i = 0, ii = this.intervals_.length; i < ii; ++i) {\r\n            var delta = this.intervals_[i] / 2;\r\n            p1[0] = centerLon - delta;\r\n            p1[1] = centerLat - delta;\r\n            p2[0] = centerLon + delta;\r\n            p2[1] = centerLat + delta;\r\n            this.fromLonLatTransform_(p1, p1);\r\n            this.fromLonLatTransform_(p2, p2);\r\n            var dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\r\n            if (dist <= target) {\r\n                break;\r\n            }\r\n            interval = this.intervals_[i];\r\n        }\r\n        return interval;\r\n    };\r\n    /**\r\n     * @param {number} lon Longitude.\r\n     * @param {number} minLat Minimal latitude.\r\n     * @param {number} maxLat Maximal latitude.\r\n     * @param {number} squaredTolerance Squared tolerance.\r\n     * @return {LineString} The meridian line string.\r\n     * @param {number} index Index.\r\n     * @private\r\n     */\r\n    Graticule.prototype.getMeridian_ = function (lon, minLat, maxLat, squaredTolerance, index) {\r\n        var flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\r\n        var lineString = this.meridians_[index];\r\n        if (!lineString) {\r\n            lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\r\n        }\r\n        else {\r\n            lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\r\n            lineString.changed();\r\n        }\r\n        return lineString;\r\n    };\r\n    /**\r\n     * @param {LineString} lineString Meridian\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {number} index Index.\r\n     * @return {Point} Meridian point.\r\n     * @private\r\n     */\r\n    Graticule.prototype.getMeridianPoint_ = function (lineString, extent, index) {\r\n        var flatCoordinates = lineString.getFlatCoordinates();\r\n        var clampedBottom = Math.max(extent[1], flatCoordinates[1]);\r\n        var clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\r\n        var lat = clamp(extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_, clampedBottom, clampedTop);\r\n        var coordinate = [flatCoordinates[0], lat];\r\n        var point;\r\n        if (index in this.meridiansLabels_) {\r\n            point = this.meridiansLabels_[index].geom;\r\n            point.setCoordinates(coordinate);\r\n        }\r\n        else {\r\n            point = new Point(coordinate);\r\n        }\r\n        return point;\r\n    };\r\n    /**\r\n     * Get the list of meridians.  Meridians are lines of equal longitude.\r\n     * @return {Array<LineString>} The meridians.\r\n     * @api\r\n     */\r\n    Graticule.prototype.getMeridians = function () {\r\n        return this.meridians_;\r\n    };\r\n    /**\r\n     * @param {number} lat Latitude.\r\n     * @param {number} minLon Minimal longitude.\r\n     * @param {number} maxLon Maximal longitude.\r\n     * @param {number} squaredTolerance Squared tolerance.\r\n     * @return {LineString} The parallel line string.\r\n     * @param {number} index Index.\r\n     * @private\r\n     */\r\n    Graticule.prototype.getParallel_ = function (lat, minLon, maxLon, squaredTolerance, index) {\r\n        var flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\r\n        var lineString = this.parallels_[index];\r\n        if (!lineString) {\r\n            lineString = new LineString(flatCoordinates, GeometryLayout.XY);\r\n        }\r\n        else {\r\n            lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\r\n            lineString.changed();\r\n        }\r\n        return lineString;\r\n    };\r\n    /**\r\n     * @param {LineString} lineString Parallels.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {number} index Index.\r\n     * @return {Point} Parallel point.\r\n     * @private\r\n     */\r\n    Graticule.prototype.getParallelPoint_ = function (lineString, extent, index) {\r\n        var flatCoordinates = lineString.getFlatCoordinates();\r\n        var clampedLeft = Math.max(extent[0], flatCoordinates[0]);\r\n        var clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\r\n        var lon = clamp(extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_, clampedLeft, clampedRight);\r\n        var coordinate = [lon, flatCoordinates[1]];\r\n        var point;\r\n        if (index in this.parallelsLabels_) {\r\n            point = this.parallelsLabels_[index].geom;\r\n            point.setCoordinates(coordinate);\r\n        }\r\n        else {\r\n            point = new Point(coordinate);\r\n        }\r\n        return point;\r\n    };\r\n    /**\r\n     * Get the list of parallels.  Parallels are lines of equal latitude.\r\n     * @return {Array<LineString>} The parallels.\r\n     * @api\r\n     */\r\n    Graticule.prototype.getParallels = function () {\r\n        return this.parallels_;\r\n    };\r\n    /**\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @private\r\n     */\r\n    Graticule.prototype.updateProjectionInfo_ = function (projection) {\r\n        var epsg4326Projection = getProjection('EPSG:4326');\r\n        var worldExtent = projection.getWorldExtent();\r\n        var worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\r\n        this.maxLat_ = worldExtent[3];\r\n        this.maxLon_ = worldExtent[2];\r\n        this.minLat_ = worldExtent[1];\r\n        this.minLon_ = worldExtent[0];\r\n        this.maxLatP_ = worldExtentP[3];\r\n        this.maxLonP_ = worldExtentP[2];\r\n        this.minLatP_ = worldExtentP[1];\r\n        this.minLonP_ = worldExtentP[0];\r\n        this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\r\n        this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\r\n        this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\r\n        this.projection_ = projection;\r\n    };\r\n    return Graticule;\r\n}(VectorLayer));\r\nexport default Graticule;\r\n//# sourceMappingURL=Graticule.js.map","/**\r\n * @module ol/webgl\r\n */\r\n/**\r\n * Constants taken from goog.webgl\r\n */\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var ONE = 1;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var SRC_ALPHA = 0x0302;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var COLOR_BUFFER_BIT = 0x00004000;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var TRIANGLES = 0x0004;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var TRIANGLE_STRIP = 0x0005;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var ARRAY_BUFFER = 0x8892;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var STREAM_DRAW = 0x88E0;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var STATIC_DRAW = 0x88E4;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var DYNAMIC_DRAW = 0x88E8;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var CULL_FACE = 0x0B44;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var BLEND = 0x0BE2;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var STENCIL_TEST = 0x0B90;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var DEPTH_TEST = 0x0B71;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var SCISSOR_TEST = 0x0C11;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var UNSIGNED_BYTE = 0x1401;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var UNSIGNED_SHORT = 0x1403;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var UNSIGNED_INT = 0x1405;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var FLOAT = 0x1406;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var RGBA = 0x1908;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var FRAGMENT_SHADER = 0x8B30;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var VERTEX_SHADER = 0x8B31;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var LINK_STATUS = 0x8B82;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var LINEAR = 0x2601;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var TEXTURE_MAG_FILTER = 0x2800;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var TEXTURE_MIN_FILTER = 0x2801;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var TEXTURE_WRAP_S = 0x2802;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var TEXTURE_WRAP_T = 0x2803;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var TEXTURE_2D = 0x0DE1;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var TEXTURE0 = 0x84C0;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var CLAMP_TO_EDGE = 0x812F;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var COMPILE_STATUS = 0x8B81;\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var FRAMEBUFFER = 0x8D40;\r\n/** end of goog.webgl constants\r\n */\r\n/**\r\n * @const\r\n * @type {Array<string>}\r\n */\r\nvar CONTEXT_IDS = [\r\n    'experimental-webgl',\r\n    'webgl',\r\n    'webkit-3d',\r\n    'moz-webgl'\r\n];\r\n/**\r\n * @param {HTMLCanvasElement} canvas Canvas.\r\n * @param {Object=} opt_attributes Attributes.\r\n * @return {WebGLRenderingContext} WebGL rendering context.\r\n */\r\nexport function getContext(canvas, opt_attributes) {\r\n    var ii = CONTEXT_IDS.length;\r\n    for (var i = 0; i < ii; ++i) {\r\n        try {\r\n            var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\r\n            if (context) {\r\n                return /** @type {!WebGLRenderingContext} */ (context);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // pass\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Include debuggable shader sources.  Default is `true`. This should be set to\r\n * `false` for production builds.\r\n * @type {boolean}\r\n */\r\nexport var DEBUG = true;\r\n/**\r\n * The maximum supported WebGL texture size in pixels. If WebGL is not\r\n * supported, the value is set to `undefined`.\r\n * @type {number|undefined}\r\n */\r\nvar MAX_TEXTURE_SIZE; // value is set below\r\n/**\r\n * List of supported WebGL extensions.\r\n * @type {Array<string>}\r\n */\r\nvar EXTENSIONS; // value is set below\r\n/**\r\n * True if both OpenLayers and browser support WebGL.\r\n * @type {boolean}\r\n * @api\r\n */\r\nvar HAS = false;\r\n//TODO Remove side effects\r\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\r\n    try {\r\n        var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\r\n        var gl = getContext(canvas);\r\n        if (gl) {\r\n            HAS = true;\r\n            MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\r\n            EXTENSIONS = gl.getSupportedExtensions();\r\n        }\r\n    }\r\n    catch (e) {\r\n        // pass\r\n    }\r\n}\r\nexport { HAS, MAX_TEXTURE_SIZE, EXTENSIONS };\r\n//# sourceMappingURL=webgl.js.map","/**\r\n * @module ol/webgl/Buffer\r\n */\r\nimport { STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW } from '../webgl.js';\r\n/**\r\n * @enum {number}\r\n */\r\nvar BufferUsage = {\r\n    STATIC_DRAW: STATIC_DRAW,\r\n    STREAM_DRAW: STREAM_DRAW,\r\n    DYNAMIC_DRAW: DYNAMIC_DRAW\r\n};\r\nvar WebGLArrayBuffer = /** @class */ (function () {\r\n    /**\r\n     * @param {Array<number>=} opt_arr Array.\r\n     * @param {number=} opt_usage Usage.\r\n     */\r\n    function WebGLArrayBuffer(opt_arr, opt_usage) {\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        this.arr_ = opt_arr !== undefined ? opt_arr : [];\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\r\n    }\r\n    /**\r\n     * @return {Array<number>} Array.\r\n     */\r\n    WebGLArrayBuffer.prototype.getArray = function () {\r\n        return this.arr_;\r\n    };\r\n    /**\r\n     * @return {number} Usage.\r\n     */\r\n    WebGLArrayBuffer.prototype.getUsage = function () {\r\n        return this.usage_;\r\n    };\r\n    return WebGLArrayBuffer;\r\n}());\r\nexport default WebGLArrayBuffer;\r\n//# sourceMappingURL=Buffer.js.map","/**\r\n * @module ol/webgl/ContextEventType\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n    LOST: 'webglcontextlost',\r\n    RESTORED: 'webglcontextrestored'\r\n};\r\n//# sourceMappingURL=ContextEventType.js.map","/**\r\n * @module ol/vec/mat4\r\n */\r\n/**\r\n * @return {Array<number>} 4x4 matrix representing a 3D identity transform.\r\n */\r\nexport function create() {\r\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n}\r\n/**\r\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\r\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\r\n * @return {Array<number>} 2D transformation matrix as flattened 4x4 matrix.\r\n */\r\nexport function fromTransform(mat4, transform) {\r\n    mat4[0] = transform[0];\r\n    mat4[1] = transform[1];\r\n    mat4[4] = transform[2];\r\n    mat4[5] = transform[3];\r\n    mat4[12] = transform[4];\r\n    mat4[13] = transform[5];\r\n    return mat4;\r\n}\r\n//# sourceMappingURL=mat4.js.map","/**\r\n * @module ol/webgl/PostProcessingPass\r\n */\r\nvar DEFAULT_VERTEX_SHADER = \"\\n  precision mediump float;\\n  \\n  attribute vec2 a_position;\\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n  \\n  uniform vec2 u_screenSize;\\n   \\n  void main() {\\n    v_texCoord = a_position * 0.5 + 0.5;\\n    v_screenCoord = v_texCoord * u_screenSize;\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n  }\\n\";\r\nvar DEFAULT_FRAGMENT_SHADER = \"\\n  precision mediump float;\\n   \\n  uniform sampler2D u_image;\\n   \\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n   \\n  void main() {\\n    gl_FragColor = texture2D(u_image, v_texCoord);\\n    gl_FragColor.rgb *= gl_FragColor.a;\\n  }\\n\";\r\n/**\r\n * @typedef {Object} Options\r\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\r\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\r\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\r\n * @property {string} [vertexShader] Vertex shader source\r\n * @property {string} [fragmentShader] Fragment shader source\r\n * @property {Object.<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\r\n */\r\n/**\r\n * @typedef {Object} UniformInternalDescription\r\n * @property {import(\"./Helper\").UniformValue} value Value\r\n * @property {number} location Location\r\n * @property {WebGLTexture} [texture] Texture\r\n * @private\r\n */\r\n/**\r\n * @classdesc\r\n * This class is used to define Post Processing passes with custom shaders and uniforms.\r\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\r\n *\r\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\r\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\r\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\r\n *\r\n * Default shaders are shown hereafter:\r\n *\r\n * * Vertex shader:\r\n *\r\n *   ```\r\n *   precision mediump float;\r\n *\r\n *   attribute vec2 a_position;\r\n *   varying vec2 v_texCoord;\r\n *   varying vec2 v_screenCoord;\r\n *\r\n *   uniform vec2 u_screenSize;\r\n *\r\n *   void main() {\r\n *     v_texCoord = a_position * 0.5 + 0.5;\r\n *     v_screenCoord = v_texCoord * u_screenSize;\r\n *     gl_Position = vec4(a_position, 0.0, 1.0);\r\n *   }\r\n *   ```\r\n *\r\n * * Fragment shader:\r\n *\r\n *   ```\r\n *   precision mediump float;\r\n *\r\n *   uniform sampler2D u_image;\r\n *\r\n *   varying vec2 v_texCoord;\r\n *   varying vec2 v_screenCoord;\r\n *\r\n *   void main() {\r\n *     gl_FragColor = texture2D(u_image, v_texCoord);\r\n *     gl_FragColor.rgb *= gl_FragColor.a;\r\n *   }\r\n *   ```\r\n *\r\n * @api\r\n */\r\nvar WebGLPostProcessingPass = /** @class */ (function () {\r\n    /**\r\n     * @param {Options=} options Options.\r\n     */\r\n    function WebGLPostProcessingPass(options) {\r\n        this.gl_ = options.webGlContext;\r\n        var gl = this.gl_;\r\n        this.scaleRatio_ = options.scaleRatio || 1;\r\n        this.renderTargetTexture_ = gl.createTexture();\r\n        this.renderTargetTextureSize_ = null;\r\n        this.frameBuffer_ = gl.createFramebuffer();\r\n        // compile the program for the frame buffer\r\n        // TODO: make compilation errors show up\r\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n        gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\r\n        gl.compileShader(vertexShader);\r\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n        gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\r\n        gl.compileShader(fragmentShader);\r\n        this.renderTargetProgram_ = gl.createProgram();\r\n        gl.attachShader(this.renderTargetProgram_, vertexShader);\r\n        gl.attachShader(this.renderTargetProgram_, fragmentShader);\r\n        gl.linkProgram(this.renderTargetProgram_);\r\n        // bind the vertices buffer for the frame buffer\r\n        this.renderTargetVerticesBuffer_ = gl.createBuffer();\r\n        var verticesArray = [\r\n            -1, -1,\r\n            1, -1,\r\n            -1, 1,\r\n            1, -1,\r\n            1, 1,\r\n            -1, 1\r\n        ];\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\r\n        this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\r\n        this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\r\n        this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\r\n        /**\r\n         * Holds info about custom uniforms used in the post processing pass\r\n         * @type {Array<UniformInternalDescription>}\r\n         * @private\r\n         */\r\n        this.uniforms_ = [];\r\n        options.uniforms && Object.keys(options.uniforms).forEach(function (name) {\r\n            this.uniforms_.push({\r\n                value: options.uniforms[name],\r\n                location: gl.getUniformLocation(this.renderTargetProgram_, name)\r\n            });\r\n        }.bind(this));\r\n    }\r\n    /**\r\n     * Get the WebGL rendering context\r\n     * @return {WebGLRenderingContext} The rendering context.\r\n     * @api\r\n     */\r\n    WebGLPostProcessingPass.prototype.getGL = function () {\r\n        return this.gl_;\r\n    };\r\n    /**\r\n     * Initialize the render target texture of the post process, make sure it is at the\r\n     * right size and bind it as a render target for the next draw calls.\r\n     * The last step to be initialized will be the one where the primitives are rendered.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\r\n     * @api\r\n     */\r\n    WebGLPostProcessingPass.prototype.init = function (frameState) {\r\n        var gl = this.getGL();\r\n        var canvas = gl.canvas;\r\n        var size = frameState.size;\r\n        // rendering goes to my buffer\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\r\n        gl.viewport(0, 0, canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_);\r\n        // if size has changed: adjust canvas & render target texture\r\n        if (!this.renderTargetTextureSize_ ||\r\n            this.renderTargetTextureSize_[0] !== size[0] || this.renderTargetTextureSize_[1] !== size[1]) {\r\n            this.renderTargetTextureSize_ = size;\r\n            // create a new texture\r\n            var level = 0;\r\n            var internalFormat = gl.RGBA;\r\n            var border = 0;\r\n            var format = gl.RGBA;\r\n            var type = gl.UNSIGNED_BYTE;\r\n            var data = null;\r\n            gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\r\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_, border, format, type, data);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            // bind the texture to the framebuffer\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\r\n        }\r\n    };\r\n    /**\r\n     * Render to the next postprocessing pass (or to the canvas if final pass).\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\r\n     * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\r\n     * @api\r\n     */\r\n    WebGLPostProcessingPass.prototype.apply = function (frameState, nextPass) {\r\n        var gl = this.getGL();\r\n        var canvas = gl.canvas;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\r\n        // render the frame buffer to the canvas\r\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        gl.viewport(0, 0, canvas.width, canvas.height);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\r\n        gl.useProgram(this.renderTargetProgram_);\r\n        gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\r\n        gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\r\n        gl.uniform2f(this.renderTargetUniformLocation_, canvas.width, canvas.height);\r\n        gl.uniform1i(this.renderTargetTextureLocation_, 0);\r\n        this.applyUniforms(frameState);\r\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n    };\r\n    /**\r\n     * @returns {WebGLFramebuffer} Frame buffer\r\n     * @api\r\n     */\r\n    WebGLPostProcessingPass.prototype.getFrameBuffer = function () {\r\n        return this.frameBuffer_;\r\n    };\r\n    /**\r\n     * Sets the custom uniforms based on what was given in the constructor.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @private\r\n     */\r\n    WebGLPostProcessingPass.prototype.applyUniforms = function (frameState) {\r\n        var gl = this.getGL();\r\n        var value;\r\n        var textureSlot = 1;\r\n        this.uniforms_.forEach(function (uniform) {\r\n            value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\r\n            // apply value based on type\r\n            if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\r\n                // create a texture & put data\r\n                if (!uniform.texture) {\r\n                    uniform.texture = gl.createTexture();\r\n                }\r\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\r\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n                if (value instanceof ImageData) {\r\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0, gl.UNSIGNED_BYTE, new Uint8Array(value.data));\r\n                }\r\n                else {\r\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\r\n                }\r\n                // fill texture slots\r\n                gl.uniform1i(uniform.location, textureSlot++);\r\n            }\r\n            else if (Array.isArray(value)) {\r\n                switch (value.length) {\r\n                    case 2:\r\n                        gl.uniform2f(uniform.location, value[0], value[1]);\r\n                        return;\r\n                    case 3:\r\n                        gl.uniform3f(uniform.location, value[0], value[1], value[2]);\r\n                        return;\r\n                    case 4:\r\n                        gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\r\n                        return;\r\n                    default: return;\r\n                }\r\n            }\r\n            else if (typeof value === 'number') {\r\n                gl.uniform1f(uniform.location, value);\r\n            }\r\n        });\r\n    };\r\n    return WebGLPostProcessingPass;\r\n}());\r\nexport default WebGLPostProcessingPass;\r\n//# sourceMappingURL=PostProcessingPass.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/webgl/Helper\r\n */\r\nimport { getUid } from '../util.js';\r\nimport { EXTENSIONS as WEBGL_EXTENSIONS } from '../webgl.js';\r\nimport Disposable from '../Disposable.js';\r\nimport { includes } from '../array.js';\r\nimport { listen, unlistenAll } from '../events.js';\r\nimport { clear } from '../obj.js';\r\nimport { ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T } from '../webgl.js';\r\nimport ContextEventType from '../webgl/ContextEventType.js';\r\nimport { create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform, translate as translateTransform } from '../transform';\r\nimport { create, fromTransform } from '../vec/mat4';\r\nimport WebGLPostProcessingPass from './PostProcessingPass';\r\nimport { getContext } from '../webgl';\r\n/**\r\n * @typedef {Object} BufferCacheEntry\r\n * @property {import(\"./Buffer.js\").default} buf\r\n * @property {WebGLBuffer} buffer\r\n */\r\n/**\r\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`\r\n * @enum {number}\r\n */\r\nexport var ShaderType = {\r\n    FRAGMENT_SHADER: 0x8B30,\r\n    VERTEX_SHADER: 0x8B31\r\n};\r\n/**\r\n * Uniform names used in the default shaders.\r\n * @const\r\n * @type {Object.<string,string>}\r\n */\r\nexport var DefaultUniform = {\r\n    PROJECTION_MATRIX: 'u_projectionMatrix',\r\n    OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\r\n    OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix'\r\n};\r\n/**\r\n * Attribute names used in the default shaders.\r\n * @const\r\n * @type {Object.<string,string>}\r\n */\r\nexport var DefaultAttrib = {\r\n    POSITION: 'a_position',\r\n    TEX_COORD: 'a_texCoord',\r\n    OPACITY: 'a_opacity',\r\n    ROTATE_WITH_VIEW: 'a_rotateWithView',\r\n    OFFSETS: 'a_offsets',\r\n    COLOR: 'a_color'\r\n};\r\n/**\r\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData} UniformLiteralValue\r\n */\r\n/**\r\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\r\n * one of the previous types.\r\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\r\n */\r\n/**\r\n * @typedef {Object} PostProcessesOptions\r\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\r\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\r\n * @property {string} [vertexShader] Vertex shader source\r\n * @property {string} [fragmentShader] Fragment shader source\r\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions for the post process step\r\n */\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions; property namesmust math the uniform\r\n * names in the provided or default shaders.\r\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\r\n */\r\n/**\r\n * @typedef {Object} UniformInternalDescription\r\n * @property {string} name Name\r\n * @property {UniformLiteralValue=} value Value\r\n * @property {WebGLTexture} [texture] Texture\r\n * @private\r\n */\r\n/**\r\n * @classdesc\r\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\r\n * directly the WebGL API should not be required anymore.\r\n *\r\n * Several operations are handled by the `WebGLHelper` class:\r\n *\r\n * ### Define custom shaders and uniforms\r\n *\r\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\r\n *\r\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\r\n *   Outputs are:\r\n *\r\n *   * `gl_Position`: position of the vertex in screen space\r\n *\r\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\r\n *\r\n *   Fragment shaders are used to control the actual color of the pixels rawn on screen. Their only output is `gl_FragColor`.\r\n *\r\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\r\n *   can be changed at every frame and can be of type float, arrays of float or images.\r\n *\r\n *   Shaders must be compiled and assembled into a program like so:\r\n *   ```js\r\n *   // here we simply create two shaders and assemble them in a program which is then used\r\n *   // for subsequent rendering calls\r\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\r\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\r\n *   this.program = this.context.getProgram(fragmentShader, vertexShader);\r\n *   this.context.useProgram(this.program);\r\n *   ```\r\n *\r\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\r\n *   You can also change their value along the way like so:\r\n *   ```js\r\n *   this.context.setUniformFloatValue('u_value', valueAsNumber);\r\n *   ```\r\n *\r\n * ### Defining post processing passes\r\n *\r\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\r\n *   while applying special effects in screen space.\r\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\r\n *\r\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\r\n *   A post process step accepts the following options:\r\n *\r\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\r\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\r\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\r\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\r\n *\r\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\r\n *\r\n * ### Binding WebGL buffers and flushing data into them:\r\n *\r\n *   Data that must be passed to the GPU has to be transferred using `WebGLArrayBuffer` objects.\r\n *   A buffer has to be created only once, but must be bound everytime the data it holds is changed. Using `WebGLHelper.bindBuffer`\r\n *   will bind the buffer and flush the new data to the GPU.\r\n *\r\n *   For now, the `WebGLHelper` class expects {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\r\n *   ```js\r\n *   // at initialization phase\r\n *   this.verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\r\n *   this.indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\r\n *\r\n *   // at rendering phase\r\n *   this.context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\r\n *   this.context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\r\n *   ```\r\n *\r\n * ### Specifying attributes\r\n *\r\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\r\n *   Attributes are used to specify these uses. Use `WebGLHelper.enableAttributeArray` and either\r\n *   the default attribute names in {@link module:ol/webgl/Helper~DefaultAttrib} or custom ones.\r\n *\r\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\r\n *   ```js\r\n *   // here we indicate that the data array has the following structure:\r\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\r\n *   let bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\r\n *   this.context.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * 6, 0);\r\n *   this.context.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 2);\r\n *   this.context.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 4);\r\n *   ```\r\n *\r\n * ### Rendering primitives\r\n *\r\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using `WebGLHelper.prepareDraw` `drawElements` and `finalizeDraw`.\r\n *   ```js\r\n *   // frame preparation step\r\n *   this.context.prepareDraw(frameState);\r\n *\r\n *   // call this for every data array that has to be rendered on screen\r\n *   this.context.drawElements(0, this.indicesBuffer.getArray().length);\r\n *\r\n *   // finalize the rendering by applying post processes\r\n *   this.context.finalizeDraw(frameState);\r\n *   ```\r\n *\r\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\r\n *\r\n *\r\n * @api\r\n */\r\nvar WebGLHelper = /** @class */ (function (_super) {\r\n    __extends(WebGLHelper, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function WebGLHelper(opt_options) {\r\n        var _this = _super.call(this) || this;\r\n        var options = opt_options || {};\r\n        /**\r\n         * @private\r\n         * @type {HTMLCanvasElement}\r\n         */\r\n        _this.canvas_ = document.createElement('canvas');\r\n        _this.canvas_.style.position = 'absolute';\r\n        /**\r\n         * @private\r\n         * @type {WebGLRenderingContext}\r\n         */\r\n        _this.gl_ = getContext(_this.canvas_);\r\n        var gl = _this.getGL();\r\n        /**\r\n         * @private\r\n         * @type {!Object<string, BufferCacheEntry>}\r\n         */\r\n        _this.bufferCache_ = {};\r\n        /**\r\n         * @private\r\n         * @type {!Array<WebGLShader>}\r\n         */\r\n        _this.shaderCache_ = [];\r\n        /**\r\n         * @private\r\n         * @type {!Array<WebGLProgram>}\r\n         */\r\n        _this.programCache_ = [];\r\n        /**\r\n         * @private\r\n         * @type {WebGLProgram}\r\n         */\r\n        _this.currentProgram_ = null;\r\n        /**\r\n         * @type {boolean}\r\n         */\r\n        _this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\r\n        // use the OES_element_index_uint extension if available\r\n        if (_this.hasOESElementIndexUint) {\r\n            gl.getExtension('OES_element_index_uint');\r\n        }\r\n        listen(_this.canvas_, ContextEventType.LOST, _this.handleWebGLContextLost, _this);\r\n        listen(_this.canvas_, ContextEventType.RESTORED, _this.handleWebGLContextRestored, _this);\r\n        /**\r\n         * @private\r\n         * @type {import(\"../transform.js\").Transform}\r\n         */\r\n        _this.projectionMatrix_ = createTransform();\r\n        /**\r\n         * @private\r\n         * @type {import(\"../transform.js\").Transform}\r\n         */\r\n        _this.offsetRotateMatrix_ = createTransform();\r\n        /**\r\n         * @private\r\n         * @type {import(\"../transform.js\").Transform}\r\n         */\r\n        _this.offsetScaleMatrix_ = createTransform();\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        _this.tmpMat4_ = create();\r\n        /**\r\n         * @private\r\n         * @type {Object.<string, WebGLUniformLocation>}\r\n         */\r\n        _this.uniformLocations_ = {};\r\n        /**\r\n         * @private\r\n         * @type {Object.<string, number>}\r\n         */\r\n        _this.attribLocations_ = {};\r\n        /**\r\n         * Holds info about custom uniforms used in the post processing pass.\r\n         * If the uniform is a texture, the WebGL Texture object will be stored here.\r\n         * @type {Array<UniformInternalDescription>}\r\n         * @private\r\n         */\r\n        _this.uniforms_ = [];\r\n        options.uniforms && Object.keys(options.uniforms).forEach(function (name) {\r\n            this.uniforms_.push({\r\n                name: name,\r\n                value: options.uniforms[name]\r\n            });\r\n        }.bind(_this));\r\n        /**\r\n         * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\r\n         * options. If no post process was given, a default one is used (so as not to have to make an exception to\r\n         * the frame buffer logic).\r\n         * @type {Array<WebGLPostProcessingPass>}\r\n         * @private\r\n         */\r\n        _this.postProcessPasses_ = options.postProcesses ? options.postProcesses.map(function (options) {\r\n            return new WebGLPostProcessingPass({\r\n                webGlContext: gl,\r\n                scaleRatio: options.scaleRatio,\r\n                vertexShader: options.vertexShader,\r\n                fragmentShader: options.fragmentShader,\r\n                uniforms: options.uniforms\r\n            });\r\n        }) : [new WebGLPostProcessingPass({ webGlContext: gl })];\r\n        /**\r\n         * @type {string|null}\r\n         * @private\r\n         */\r\n        _this.shaderCompileErrors_ = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Just bind the buffer if it's in the cache. Otherwise create\r\n     * the WebGL buffer, bind it, populate it, and add an entry to\r\n     * the cache.\r\n     * TODO: improve this, the logic is unclear: we want A/ to bind a buffer and B/ to flush data in it\r\n     * @param {number} target Target.\r\n     * @param {import(\"./Buffer\").default} buf Buffer.\r\n     * @api\r\n     */\r\n    WebGLHelper.prototype.bindBuffer = function (target, buf) {\r\n        var gl = this.getGL();\r\n        var arr = buf.getArray();\r\n        var bufferKey = getUid(buf);\r\n        var bufferCache = this.bufferCache_[bufferKey];\r\n        if (!bufferCache) {\r\n            var buffer = gl.createBuffer();\r\n            bufferCache = this.bufferCache_[bufferKey] = {\r\n                buf: buf,\r\n                buffer: buffer\r\n            };\r\n        }\r\n        gl.bindBuffer(target, bufferCache.buffer);\r\n        var /** @type {ArrayBufferView} */ arrayBuffer;\r\n        if (target == ARRAY_BUFFER) {\r\n            arrayBuffer = new Float32Array(arr);\r\n        }\r\n        else if (target == ELEMENT_ARRAY_BUFFER) {\r\n            arrayBuffer = this.hasOESElementIndexUint ?\r\n                new Uint32Array(arr) : new Uint16Array(arr);\r\n        }\r\n        gl.bufferData(target, arrayBuffer, buf.getUsage());\r\n    };\r\n    /**\r\n     * @param {import(\"./Buffer.js\").default} buf Buffer.\r\n     */\r\n    WebGLHelper.prototype.deleteBuffer = function (buf) {\r\n        var gl = this.getGL();\r\n        var bufferKey = getUid(buf);\r\n        var bufferCacheEntry = this.bufferCache_[bufferKey];\r\n        if (!gl.isContextLost()) {\r\n            gl.deleteBuffer(bufferCacheEntry.buffer);\r\n        }\r\n        delete this.bufferCache_[bufferKey];\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WebGLHelper.prototype.disposeInternal = function () {\r\n        unlistenAll(this.canvas_);\r\n        var gl = this.getGL();\r\n        if (!gl.isContextLost()) {\r\n            for (var key in this.bufferCache_) {\r\n                gl.deleteBuffer(this.bufferCache_[key].buffer);\r\n            }\r\n            for (var key in this.programCache_) {\r\n                gl.deleteProgram(this.programCache_[key]);\r\n            }\r\n            for (var key in this.shaderCache_) {\r\n                gl.deleteShader(this.shaderCache_[key]);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Clear the buffer & set the viewport to draw.\r\n     * Post process passes will be initialized here, the first one being bound as a render target for\r\n     * subsequent draw calls.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\r\n     * @api\r\n     */\r\n    WebGLHelper.prototype.prepareDraw = function (frameState) {\r\n        var gl = this.getGL();\r\n        var canvas = this.getCanvas();\r\n        var size = frameState.size;\r\n        var pixelRatio = frameState.pixelRatio;\r\n        canvas.width = size[0] * pixelRatio;\r\n        canvas.height = size[1] * pixelRatio;\r\n        canvas.style.width = size[0] + 'px';\r\n        canvas.style.height = size[1] + 'px';\r\n        gl.useProgram(this.currentProgram_);\r\n        // loop backwards in post processes list\r\n        for (var i = this.postProcessPasses_.length - 1; i >= 0; i--) {\r\n            this.postProcessPasses_[i].init(frameState);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        this.applyFrameState(frameState);\r\n        this.applyUniforms(frameState);\r\n    };\r\n    /**\r\n     * Execute a draw call based on the currently bound program, texture, buffers, attributes.\r\n     * @param {number} start Start index.\r\n     * @param {number} end End index.\r\n     * @api\r\n     */\r\n    WebGLHelper.prototype.drawElements = function (start, end) {\r\n        var gl = this.getGL();\r\n        var elementType = this.hasOESElementIndexUint ?\r\n            gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\r\n        var elementSize = this.hasOESElementIndexUint ? 4 : 2;\r\n        var numItems = end - start;\r\n        var offsetInBytes = start * elementSize;\r\n        gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\r\n    };\r\n    /**\r\n     * Apply the successive post process passes which will eventually render to the actual canvas.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\r\n     * @api\r\n     */\r\n    WebGLHelper.prototype.finalizeDraw = function (frameState) {\r\n        // apply post processes using the next one as target\r\n        for (var i = 0; i < this.postProcessPasses_.length; i++) {\r\n            this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1] || null);\r\n        }\r\n    };\r\n    /**\r\n     * @return {HTMLCanvasElement} Canvas.\r\n     * @api\r\n     */\r\n    WebGLHelper.prototype.getCanvas = function () {\r\n        return this.canvas_;\r\n    };\r\n    /**\r\n     * Get the WebGL rendering context\r\n     * @return {WebGLRenderingContext} The rendering context.\r\n     * @api\r\n     */\r\n    WebGLHelper.prototype.getGL = function () {\r\n        return this.gl_;\r\n    };\r\n    /**\r\n     * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @private\r\n     */\r\n    WebGLHelper.prototype.applyFrameState = function (frameState) {\r\n        var size = frameState.size;\r\n        var rotation = frameState.viewState.rotation;\r\n        var resolution = frameState.viewState.resolution;\r\n        var center = frameState.viewState.center;\r\n        // set the \"uniform\" values (coordinates 0,0 are the center of the view)\r\n        var projectionMatrix = resetTransform(this.projectionMatrix_);\r\n        scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\r\n        rotateTransform(projectionMatrix, -rotation);\r\n        translateTransform(projectionMatrix, -center[0], -center[1]);\r\n        var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\r\n        scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\r\n        var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\r\n        if (rotation !== 0) {\r\n            rotateTransform(offsetRotateMatrix, -rotation);\r\n        }\r\n        this.setUniformMatrixValue(DefaultUniform.PROJECTION_MATRIX, fromTransform(this.tmpMat4_, projectionMatrix));\r\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\r\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\r\n    };\r\n    /**\r\n     * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @private\r\n     */\r\n    WebGLHelper.prototype.applyUniforms = function (frameState) {\r\n        var gl = this.getGL();\r\n        var value;\r\n        var textureSlot = 0;\r\n        this.uniforms_.forEach(function (uniform) {\r\n            value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\r\n            // apply value based on type\r\n            if (value instanceof HTMLCanvasElement || value instanceof HTMLImageElement || value instanceof ImageData) {\r\n                // create a texture & put data\r\n                if (!uniform.texture) {\r\n                    uniform.texture = gl.createTexture();\r\n                }\r\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\r\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\r\n                // fill texture slots by increasing index\r\n                gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\r\n            }\r\n            else if (Array.isArray(value)) {\r\n                switch (value.length) {\r\n                    case 2:\r\n                        gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\r\n                        return;\r\n                    case 3:\r\n                        gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\r\n                        return;\r\n                    case 4:\r\n                        gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\r\n                        return;\r\n                    default:\r\n                        return;\r\n                }\r\n            }\r\n            else if (typeof value === 'number') {\r\n                gl.uniform1f(this.getUniformLocation(uniform.name), value);\r\n            }\r\n        }.bind(this));\r\n    };\r\n    /**\r\n     * Use a program.  If the program is already in use, this will return `false`.\r\n     * @param {WebGLProgram} program Program.\r\n     * @return {boolean} Changed.\r\n     * @api\r\n     */\r\n    WebGLHelper.prototype.useProgram = function (program) {\r\n        if (program == this.currentProgram_) {\r\n            return false;\r\n        }\r\n        else {\r\n            var gl = this.getGL();\r\n            gl.useProgram(program);\r\n            this.currentProgram_ = program;\r\n            this.uniformLocations_ = {};\r\n            this.attribLocations_ = {};\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Will attempt to compile a vertex or fragment shader based on source\r\n     * On error, the shader will be returned but\r\n     * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\r\n     * Use `gl.getShaderInfoLog(shader)` to have details\r\n     * @param {string} source Shader source\r\n     * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\r\n     * @return {WebGLShader} Shader object\r\n     */\r\n    WebGLHelper.prototype.compileShader = function (source, type) {\r\n        var gl = this.getGL();\r\n        var shader = gl.createShader(type);\r\n        gl.shaderSource(shader, source);\r\n        gl.compileShader(shader);\r\n        this.shaderCache_.push(shader);\r\n        return shader;\r\n    };\r\n    /**\r\n     * Create a program for a vertex and fragment shader. The shaders compilation may have failed:\r\n     * use `WebGLHelper.getShaderCompileErrors()`to have details if any.\r\n     * @param {string} fragmentShaderSource Fragment shader source.\r\n     * @param {string} vertexShaderSource Vertex shader source.\r\n     * @return {WebGLProgram} Program\r\n     * @api\r\n     */\r\n    WebGLHelper.prototype.getProgram = function (fragmentShaderSource, vertexShaderSource) {\r\n        var gl = this.getGL();\r\n        var fragmentShader = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\r\n        var vertexShader = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\r\n        this.shaderCompileErrors_ = null;\r\n        if (gl.getShaderInfoLog(fragmentShader)) {\r\n            this.shaderCompileErrors_ =\r\n                \"Fragment shader compilation failed:\\n\" + gl.getShaderInfoLog(fragmentShader);\r\n        }\r\n        if (gl.getShaderInfoLog(vertexShader)) {\r\n            this.shaderCompileErrors_ = (this.shaderCompileErrors_ || '') +\r\n                (\"Vertex shader compilation failed:\\n\" + gl.getShaderInfoLog(vertexShader));\r\n        }\r\n        var program = gl.createProgram();\r\n        gl.attachShader(program, fragmentShader);\r\n        gl.attachShader(program, vertexShader);\r\n        gl.linkProgram(program);\r\n        this.programCache_.push(program);\r\n        return program;\r\n    };\r\n    /**\r\n     * Will return the last shader compilation errors. If no error happened, will return null;\r\n     * @return {string|null} Errors description, or null if last compilation was successful\r\n     * @api\r\n     */\r\n    WebGLHelper.prototype.getShaderCompileErrors = function () {\r\n        return this.shaderCompileErrors_;\r\n    };\r\n    /**\r\n     * Will get the location from the shader or the cache\r\n     * @param {string} name Uniform name\r\n     * @return {WebGLUniformLocation} uniformLocation\r\n     * @api\r\n     */\r\n    WebGLHelper.prototype.getUniformLocation = function (name) {\r\n        if (this.uniformLocations_[name] === undefined) {\r\n            this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\r\n        }\r\n        return this.uniformLocations_[name];\r\n    };\r\n    /**\r\n     * Will get the location from the shader or the cache\r\n     * @param {string} name Attribute name\r\n     * @return {number} attribLocation\r\n     * @api\r\n     */\r\n    WebGLHelper.prototype.getAttributeLocation = function (name) {\r\n        if (this.attribLocations_[name] === undefined) {\r\n            this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\r\n        }\r\n        return this.attribLocations_[name];\r\n    };\r\n    /**\r\n     * Give a value for a standard float uniform\r\n     * @param {string} uniform Uniform name\r\n     * @param {number} value Value\r\n     * @api\r\n     */\r\n    WebGLHelper.prototype.setUniformFloatValue = function (uniform, value) {\r\n        this.getGL().uniform1f(this.getUniformLocation(uniform), value);\r\n    };\r\n    /**\r\n     * Give a value for a standard matrix4 uniform\r\n     * @param {string} uniform Uniform name\r\n     * @param {Array<number>} value Matrix value\r\n     * @api\r\n     */\r\n    WebGLHelper.prototype.setUniformMatrixValue = function (uniform, value) {\r\n        this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\r\n    };\r\n    /**\r\n     * Will set the currently bound buffer to an attribute of the shader program\r\n     * @param {string} attribName Attribute name\r\n     * @param {number} size Number of components per attributes\r\n     * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\r\n     * @param {number} stride Stride in bytes (0 means attribs are packed)\r\n     * @param {number} offset Offset in bytes\r\n     * @api\r\n     */\r\n    WebGLHelper.prototype.enableAttributeArray = function (attribName, size, type, stride, offset) {\r\n        var location = this.getAttributeLocation(attribName);\r\n        // the attribute has not been found in the shaders; do not enable it\r\n        if (location < 0) {\r\n            return;\r\n        }\r\n        this.getGL().enableVertexAttribArray(location);\r\n        this.getGL().vertexAttribPointer(location, size, type, false, stride, offset);\r\n    };\r\n    /**\r\n     * WebGL context was lost\r\n     * @private\r\n     */\r\n    WebGLHelper.prototype.handleWebGLContextLost = function () {\r\n        clear(this.bufferCache_);\r\n        clear(this.shaderCache_);\r\n        clear(this.programCache_);\r\n        this.currentProgram_ = null;\r\n    };\r\n    /**\r\n     * WebGL context was restored\r\n     * @private\r\n     */\r\n    WebGLHelper.prototype.handleWebGLContextRestored = function () {\r\n    };\r\n    // TODO: shutdown program\r\n    /**\r\n     * TODO: these are not used and should be reworked\r\n     * @param {number=} opt_wrapS wrapS.\r\n     * @param {number=} opt_wrapT wrapT.\r\n     * @return {WebGLTexture} The texture.\r\n     */\r\n    WebGLHelper.prototype.createTextureInternal = function (opt_wrapS, opt_wrapT) {\r\n        var gl = this.getGL();\r\n        var texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        if (opt_wrapS !== undefined) {\r\n            gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\r\n        }\r\n        if (opt_wrapT !== undefined) {\r\n            gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\r\n        }\r\n        return texture;\r\n    };\r\n    /**\r\n     * TODO: these are not used and should be reworked\r\n     * @param {number} width Width.\r\n     * @param {number} height Height.\r\n     * @param {number=} opt_wrapS wrapS.\r\n     * @param {number=} opt_wrapT wrapT.\r\n     * @return {WebGLTexture} The texture.\r\n     */\r\n    WebGLHelper.prototype.createEmptyTexture = function (width, height, opt_wrapS, opt_wrapT) {\r\n        var gl = this.getGL();\r\n        var texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n        return texture;\r\n    };\r\n    /**\r\n     * TODO: these are not used and should be reworked\r\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\r\n     * @param {number=} opt_wrapS wrapS.\r\n     * @param {number=} opt_wrapT wrapT.\r\n     * @return {WebGLTexture} The texture.\r\n     */\r\n    WebGLHelper.prototype.createTexture = function (image, opt_wrapS, opt_wrapT) {\r\n        var gl = this.getGL();\r\n        var texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n        return texture;\r\n    };\r\n    return WebGLHelper;\r\n}(Disposable));\r\nexport default WebGLHelper;\r\n//# sourceMappingURL=Helper.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/renderer/webgl/PointsLayer\r\n */\r\nimport LayerRenderer from '../Layer';\r\nimport WebGLArrayBuffer from '../../webgl/Buffer';\r\nimport { DYNAMIC_DRAW, ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, FLOAT } from '../../webgl';\r\nimport WebGLHelper, { DefaultAttrib } from '../../webgl/Helper';\r\nimport GeometryType from '../../geom/GeometryType';\r\nvar VERTEX_SHADER = \"\\n  precision mediump float;\\n  attribute vec2 a_position;\\n  attribute vec2 a_texCoord;\\n  attribute float a_rotateWithView;\\n  attribute vec2 a_offsets;\\n  attribute float a_opacity;\\n  attribute vec4 a_color;\\n  \\n  uniform mat4 u_projectionMatrix;\\n  uniform mat4 u_offsetScaleMatrix;\\n  uniform mat4 u_offsetRotateMatrix;\\n  \\n  varying vec2 v_texCoord;\\n  varying float v_opacity;\\n  varying vec4 v_color;\\n  \\n  void main(void) {\\n    mat4 offsetMatrix = u_offsetScaleMatrix;\\n    if (a_rotateWithView == 1.0) {\\n      offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n    }\\n    vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n    gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n    v_texCoord = a_texCoord;\\n    v_opacity = a_opacity;\\n    v_color = a_color;\\n  }\";\r\nvar FRAGMENT_SHADER = \"\\n  precision mediump float;\\n  \\n  uniform sampler2D u_texture;\\n\\n  varying vec2 v_texCoord;\\n  varying float v_opacity;\\n  varying vec4 v_color;\\n  \\n  void main(void) {\\n    if (v_opacity == 0.0) {\\n      discard;\\n    }\\n    vec4 textureColor = texture2D(u_texture, v_texCoord);\\n    gl_FragColor = v_color * textureColor;\\n    gl_FragColor.a *= v_opacity;\\n    gl_FragColor.rgb *= gl_FragColor.a;\\n  }\";\r\n/**\r\n * @typedef {Object} PostProcessesOptions\r\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\r\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\r\n * @property {string} [vertexShader] Vertex shader source\r\n * @property {string} [fragmentShader] Fragment shader source\r\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\r\n */\r\n/**\r\n * @typedef {Object} Options\r\n * @property {function(import(\"../../Feature\").default):number} [sizeCallback] Will be called on every feature in the\r\n * source to compute the size of the quad on screen (in pixels). This is only done on source change.\r\n * @property {function(import(\"../../Feature\").default, number):number} [coordCallback] Will be called on every feature in the\r\n * source to compute the coordinate of the quad center on screen (in pixels). This is only done on source change.\r\n * The second argument is 0 for `x` component and 1 for `y`.\r\n * @property {function(import(\"../../Feature\").default, number):number} [texCoordCallback] Will be called on every feature in the\r\n * source to compute the texture coordinates of each corner of the quad (without effect if no `texture` option defined). This is only done on source change.\r\n * The second argument is 0 for `u0` component, 1 for `v0`, 2 for `u1`, and 3 for `v1`.\r\n * @property {function(import(\"../../Feature\").default, number, number):number} [colorCallback] Will be called on every feature in the\r\n * source to compute the color of each corner of the quad. This is only done on source change.\r\n * The second argument is 0 for bottom left, 1 for bottom right, 2 for top right and 3 for top left\r\n * The third argument is 0 for red, 1 for green, 2 for blue and 3 for alpha\r\n * The return value should be between 0 and 1.\r\n * @property {function(import(\"../../Feature\").default):number} [opacityCallback] Will be called on every feature in the\r\n * source to compute the opacity of the quad on screen (from 0 to 1). This is only done on source change.\r\n * Note: this is multiplied with the color of the point which can also have an alpha value < 1.\r\n * @property {function(import(\"../../Feature\").default):boolean} [rotateWithViewCallback] Will be called on every feature in the\r\n * source to compute whether the quad on screen must stay upwards (`false`) or follow the view rotation (`true`).\r\n * This is only done on source change.\r\n * @property {HTMLCanvasElement|HTMLImageElement|ImageData} [texture] Texture to use on points. `texCoordCallback` and `sizeCallback`\r\n * must be defined for this to have any effect.\r\n * @property {string} [vertexShader] Vertex shader source\r\n * @property {string} [fragmentShader] Fragment shader source\r\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\r\n * Please note that `u_texture` is reserved for the main texture slot.\r\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\r\n */\r\n/**\r\n * @classdesc\r\n * WebGL vector renderer optimized for points.\r\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\r\n * every time the vector source changes.\r\n *\r\n * Use shaders to customize the final output. The following attributes are available:\r\n * * `vec2 a_position`\r\n * * `vec2 a_texCoord`\r\n * * `vec2 a_offsets`\r\n * * `float a_rotateWithView`\r\n * * `float a_opacity`\r\n * * `float a_color`\r\n *\r\n * The following uniform is used for the main texture: `u_texture`.\r\n *\r\n * Please note that the main shader output should have premultiplied alpha, otherwise the colors will be blended\r\n * additively.\r\n *\r\n * Points are rendered as quads with the following structure:\r\n *\r\n *   (u0, v1)      (u1, v1)\r\n *  [3]----------[2]\r\n *   |`           |\r\n *   |  `         |\r\n *   |    `       |\r\n *   |      `     |\r\n *   |        `   |\r\n *   |          ` |\r\n *  [0]----------[1]\r\n *   (u0, v0)      (u1, v0)\r\n *\r\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\r\n *\r\n * Default shaders are shown hereafter:\r\n *\r\n * * Vertex shader:\r\n *   ```\r\n *   precision mediump float;\r\n *\r\n *   attribute vec2 a_position;\r\n *   attribute vec2 a_texCoord;\r\n *   attribute float a_rotateWithView;\r\n *   attribute vec2 a_offsets;\r\n *   attribute float a_opacity;\r\n *   attribute vec4 a_color;\r\n *\r\n *   uniform mat4 u_projectionMatrix;\r\n *   uniform mat4 u_offsetScaleMatrix;\r\n *   uniform mat4 u_offsetRotateMatrix;\r\n *\r\n *   varying vec2 v_texCoord;\r\n *   varying float v_opacity;\r\n *   varying vec4 v_color;\r\n *\r\n *   void main(void) {\r\n *     mat4 offsetMatrix = u_offsetScaleMatrix;\r\n *     if (a_rotateWithView == 1.0) {\r\n *       offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\r\n *     }\r\n *     vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\r\n *     gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\r\n *     v_texCoord = a_texCoord;\r\n *     v_opacity = a_opacity;\r\n *     v_color = a_color;\r\n *   }\r\n *   ```\r\n *\r\n * * Fragment shader:\r\n *   ```\r\n *   precision mediump float;\r\n *\r\n *   uniform sampler2D u_texture;\r\n *\r\n *   varying vec2 v_texCoord;\r\n *   varying float v_opacity;\r\n *   varying vec4 v_color;\r\n *\r\n *   void main(void) {\r\n *     if (v_opacity == 0.0) {\r\n *       discard;\r\n *     }\r\n *     vec4 textureColor = texture2D(u_texture, v_texCoord);\r\n *     gl_FragColor = v_color * textureColor;\r\n *     gl_FragColor.a *= v_opacity;\r\n *     gl_FragColor.rgb *= gl_FragColor.a;\r\n *   }\r\n *   ```\r\n *\r\n * @api\r\n */\r\nvar WebGLPointsLayerRenderer = /** @class */ (function (_super) {\r\n    __extends(WebGLPointsLayerRenderer, _super);\r\n    /**\r\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\r\n     * @param {Options=} [opt_options] Options.\r\n     */\r\n    function WebGLPointsLayerRenderer(vectorLayer, opt_options) {\r\n        var _this = _super.call(this, vectorLayer) || this;\r\n        var options = opt_options || {};\r\n        var uniforms = options.uniforms || {};\r\n        uniforms.u_texture = options.texture || _this.getDefaultTexture();\r\n        _this.helper_ = new WebGLHelper({\r\n            postProcesses: options.postProcesses,\r\n            uniforms: uniforms\r\n        });\r\n        _this.sourceRevision_ = -1;\r\n        _this.verticesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\r\n        _this.indicesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\r\n        _this.program_ = _this.helper_.getProgram(options.fragmentShader || FRAGMENT_SHADER, options.vertexShader || VERTEX_SHADER);\r\n        _this.helper_.useProgram(_this.program_);\r\n        _this.sizeCallback_ = options.sizeCallback || function () {\r\n            return 1;\r\n        };\r\n        _this.coordCallback_ = options.coordCallback || function (feature, index) {\r\n            var geom = /** @type {import(\"../../geom/Point\").default} */ (feature.getGeometry());\r\n            return geom.getCoordinates()[index];\r\n        };\r\n        _this.opacityCallback_ = options.opacityCallback || function () {\r\n            return 1;\r\n        };\r\n        _this.texCoordCallback_ = options.texCoordCallback || function (feature, index) {\r\n            return index < 2 ? 0 : 1;\r\n        };\r\n        _this.colorCallback_ = options.colorCallback || function (feature, index, component) {\r\n            return 1;\r\n        };\r\n        _this.rotateWithViewCallback_ = options.rotateWithViewCallback || function () {\r\n            return false;\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WebGLPointsLayerRenderer.prototype.disposeInternal = function () {\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WebGLPointsLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\r\n        this.helper_.drawElements(0, this.indicesBuffer_.getArray().length);\r\n        this.helper_.finalizeDraw(frameState);\r\n        var canvas = this.helper_.getCanvas();\r\n        var opacity = layerState.opacity;\r\n        if (opacity !== parseFloat(canvas.style.opacity)) {\r\n            canvas.style.opacity = opacity;\r\n        }\r\n        return canvas;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WebGLPointsLayerRenderer.prototype.prepareFrame = function (frameState) {\r\n        var _this = this;\r\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n        var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\r\n        var stride = 12;\r\n        this.helper_.prepareDraw(frameState);\r\n        if (this.sourceRevision_ < vectorSource.getRevision()) {\r\n            this.sourceRevision_ = vectorSource.getRevision();\r\n            var viewState = frameState.viewState;\r\n            var projection = viewState.projection;\r\n            var resolution = viewState.resolution;\r\n            // loop on features to fill the buffer\r\n            vectorSource.loadFeatures([-Infinity, -Infinity, Infinity, Infinity], resolution, projection);\r\n            vectorSource.forEachFeature(function (feature) {\r\n                if (!feature.getGeometry() || feature.getGeometry().getType() !== GeometryType.POINT) {\r\n                    return;\r\n                }\r\n                var x = _this.coordCallback_(feature, 0);\r\n                var y = _this.coordCallback_(feature, 1);\r\n                var u0 = _this.texCoordCallback_(feature, 0);\r\n                var v0 = _this.texCoordCallback_(feature, 1);\r\n                var u1 = _this.texCoordCallback_(feature, 2);\r\n                var v1 = _this.texCoordCallback_(feature, 3);\r\n                var size = _this.sizeCallback_(feature);\r\n                var opacity = _this.opacityCallback_(feature);\r\n                var rotateWithView = _this.rotateWithViewCallback_(feature) ? 1 : 0;\r\n                var v0_r = _this.colorCallback_(feature, 0, 0);\r\n                var v0_g = _this.colorCallback_(feature, 0, 1);\r\n                var v0_b = _this.colorCallback_(feature, 0, 2);\r\n                var v0_a = _this.colorCallback_(feature, 0, 3);\r\n                var v1_r = _this.colorCallback_(feature, 1, 0);\r\n                var v1_g = _this.colorCallback_(feature, 1, 1);\r\n                var v1_b = _this.colorCallback_(feature, 1, 2);\r\n                var v1_a = _this.colorCallback_(feature, 1, 3);\r\n                var v2_r = _this.colorCallback_(feature, 2, 0);\r\n                var v2_g = _this.colorCallback_(feature, 2, 1);\r\n                var v2_b = _this.colorCallback_(feature, 2, 2);\r\n                var v2_a = _this.colorCallback_(feature, 2, 3);\r\n                var v3_r = _this.colorCallback_(feature, 3, 0);\r\n                var v3_g = _this.colorCallback_(feature, 3, 1);\r\n                var v3_b = _this.colorCallback_(feature, 3, 2);\r\n                var v3_a = _this.colorCallback_(feature, 3, 3);\r\n                var baseIndex = _this.verticesBuffer_.getArray().length / stride;\r\n                _this.verticesBuffer_.getArray().push(x, y, -size / 2, -size / 2, u0, v0, opacity, rotateWithView, v0_r, v0_g, v0_b, v0_a, x, y, +size / 2, -size / 2, u1, v0, opacity, rotateWithView, v1_r, v1_g, v1_b, v1_a, x, y, +size / 2, +size / 2, u1, v1, opacity, rotateWithView, v2_r, v2_g, v2_b, v2_a, x, y, -size / 2, +size / 2, u0, v1, opacity, rotateWithView, v3_r, v3_g, v3_b, v3_a);\r\n                _this.indicesBuffer_.getArray().push(baseIndex, baseIndex + 1, baseIndex + 3, baseIndex + 1, baseIndex + 2, baseIndex + 3);\r\n            });\r\n        }\r\n        // write new data\r\n        this.helper_.bindBuffer(ARRAY_BUFFER, this.verticesBuffer_);\r\n        this.helper_.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer_);\r\n        var bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\r\n        this.helper_.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * stride, 0);\r\n        this.helper_.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * stride, bytesPerFloat * 2);\r\n        this.helper_.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * stride, bytesPerFloat * 4);\r\n        this.helper_.enableAttributeArray(DefaultAttrib.OPACITY, 1, FLOAT, bytesPerFloat * stride, bytesPerFloat * 6);\r\n        this.helper_.enableAttributeArray(DefaultAttrib.ROTATE_WITH_VIEW, 1, FLOAT, bytesPerFloat * stride, bytesPerFloat * 7);\r\n        this.helper_.enableAttributeArray(DefaultAttrib.COLOR, 4, FLOAT, bytesPerFloat * stride, bytesPerFloat * 8);\r\n        return true;\r\n    };\r\n    /**\r\n     * Will return the last shader compilation errors. If no error happened, will return null;\r\n     * @return {string|null} Errors, or null if last compilation was successful\r\n     * @api\r\n     */\r\n    WebGLPointsLayerRenderer.prototype.getShaderCompileErrors = function () {\r\n        return this.helper_.getShaderCompileErrors();\r\n    };\r\n    /**\r\n     * Returns a texture of 1x1 pixel, white\r\n     * @private\r\n     * @return {ImageData} Image data.\r\n     */\r\n    WebGLPointsLayerRenderer.prototype.getDefaultTexture = function () {\r\n        var canvas = document.createElement('canvas');\r\n        var image = canvas.getContext('2d').createImageData(1, 1);\r\n        image.data[0] = image.data[1] = image.data[2] = image.data[3] = 255;\r\n        return image;\r\n    };\r\n    return WebGLPointsLayerRenderer;\r\n}(LayerRenderer));\r\nexport default WebGLPointsLayerRenderer;\r\n//# sourceMappingURL=PointsLayer.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/layer/Heatmap\r\n */\r\nimport { listen } from '../events.js';\r\nimport { getChangeEventType } from '../Object.js';\r\nimport { createCanvasContext2D } from '../dom.js';\r\nimport VectorLayer from './Vector.js';\r\nimport { assign } from '../obj.js';\r\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\r\n * of the heatmap, specified as an array of CSS color strings.\r\n * @property {number} [radius=8] Radius size in pixels.\r\n * @property {number} [blur=15] Blur size in pixels.\r\n * @property {number} [shadow=250] Shadow size in pixels.\r\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\r\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\r\n * should range from 0 to 1 (and values outside will be clamped to that range).\r\n * @property {import(\"../source/Vector.js\").default} [source] Source.\r\n */\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nvar Property = {\r\n    BLUR: 'blur',\r\n    GRADIENT: 'gradient',\r\n    RADIUS: 'radius'\r\n};\r\n/**\r\n * @const\r\n * @type {Array<string>}\r\n */\r\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\r\n/**\r\n * @classdesc\r\n * Layer for rendering vector data as a heatmap.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @fires import(\"../render/Event.js\").RenderEvent\r\n * @api\r\n */\r\nvar Heatmap = /** @class */ (function (_super) {\r\n    __extends(Heatmap, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function Heatmap(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        var baseOptions = assign({}, options);\r\n        delete baseOptions.gradient;\r\n        delete baseOptions.radius;\r\n        delete baseOptions.blur;\r\n        delete baseOptions.shadow;\r\n        delete baseOptions.weight;\r\n        _this = _super.call(this, baseOptions) || this;\r\n        /**\r\n         * @private\r\n         * @type {HTMLCanvasElement}\r\n         */\r\n        _this.gradient_ = null;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\r\n        /**\r\n         * @private\r\n         * @type {string|undefined}\r\n         */\r\n        _this.circleImage_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {Array<Array<import(\"../style/Style.js\").default>>}\r\n         */\r\n        _this.styleCache_ = null;\r\n        listen(_this, getChangeEventType(Property.GRADIENT), _this.handleGradientChanged_, _this);\r\n        _this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\r\n        _this.setBlur(options.blur !== undefined ? options.blur : 15);\r\n        _this.setRadius(options.radius !== undefined ? options.radius : 8);\r\n        var weight = options.weight ? options.weight : 'weight';\r\n        if (typeof weight === 'string') {\r\n            _this.weightFunction_ = function (feature) {\r\n                return feature.get(weight);\r\n            };\r\n        }\r\n        else {\r\n            _this.weightFunction_ = weight;\r\n        }\r\n        // For performance reasons, don't sort the features before rendering.\r\n        // The render order is not relevant for a heatmap representation.\r\n        _this.setRenderOrder(null);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return the blur size in pixels.\r\n     * @return {number} Blur size in pixels.\r\n     * @api\r\n     * @observable\r\n     */\r\n    Heatmap.prototype.getBlur = function () {\r\n        return /** @type {number} */ (this.get(Property.BLUR));\r\n    };\r\n    /**\r\n     * Return the gradient colors as array of strings.\r\n     * @return {Array<string>} Colors.\r\n     * @api\r\n     * @observable\r\n     */\r\n    Heatmap.prototype.getGradient = function () {\r\n        return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\r\n    };\r\n    /**\r\n     * Return the size of the radius in pixels.\r\n     * @return {number} Radius size in pixel.\r\n     * @api\r\n     * @observable\r\n     */\r\n    Heatmap.prototype.getRadius = function () {\r\n        return /** @type {number} */ (this.get(Property.RADIUS));\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    Heatmap.prototype.handleGradientChanged_ = function () {\r\n        this.gradient_ = createGradient(this.getGradient());\r\n    };\r\n    /**\r\n     * Set the blur size in pixels.\r\n     * @param {number} blur Blur size in pixels.\r\n     * @api\r\n     * @observable\r\n     */\r\n    Heatmap.prototype.setBlur = function (blur) {\r\n        this.set(Property.BLUR, blur);\r\n    };\r\n    /**\r\n     * Set the gradient colors as array of strings.\r\n     * @param {Array<string>} colors Gradient.\r\n     * @api\r\n     * @observable\r\n     */\r\n    Heatmap.prototype.setGradient = function (colors) {\r\n        this.set(Property.GRADIENT, colors);\r\n    };\r\n    /**\r\n     * Set the size of the radius in pixels.\r\n     * @param {number} radius Radius size in pixel.\r\n     * @api\r\n     * @observable\r\n     */\r\n    Heatmap.prototype.setRadius = function (radius) {\r\n        this.set(Property.RADIUS, radius);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Heatmap.prototype.createRenderer = function () {\r\n        return new WebGLPointsLayerRenderer(this, {\r\n            vertexShader: \"\\n        precision mediump float;\\n        attribute vec2 a_position;\\n        attribute vec2 a_texCoord;\\n        attribute float a_rotateWithView;\\n        attribute vec2 a_offsets;\\n        attribute float a_opacity;\\n        \\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform mat4 u_offsetRotateMatrix;\\n        uniform float u_size;\\n        \\n        varying vec2 v_texCoord;\\n        varying float v_opacity;\\n        \\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          if (a_rotateWithView == 1.0) {\\n            offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n          }\\n          vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets * u_size;\\n          v_texCoord = a_texCoord;\\n          v_opacity = a_opacity;\\n        }\",\r\n            fragmentShader: \"\\n        precision mediump float;\\n        uniform float u_resolution;\\n        uniform float u_blurSlope;\\n        \\n        varying vec2 v_texCoord;\\n        varying float v_opacity;\\n        \\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_opacity;\\n          gl_FragColor = vec4(1.0, 1.0, 1.0, alpha);\\n        }\",\r\n            uniforms: {\r\n                u_size: function () {\r\n                    return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\r\n                }.bind(this),\r\n                u_blurSlope: function () {\r\n                    return this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR));\r\n                }.bind(this),\r\n                u_resolution: function (frameState) {\r\n                    return frameState.viewState.resolution;\r\n                }\r\n            },\r\n            postProcesses: [\r\n                {\r\n                    fragmentShader: \"\\n            precision mediump float;\\n\\n            uniform sampler2D u_image;\\n            uniform sampler2D u_gradientTexture;\\n\\n            varying vec2 v_texCoord;\\n            varying vec2 v_screenCoord;\\n\\n            void main() {\\n              vec4 color = texture2D(u_image, v_texCoord);\\n              gl_FragColor.a = color.a;\\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\\n              gl_FragColor.rgb *= gl_FragColor.a;\\n            }\",\r\n                    uniforms: {\r\n                        u_gradientTexture: this.gradient_\r\n                    }\r\n                }\r\n            ],\r\n            opacityCallback: function (feature) {\r\n                return this.weightFunction_(feature);\r\n            }.bind(this)\r\n        });\r\n    };\r\n    return Heatmap;\r\n}(VectorLayer));\r\n/**\r\n * @param {Array<string>} colors A list of colored.\r\n * @return {HTMLCanvasElement} canvas with gradient texture.\r\n */\r\nfunction createGradient(colors) {\r\n    var width = 1;\r\n    var height = 256;\r\n    var context = createCanvasContext2D(width, height);\r\n    var gradient = context.createLinearGradient(0, 0, width, height);\r\n    var step = 1 / (colors.length - 1);\r\n    for (var i = 0, ii = colors.length; i < ii; ++i) {\r\n        gradient.addColorStop(i * step, colors[i]);\r\n    }\r\n    context.fillStyle = gradient;\r\n    context.fillRect(0, 0, width, height);\r\n    return context.canvas;\r\n}\r\nexport default Heatmap;\r\n//# sourceMappingURL=Heatmap.js.map","/**\r\n * @module ol/reproj/common\r\n */\r\n/**\r\n * Default maximum allowed threshold  (in pixels) for reprojection\r\n * triangulation.\r\n * @type {number}\r\n */\r\nexport var ERROR_THRESHOLD = 0.5;\r\n/**\r\n * Enable automatic reprojection of raster sources. Default is `true`.\r\n * TODO: decide if we want to expose this as a build flag or remove it\r\n * @type {boolean}\r\n */\r\nexport var ENABLE_RASTER_REPROJECTION = true;\r\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/renderer/canvas/ImageLayer\r\n */\r\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport { containsExtent, intersects } from '../../extent.js';\r\nimport { getIntersection, isEmpty } from '../../extent.js';\r\nimport CanvasLayerRenderer from './Layer.js';\r\nimport { compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\r\n/**\r\n * @classdesc\r\n * Canvas renderer for image layers.\r\n * @api\r\n */\r\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\r\n    __extends(CanvasImageLayerRenderer, _super);\r\n    /**\r\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\r\n     */\r\n    function CanvasImageLayerRenderer(imageLayer) {\r\n        var _this = _super.call(this, imageLayer) || this;\r\n        /**\r\n         * @protected\r\n         * @type {?import(\"../../ImageBase.js\").default}\r\n         */\r\n        _this.image_ = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasImageLayerRenderer.prototype.getImage = function () {\r\n        return !this.image_ ? null : this.image_.getImage();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\r\n        var pixelRatio = frameState.pixelRatio;\r\n        var viewState = frameState.viewState;\r\n        var viewResolution = viewState.resolution;\r\n        var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\r\n        var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\r\n        var hints = frameState.viewHints;\r\n        var renderedExtent = frameState.extent;\r\n        if (layerState.extent !== undefined) {\r\n            renderedExtent = getIntersection(renderedExtent, layerState.extent);\r\n        }\r\n        if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\r\n            var projection = viewState.projection;\r\n            if (!ENABLE_RASTER_REPROJECTION) {\r\n                var sourceProjection = imageSource.getProjection();\r\n                if (sourceProjection) {\r\n                    projection = sourceProjection;\r\n                }\r\n            }\r\n            var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\r\n            if (image && this.loadImage(image)) {\r\n                this.image_ = image;\r\n            }\r\n        }\r\n        return !!this.image_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\r\n        var image = this.image_;\r\n        var imageExtent = image.getExtent();\r\n        var imageResolution = image.getResolution();\r\n        var imagePixelRatio = image.getPixelRatio();\r\n        var pixelRatio = frameState.pixelRatio;\r\n        var viewState = frameState.viewState;\r\n        var viewCenter = viewState.center;\r\n        var viewResolution = viewState.resolution;\r\n        var size = frameState.size;\r\n        var scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\r\n        var width = Math.round(size[0] * pixelRatio);\r\n        var height = Math.round(size[1] * pixelRatio);\r\n        var rotation = viewState.rotation;\r\n        if (rotation) {\r\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\r\n            width = height = size_1;\r\n        }\r\n        // set forward and inverse pixel transforms\r\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\r\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\r\n        var context = this.context;\r\n        var canvas = context.canvas;\r\n        if (canvas.width != width || canvas.height != height) {\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n        }\r\n        else {\r\n            context.clearRect(0, 0, width, height);\r\n        }\r\n        // clipped rendering if layer extent is set\r\n        var extent = layerState.extent;\r\n        var clipped = extent !== undefined &&\r\n            !containsExtent(extent, frameState.extent) &&\r\n            intersects(extent, frameState.extent);\r\n        if (clipped) {\r\n            this.clip(context, frameState, extent);\r\n        }\r\n        var img = image.getImage();\r\n        var transform = composeTransform(this.tempTransform_, width / 2, height / 2, scale, scale, 0, imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution, imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\r\n        this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\r\n        var dx = transform[4];\r\n        var dy = transform[5];\r\n        var dw = img.width * transform[0];\r\n        var dh = img.height * transform[3];\r\n        this.preRender(context, frameState);\r\n        if (dw >= 0.5 && dh >= 0.5) {\r\n            this.context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\r\n        }\r\n        this.postRender(context, frameState);\r\n        if (clipped) {\r\n            context.restore();\r\n        }\r\n        var opacity = layerState.opacity;\r\n        if (opacity !== parseFloat(canvas.style.opacity)) {\r\n            canvas.style.opacity = opacity;\r\n        }\r\n        var canvasTransform = transformToString(this.pixelTransform_);\r\n        if (canvasTransform !== canvas.style.transform) {\r\n            canvas.style.transform = canvasTransform;\r\n        }\r\n        return canvas;\r\n    };\r\n    return CanvasImageLayerRenderer;\r\n}(CanvasLayerRenderer));\r\nexport default CanvasImageLayerRenderer;\r\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/layer/Image\r\n */\r\nimport BaseImageLayer from './BaseImage.js';\r\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\r\n/**\r\n * @typedef {import(\"./BaseImage.js\").Options} Options\r\n */\r\n/**\r\n * @classdesc\r\n * Server-rendered images that are available for arbitrary extents and\r\n * resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nvar ImageLayer = /** @class */ (function (_super) {\r\n    __extends(ImageLayer, _super);\r\n    /**\r\n     * @param {Options=} opt_options Layer options.\r\n     */\r\n    function ImageLayer(opt_options) {\r\n        return _super.call(this, opt_options) || this;\r\n    }\r\n    /**\r\n     * Create a renderer for this layer.\r\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\r\n     * @protected\r\n     */\r\n    ImageLayer.prototype.createRenderer = function () {\r\n        return new CanvasImageLayerRenderer(this);\r\n    };\r\n    return ImageLayer;\r\n}(BaseImageLayer));\r\nexport default ImageLayer;\r\n//# sourceMappingURL=Image.js.map","/**\r\n * @module ol/TileRange\r\n */\r\n/**\r\n * A representation of a contiguous block of tiles.  A tile range is specified\r\n * by its min/max tile coordinates and is inclusive of coordinates.\r\n */\r\nvar TileRange = /** @class */ (function () {\r\n    /**\r\n     * @param {number} minX Minimum X.\r\n     * @param {number} maxX Maximum X.\r\n     * @param {number} minY Minimum Y.\r\n     * @param {number} maxY Maximum Y.\r\n     */\r\n    function TileRange(minX, maxX, minY, maxY) {\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.minX = minX;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.maxX = maxX;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.minY = minY;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.maxY = maxY;\r\n    }\r\n    /**\r\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @return {boolean} Contains tile coordinate.\r\n     */\r\n    TileRange.prototype.contains = function (tileCoord) {\r\n        return this.containsXY(tileCoord[1], tileCoord[2]);\r\n    };\r\n    /**\r\n     * @param {TileRange} tileRange Tile range.\r\n     * @return {boolean} Contains.\r\n     */\r\n    TileRange.prototype.containsTileRange = function (tileRange) {\r\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\r\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\r\n    };\r\n    /**\r\n     * @param {number} x Tile coordinate x.\r\n     * @param {number} y Tile coordinate y.\r\n     * @return {boolean} Contains coordinate.\r\n     */\r\n    TileRange.prototype.containsXY = function (x, y) {\r\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\r\n    };\r\n    /**\r\n     * @param {TileRange} tileRange Tile range.\r\n     * @return {boolean} Equals.\r\n     */\r\n    TileRange.prototype.equals = function (tileRange) {\r\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\r\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\r\n    };\r\n    /**\r\n     * @param {TileRange} tileRange Tile range.\r\n     */\r\n    TileRange.prototype.extend = function (tileRange) {\r\n        if (tileRange.minX < this.minX) {\r\n            this.minX = tileRange.minX;\r\n        }\r\n        if (tileRange.maxX > this.maxX) {\r\n            this.maxX = tileRange.maxX;\r\n        }\r\n        if (tileRange.minY < this.minY) {\r\n            this.minY = tileRange.minY;\r\n        }\r\n        if (tileRange.maxY > this.maxY) {\r\n            this.maxY = tileRange.maxY;\r\n        }\r\n    };\r\n    /**\r\n     * @return {number} Height.\r\n     */\r\n    TileRange.prototype.getHeight = function () {\r\n        return this.maxY - this.minY + 1;\r\n    };\r\n    /**\r\n     * @return {import(\"./size.js\").Size} Size.\r\n     */\r\n    TileRange.prototype.getSize = function () {\r\n        return [this.getWidth(), this.getHeight()];\r\n    };\r\n    /**\r\n     * @return {number} Width.\r\n     */\r\n    TileRange.prototype.getWidth = function () {\r\n        return this.maxX - this.minX + 1;\r\n    };\r\n    /**\r\n     * @param {TileRange} tileRange Tile range.\r\n     * @return {boolean} Intersects.\r\n     */\r\n    TileRange.prototype.intersects = function (tileRange) {\r\n        return this.minX <= tileRange.maxX &&\r\n            this.maxX >= tileRange.minX &&\r\n            this.minY <= tileRange.maxY &&\r\n            this.maxY >= tileRange.minY;\r\n    };\r\n    return TileRange;\r\n}());\r\n/**\r\n * @param {number} minX Minimum X.\r\n * @param {number} maxX Maximum X.\r\n * @param {number} minY Minimum Y.\r\n * @param {number} maxY Maximum Y.\r\n * @param {TileRange=} tileRange TileRange.\r\n * @return {TileRange} Tile range.\r\n */\r\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\r\n    if (tileRange !== undefined) {\r\n        tileRange.minX = minX;\r\n        tileRange.maxX = maxX;\r\n        tileRange.minY = minY;\r\n        tileRange.maxY = maxY;\r\n        return tileRange;\r\n    }\r\n    else {\r\n        return new TileRange(minX, maxX, minY, maxY);\r\n    }\r\n}\r\nexport default TileRange;\r\n//# sourceMappingURL=TileRange.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/renderer/canvas/TileLayer\r\n */\r\nimport { getUid } from '../../util.js';\r\nimport TileRange from '../../TileRange.js';\r\nimport TileState from '../../TileState.js';\r\nimport { createEmpty, getIntersection, getTopLeft } from '../../extent.js';\r\nimport CanvasLayerRenderer from './Layer.js';\r\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\r\n/**\r\n * @classdesc\r\n * Canvas renderer for tile layers.\r\n * @api\r\n */\r\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\r\n    __extends(CanvasTileLayerRenderer, _super);\r\n    /**\r\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\r\n     */\r\n    function CanvasTileLayerRenderer(tileLayer) {\r\n        var _this = _super.call(this, tileLayer) || this;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../../extent.js\").Extent}\r\n         */\r\n        _this.renderedExtent_ = null;\r\n        /**\r\n         * @protected\r\n         * @type {number}\r\n         */\r\n        _this.renderedRevision;\r\n        /**\r\n         * @protected\r\n         * @type {!Array<import(\"../../Tile.js\").default>}\r\n         */\r\n        _this.renderedTiles = [];\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.newTiles_ = false;\r\n        /**\r\n         * @protected\r\n         * @type {import(\"../../extent.js\").Extent}\r\n         */\r\n        _this.tmpExtent = createEmpty();\r\n        /**\r\n         * @private\r\n         * @type {import(\"../../TileRange.js\").default}\r\n         */\r\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\r\n        /**\r\n         * @protected\r\n         * @type {number}\r\n         */\r\n        _this.zDirection = 0;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @param {import(\"../../Tile.js\").default} tile Tile.\r\n     * @return {boolean} Tile is drawable.\r\n     */\r\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\r\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\r\n        var tileState = tile.getState();\r\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\r\n        return tileState == TileState.LOADED ||\r\n            tileState == TileState.EMPTY ||\r\n            tileState == TileState.ERROR && !useInterimTilesOnError;\r\n    };\r\n    /**\r\n     * @param {number} z Tile coordinate z.\r\n     * @param {number} x Tile coordinate x.\r\n     * @param {number} y Tile coordinate y.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n     * @return {!import(\"../../Tile.js\").default} Tile.\r\n     */\r\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, pixelRatio, projection) {\r\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\r\n        var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\r\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\r\n        if (tile.getState() == TileState.ERROR) {\r\n            if (!tileLayer.getUseInterimTilesOnError()) {\r\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\r\n                tile.setState(TileState.LOADED);\r\n            }\r\n            else if (tileLayer.getPreload() > 0) {\r\n                // Preloaded tiles for lower resolutions might have finished loading.\r\n                this.newTiles_ = true;\r\n            }\r\n        }\r\n        if (!this.isDrawableTile(tile)) {\r\n            tile = tile.getInterimTile();\r\n        }\r\n        return tile;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\r\n        return true;\r\n    };\r\n    /**\r\n     * TODO: File a TypeScript issue about inheritDoc not being followed\r\n     * all the way.  Without this explicit return type, the VectorTileLayer\r\n     * renderFrame function does not pass.\r\n     *\r\n     * @inheritDoc\r\n     * @returns {HTMLElement} The rendered element.\r\n     */\r\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\r\n        var context = this.context;\r\n        var viewState = frameState.viewState;\r\n        var projection = viewState.projection;\r\n        var viewResolution = viewState.resolution;\r\n        var viewCenter = viewState.center;\r\n        var rotation = viewState.rotation;\r\n        var pixelRatio = frameState.pixelRatio;\r\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\r\n        var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\r\n        var sourceRevision = tileSource.getRevision();\r\n        var tileGrid = tileSource.getTileGridForProjection(projection);\r\n        var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\r\n        var tileResolution = tileGrid.getResolution(z);\r\n        var extent = frameState.extent;\r\n        if (layerState.extent) {\r\n            extent = getIntersection(extent, layerState.extent);\r\n        }\r\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\r\n        // desired dimensions of the canvas in pixels\r\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\r\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\r\n        if (rotation) {\r\n            var size = Math.round(Math.sqrt(width * width + height * height));\r\n            width = height = size;\r\n        }\r\n        var dx = tileResolution * width / 2 / tilePixelRatio;\r\n        var dy = tileResolution * height / 2 / tilePixelRatio;\r\n        var canvasExtent = [\r\n            viewCenter[0] - dx,\r\n            viewCenter[1] - dy,\r\n            viewCenter[0] + dx,\r\n            viewCenter[1] + dy\r\n        ];\r\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\r\n        /**\r\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\r\n         */\r\n        var tilesToDrawByZ = {};\r\n        tilesToDrawByZ[z] = {};\r\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\r\n        var tmpExtent = this.tmpExtent;\r\n        var tmpTileRange = this.tmpTileRange_;\r\n        this.newTiles_ = false;\r\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\r\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\r\n                var tile = this.getTile(z, x, y, pixelRatio, projection);\r\n                if (this.isDrawableTile(tile)) {\r\n                    var uid = getUid(this);\r\n                    if (tile.getState() == TileState.LOADED) {\r\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\r\n                        var inTransition = tile.inTransition(uid);\r\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\r\n                            this.newTiles_ = true;\r\n                        }\r\n                    }\r\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\r\n                        // don't look for alt tiles if alpha is 1\r\n                        continue;\r\n                    }\r\n                }\r\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\r\n                var covered = false;\r\n                if (childTileRange) {\r\n                    covered = findLoadedTiles(z + 1, childTileRange);\r\n                }\r\n                if (!covered) {\r\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\r\n                }\r\n            }\r\n        }\r\n        var canvas = context.canvas;\r\n        var canvasScale = tileResolution / viewResolution;\r\n        // set forward and inverse pixel transforms\r\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\r\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\r\n        // set scale transform for calculating tile positions on the canvas\r\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\r\n        if (canvas.width != width || canvas.height != height) {\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n        }\r\n        else {\r\n            context.clearRect(0, 0, width, height);\r\n        }\r\n        if (layerState.extent) {\r\n            this.clipUnrotated(context, frameState, layerState.extent);\r\n        }\r\n        this.preRender(context, frameState);\r\n        this.renderedTiles.length = 0;\r\n        /** @type {Array<number>} */\r\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\r\n        zs.sort(function (a, b) {\r\n            if (a === z) {\r\n                return 1;\r\n            }\r\n            else if (b === z) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return a > b ? 1 : a < b ? -1 : 0;\r\n            }\r\n        });\r\n        for (var i = 0, ii = zs.length; i < ii; ++i) {\r\n            var currentZ = zs[i];\r\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\r\n            var currentResolution = tileGrid.getResolution(currentZ);\r\n            var currentScale = currentResolution / tileResolution;\r\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\r\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\r\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\r\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\r\n            var origin_1 = applyTransform(this.tempTransform_, [\r\n                Math.round(tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution),\r\n                Math.round(tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution)\r\n            ]);\r\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\r\n            var tilesToDraw = tilesToDrawByZ[currentZ];\r\n            for (var tileCoordKey in tilesToDraw) {\r\n                var tile = tilesToDraw[tileCoordKey];\r\n                var tileCoord = tile.tileCoord;\r\n                // Calculate integer positions and sizes so that tiles align\r\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\r\n                var nextX = Math.round(floatX + dx_1);\r\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\r\n                var nextY = Math.round(floatY + dy_1);\r\n                var x = Math.round(floatX);\r\n                var y = Math.round(floatY);\r\n                var w = nextX - x;\r\n                var h = nextY - y;\r\n                this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\r\n                this.renderedTiles.push(tile);\r\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\r\n            }\r\n        }\r\n        this.renderedRevision = sourceRevision;\r\n        this.renderedResolution = tileResolution;\r\n        this.renderedExtent_ = canvasExtent;\r\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\r\n        this.scheduleExpireCache(frameState, tileSource);\r\n        this.postRender(context, frameState);\r\n        if (layerState.extent) {\r\n            context.restore();\r\n        }\r\n        var opacity = layerState.opacity;\r\n        if (opacity !== parseFloat(canvas.style.opacity)) {\r\n            canvas.style.opacity = opacity;\r\n        }\r\n        var canvasTransform = transformToString(this.pixelTransform_);\r\n        if (canvasTransform !== canvas.style.transform) {\r\n            canvas.style.transform = canvasTransform;\r\n        }\r\n        return canvas;\r\n    };\r\n    /**\r\n     * @param {import(\"../../Tile.js\").default} tile Tile.\r\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\r\n     * @param {number} x Left of the tile.\r\n     * @param {number} y Top of the tile.\r\n     * @param {number} w Width of the tile.\r\n     * @param {number} h Height of the tile.\r\n     * @param {number} gutter Tile gutter.\r\n     * @param {boolean} transition Apply an alpha transition.\r\n     */\r\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, layerState, x, y, w, h, gutter, transition) {\r\n        var image = this.getTileImage(tile);\r\n        if (!image) {\r\n            return;\r\n        }\r\n        var uid = getUid(this);\r\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\r\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\r\n        var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\r\n        if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\r\n            this.context.clearRect(x, y, w, h);\r\n        }\r\n        var alphaChanged = alpha !== this.context.globalAlpha;\r\n        if (alphaChanged) {\r\n            this.context.save();\r\n            this.context.globalAlpha = alpha;\r\n        }\r\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\r\n        if (alphaChanged) {\r\n            this.context.restore();\r\n        }\r\n        if (alpha !== 1) {\r\n            frameState.animate = true;\r\n        }\r\n        else if (transition) {\r\n            tile.endTransition(uid);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasTileLayerRenderer.prototype.getImage = function () {\r\n        var context = this.context;\r\n        return context ? context.canvas : null;\r\n    };\r\n    /**\r\n     * Get the image from a tile.\r\n     * @param {import(\"../../Tile.js\").default} tile Tile.\r\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\r\n     * @protected\r\n     */\r\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\r\n        return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\r\n    };\r\n    return CanvasTileLayerRenderer;\r\n}(CanvasLayerRenderer));\r\n/**\r\n * @function\r\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\r\n */\r\nCanvasTileLayerRenderer.prototype.getLayer;\r\nexport default CanvasTileLayerRenderer;\r\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/layer/Tile\r\n */\r\nimport BaseTileLayer from './BaseTile.js';\r\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\r\n/**\r\n * @typedef {import(\"./BaseTile.js\").Options} Options\r\n */\r\n/**\r\n * @classdesc\r\n * For layer sources that provide pre-rendered, tiled images in grids that are\r\n * organized by zoom levels for specific resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nvar TileLayer = /** @class */ (function (_super) {\r\n    __extends(TileLayer, _super);\r\n    /**\r\n     * @param {Options=} opt_options Tile layer options.\r\n     */\r\n    function TileLayer(opt_options) {\r\n        return _super.call(this, opt_options) || this;\r\n    }\r\n    /**\r\n     * Create a renderer for this layer.\r\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\r\n     * @protected\r\n     */\r\n    TileLayer.prototype.createRenderer = function () {\r\n        return new CanvasTileLayerRenderer(this);\r\n    };\r\n    return TileLayer;\r\n}(BaseTileLayer));\r\nexport default TileLayer;\r\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/ImageBase\r\n */\r\nimport { abstract } from './util.js';\r\nimport EventTarget from './events/Target.js';\r\nimport EventType from './events/EventType.js';\r\n/**\r\n * @abstract\r\n */\r\nvar ImageBase = /** @class */ (function (_super) {\r\n    __extends(ImageBase, _super);\r\n    /**\r\n     * @param {import(\"./extent.js\").Extent} extent Extent.\r\n     * @param {number|undefined} resolution Resolution.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"./ImageState.js\").default} state State.\r\n     */\r\n    function ImageBase(extent, resolution, pixelRatio, state) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @protected\r\n         * @type {import(\"./extent.js\").Extent}\r\n         */\r\n        _this.extent = extent;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.pixelRatio_ = pixelRatio;\r\n        /**\r\n         * @protected\r\n         * @type {number|undefined}\r\n         */\r\n        _this.resolution = resolution;\r\n        /**\r\n         * @protected\r\n         * @type {import(\"./ImageState.js\").default}\r\n         */\r\n        _this.state = state;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     */\r\n    ImageBase.prototype.changed = function () {\r\n        this.dispatchEvent(EventType.CHANGE);\r\n    };\r\n    /**\r\n     * @return {import(\"./extent.js\").Extent} Extent.\r\n     */\r\n    ImageBase.prototype.getExtent = function () {\r\n        return this.extent;\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\r\n     */\r\n    ImageBase.prototype.getImage = function () {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * @return {number} PixelRatio.\r\n     */\r\n    ImageBase.prototype.getPixelRatio = function () {\r\n        return this.pixelRatio_;\r\n    };\r\n    /**\r\n     * @return {number} Resolution.\r\n     */\r\n    ImageBase.prototype.getResolution = function () {\r\n        return /** @type {number} */ (this.resolution);\r\n    };\r\n    /**\r\n     * @return {import(\"./ImageState.js\").default} State.\r\n     */\r\n    ImageBase.prototype.getState = function () {\r\n        return this.state;\r\n    };\r\n    /**\r\n     * Load not yet loaded URI.\r\n     * @abstract\r\n     */\r\n    ImageBase.prototype.load = function () {\r\n        abstract();\r\n    };\r\n    return ImageBase;\r\n}(EventTarget));\r\nexport default ImageBase;\r\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/ImageCanvas\r\n */\r\nimport ImageBase from './ImageBase.js';\r\nimport ImageState from './ImageState.js';\r\n/**\r\n * A function that is called to trigger asynchronous canvas drawing.  It is\r\n * called with a \"done\" callback that should be called when drawing is done.\r\n * If any error occurs during drawing, the \"done\" callback should be called with\r\n * that error.\r\n *\r\n * @typedef {function(function(Error=): void): void} Loader\r\n */\r\nvar ImageCanvas = /** @class */ (function (_super) {\r\n    __extends(ImageCanvas, _super);\r\n    /**\r\n     * @param {import(\"./extent.js\").Extent} extent Extent.\r\n     * @param {number} resolution Resolution.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {HTMLCanvasElement} canvas Canvas.\r\n     * @param {Loader=} opt_loader Optional loader function to\r\n     *     support asynchronous canvas drawing.\r\n     */\r\n    function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\r\n        var _this = this;\r\n        var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\r\n        _this = _super.call(this, extent, resolution, pixelRatio, state) || this;\r\n        /**\r\n         * Optional canvas loader function.\r\n         * @type {?Loader}\r\n         * @private\r\n         */\r\n        _this.loader_ = opt_loader !== undefined ? opt_loader : null;\r\n        /**\r\n         * @private\r\n         * @type {HTMLCanvasElement}\r\n         */\r\n        _this.canvas_ = canvas;\r\n        /**\r\n         * @private\r\n         * @type {Error}\r\n         */\r\n        _this.error_ = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get any error associated with asynchronous rendering.\r\n     * @return {Error} Any error that occurred during rendering.\r\n     */\r\n    ImageCanvas.prototype.getError = function () {\r\n        return this.error_;\r\n    };\r\n    /**\r\n     * Handle async drawing complete.\r\n     * @param {Error=} err Any error during drawing.\r\n     * @private\r\n     */\r\n    ImageCanvas.prototype.handleLoad_ = function (err) {\r\n        if (err) {\r\n            this.error_ = err;\r\n            this.state = ImageState.ERROR;\r\n        }\r\n        else {\r\n            this.state = ImageState.LOADED;\r\n        }\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ImageCanvas.prototype.load = function () {\r\n        if (this.state == ImageState.IDLE) {\r\n            this.state = ImageState.LOADING;\r\n            this.changed();\r\n            this.loader_(this.handleLoad_.bind(this));\r\n        }\r\n    };\r\n    /**\r\n     * @return {HTMLCanvasElement} Canvas element.\r\n     */\r\n    ImageCanvas.prototype.getImage = function () {\r\n        return this.canvas_;\r\n    };\r\n    return ImageCanvas;\r\n}(ImageBase));\r\nexport default ImageCanvas;\r\n//# sourceMappingURL=ImageCanvas.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/renderer/canvas/ImageLayer\r\n */\r\nimport ImageCanvas from '../../ImageCanvas.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport { equals } from '../../array.js';\r\nimport { getHeight, getWidth, isEmpty, scaleFromCenter } from '../../extent.js';\r\nimport { assign } from '../../obj.js';\r\nimport CanvasImageLayerRenderer from './ImageLayer.js';\r\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\r\n/**\r\n * @classdesc\r\n * Canvas renderer for image layers.\r\n * @api\r\n */\r\nvar CanvasVectorImageLayerRenderer = /** @class */ (function (_super) {\r\n    __extends(CanvasVectorImageLayerRenderer, _super);\r\n    /**\r\n     * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\r\n     */\r\n    function CanvasVectorImageLayerRenderer(layer) {\r\n        var _this = _super.call(this, layer) || this;\r\n        /**\r\n         * @type {!Array<string>}\r\n         */\r\n        _this.skippedFeatures_ = [];\r\n        /**\r\n         * @private\r\n         * @type {import(\"./VectorLayer.js\").default}\r\n         */\r\n        _this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.layerImageRatio_ = layer.getImageRatio();\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasVectorImageLayerRenderer.prototype.disposeInternal = function () {\r\n        this.vectorRenderer_.dispose();\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasVectorImageLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\r\n        var pixelRatio = frameState.pixelRatio;\r\n        var viewState = frameState.viewState;\r\n        var viewResolution = viewState.resolution;\r\n        var hints = frameState.viewHints;\r\n        var vectorRenderer = this.vectorRenderer_;\r\n        var renderedExtent = frameState.extent;\r\n        if (this.layerImageRatio_ !== 1) {\r\n            renderedExtent = renderedExtent.slice(0);\r\n            scaleFromCenter(renderedExtent, this.layerImageRatio_);\r\n        }\r\n        if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\r\n            var skippedFeatures_1 = this.skippedFeatures_;\r\n            var context_1 = vectorRenderer.context;\r\n            var imageFrameState_1 = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\r\n                size: [\r\n                    getWidth(renderedExtent) / viewResolution,\r\n                    getHeight(renderedExtent) / viewResolution\r\n                ],\r\n                viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\r\n                    rotation: 0\r\n                }))\r\n            }));\r\n            var newSkippedFeatures_1 = Object.keys(imageFrameState_1.skippedFeatureUids).sort();\r\n            var image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context_1.canvas, function (callback) {\r\n                if (vectorRenderer.prepareFrame(imageFrameState_1, layerState) &&\r\n                    (vectorRenderer.replayGroupChanged ||\r\n                        !equals(skippedFeatures_1, newSkippedFeatures_1))) {\r\n                    context_1.canvas.width = imageFrameState_1.size[0] * pixelRatio;\r\n                    context_1.canvas.height = imageFrameState_1.size[1] * pixelRatio;\r\n                    vectorRenderer.renderFrame(imageFrameState_1, layerState);\r\n                    skippedFeatures_1 = newSkippedFeatures_1;\r\n                    callback();\r\n                }\r\n            });\r\n            if (this.loadImage(image)) {\r\n                this.image_ = image;\r\n                this.skippedFeatures_ = skippedFeatures_1;\r\n            }\r\n        }\r\n        if (this.image_) {\r\n            var image = this.image_;\r\n            var imageResolution = image.getResolution();\r\n            var imagePixelRatio = image.getPixelRatio();\r\n            this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\r\n        }\r\n        return !!this.image_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    CanvasVectorImageLayerRenderer.prototype.preRender = function () { };\r\n    /**\r\n     * @override\r\n     */\r\n    CanvasVectorImageLayerRenderer.prototype.postRender = function () { };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasVectorImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback) {\r\n        if (this.vectorRenderer_) {\r\n            return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\r\n        }\r\n        else {\r\n            return _super.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\r\n        }\r\n    };\r\n    return CanvasVectorImageLayerRenderer;\r\n}(CanvasImageLayerRenderer));\r\nexport default CanvasVectorImageLayerRenderer;\r\n//# sourceMappingURL=VectorImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/layer/VectorImage\r\n */\r\nimport BaseVectorLayer from './BaseVector.js';\r\nimport { assign } from '../obj.js';\r\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\r\n/**\r\n * @typedef {import(\"./BaseVector.js\").Options} Options\r\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\r\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\r\n */\r\n/**\r\n * @classdesc\r\n * Vector data that is rendered client-side.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nvar VectorImageLayer = /** @class */ (function (_super) {\r\n    __extends(VectorImageLayer, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function VectorImageLayer(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : /** @type {Options} */ ({});\r\n        var baseOptions = assign({}, options);\r\n        delete baseOptions.imageRatio;\r\n        _this = _super.call(this, baseOptions) || this;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.imageRatio_ = options.imageRatio !== undefined ? options.imageRatio : 1;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {number} Ratio between rendered extent size and viewport extent size.\r\n     */\r\n    VectorImageLayer.prototype.getImageRatio = function () {\r\n        return this.imageRatio_;\r\n    };\r\n    /**\r\n     * Create a renderer for this layer.\r\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\r\n     * @protected\r\n     */\r\n    VectorImageLayer.prototype.createRenderer = function () {\r\n        return new CanvasVectorImageLayerRenderer(this);\r\n    };\r\n    return VectorImageLayer;\r\n}(BaseVectorLayer));\r\nexport default VectorImageLayer;\r\n//# sourceMappingURL=VectorImage.js.map","/**\r\n * @module ol/layer/VectorTileRenderType\r\n */\r\n/**\r\n * @enum {string}\r\n * Render mode for vector tiles:\r\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\r\n *    point symbols and texts are always rotated with the view and pixels are\r\n *    scaled during zoom animations.\r\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\r\n *    are scaled during zoom animations. Point symbols and texts are accurately\r\n *    rendered as vectors and can stay upright on rotated views.\r\n * @api\r\n */\r\nexport default {\r\n    IMAGE: 'image',\r\n    HYBRID: 'hybrid'\r\n};\r\n//# sourceMappingURL=VectorTileRenderType.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/renderer/canvas/VectorTileLayer\r\n */\r\nimport { getUid } from '../../util.js';\r\nimport { createCanvasContext2D } from '../../dom.js';\r\nimport TileState from '../../TileState.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport { listen, unlisten, unlistenByKey } from '../../events.js';\r\nimport EventType from '../../events/EventType.js';\r\nimport rbush from 'rbush';\r\nimport { buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects } from '../../extent.js';\r\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\r\nimport { equivalent as equivalentProjection } from '../../proj.js';\r\nimport Units from '../../proj/Units.js';\r\nimport ReplayType from '../../render/canvas/BuilderType.js';\r\nimport { labelCache } from '../../render/canvas.js';\r\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\r\nimport CanvasTileLayerRenderer from './TileLayer.js';\r\nimport { getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\r\nimport { apply as applyTransform, create as createTransform, compose as composeTransform, reset as resetTransform, scale as scaleTransform, translate as translateTransform, toString as transformToString, makeScale, makeInverse } from '../../transform.js';\r\nimport CanvasExecutorGroup, { replayDeclutter } from '../../render/canvas/ExecutorGroup.js';\r\nimport { clear } from '../../obj.js';\r\n/**\r\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\r\n */\r\nvar IMAGE_REPLAYS = {\r\n    'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\r\n        ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\r\n    'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\r\n};\r\n/**\r\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\r\n */\r\nvar VECTOR_REPLAYS = {\r\n    'image': [ReplayType.DEFAULT],\r\n    'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT]\r\n};\r\n/**\r\n * @classdesc\r\n * Canvas renderer for vector tile layers.\r\n * @api\r\n */\r\nvar CanvasVectorTileLayerRenderer = /** @class */ (function (_super) {\r\n    __extends(CanvasVectorTileLayerRenderer, _super);\r\n    /**\r\n     * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\r\n     */\r\n    function CanvasVectorTileLayerRenderer(layer) {\r\n        var _this = _super.call(this, layer) || this;\r\n        var baseCanvas = _this.context.canvas;\r\n        /**\r\n         * @private\r\n         * @type {CanvasRenderingContext2D}\r\n         */\r\n        _this.overlayContext_ = createCanvasContext2D();\r\n        var overlayCanvas = _this.overlayContext_.canvas;\r\n        overlayCanvas.style.position = 'absolute';\r\n        overlayCanvas.style.transformOrigin = 'top left';\r\n        var container = document.createElement('div');\r\n        var style = container.style;\r\n        style.position = 'absolute';\r\n        style.width = '100%';\r\n        style.height = '100%';\r\n        container.appendChild(baseCanvas);\r\n        container.appendChild(overlayCanvas);\r\n        /**\r\n         * @private\r\n         * @type {HTMLElement}\r\n         */\r\n        _this.container_ = container;\r\n        /**\r\n         * The transform for rendered pixels to viewport CSS pixels for the overlay canvas.\r\n         * @private\r\n         * @type {import(\"../../transform.js\").Transform}\r\n         */\r\n        _this.overlayPixelTransform_ = createTransform();\r\n        /**\r\n         * The transform for viewport CSS pixels to rendered pixels for the overlay canvas.\r\n         * @private\r\n         * @type {import(\"../../transform.js\").Transform}\r\n         */\r\n        _this.inverseOverlayPixelTransform_ = createTransform();\r\n        /**\r\n         * Declutter tree.\r\n         * @private\r\n         */\r\n        _this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.dirty_ = false;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.renderedLayerRevision_;\r\n        /**\r\n         * @private\r\n         * @type {!Object<string, import(\"../../VectorRenderTile.js\").default>}\r\n         */\r\n        _this.renderTileImageQueue_ = {};\r\n        /**\r\n         * @type {Object<string, import(\"../../events.js\").EventsKey>}\r\n         */\r\n        _this.tileListenerKeys_ = {};\r\n        /**\r\n         * @private\r\n         * @type {import(\"../../transform.js\").Transform}\r\n         */\r\n        _this.tmpTransform_ = createTransform();\r\n        // Use closest resolution.\r\n        _this.zDirection = 0;\r\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.disposeInternal = function () {\r\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    /**\r\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../../proj/Projection\").default} projection Projection.\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.prepareTile = function (tile, pixelRatio, projection) {\r\n        var tileUid = getUid(tile);\r\n        var state = tile.getState();\r\n        if (((state === TileState.LOADED && tile.hifi) ||\r\n            state === TileState.ERROR || state === TileState.ABORT) &&\r\n            tileUid in this.tileListenerKeys_) {\r\n            unlistenByKey(this.tileListenerKeys_[tileUid]);\r\n            delete this.tileListenerKeys_[tileUid];\r\n        }\r\n        if (state === TileState.LOADED || state === TileState.ERROR) {\r\n            this.updateExecutorGroup_(tile, pixelRatio, projection);\r\n            if (this.tileImageNeedsRender_(tile, pixelRatio, projection)) {\r\n                this.renderTileImageQueue_[tileUid] = tile;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.getTile = function (z, x, y, pixelRatio, projection) {\r\n        var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (_super.prototype.getTile.call(this, z, x, y, pixelRatio, projection));\r\n        if (tile.getState() < TileState.LOADED) {\r\n            var tileUid = getUid(tile);\r\n            if (!(tileUid in this.tileListenerKeys_)) {\r\n                var listenerKey = listen(tile, EventType.CHANGE, this.prepareTile.bind(this, tile, pixelRatio, projection));\r\n                this.tileListenerKeys_[tileUid] = listenerKey;\r\n            }\r\n        }\r\n        else {\r\n            this.prepareTile(tile, pixelRatio, projection);\r\n        }\r\n        return tile;\r\n    };\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.isDrawableTile = function (tile) {\r\n        return _super.prototype.isDrawableTile.call(this, tile) && tile.hasContext(this.getLayer());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.getTileImage = function (tile) {\r\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\r\n        return tile.getImage(tileLayer);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\r\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\r\n        var layerRevision = layer.getRevision();\r\n        if (this.renderedLayerRevision_ != layerRevision) {\r\n            this.renderedTiles.length = 0;\r\n        }\r\n        this.renderedLayerRevision_ = layerRevision;\r\n        return _super.prototype.prepareFrame.call(this, frameState, layerState);\r\n    };\r\n    /**\r\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n     * @private\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.updateExecutorGroup_ = function (tile, pixelRatio, projection) {\r\n        var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n        var revision = layer.getRevision();\r\n        var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\r\n        var builderState = tile.getReplayState(layer);\r\n        if (!builderState.dirty && builderState.renderedRevision == revision &&\r\n            builderState.renderedRenderOrder == renderOrder && builderState.renderedZ === tile.sourceZ) {\r\n            return;\r\n        }\r\n        var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\r\n        var sourceTileGrid = source.getTileGrid();\r\n        var tileGrid = source.getTileGridForProjection(projection);\r\n        var zoom = tile.tileCoord[0];\r\n        var resolution = tileGrid.getResolution(zoom);\r\n        var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\r\n        var sourceTiles = tile.load();\r\n        var layerUid = getUid(layer);\r\n        var executorGroups = tile.executorGroups[layerUid];\r\n        if (executorGroups) {\r\n            for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\r\n                executorGroups[i].dispose();\r\n            }\r\n        }\r\n        tile.executorGroups[layerUid] = [];\r\n        var _loop_1 = function (t, tt) {\r\n            var sourceTile = sourceTiles[t];\r\n            if (sourceTile.getState() != TileState.LOADED) {\r\n                return \"continue\";\r\n            }\r\n            var sourceTileCoord = sourceTile.tileCoord;\r\n            var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\r\n            var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\r\n            var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\r\n                buffer(sharedExtent, layer.getRenderBuffer() * resolution, this_1.tmpExtent);\r\n            var tileProjection = sourceTile.getProjection();\r\n            var reproject = false;\r\n            if (!equivalentProjection(projection, tileProjection)) {\r\n                reproject = true;\r\n                sourceTile.setProjection(projection);\r\n            }\r\n            builderState.dirty = false;\r\n            var builderGroup = new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio, !!this_1.declutterTree_);\r\n            var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\r\n            /**\r\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n             * @this {CanvasVectorTileLayerRenderer}\r\n             */\r\n            var render = function (feature) {\r\n                var styles;\r\n                var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\r\n                if (styleFunction) {\r\n                    styles = styleFunction(feature, resolution);\r\n                }\r\n                if (styles) {\r\n                    var dirty = this.renderFeature(feature, squaredTolerance, styles, builderGroup);\r\n                    this.dirty_ = this.dirty_ || dirty;\r\n                    builderState.dirty = builderState.dirty || dirty;\r\n                }\r\n            };\r\n            var features = sourceTile.getFeatures();\r\n            if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\r\n                features.sort(renderOrder);\r\n            }\r\n            for (var i = 0, ii = features.length; i < ii; ++i) {\r\n                var feature = features[i];\r\n                if (reproject) {\r\n                    if (tileProjection.getUnits() == Units.TILE_PIXELS) {\r\n                        // projected tile extent\r\n                        tileProjection.setWorldExtent(sourceTileExtent);\r\n                        // tile extent in tile pixel space\r\n                        tileProjection.setExtent(sourceTile.getExtent());\r\n                    }\r\n                    feature.getGeometry().transform(tileProjection, projection);\r\n                }\r\n                if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\r\n                    render.call(this_1, feature);\r\n                }\r\n            }\r\n            var executorGroupInstructions = builderGroup.finish();\r\n            // no need to clip when the render tile is covered by a single source tile\r\n            var replayExtent = layer.getDeclutter() && sourceTiles.length === 1 ?\r\n                null :\r\n                sharedExtent;\r\n            var renderingReplayGroup = new CanvasExecutorGroup(replayExtent, resolution, pixelRatio, source.getOverlaps(), this_1.declutterTree_, executorGroupInstructions, layer.getRenderBuffer());\r\n            tile.executorGroups[layerUid].push(renderingReplayGroup);\r\n        };\r\n        var this_1 = this;\r\n        for (var t = 0, tt = sourceTiles.length; t < tt; ++t) {\r\n            _loop_1(t, tt);\r\n        }\r\n        builderState.renderedRevision = revision;\r\n        builderState.renderedZ = tile.sourceZ;\r\n        builderState.renderedRenderOrder = renderOrder;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg) {\r\n        var resolution = frameState.viewState.resolution;\r\n        var rotation = frameState.viewState.rotation;\r\n        hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\r\n        var layer = this.getLayer();\r\n        var source = /** @type {import(\"../../source/VectorTile\").default} */ (layer.getSource());\r\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\r\n        /** @type {!Object<string, boolean>} */\r\n        var features = {};\r\n        var renderedTiles = /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (this.renderedTiles);\r\n        var bufferedExtent, found;\r\n        var i, ii;\r\n        for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\r\n            var tile = renderedTiles[i];\r\n            var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\r\n            bufferedExtent = buffer(tileExtent, hitTolerance * resolution, bufferedExtent);\r\n            if (!containsCoordinate(bufferedExtent, coordinate)) {\r\n                continue;\r\n            }\r\n            var executorGroups = tile.executorGroups[getUid(layer)];\r\n            for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\r\n                var executorGroup = executorGroups[t];\r\n                found = found || executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \r\n                /**\r\n                 * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n                 * @return {?} Callback result.\r\n                 */\r\n                function (feature) {\r\n                    var key = getUid(feature);\r\n                    if (!(key in features)) {\r\n                        features[key] = true;\r\n                        return callback.call(thisArg, feature, layer);\r\n                    }\r\n                }, null);\r\n            }\r\n        }\r\n        return found;\r\n    };\r\n    /**\r\n     * @param {import(\"../../VectorTile.js\").default} tile Tile.\r\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @return {import(\"../../transform.js\").Transform} transform Transform.\r\n     * @private\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function (tile, frameState) {\r\n        var layer = this.getLayer();\r\n        var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\r\n        var tileGrid = source.getTileGrid();\r\n        var tileCoord = tile.tileCoord;\r\n        var tileResolution = tileGrid.getResolution(tileCoord[0]);\r\n        var viewState = frameState.viewState;\r\n        var pixelRatio = frameState.pixelRatio;\r\n        var renderResolution = viewState.resolution / pixelRatio;\r\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\r\n        var center = viewState.center;\r\n        var origin = getTopLeft(tileExtent);\r\n        var size = frameState.size;\r\n        var offsetX = Math.round(pixelRatio * size[0] / 2);\r\n        var offsetY = Math.round(pixelRatio * size[1] / 2);\r\n        return composeTransform(this.tmpTransform_, offsetX, offsetY, tileResolution / renderResolution, tileResolution / renderResolution, viewState.rotation, (origin[0] - center[0]) / tileResolution, (center[1] - origin[1]) / tileResolution);\r\n    };\r\n    /**\r\n     * @param {import(\"../../events/Event.js\").default} event Event.\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function (event) {\r\n        var layer = this.getLayer();\r\n        if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\r\n            layer.changed();\r\n        }\r\n    };\r\n    /**\r\n     * Handle changes in image style state.\r\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\r\n     * @private\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\r\n        this.renderIfReadyAndVisible();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\r\n        _super.prototype.renderFrame.call(this, frameState, layerState);\r\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\r\n        var viewHints = frameState.viewHints;\r\n        var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\r\n        var renderMode = layer.getRenderMode();\r\n        if (renderMode === VectorTileRenderType.IMAGE) {\r\n            this.renderTileImages_(hifi, frameState);\r\n            return this.container_;\r\n        }\r\n        var context = this.overlayContext_;\r\n        var declutterReplays = layer.getDeclutter() ? {} : null;\r\n        var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\r\n        var replayTypes = VECTOR_REPLAYS[renderMode];\r\n        var pixelRatio = frameState.pixelRatio;\r\n        var rotation = frameState.viewState.rotation;\r\n        var size = frameState.size;\r\n        // set forward and inverse pixel transforms\r\n        makeScale(this.overlayPixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\r\n        makeInverse(this.inverseOverlayPixelTransform_, this.overlayPixelTransform_);\r\n        // resize and clear\r\n        var canvas = context.canvas;\r\n        var width = Math.round(size[0] * pixelRatio);\r\n        var height = Math.round(size[1] * pixelRatio);\r\n        if (canvas.width != width || canvas.height != height) {\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            var canvasTransform = transformToString(this.overlayPixelTransform_);\r\n            if (canvas.style.transform !== canvasTransform) {\r\n                canvas.style.transform = canvasTransform;\r\n            }\r\n        }\r\n        else {\r\n            context.clearRect(0, 0, width, height);\r\n        }\r\n        if (declutterReplays) {\r\n            this.declutterTree_.clear();\r\n        }\r\n        var tiles = this.renderedTiles;\r\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\r\n        var clips = [];\r\n        for (var i = tiles.length - 1; i >= 0; --i) {\r\n            var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (tiles[i]);\r\n            if (tile.getState() == TileState.ABORT) {\r\n                continue;\r\n            }\r\n            var tileCoord = tile.tileCoord;\r\n            var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\r\n            var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\r\n            var transform = this.getRenderTransform(frameState, width, height, worldOffset);\r\n            var executorGroups = tile.executorGroups[getUid(layer)];\r\n            for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\r\n                var executorGroup = executorGroups[t];\r\n                if (!executorGroup.hasExecutors(replayTypes)) {\r\n                    // sourceTile has no instructions of the types we want to render\r\n                    continue;\r\n                }\r\n                var currentZ = tile.tileCoord[0];\r\n                var zs = void 0, currentClip = void 0;\r\n                if (!declutterReplays) {\r\n                    zs = [];\r\n                    currentClip = executorGroup.getClipCoords(transform);\r\n                    context.save();\r\n                    // Create a clip mask for regions in this low resolution tile that are\r\n                    // already filled by a higher resolution tile\r\n                    for (var j = 0, jj = clips.length; j < jj; ++j) {\r\n                        var clip = clips[j];\r\n                        if (currentZ < zs[j]) {\r\n                            context.beginPath();\r\n                            // counter-clockwise (outer ring) for current tile\r\n                            context.moveTo(currentClip[0], currentClip[1]);\r\n                            context.lineTo(currentClip[2], currentClip[3]);\r\n                            context.lineTo(currentClip[4], currentClip[5]);\r\n                            context.lineTo(currentClip[6], currentClip[7]);\r\n                            // clockwise (inner ring) for higher resolution tile\r\n                            context.moveTo(clip[6], clip[7]);\r\n                            context.lineTo(clip[4], clip[5]);\r\n                            context.lineTo(clip[2], clip[3]);\r\n                            context.lineTo(clip[0], clip[1]);\r\n                            context.clip();\r\n                        }\r\n                    }\r\n                }\r\n                executorGroup.execute(context, transform, rotation, {}, hifi, replayTypes, declutterReplays);\r\n                if (!declutterReplays) {\r\n                    context.restore();\r\n                    clips.push(currentClip);\r\n                    zs.push(currentZ);\r\n                }\r\n            }\r\n        }\r\n        if (declutterReplays) {\r\n            replayDeclutter(declutterReplays, context, rotation, hifi);\r\n        }\r\n        var opacity = layerState.opacity;\r\n        if (opacity !== parseFloat(canvas.style.opacity)) {\r\n            canvas.style.opacity = opacity;\r\n        }\r\n        // Now that we have rendered the tiles we have already, let's prepare new tile images\r\n        // for the next frame\r\n        this.renderTileImages_(hifi, frameState);\r\n        return this.container_;\r\n    };\r\n    /**\r\n     * @param {boolean} hifi We have time to render a high fidelity map image.\r\n     * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.renderTileImages_ = function (hifi, frameState) {\r\n        // When we don't have time to render hifi, only render tiles until we have used up\r\n        // half of the frame budget of 16 ms\r\n        for (var uid in this.renderTileImageQueue_) {\r\n            if (!hifi && Date.now() - frameState.time > 8) {\r\n                break;\r\n            }\r\n            var tile = this.renderTileImageQueue_[uid];\r\n            frameState.animate = true;\r\n            delete this.renderTileImageQueue_[uid];\r\n            this.renderTileImage_(tile, frameState.pixelRatio, frameState.viewState.projection);\r\n        }\r\n        clear(this.renderTileImageQueue_);\r\n    };\r\n    /**\r\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n     * @param {number} squaredTolerance Squared tolerance.\r\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\r\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} executorGroup Replay group.\r\n     * @return {boolean} `true` if an image is loading.\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, executorGroup) {\r\n        if (!styles) {\r\n            return false;\r\n        }\r\n        var loading = false;\r\n        if (Array.isArray(styles)) {\r\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\r\n                loading = renderFeature(executorGroup, feature, styles[i], squaredTolerance, this.handleStyleImageChange_, this) || loading;\r\n            }\r\n        }\r\n        else {\r\n            loading = renderFeature(executorGroup, feature, styles, squaredTolerance, this.handleStyleImageChange_, this);\r\n        }\r\n        return loading;\r\n    };\r\n    /**\r\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n     * @return {boolean} A new tile image was rendered.\r\n     * @private\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.tileImageNeedsRender_ = function (tile, pixelRatio, projection) {\r\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\r\n        var replayState = tile.getReplayState(layer);\r\n        var revision = layer.getRevision();\r\n        var sourceZ = tile.sourceZ;\r\n        return replayState.renderedTileRevision !== revision || replayState.renderedTileZ !== sourceZ;\r\n    };\r\n    /**\r\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n     * @private\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function (tile, pixelRatio, projection) {\r\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\r\n        var replayState = tile.getReplayState(layer);\r\n        var revision = layer.getRevision();\r\n        var executorGroups = tile.executorGroups[getUid(layer)];\r\n        replayState.renderedTileRevision = revision;\r\n        replayState.renderedTileZ = tile.sourceZ;\r\n        var tileCoord = tile.wrappedTileCoord;\r\n        var z = tileCoord[0];\r\n        var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\r\n        var tileGrid = source.getTileGridForProjection(projection);\r\n        var resolution = tileGrid.getResolution(z);\r\n        var context = tile.getContext(layer);\r\n        var size = source.getTilePixelSize(z, pixelRatio, projection);\r\n        context.canvas.width = size[0];\r\n        context.canvas.height = size[1];\r\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\r\n        for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\r\n            var executorGroup = executorGroups[i];\r\n            var pixelScale = pixelRatio / resolution;\r\n            var transform = resetTransform(this.tmpTransform_);\r\n            scaleTransform(transform, pixelScale, -pixelScale);\r\n            translateTransform(transform, -tileExtent[0], -tileExtent[3]);\r\n            executorGroup.execute(context, transform, 0, {}, true, IMAGE_REPLAYS[layer.getRenderMode()]);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CanvasVectorTileLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\r\n        var data = _super.prototype.getDataAtPixel.call(this, pixel, frameState, hitTolerance);\r\n        if (data) {\r\n            return data;\r\n        }\r\n        var renderPixel = applyTransform(this.inverseOverlayPixelTransform_, pixel.slice());\r\n        var context = this.overlayContext_;\r\n        try {\r\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\r\n        }\r\n        catch (err) {\r\n            if (err.name === 'SecurityError') {\r\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\r\n                return new Uint8Array();\r\n            }\r\n            return data;\r\n        }\r\n        if (data[3] === 0) {\r\n            return null;\r\n        }\r\n        return data;\r\n    };\r\n    return CanvasVectorTileLayerRenderer;\r\n}(CanvasTileLayerRenderer));\r\nexport default CanvasVectorTileLayerRenderer;\r\n//# sourceMappingURL=VectorTileLayer.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/layer/VectorTile\r\n */\r\nimport { assert } from '../asserts.js';\r\nimport TileProperty from './TileProperty.js';\r\nimport BaseVectorLayer from './BaseVector.js';\r\nimport VectorTileRenderType from './VectorTileRenderType.js';\r\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\r\nimport { assign } from '../obj.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\r\n * features before rendering. By default features are drawn in the order that they are created. Use\r\n * `null` to avoid the sort, but get an undefined draw order.\r\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\r\n * renderer when getting features from the vector tile for the rendering or hit-detection.\r\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\r\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\r\n * point symbol or line width.\r\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\r\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\r\n *    are always rotated with the view and pixels are scaled during zoom animations.\r\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\r\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\r\n *    rotated views.\r\n *\r\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\r\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\r\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\r\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\r\n * `'hybrid'`.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\r\n * {@link module:ol/style} for default style which will be used if this is not defined.\r\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\r\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\r\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\r\n * will be recreated when no animation is active.\r\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\r\n * recreated during interactions. See also `updateWhileAnimating`.\r\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\r\n * means no preloading.\r\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\r\n */\r\n/**\r\n * @classdesc\r\n * Layer for vector tile data that is rendered client-side.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @param {Options=} opt_options Options.\r\n * @api\r\n */\r\nvar VectorTileLayer = /** @class */ (function (_super) {\r\n    __extends(VectorTileLayer, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function VectorTileLayer(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options ? opt_options : {};\r\n        var baseOptions = /** @type {Object} */ (assign({}, options));\r\n        delete baseOptions.preload;\r\n        delete baseOptions.useInterimTilesOnError;\r\n        _this = _super.call(this, /** @type {import(\"./Vector.js\").Options} */ (baseOptions)) || this;\r\n        var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\r\n        assert(renderMode == undefined ||\r\n            renderMode == VectorTileRenderType.IMAGE ||\r\n            renderMode == VectorTileRenderType.HYBRID, 28); // `renderMode` must be `'image'` or `'hybrid'`\r\n        if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\r\n            renderMode = VectorTileRenderType.HYBRID;\r\n        }\r\n        /**\r\n         * @private\r\n         * @type {VectorTileRenderType}\r\n         */\r\n        _this.renderMode_ = renderMode;\r\n        _this.setPreload(options.preload ? options.preload : 0);\r\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\r\n            options.useInterimTilesOnError : true);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Create a renderer for this layer.\r\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\r\n     * @protected\r\n     */\r\n    VectorTileLayer.prototype.createRenderer = function () {\r\n        return new CanvasVectorTileLayerRenderer(this);\r\n    };\r\n    /**\r\n     * @return {VectorTileRenderType} The render mode.\r\n     */\r\n    VectorTileLayer.prototype.getRenderMode = function () {\r\n        return this.renderMode_;\r\n    };\r\n    /**\r\n     * Return the level as number to which we will preload tiles up to.\r\n     * @return {number} The level to preload tiles up to.\r\n     * @observable\r\n     * @api\r\n     */\r\n    VectorTileLayer.prototype.getPreload = function () {\r\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\r\n    };\r\n    /**\r\n     * Whether we use interim tiles on error.\r\n     * @return {boolean} Use interim tiles on error.\r\n     * @observable\r\n     * @api\r\n     */\r\n    VectorTileLayer.prototype.getUseInterimTilesOnError = function () {\r\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\r\n    };\r\n    /**\r\n     * Set the level as number to which we will preload tiles up to.\r\n     * @param {number} preload The level to preload tiles up to.\r\n     * @observable\r\n     * @api\r\n     */\r\n    VectorTileLayer.prototype.setPreload = function (preload) {\r\n        this.set(TileProperty.PRELOAD, preload);\r\n    };\r\n    /**\r\n     * Set whether we use interim tiles on error.\r\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\r\n     * @observable\r\n     * @api\r\n     */\r\n    VectorTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\r\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\r\n    };\r\n    return VectorTileLayer;\r\n}(BaseVectorLayer));\r\n/**\r\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\r\n * @function\r\n * @return {import(\"../source/VectorTile.js\").default} Source.\r\n * @api\r\n */\r\nVectorTileLayer.prototype.getSource;\r\nexport default VectorTileLayer;\r\n//# sourceMappingURL=VectorTile.js.map","/**\r\n * @module ol/render/canvas/Immediate\r\n */\r\n// FIXME test, especially polygons with holes and multipolygons\r\n// FIXME need to handle large thick features (where pixel size matters)\r\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { equals } from '../../array.js';\r\nimport { asColorLike } from '../../colorlike.js';\r\nimport { intersects } from '../../extent.js';\r\nimport GeometryType from '../../geom/GeometryType.js';\r\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\r\nimport { transform2D } from '../../geom/flat/transform.js';\r\nimport VectorContext from '../VectorContext.js';\r\nimport { defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont } from '../canvas.js';\r\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\r\n/**\r\n * @classdesc\r\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\r\n * direct rendering of features and geometries to an HTML5 Canvas context.\r\n * Instances of this class are created internally by the library and\r\n * provided to application code as vectorContext member of the\r\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\r\n * render events emitted by layers and maps.\r\n */\r\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\r\n    __extends(CanvasImmediateRenderer, _super);\r\n    /**\r\n     * @param {CanvasRenderingContext2D} context Context.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n     * @param {number} viewRotation View rotation.\r\n     */\r\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @private\r\n         * @type {CanvasRenderingContext2D}\r\n         */\r\n        _this.context_ = context;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.pixelRatio_ = pixelRatio;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../../extent.js\").Extent}\r\n         */\r\n        _this.extent_ = extent;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../../transform.js\").Transform}\r\n         */\r\n        _this.transform_ = transform;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.viewRotation_ = viewRotation;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../canvas.js\").FillState}\r\n         */\r\n        _this.contextFillState_ = null;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../canvas.js\").StrokeState}\r\n         */\r\n        _this.contextStrokeState_ = null;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../canvas.js\").TextState}\r\n         */\r\n        _this.contextTextState_ = null;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../canvas.js\").FillState}\r\n         */\r\n        _this.fillState_ = null;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../canvas.js\").StrokeState}\r\n         */\r\n        _this.strokeState_ = null;\r\n        /**\r\n         * @private\r\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\r\n         */\r\n        _this.image_ = null;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.imageAnchorX_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.imageAnchorY_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.imageHeight_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.imageOpacity_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.imageOriginX_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.imageOriginY_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.imageRotateWithView_ = false;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.imageRotation_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.imageScale_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.imageWidth_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.text_ = '';\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.textOffsetX_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.textOffsetY_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.textRotateWithView_ = false;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.textRotation_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.textScale_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../canvas.js\").FillState}\r\n         */\r\n        _this.textFillState_ = null;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../canvas.js\").StrokeState}\r\n         */\r\n        _this.textStrokeState_ = null;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../canvas.js\").TextState}\r\n         */\r\n        _this.textState_ = null;\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        _this.pixelCoordinates_ = [];\r\n        /**\r\n         * @private\r\n         * @type {import(\"../../transform.js\").Transform}\r\n         */\r\n        _this.tmpLocalTransform_ = createTransform();\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {Array<number>} flatCoordinates Flat coordinates.\r\n     * @param {number} offset Offset.\r\n     * @param {number} end End.\r\n     * @param {number} stride Stride.\r\n     * @private\r\n     */\r\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\r\n        if (!this.image_) {\r\n            return;\r\n        }\r\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\r\n        var context = this.context_;\r\n        var localTransform = this.tmpLocalTransform_;\r\n        var alpha = context.globalAlpha;\r\n        if (this.imageOpacity_ != 1) {\r\n            context.globalAlpha = alpha * this.imageOpacity_;\r\n        }\r\n        var rotation = this.imageRotation_;\r\n        if (this.imageRotateWithView_) {\r\n            rotation += this.viewRotation_;\r\n        }\r\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\r\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\r\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\r\n            if (rotation !== 0 || this.imageScale_ != 1) {\r\n                var centerX = x + this.imageAnchorX_;\r\n                var centerY = y + this.imageAnchorY_;\r\n                composeTransform(localTransform, centerX, centerY, this.imageScale_, this.imageScale_, rotation, -centerX, -centerY);\r\n                context.setTransform.apply(context, localTransform);\r\n            }\r\n            context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\r\n        }\r\n        if (rotation !== 0 || this.imageScale_ != 1) {\r\n            context.setTransform(1, 0, 0, 1, 0, 0);\r\n        }\r\n        if (this.imageOpacity_ != 1) {\r\n            context.globalAlpha = alpha;\r\n        }\r\n    };\r\n    /**\r\n     * @param {Array<number>} flatCoordinates Flat coordinates.\r\n     * @param {number} offset Offset.\r\n     * @param {number} end End.\r\n     * @param {number} stride Stride.\r\n     * @private\r\n     */\r\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\r\n        if (!this.textState_ || this.text_ === '') {\r\n            return;\r\n        }\r\n        if (this.textFillState_) {\r\n            this.setContextFillState_(this.textFillState_);\r\n        }\r\n        if (this.textStrokeState_) {\r\n            this.setContextStrokeState_(this.textStrokeState_);\r\n        }\r\n        this.setContextTextState_(this.textState_);\r\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\r\n        var context = this.context_;\r\n        var rotation = this.textRotation_;\r\n        if (this.textRotateWithView_) {\r\n            rotation += this.viewRotation_;\r\n        }\r\n        for (; offset < end; offset += stride) {\r\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\r\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\r\n            if (rotation !== 0 || this.textScale_ != 1) {\r\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, this.textScale_, this.textScale_, rotation, -x, -y);\r\n                context.setTransform.apply(context, localTransform);\r\n            }\r\n            if (this.textStrokeState_) {\r\n                context.strokeText(this.text_, x, y);\r\n            }\r\n            if (this.textFillState_) {\r\n                context.fillText(this.text_, x, y);\r\n            }\r\n        }\r\n        if (rotation !== 0 || this.textScale_ != 1) {\r\n            context.setTransform(1, 0, 0, 1, 0, 0);\r\n        }\r\n    };\r\n    /**\r\n     * @param {Array<number>} flatCoordinates Flat coordinates.\r\n     * @param {number} offset Offset.\r\n     * @param {number} end End.\r\n     * @param {number} stride Stride.\r\n     * @param {boolean} close Close.\r\n     * @private\r\n     * @return {number} end End.\r\n     */\r\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\r\n        var context = this.context_;\r\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\r\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\r\n        var length = pixelCoordinates.length;\r\n        if (close) {\r\n            length -= 2;\r\n        }\r\n        for (var i = 2; i < length; i += 2) {\r\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\r\n        }\r\n        if (close) {\r\n            context.closePath();\r\n        }\r\n        return end;\r\n    };\r\n    /**\r\n     * @param {Array<number>} flatCoordinates Flat coordinates.\r\n     * @param {number} offset Offset.\r\n     * @param {Array<number>} ends Ends.\r\n     * @param {number} stride Stride.\r\n     * @private\r\n     * @return {number} End.\r\n     */\r\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\r\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\r\n        }\r\n        return offset;\r\n    };\r\n    /**\r\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\r\n     * the current fill and stroke styles.\r\n     *\r\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\r\n     * @override\r\n     * @api\r\n     */\r\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\r\n        if (!intersects(this.extent_, geometry.getExtent())) {\r\n            return;\r\n        }\r\n        if (this.fillState_ || this.strokeState_) {\r\n            if (this.fillState_) {\r\n                this.setContextFillState_(this.fillState_);\r\n            }\r\n            if (this.strokeState_) {\r\n                this.setContextStrokeState_(this.strokeState_);\r\n            }\r\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\r\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\r\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\r\n            var radius = Math.sqrt(dx * dx + dy * dy);\r\n            var context = this.context_;\r\n            context.beginPath();\r\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\r\n            if (this.fillState_) {\r\n                context.fill();\r\n            }\r\n            if (this.strokeState_) {\r\n                context.stroke();\r\n            }\r\n        }\r\n        if (this.text_ !== '') {\r\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\r\n        }\r\n    };\r\n    /**\r\n     * Set the rendering style.  Note that since this is an immediate rendering API,\r\n     * any `zIndex` on the provided style will be ignored.\r\n     *\r\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\r\n     * @override\r\n     * @api\r\n     */\r\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\r\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\r\n        this.setImageStyle(style.getImage());\r\n        this.setTextStyle(style.getText());\r\n    };\r\n    /**\r\n     * Render a geometry into the canvas.  Call\r\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\r\n     *\r\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\r\n     * @override\r\n     * @api\r\n     */\r\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\r\n        var type = geometry.getType();\r\n        switch (type) {\r\n            case GeometryType.POINT:\r\n                this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\r\n                break;\r\n            case GeometryType.LINE_STRING:\r\n                this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\r\n                break;\r\n            case GeometryType.POLYGON:\r\n                this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\r\n                break;\r\n            case GeometryType.MULTI_POINT:\r\n                this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\r\n                break;\r\n            case GeometryType.MULTI_LINE_STRING:\r\n                this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\r\n                break;\r\n            case GeometryType.MULTI_POLYGON:\r\n                this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\r\n                break;\r\n            case GeometryType.GEOMETRY_COLLECTION:\r\n                this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\r\n                break;\r\n            case GeometryType.CIRCLE:\r\n                this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\r\n                break;\r\n            default:\r\n        }\r\n    };\r\n    /**\r\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\r\n     * style will be ignored - features are rendered immediately in the order that\r\n     * this method is called.  If you need `zIndex` support, you should be using an\r\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\r\n     *\r\n     * @param {import(\"../../Feature.js\").default} feature Feature.\r\n     * @param {import(\"../../style/Style.js\").default} style Style.\r\n     * @override\r\n     * @api\r\n     */\r\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\r\n        var geometry = style.getGeometryFunction()(feature);\r\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\r\n            return;\r\n        }\r\n        this.setStyle(style);\r\n        this.drawGeometry(geometry);\r\n    };\r\n    /**\r\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\r\n     * uses the current styles appropriate for each geometry in the collection.\r\n     *\r\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\r\n     * @override\r\n     */\r\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\r\n        var geometries = geometry.getGeometriesArray();\r\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n            this.drawGeometry(geometries[i]);\r\n        }\r\n    };\r\n    /**\r\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\r\n     * the current style.\r\n     *\r\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\r\n     * @override\r\n     */\r\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\r\n        var flatCoordinates = geometry.getFlatCoordinates();\r\n        var stride = geometry.getStride();\r\n        if (this.image_) {\r\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n        }\r\n        if (this.text_ !== '') {\r\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n        }\r\n    };\r\n    /**\r\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\r\n     * uses the current style.\r\n     *\r\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\r\n     * @override\r\n     */\r\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\r\n        var flatCoordinates = geometry.getFlatCoordinates();\r\n        var stride = geometry.getStride();\r\n        if (this.image_) {\r\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n        }\r\n        if (this.text_ !== '') {\r\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n        }\r\n    };\r\n    /**\r\n     * Render a LineString into the canvas.  Rendering is immediate and uses\r\n     * the current style.\r\n     *\r\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\r\n     * @override\r\n     */\r\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\r\n        if (!intersects(this.extent_, geometry.getExtent())) {\r\n            return;\r\n        }\r\n        if (this.strokeState_) {\r\n            this.setContextStrokeState_(this.strokeState_);\r\n            var context = this.context_;\r\n            var flatCoordinates = geometry.getFlatCoordinates();\r\n            context.beginPath();\r\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\r\n            context.stroke();\r\n        }\r\n        if (this.text_ !== '') {\r\n            var flatMidpoint = geometry.getFlatMidpoint();\r\n            this.drawText_(flatMidpoint, 0, 2, 2);\r\n        }\r\n    };\r\n    /**\r\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\r\n     * and uses the current style.\r\n     *\r\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\r\n     * @override\r\n     */\r\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\r\n        var geometryExtent = geometry.getExtent();\r\n        if (!intersects(this.extent_, geometryExtent)) {\r\n            return;\r\n        }\r\n        if (this.strokeState_) {\r\n            this.setContextStrokeState_(this.strokeState_);\r\n            var context = this.context_;\r\n            var flatCoordinates = geometry.getFlatCoordinates();\r\n            var offset = 0;\r\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\r\n            var stride = geometry.getStride();\r\n            context.beginPath();\r\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\r\n            }\r\n            context.stroke();\r\n        }\r\n        if (this.text_ !== '') {\r\n            var flatMidpoints = geometry.getFlatMidpoints();\r\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\r\n        }\r\n    };\r\n    /**\r\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\r\n     * the current style.\r\n     *\r\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\r\n     * @override\r\n     */\r\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\r\n        if (!intersects(this.extent_, geometry.getExtent())) {\r\n            return;\r\n        }\r\n        if (this.strokeState_ || this.fillState_) {\r\n            if (this.fillState_) {\r\n                this.setContextFillState_(this.fillState_);\r\n            }\r\n            if (this.strokeState_) {\r\n                this.setContextStrokeState_(this.strokeState_);\r\n            }\r\n            var context = this.context_;\r\n            context.beginPath();\r\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\r\n            if (this.fillState_) {\r\n                context.fill();\r\n            }\r\n            if (this.strokeState_) {\r\n                context.stroke();\r\n            }\r\n        }\r\n        if (this.text_ !== '') {\r\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\r\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\r\n        }\r\n    };\r\n    /**\r\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\r\n     * uses the current style.\r\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\r\n     * @override\r\n     */\r\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\r\n        if (!intersects(this.extent_, geometry.getExtent())) {\r\n            return;\r\n        }\r\n        if (this.strokeState_ || this.fillState_) {\r\n            if (this.fillState_) {\r\n                this.setContextFillState_(this.fillState_);\r\n            }\r\n            if (this.strokeState_) {\r\n                this.setContextStrokeState_(this.strokeState_);\r\n            }\r\n            var context = this.context_;\r\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\r\n            var offset = 0;\r\n            var endss = geometry.getEndss();\r\n            var stride = geometry.getStride();\r\n            context.beginPath();\r\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n                var ends = endss[i];\r\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\r\n            }\r\n            if (this.fillState_) {\r\n                context.fill();\r\n            }\r\n            if (this.strokeState_) {\r\n                context.stroke();\r\n            }\r\n        }\r\n        if (this.text_ !== '') {\r\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\r\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\r\n     * @private\r\n     */\r\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\r\n        var context = this.context_;\r\n        var contextFillState = this.contextFillState_;\r\n        if (!contextFillState) {\r\n            context.fillStyle = fillState.fillStyle;\r\n            this.contextFillState_ = {\r\n                fillStyle: fillState.fillStyle\r\n            };\r\n        }\r\n        else {\r\n            if (contextFillState.fillStyle != fillState.fillStyle) {\r\n                contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\r\n     * @private\r\n     */\r\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\r\n        var context = this.context_;\r\n        var contextStrokeState = this.contextStrokeState_;\r\n        if (!contextStrokeState) {\r\n            context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\r\n            if (context.setLineDash) {\r\n                context.setLineDash(strokeState.lineDash);\r\n                context.lineDashOffset = strokeState.lineDashOffset;\r\n            }\r\n            context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\r\n            context.lineWidth = strokeState.lineWidth;\r\n            context.miterLimit = strokeState.miterLimit;\r\n            context.strokeStyle = strokeState.strokeStyle;\r\n            this.contextStrokeState_ = {\r\n                lineCap: strokeState.lineCap,\r\n                lineDash: strokeState.lineDash,\r\n                lineDashOffset: strokeState.lineDashOffset,\r\n                lineJoin: strokeState.lineJoin,\r\n                lineWidth: strokeState.lineWidth,\r\n                miterLimit: strokeState.miterLimit,\r\n                strokeStyle: strokeState.strokeStyle\r\n            };\r\n        }\r\n        else {\r\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\r\n                contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\r\n            }\r\n            if (context.setLineDash) {\r\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\r\n                    context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\r\n                }\r\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\r\n                    contextStrokeState.lineDashOffset = context.lineDashOffset =\r\n                        strokeState.lineDashOffset;\r\n                }\r\n            }\r\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\r\n                contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\r\n            }\r\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\r\n                contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\r\n            }\r\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\r\n                contextStrokeState.miterLimit = context.miterLimit =\r\n                    strokeState.miterLimit;\r\n            }\r\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\r\n                contextStrokeState.strokeStyle = context.strokeStyle =\r\n                    strokeState.strokeStyle;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\r\n     * @private\r\n     */\r\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\r\n        var context = this.context_;\r\n        var contextTextState = this.contextTextState_;\r\n        var textAlign = textState.textAlign ?\r\n            textState.textAlign : defaultTextAlign;\r\n        if (!contextTextState) {\r\n            context.font = textState.font;\r\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\r\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\r\n            this.contextTextState_ = {\r\n                font: textState.font,\r\n                textAlign: textAlign,\r\n                textBaseline: textState.textBaseline\r\n            };\r\n        }\r\n        else {\r\n            if (contextTextState.font != textState.font) {\r\n                contextTextState.font = context.font = textState.font;\r\n            }\r\n            if (contextTextState.textAlign != textAlign) {\r\n                contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\r\n            }\r\n            if (contextTextState.textBaseline != textState.textBaseline) {\r\n                contextTextState.textBaseline = context.textBaseline =\r\n                    /** @type {CanvasTextBaseline} */ (textState.textBaseline);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Set the fill and stroke style for subsequent draw operations.  To clear\r\n     * either fill or stroke styles, pass null for the appropriate parameter.\r\n     *\r\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\r\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\r\n     * @override\r\n     */\r\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\r\n        if (!fillStyle) {\r\n            this.fillState_ = null;\r\n        }\r\n        else {\r\n            var fillStyleColor = fillStyle.getColor();\r\n            this.fillState_ = {\r\n                fillStyle: asColorLike(fillStyleColor ?\r\n                    fillStyleColor : defaultFillStyle)\r\n            };\r\n        }\r\n        if (!strokeStyle) {\r\n            this.strokeState_ = null;\r\n        }\r\n        else {\r\n            var strokeStyleColor = strokeStyle.getColor();\r\n            var strokeStyleLineCap = strokeStyle.getLineCap();\r\n            var strokeStyleLineDash = strokeStyle.getLineDash();\r\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\r\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\r\n            var strokeStyleWidth = strokeStyle.getWidth();\r\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\r\n            this.strokeState_ = {\r\n                lineCap: strokeStyleLineCap !== undefined ?\r\n                    strokeStyleLineCap : defaultLineCap,\r\n                lineDash: strokeStyleLineDash ?\r\n                    strokeStyleLineDash : defaultLineDash,\r\n                lineDashOffset: strokeStyleLineDashOffset ?\r\n                    strokeStyleLineDashOffset : defaultLineDashOffset,\r\n                lineJoin: strokeStyleLineJoin !== undefined ?\r\n                    strokeStyleLineJoin : defaultLineJoin,\r\n                lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\r\n                    strokeStyleWidth : defaultLineWidth),\r\n                miterLimit: strokeStyleMiterLimit !== undefined ?\r\n                    strokeStyleMiterLimit : defaultMiterLimit,\r\n                strokeStyle: asColorLike(strokeStyleColor ?\r\n                    strokeStyleColor : defaultStrokeStyle)\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * Set the image style for subsequent draw operations.  Pass null to remove\r\n     * the image style.\r\n     *\r\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\r\n     * @override\r\n     */\r\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\r\n        if (!imageStyle) {\r\n            this.image_ = null;\r\n        }\r\n        else {\r\n            var imageAnchor = imageStyle.getAnchor();\r\n            // FIXME pixel ratio\r\n            var imageImage = imageStyle.getImage(1);\r\n            var imageOrigin = imageStyle.getOrigin();\r\n            var imageSize = imageStyle.getSize();\r\n            this.imageAnchorX_ = imageAnchor[0];\r\n            this.imageAnchorY_ = imageAnchor[1];\r\n            this.imageHeight_ = imageSize[1];\r\n            this.image_ = imageImage;\r\n            this.imageOpacity_ = imageStyle.getOpacity();\r\n            this.imageOriginX_ = imageOrigin[0];\r\n            this.imageOriginY_ = imageOrigin[1];\r\n            this.imageRotateWithView_ = imageStyle.getRotateWithView();\r\n            this.imageRotation_ = imageStyle.getRotation();\r\n            this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\r\n            this.imageWidth_ = imageSize[0];\r\n        }\r\n    };\r\n    /**\r\n     * Set the text style for subsequent draw operations.  Pass null to\r\n     * remove the text style.\r\n     *\r\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\r\n     * @override\r\n     */\r\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\r\n        if (!textStyle) {\r\n            this.text_ = '';\r\n        }\r\n        else {\r\n            var textFillStyle = textStyle.getFill();\r\n            if (!textFillStyle) {\r\n                this.textFillState_ = null;\r\n            }\r\n            else {\r\n                var textFillStyleColor = textFillStyle.getColor();\r\n                this.textFillState_ = {\r\n                    fillStyle: asColorLike(textFillStyleColor ?\r\n                        textFillStyleColor : defaultFillStyle)\r\n                };\r\n            }\r\n            var textStrokeStyle = textStyle.getStroke();\r\n            if (!textStrokeStyle) {\r\n                this.textStrokeState_ = null;\r\n            }\r\n            else {\r\n                var textStrokeStyleColor = textStrokeStyle.getColor();\r\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\r\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\r\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\r\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\r\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\r\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\r\n                this.textStrokeState_ = {\r\n                    lineCap: textStrokeStyleLineCap !== undefined ?\r\n                        textStrokeStyleLineCap : defaultLineCap,\r\n                    lineDash: textStrokeStyleLineDash ?\r\n                        textStrokeStyleLineDash : defaultLineDash,\r\n                    lineDashOffset: textStrokeStyleLineDashOffset ?\r\n                        textStrokeStyleLineDashOffset : defaultLineDashOffset,\r\n                    lineJoin: textStrokeStyleLineJoin !== undefined ?\r\n                        textStrokeStyleLineJoin : defaultLineJoin,\r\n                    lineWidth: textStrokeStyleWidth !== undefined ?\r\n                        textStrokeStyleWidth : defaultLineWidth,\r\n                    miterLimit: textStrokeStyleMiterLimit !== undefined ?\r\n                        textStrokeStyleMiterLimit : defaultMiterLimit,\r\n                    strokeStyle: asColorLike(textStrokeStyleColor ?\r\n                        textStrokeStyleColor : defaultStrokeStyle)\r\n                };\r\n            }\r\n            var textFont = textStyle.getFont();\r\n            var textOffsetX = textStyle.getOffsetX();\r\n            var textOffsetY = textStyle.getOffsetY();\r\n            var textRotateWithView = textStyle.getRotateWithView();\r\n            var textRotation = textStyle.getRotation();\r\n            var textScale = textStyle.getScale();\r\n            var textText = textStyle.getText();\r\n            var textTextAlign = textStyle.getTextAlign();\r\n            var textTextBaseline = textStyle.getTextBaseline();\r\n            this.textState_ = {\r\n                font: textFont !== undefined ?\r\n                    textFont : defaultFont,\r\n                textAlign: textTextAlign !== undefined ?\r\n                    textTextAlign : defaultTextAlign,\r\n                textBaseline: textTextBaseline !== undefined ?\r\n                    textTextBaseline : defaultTextBaseline\r\n            };\r\n            this.text_ = textText !== undefined ? textText : '';\r\n            this.textOffsetX_ =\r\n                textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\r\n            this.textOffsetY_ =\r\n                textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\r\n            this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\r\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\r\n            this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\r\n                textScale : 1);\r\n        }\r\n    };\r\n    return CanvasImmediateRenderer;\r\n}(VectorContext));\r\nexport default CanvasImmediateRenderer;\r\n//# sourceMappingURL=Immediate.js.map","/**\r\n * @module ol/tilecoord\r\n */\r\n/**\r\n * An array of three numbers representing the location of a tile in a tile\r\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\r\n * @typedef {Array<number>} TileCoord\r\n * @api\r\n */\r\n/**\r\n * @param {number} z Z.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\r\n * @return {TileCoord} Tile coordinate.\r\n */\r\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\r\n    if (opt_tileCoord !== undefined) {\r\n        opt_tileCoord[0] = z;\r\n        opt_tileCoord[1] = x;\r\n        opt_tileCoord[2] = y;\r\n        return opt_tileCoord;\r\n    }\r\n    else {\r\n        return [z, x, y];\r\n    }\r\n}\r\n/**\r\n * @param {number} z Z.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {string} Key.\r\n */\r\nexport function getKeyZXY(z, x, y) {\r\n    return z + '/' + x + '/' + y;\r\n}\r\n/**\r\n * Get the key for a tile coord.\r\n * @param {TileCoord} tileCoord The tile coord.\r\n * @return {string} Key.\r\n */\r\nexport function getKey(tileCoord) {\r\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\r\n}\r\n/**\r\n * Get a tile coord given a key.\r\n * @param {string} key The tile coord key.\r\n * @return {TileCoord} The tile coord.\r\n */\r\nexport function fromKey(key) {\r\n    return key.split('/').map(Number);\r\n}\r\n/**\r\n * @param {TileCoord} tileCoord Tile coord.\r\n * @return {number} Hash.\r\n */\r\nexport function hash(tileCoord) {\r\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\r\n}\r\n/**\r\n * @param {TileCoord} tileCoord Tile coordinate.\r\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n * @return {boolean} Tile coordinate is within extent and zoom level range.\r\n */\r\nexport function withinExtentAndZ(tileCoord, tileGrid) {\r\n    var z = tileCoord[0];\r\n    var x = tileCoord[1];\r\n    var y = tileCoord[2];\r\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\r\n        return false;\r\n    }\r\n    var extent = tileGrid.getExtent();\r\n    var tileRange;\r\n    if (!extent) {\r\n        tileRange = tileGrid.getFullTileRange(z);\r\n    }\r\n    else {\r\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\r\n    }\r\n    if (!tileRange) {\r\n        return true;\r\n    }\r\n    else {\r\n        return tileRange.containsXY(x, y);\r\n    }\r\n}\r\n//# sourceMappingURL=tilecoord.js.map","/**\r\n * @module ol/tileurlfunction\r\n */\r\nimport { assert } from './asserts.js';\r\nimport { modulo } from './math.js';\r\nimport { hash as tileCoordHash } from './tilecoord.js';\r\n/**\r\n * @param {string} template Template.\r\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\r\n */\r\nexport function createFromTemplate(template, tileGrid) {\r\n    var zRegEx = /\\{z\\}/g;\r\n    var xRegEx = /\\{x\\}/g;\r\n    var yRegEx = /\\{y\\}/g;\r\n    var dashYRegEx = /\\{-y\\}/g;\r\n    return (\r\n    /**\r\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n     * @return {string|undefined} Tile URL.\r\n     */\r\n    function (tileCoord, pixelRatio, projection) {\r\n        if (!tileCoord) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return template.replace(zRegEx, tileCoord[0].toString())\r\n                .replace(xRegEx, tileCoord[1].toString())\r\n                .replace(yRegEx, tileCoord[2].toString())\r\n                .replace(dashYRegEx, function () {\r\n                var z = tileCoord[0];\r\n                var range = tileGrid.getFullTileRange(z);\r\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\r\n                var y = range.getHeight() - tileCoord[2] - 1;\r\n                return y.toString();\r\n            });\r\n        }\r\n    });\r\n}\r\n/**\r\n * @param {Array<string>} templates Templates.\r\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\r\n */\r\nexport function createFromTemplates(templates, tileGrid) {\r\n    var len = templates.length;\r\n    var tileUrlFunctions = new Array(len);\r\n    for (var i = 0; i < len; ++i) {\r\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\r\n    }\r\n    return createFromTileUrlFunctions(tileUrlFunctions);\r\n}\r\n/**\r\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\r\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\r\n */\r\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\r\n    if (tileUrlFunctions.length === 1) {\r\n        return tileUrlFunctions[0];\r\n    }\r\n    return (\r\n    /**\r\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n     * @return {string|undefined} Tile URL.\r\n     */\r\n    function (tileCoord, pixelRatio, projection) {\r\n        if (!tileCoord) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            var h = tileCoordHash(tileCoord);\r\n            var index = modulo(h, tileUrlFunctions.length);\r\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @return {string|undefined} Tile URL.\r\n */\r\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\r\n    return undefined;\r\n}\r\n/**\r\n * @param {string} url URL.\r\n * @return {Array<string>} Array of urls.\r\n */\r\nexport function expandUrl(url) {\r\n    var urls = [];\r\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\r\n    if (match) {\r\n        // char range\r\n        var startCharCode = match[1].charCodeAt(0);\r\n        var stopCharCode = match[2].charCodeAt(0);\r\n        var charCode = void 0;\r\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\r\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\r\n        }\r\n        return urls;\r\n    }\r\n    match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\r\n    if (match) {\r\n        // number range\r\n        var stop_1 = parseInt(match[2], 10);\r\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\r\n            urls.push(url.replace(match[0], i.toString()));\r\n        }\r\n        return urls;\r\n    }\r\n    urls.push(url);\r\n    return urls;\r\n}\r\n//# sourceMappingURL=tileurlfunction.js.map","/**\r\n * @module ol/net\r\n */\r\nimport { getUid } from './util.js';\r\n/**\r\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\r\n * The error callback will be called when no JSONP is executed after 10 seconds.\r\n *\r\n * @param {string} url Request url. A 'callback' query parameter will be\r\n *     appended.\r\n * @param {Function} callback Callback on success.\r\n * @param {function()=} opt_errback Callback on error.\r\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\r\n *     callback. Default is 'callback'.\r\n */\r\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\r\n    var script = document.createElement('script');\r\n    var key = 'olc_' + getUid(callback);\r\n    function cleanup() {\r\n        delete window[key];\r\n        script.parentNode.removeChild(script);\r\n    }\r\n    script.async = true;\r\n    script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\r\n        (opt_callbackParam || 'callback') + '=' + key;\r\n    var timer = setTimeout(function () {\r\n        cleanup();\r\n        if (opt_errback) {\r\n            opt_errback();\r\n        }\r\n    }, 10000);\r\n    window[key] = function (data) {\r\n        clearTimeout(timer);\r\n        cleanup();\r\n        callback(data);\r\n    };\r\n    document.getElementsByTagName('head')[0].appendChild(script);\r\n}\r\n//# sourceMappingURL=net.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/Tile\r\n */\r\nimport TileState from './TileState.js';\r\nimport { easeIn } from './easing.js';\r\nimport EventTarget from './events/Target.js';\r\nimport EventType from './events/EventType.js';\r\nimport { abstract } from './util.js';\r\n/**\r\n * A function that takes an {@link module:ol/Tile} for the tile and a\r\n * `{string}` for the url as arguments. The default is\r\n * ```js\r\n * source.setTileLoadFunction(function(tile, src) {\r\n *   tile.getImage().src = src;\r\n * });\r\n * ```\r\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\r\n * error handling:\r\n *\r\n * ```js\r\n * import TileState from 'ol/TileState';\r\n *\r\n * source.setTileLoadFunction(function(tile, src) {\r\n *   var xhr = new XMLHttpRequest();\r\n *   xhr.responseType = 'blob';\r\n *   xhr.addEventListener('loadend', function (evt) {\r\n *     var data = this.response;\r\n *     if (data !== undefined) {\r\n *       tile.getImage().src = URL.createObjectURL(data);\r\n *     } else {\r\n *       tile.setState(TileState.ERROR);\r\n *     }\r\n *   });\r\n *   xhr.addEventListener('error', function () {\r\n *     tile.setState(TileState.ERROR);\r\n *   });\r\n *   xhr.open('GET', src);\r\n *   xhr.send();\r\n * });\r\n * ```\r\n *\r\n * @typedef {function(Tile, string): void} LoadFunction\r\n * @api\r\n */\r\n/**\r\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\r\n * the url that provides a tile for a given tile coordinate.\r\n *\r\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\r\n * coordinate, a `{number}` representing the pixel ratio and a\r\n * {@link module:ol/proj/Projection} for the projection  as arguments\r\n * and returns a `{string}` representing the tile URL, or undefined if no tile\r\n * should be requested for the passed tile coordinate.\r\n *\r\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\r\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\r\n * @api\r\n */\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [transition=250] A duration for tile opacity\r\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\r\n * @api\r\n */\r\n/**\r\n * @classdesc\r\n * Base class for tiles.\r\n *\r\n * @abstract\r\n */\r\nvar Tile = /** @class */ (function (_super) {\r\n    __extends(Tile, _super);\r\n    /**\r\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @param {TileState} state State.\r\n     * @param {Options=} opt_options Tile options.\r\n     */\r\n    function Tile(tileCoord, state, opt_options) {\r\n        var _this = _super.call(this) || this;\r\n        var options = opt_options ? opt_options : {};\r\n        /**\r\n         * @type {import(\"./tilecoord.js\").TileCoord}\r\n         */\r\n        _this.tileCoord = tileCoord;\r\n        /**\r\n         * @protected\r\n         * @type {TileState}\r\n         */\r\n        _this.state = state;\r\n        /**\r\n         * An \"interim\" tile for this tile. The interim tile may be used while this\r\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\r\n         * on the source.\r\n         * @type {Tile}\r\n         */\r\n        _this.interimTile = null;\r\n        /**\r\n         * The tile is available at the highest possible resolution. Subclasses can\r\n         * set this to `false` initially. Tile load listeners will not be\r\n         * unregistered before this is set to `true` and a `#changed()` is called.\r\n         * @type {boolean}\r\n         */\r\n        _this.hifi = true;\r\n        /**\r\n         * A key assigned to the tile. This is used by the tile source to determine\r\n         * if this tile can effectively be used, or if a new tile should be created\r\n         * and this one be used as an interim tile for this new tile.\r\n         * @type {string}\r\n         */\r\n        _this.key = '';\r\n        /**\r\n         * The duration for the opacity transition.\r\n         * @type {number}\r\n         */\r\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\r\n        /**\r\n         * Lookup of start times for rendering transitions.  If the start time is\r\n         * equal to -1, the transition is complete.\r\n         * @type {Object<string, number>}\r\n         */\r\n        _this.transitionStarts_ = {};\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     */\r\n    Tile.prototype.changed = function () {\r\n        this.dispatchEvent(EventType.CHANGE);\r\n    };\r\n    /**\r\n     * @return {string} Key.\r\n     */\r\n    Tile.prototype.getKey = function () {\r\n        return this.key + '/' + this.tileCoord;\r\n    };\r\n    /**\r\n     * Get the interim tile most suitable for rendering using the chain of interim\r\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\r\n     * such tile exists, the original tile is returned.\r\n     * @return {!Tile} Best tile for rendering.\r\n     */\r\n    Tile.prototype.getInterimTile = function () {\r\n        if (!this.interimTile) {\r\n            //empty chain\r\n            return this;\r\n        }\r\n        var tile = this.interimTile;\r\n        // find the first loaded tile and return it. Since the chain is sorted in\r\n        // decreasing order of creation time, there is no need to search the remainder\r\n        // of the list (all those tiles correspond to older requests and will be\r\n        // cleaned up by refreshInterimChain)\r\n        do {\r\n            if (tile.getState() == TileState.LOADED) {\r\n                return tile;\r\n            }\r\n            tile = tile.interimTile;\r\n        } while (tile);\r\n        // we can not find a better tile\r\n        return this;\r\n    };\r\n    /**\r\n     * Goes through the chain of interim tiles and discards sections of the chain\r\n     * that are no longer relevant.\r\n     */\r\n    Tile.prototype.refreshInterimChain = function () {\r\n        if (!this.interimTile) {\r\n            return;\r\n        }\r\n        var tile = this.interimTile;\r\n        var prev = /** @type {Tile} */ (this);\r\n        do {\r\n            if (tile.getState() == TileState.LOADED) {\r\n                //we have a loaded tile, we can discard the rest of the list\r\n                //we would could abort any LOADING tile request\r\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\r\n                tile.interimTile = null;\r\n                break;\r\n            }\r\n            else if (tile.getState() == TileState.LOADING) {\r\n                //keep this LOADING tile any loaded tiles later in the chain are\r\n                //older than this tile, so we're still interested in the request\r\n                prev = tile;\r\n            }\r\n            else if (tile.getState() == TileState.IDLE) {\r\n                //the head of the list is the most current tile, we don't need\r\n                //to start any other requests for this chain\r\n                prev.interimTile = tile.interimTile;\r\n            }\r\n            else {\r\n                prev = tile;\r\n            }\r\n            tile = prev.interimTile;\r\n        } while (tile);\r\n    };\r\n    /**\r\n     * Get the tile coordinate for this tile.\r\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\r\n     * @api\r\n     */\r\n    Tile.prototype.getTileCoord = function () {\r\n        return this.tileCoord;\r\n    };\r\n    /**\r\n     * @return {TileState} State.\r\n     */\r\n    Tile.prototype.getState = function () {\r\n        return this.state;\r\n    };\r\n    /**\r\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\r\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\r\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\r\n     * the tile queue and will block other requests.\r\n     * @param {TileState} state State.\r\n     * @api\r\n     */\r\n    Tile.prototype.setState = function (state) {\r\n        this.state = state;\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Load the image or retry if loading previously failed.\r\n     * Loading is taken care of by the tile queue, and calling this method is\r\n     * only needed for preloading or for reloading in case of an error.\r\n     * @abstract\r\n     * @api\r\n     */\r\n    Tile.prototype.load = function () {\r\n        abstract();\r\n    };\r\n    /**\r\n     * Get the alpha value for rendering.\r\n     * @param {string} id An id for the renderer.\r\n     * @param {number} time The render frame time.\r\n     * @return {number} A number between 0 and 1.\r\n     */\r\n    Tile.prototype.getAlpha = function (id, time) {\r\n        if (!this.transition_) {\r\n            return 1;\r\n        }\r\n        var start = this.transitionStarts_[id];\r\n        if (!start) {\r\n            start = time;\r\n            this.transitionStarts_[id] = start;\r\n        }\r\n        else if (start === -1) {\r\n            return 1;\r\n        }\r\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\r\n        if (delta >= this.transition_) {\r\n            return 1;\r\n        }\r\n        return easeIn(delta / this.transition_);\r\n    };\r\n    /**\r\n     * Determine if a tile is in an alpha transition.  A tile is considered in\r\n     * transition if tile.getAlpha() has not yet been called or has been called\r\n     * and returned 1.\r\n     * @param {string} id An id for the renderer.\r\n     * @return {boolean} The tile is in transition.\r\n     */\r\n    Tile.prototype.inTransition = function (id) {\r\n        if (!this.transition_) {\r\n            return false;\r\n        }\r\n        return this.transitionStarts_[id] !== -1;\r\n    };\r\n    /**\r\n     * Mark a transition as complete.\r\n     * @param {string} id An id for the renderer.\r\n     */\r\n    Tile.prototype.endTransition = function (id) {\r\n        if (this.transition_) {\r\n            this.transitionStarts_[id] = -1;\r\n        }\r\n    };\r\n    return Tile;\r\n}(EventTarget));\r\nexport default Tile;\r\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/ImageTile\r\n */\r\nimport Tile from './Tile.js';\r\nimport TileState from './TileState.js';\r\nimport { createCanvasContext2D } from './dom.js';\r\nimport { listenOnce, unlistenByKey } from './events.js';\r\nimport EventType from './events/EventType.js';\r\nvar ImageTile = /** @class */ (function (_super) {\r\n    __extends(ImageTile, _super);\r\n    /**\r\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @param {TileState} state State.\r\n     * @param {string} src Image source URI.\r\n     * @param {?string} crossOrigin Cross origin.\r\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\r\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\r\n     */\r\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\r\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\r\n        /**\r\n         * @private\r\n         * @type {?string}\r\n         */\r\n        _this.crossOrigin_ = crossOrigin;\r\n        /**\r\n         * Image URI\r\n         *\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.src_ = src;\r\n        /**\r\n         * @private\r\n         * @type {HTMLImageElement|HTMLCanvasElement}\r\n         */\r\n        _this.image_ = new Image();\r\n        if (crossOrigin !== null) {\r\n            _this.image_.crossOrigin = crossOrigin;\r\n        }\r\n        /**\r\n         * @private\r\n         * @type {Array<import(\"./events.js\").EventsKey>}\r\n         */\r\n        _this.imageListenerKeys_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./Tile.js\").LoadFunction}\r\n         */\r\n        _this.tileLoadFunction_ = tileLoadFunction;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ImageTile.prototype.disposeInternal = function () {\r\n        if (this.state == TileState.LOADING) {\r\n            this.unlistenImage_();\r\n            this.image_ = getBlankImage();\r\n        }\r\n        if (this.interimTile) {\r\n            this.interimTile.dispose();\r\n        }\r\n        this.state = TileState.ABORT;\r\n        this.changed();\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    /**\r\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\r\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\r\n     * @api\r\n     */\r\n    ImageTile.prototype.getImage = function () {\r\n        return this.image_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ImageTile.prototype.getKey = function () {\r\n        return this.src_;\r\n    };\r\n    /**\r\n     * Tracks loading or read errors.\r\n     *\r\n     * @private\r\n     */\r\n    ImageTile.prototype.handleImageError_ = function () {\r\n        this.state = TileState.ERROR;\r\n        this.unlistenImage_();\r\n        this.image_ = getBlankImage();\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Tracks successful image load.\r\n     *\r\n     * @private\r\n     */\r\n    ImageTile.prototype.handleImageLoad_ = function () {\r\n        var image = /** @type {HTMLImageElement} */ (this.image_);\r\n        if (image.naturalWidth && image.naturalHeight) {\r\n            this.state = TileState.LOADED;\r\n        }\r\n        else {\r\n            this.state = TileState.EMPTY;\r\n        }\r\n        this.unlistenImage_();\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    ImageTile.prototype.load = function () {\r\n        if (this.state == TileState.ERROR) {\r\n            this.state = TileState.IDLE;\r\n            this.image_ = new Image();\r\n            if (this.crossOrigin_ !== null) {\r\n                this.image_.crossOrigin = this.crossOrigin_;\r\n            }\r\n        }\r\n        if (this.state == TileState.IDLE) {\r\n            this.state = TileState.LOADING;\r\n            this.changed();\r\n            this.imageListenerKeys_ = [\r\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\r\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\r\n            ];\r\n            this.tileLoadFunction_(this, this.src_);\r\n        }\r\n    };\r\n    /**\r\n     * Discards event handlers which listen for load completion or errors.\r\n     *\r\n     * @private\r\n     */\r\n    ImageTile.prototype.unlistenImage_ = function () {\r\n        this.imageListenerKeys_.forEach(unlistenByKey);\r\n        this.imageListenerKeys_ = null;\r\n    };\r\n    return ImageTile;\r\n}(Tile));\r\n/**\r\n * Get a 1-pixel blank image.\r\n * @return {HTMLCanvasElement} Blank image.\r\n */\r\nfunction getBlankImage() {\r\n    var ctx = createCanvasContext2D(1, 1);\r\n    ctx.fillStyle = 'rgba(0,0,0,0)';\r\n    ctx.fillRect(0, 0, 1, 1);\r\n    return ctx.canvas;\r\n}\r\nexport default ImageTile;\r\n//# sourceMappingURL=ImageTile.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/TileCache\r\n */\r\nimport LRUCache from './structs/LRUCache.js';\r\nimport { fromKey, getKey } from './tilecoord.js';\r\nvar TileCache = /** @class */ (function (_super) {\r\n    __extends(TileCache, _super);\r\n    /**\r\n     * @param {number=} opt_highWaterMark High water mark.\r\n     */\r\n    function TileCache(opt_highWaterMark) {\r\n        return _super.call(this, opt_highWaterMark) || this;\r\n    }\r\n    /**\r\n     * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\r\n     */\r\n    TileCache.prototype.expireCache = function (usedTiles) {\r\n        while (this.canExpireCache()) {\r\n            var tile = this.peekLast();\r\n            if (tile.getKey() in usedTiles) {\r\n                break;\r\n            }\r\n            else {\r\n                this.pop().dispose();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\r\n     */\r\n    TileCache.prototype.pruneExceptNewestZ = function () {\r\n        if (this.getCount() === 0) {\r\n            return;\r\n        }\r\n        var key = this.peekFirstKey();\r\n        var tileCoord = fromKey(key);\r\n        var z = tileCoord[0];\r\n        this.forEach(function (tile) {\r\n            if (tile.tileCoord[0] !== z) {\r\n                this.remove(getKey(tile.tileCoord));\r\n                tile.dispose();\r\n            }\r\n        }, this);\r\n    };\r\n    return TileCache;\r\n}(LRUCache));\r\nexport default TileCache;\r\n//# sourceMappingURL=TileCache.js.map","/**\r\n * @module ol/reproj\r\n */\r\nimport { createCanvasContext2D } from './dom.js';\r\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\r\nimport { solveLinearSystem } from './math.js';\r\nimport { getPointResolution, transform } from './proj.js';\r\n/**\r\n * Calculates ideal resolution to use from the source in order to achieve\r\n * pixel mapping as close as possible to 1:1 during reprojection.\r\n * The resolution is calculated regardless of what resolutions\r\n * are actually available in the dataset (TileGrid, Image, ...).\r\n *\r\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\r\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\r\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\r\n * @param {number} targetResolution Target resolution.\r\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\r\n */\r\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\r\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\r\n    // calculate the ideal resolution of the source data\r\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\r\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\r\n    if (targetMetersPerUnit !== undefined) {\r\n        sourceResolution *= targetMetersPerUnit;\r\n    }\r\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\r\n    if (sourceMetersPerUnit !== undefined) {\r\n        sourceResolution /= sourceMetersPerUnit;\r\n    }\r\n    // Based on the projection properties, the point resolution at the specified\r\n    // coordinates may be slightly different. We need to reverse-compensate this\r\n    // in order to achieve optimal results.\r\n    var sourceExtent = sourceProj.getExtent();\r\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\r\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\r\n            sourceResolution;\r\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\r\n            sourceResolution /= compensationFactor;\r\n        }\r\n    }\r\n    return sourceResolution;\r\n}\r\n/**\r\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\r\n * in order to mask gaps caused by antialiasing.\r\n *\r\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\r\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\r\n * @param {number} x X coordinate of the point (in pixels).\r\n * @param {number} y Y coordinate of the point (in pixels).\r\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\r\n */\r\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\r\n    var dX = x - centroidX;\r\n    var dY = y - centroidY;\r\n    var distance = Math.sqrt(dX * dX + dY * dY);\r\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\r\n}\r\n/**\r\n * Renders the source data into new canvas based on the triangulation.\r\n *\r\n * @param {number} width Width of the canvas.\r\n * @param {number} height Height of the canvas.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @param {number} sourceResolution Source resolution.\r\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\r\n * @param {number} targetResolution Target resolution.\r\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\r\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\r\n * Calculated triangulation.\r\n * @param {Array<{extent: import(\"./extent.js\").Extent,\r\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\r\n * Array of sources.\r\n * @param {number} gutter Gutter of the sources.\r\n * @param {boolean=} opt_renderEdges Render reprojection edges.\r\n * @return {HTMLCanvasElement} Canvas with reprojected data.\r\n */\r\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\r\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\r\n    if (sources.length === 0) {\r\n        return context.canvas;\r\n    }\r\n    context.scale(pixelRatio, pixelRatio);\r\n    var sourceDataExtent = createEmpty();\r\n    sources.forEach(function (src, i, arr) {\r\n        extend(sourceDataExtent, src.extent);\r\n    });\r\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\r\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\r\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\r\n    var stitchScale = pixelRatio / sourceResolution;\r\n    sources.forEach(function (src, i, arr) {\r\n        var xPos = src.extent[0] - sourceDataExtent[0];\r\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\r\n        var srcWidth = getWidth(src.extent);\r\n        var srcHeight = getHeight(src.extent);\r\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\r\n    });\r\n    var targetTopLeft = getTopLeft(targetExtent);\r\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\r\n        /* Calculate affine transform (src -> dst)\r\n         * Resulting matrix can be used to transform coordinate\r\n         * from `sourceProjection` to destination pixels.\r\n         *\r\n         * To optimize number of context calls and increase numerical stability,\r\n         * we also do the following operations:\r\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\r\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\r\n         *\r\n         * Src points: xi, yi\r\n         * Dst points: ui, vi\r\n         * Affine coefficients: aij\r\n         *\r\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\r\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\r\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\r\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\r\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\r\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\r\n         */\r\n        var source = triangle.source;\r\n        var target = triangle.target;\r\n        var x0 = source[0][0], y0 = source[0][1];\r\n        var x1 = source[1][0], y1 = source[1][1];\r\n        var x2 = source[2][0], y2 = source[2][1];\r\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\r\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\r\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\r\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\r\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\r\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\r\n        // Shift all the source points to improve numerical stability\r\n        // of all the subsequent calculations. The [x0, y0] is used here.\r\n        // This is also used to simplify the linear system.\r\n        var sourceNumericalShiftX = x0;\r\n        var sourceNumericalShiftY = y0;\r\n        x0 = 0;\r\n        y0 = 0;\r\n        x1 -= sourceNumericalShiftX;\r\n        y1 -= sourceNumericalShiftY;\r\n        x2 -= sourceNumericalShiftX;\r\n        y2 -= sourceNumericalShiftY;\r\n        var augmentedMatrix = [\r\n            [x1, y1, 0, 0, u1 - u0],\r\n            [x2, y2, 0, 0, u2 - u0],\r\n            [0, 0, x1, y1, v1 - v0],\r\n            [0, 0, x2, y2, v2 - v0]\r\n        ];\r\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\r\n        if (!affineCoefs) {\r\n            return;\r\n        }\r\n        context.save();\r\n        context.beginPath();\r\n        var centroidX = (u0 + u1 + u2) / 3;\r\n        var centroidY = (v0 + v1 + v2) / 3;\r\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\r\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\r\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\r\n        context.moveTo(p1[0], p1[1]);\r\n        context.lineTo(p0[0], p0[1]);\r\n        context.lineTo(p2[0], p2[1]);\r\n        context.clip();\r\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\r\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\r\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\r\n        context.drawImage(stitchContext.canvas, 0, 0);\r\n        context.restore();\r\n    });\r\n    if (opt_renderEdges) {\r\n        context.save();\r\n        context.strokeStyle = 'black';\r\n        context.lineWidth = 1;\r\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\r\n            var target = triangle.target;\r\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\r\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\r\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\r\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\r\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\r\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\r\n            context.beginPath();\r\n            context.moveTo(u1, v1);\r\n            context.lineTo(u0, v0);\r\n            context.lineTo(u2, v2);\r\n            context.closePath();\r\n            context.stroke();\r\n        });\r\n        context.restore();\r\n    }\r\n    return context.canvas;\r\n}\r\n//# sourceMappingURL=reproj.js.map","/**\r\n * @module ol/reproj/Triangulation\r\n */\r\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\r\nimport { modulo } from '../math.js';\r\nimport { getTransform } from '../proj.js';\r\n/**\r\n * Single triangle; consists of 3 source points and 3 target points.\r\n * @typedef {Object} Triangle\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\r\n */\r\n/**\r\n * Maximum number of subdivision steps during raster reprojection triangulation.\r\n * Prevents high memory usage and large number of proj4 calls (for certain\r\n * transformations and areas). At most `2*(2^this)` triangles are created for\r\n * each triangulated extent (tile/image).\r\n * @type {number}\r\n */\r\nvar MAX_SUBDIVISION = 10;\r\n/**\r\n * Maximum allowed size of triangle relative to world width. When transforming\r\n * corners of world extent between certain projections, the resulting\r\n * triangulation seems to have zero error and no subdivision is performed. If\r\n * the triangle width is more than this (relative to world width; 0-1),\r\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\r\n * @type {number}\r\n */\r\nvar MAX_TRIANGLE_WIDTH = 0.25;\r\n/**\r\n * @classdesc\r\n * Class containing triangulation of the given target extent.\r\n * Used for determining source data and the reprojection itself.\r\n */\r\nvar Triangulation = /** @class */ (function () {\r\n    /**\r\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\r\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\r\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\r\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\r\n     * @param {number} errorThreshold Acceptable error (in source units).\r\n     */\r\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\r\n        /**\r\n         * @type {import(\"../proj/Projection.js\").default}\r\n         * @private\r\n         */\r\n        this.sourceProj_ = sourceProj;\r\n        /**\r\n         * @type {import(\"../proj/Projection.js\").default}\r\n         * @private\r\n         */\r\n        this.targetProj_ = targetProj;\r\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\r\n        var transformInvCache = {};\r\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\r\n        /**\r\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\r\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\r\n         * @private\r\n         */\r\n        this.transformInv_ = function (c) {\r\n            var key = c[0] + '/' + c[1];\r\n            if (!transformInvCache[key]) {\r\n                transformInvCache[key] = transformInv(c);\r\n            }\r\n            return transformInvCache[key];\r\n        };\r\n        /**\r\n         * @type {import(\"../extent.js\").Extent}\r\n         * @private\r\n         */\r\n        this.maxSourceExtent_ = maxSourceExtent;\r\n        /**\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\r\n        /**\r\n         * @type {Array<Triangle>}\r\n         * @private\r\n         */\r\n        this.triangles_ = [];\r\n        /**\r\n         * Indicates that the triangulation crosses edge of the source projection.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this.wrapsXInSource_ = false;\r\n        /**\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\r\n            !!maxSourceExtent &&\r\n            !!this.sourceProj_.getExtent() &&\r\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\r\n        /**\r\n         * @type {?number}\r\n         * @private\r\n         */\r\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\r\n            getWidth(this.sourceProj_.getExtent()) : null;\r\n        /**\r\n         * @type {?number}\r\n         * @private\r\n         */\r\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\r\n            getWidth(this.targetProj_.getExtent()) : null;\r\n        var destinationTopLeft = getTopLeft(targetExtent);\r\n        var destinationTopRight = getTopRight(targetExtent);\r\n        var destinationBottomRight = getBottomRight(targetExtent);\r\n        var destinationBottomLeft = getBottomLeft(targetExtent);\r\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\r\n        var sourceTopRight = this.transformInv_(destinationTopRight);\r\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\r\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\r\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\r\n        if (this.wrapsXInSource_) {\r\n            var leftBound_1 = Infinity;\r\n            this.triangles_.forEach(function (triangle, i, arr) {\r\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\r\n            });\r\n            // Shift triangles to be as close to `leftBound` as possible\r\n            // (if the distance is more than `worldWidth / 2` it can be closer.\r\n            this.triangles_.forEach(function (triangle) {\r\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\r\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\r\n                        [triangle.source[1][0], triangle.source[1][1]],\r\n                        [triangle.source[2][0], triangle.source[2][1]]];\r\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\r\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\r\n                    }\r\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\r\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\r\n                    }\r\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\r\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\r\n                    }\r\n                    // Rarely (if the extent contains both the dateline and prime meridian)\r\n                    // the shift can in turn break some triangles.\r\n                    // Detect this here and don't shift in such cases.\r\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\r\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\r\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\r\n                        triangle.source = newTriangle;\r\n                    }\r\n                }\r\n            }.bind(this));\r\n        }\r\n        transformInvCache = {};\r\n    }\r\n    /**\r\n     * Adds triangle to the triangulation.\r\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\r\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\r\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\r\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\r\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\r\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\r\n     * @private\r\n     */\r\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\r\n        this.triangles_.push({\r\n            source: [aSrc, bSrc, cSrc],\r\n            target: [a, b, c]\r\n        });\r\n    };\r\n    /**\r\n     * Adds quad (points in clock-wise order) to the triangulation\r\n     * (and reprojects the vertices) if valid.\r\n     * Performs quad subdivision if needed to increase precision.\r\n     *\r\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\r\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\r\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\r\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\r\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\r\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\r\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\r\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\r\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\r\n     * @private\r\n     */\r\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\r\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\r\n        var sourceCoverageX = this.sourceWorldWidth_ ?\r\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\r\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\r\n        // when the quad is wrapped in the source projection\r\n        // it covers most of the projection extent, but not fully\r\n        var wrapsX = this.sourceProj_.canWrapX() &&\r\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\r\n        var needsSubdivision = false;\r\n        if (maxSubdivision > 0) {\r\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\r\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\r\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\r\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\r\n                    needsSubdivision;\r\n            }\r\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\r\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\r\n                    needsSubdivision;\r\n            }\r\n        }\r\n        if (!needsSubdivision && this.maxSourceExtent_) {\r\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\r\n                // whole quad outside source projection extent -> ignore\r\n                return;\r\n            }\r\n        }\r\n        if (!needsSubdivision) {\r\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\r\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\r\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\r\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\r\n                if (maxSubdivision > 0) {\r\n                    needsSubdivision = true;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if (maxSubdivision > 0) {\r\n            if (!needsSubdivision) {\r\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\r\n                var centerSrc = this.transformInv_(center);\r\n                var dx = void 0;\r\n                if (wrapsX) {\r\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\r\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\r\n                    dx = centerSrcEstimX -\r\n                        modulo(centerSrc[0], sourceWorldWidth);\r\n                }\r\n                else {\r\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\r\n                }\r\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\r\n                var centerSrcErrorSquared = dx * dx + dy * dy;\r\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\r\n            }\r\n            if (needsSubdivision) {\r\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\r\n                    // split horizontally (top & bottom)\r\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\r\n                    var bcSrc = this.transformInv_(bc);\r\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\r\n                    var daSrc = this.transformInv_(da);\r\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\r\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\r\n                }\r\n                else {\r\n                    // split vertically (left & right)\r\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\r\n                    var abSrc = this.transformInv_(ab);\r\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\r\n                    var cdSrc = this.transformInv_(cd);\r\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\r\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        if (wrapsX) {\r\n            if (!this.canWrapXInSource_) {\r\n                return;\r\n            }\r\n            this.wrapsXInSource_ = true;\r\n        }\r\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\r\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\r\n    };\r\n    /**\r\n     * Calculates extent of the 'source' coordinates from all the triangles.\r\n     *\r\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\r\n     */\r\n    Triangulation.prototype.calculateSourceExtent = function () {\r\n        var extent = createEmpty();\r\n        this.triangles_.forEach(function (triangle, i, arr) {\r\n            var src = triangle.source;\r\n            extendCoordinate(extent, src[0]);\r\n            extendCoordinate(extent, src[1]);\r\n            extendCoordinate(extent, src[2]);\r\n        });\r\n        return extent;\r\n    };\r\n    /**\r\n     * @return {Array<Triangle>} Array of the calculated triangles.\r\n     */\r\n    Triangulation.prototype.getTriangles = function () {\r\n        return this.triangles_;\r\n    };\r\n    return Triangulation;\r\n}());\r\nexport default Triangulation;\r\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/reproj/Tile\r\n */\r\nimport { ERROR_THRESHOLD } from './common.js';\r\nimport Tile from '../Tile.js';\r\nimport TileState from '../TileState.js';\r\nimport { listen, unlistenByKey } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { getArea, getCenter, getIntersection } from '../extent.js';\r\nimport { clamp } from '../math.js';\r\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\r\nimport Triangulation from './Triangulation.js';\r\n/**\r\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\r\n */\r\n/**\r\n * @classdesc\r\n * Class encapsulating single reprojected tile.\r\n * See {@link module:ol/source/TileImage~TileImage}.\r\n *\r\n */\r\nvar ReprojTile = /** @class */ (function (_super) {\r\n    __extends(ReprojTile, _super);\r\n    /**\r\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\r\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\r\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\r\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\r\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\r\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {number} gutter Gutter of the source tiles.\r\n     * @param {FunctionType} getTileFunction\r\n     *     Function returning source tiles (z, x, y, pixelRatio).\r\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\r\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\r\n     */\r\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\r\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.pixelRatio_ = pixelRatio;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.gutter_ = gutter;\r\n        /**\r\n         * @private\r\n         * @type {HTMLCanvasElement}\r\n         */\r\n        _this.canvas_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n         */\r\n        _this.sourceTileGrid_ = sourceTileGrid;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n         */\r\n        _this.targetTileGrid_ = targetTileGrid;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../tilecoord.js\").TileCoord}\r\n         */\r\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\r\n        /**\r\n         * @private\r\n         * @type {!Array<import(\"../Tile.js\").default>}\r\n         */\r\n        _this.sourceTiles_ = [];\r\n        /**\r\n         * @private\r\n         * @type {Array<import(\"../events.js\").EventsKey>}\r\n         */\r\n        _this.sourcesListenerKeys_ = null;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.sourceZ_ = 0;\r\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\r\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\r\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\r\n        var limitedTargetExtent = maxTargetExtent ?\r\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\r\n        if (getArea(limitedTargetExtent) === 0) {\r\n            // Tile is completely outside range -> EMPTY\r\n            // TODO: is it actually correct that the source even creates the tile ?\r\n            _this.state = TileState.EMPTY;\r\n            return _this;\r\n        }\r\n        var sourceProjExtent = sourceProj.getExtent();\r\n        if (sourceProjExtent) {\r\n            if (!maxSourceExtent) {\r\n                maxSourceExtent = sourceProjExtent;\r\n            }\r\n            else {\r\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\r\n            }\r\n        }\r\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\r\n        var targetCenter = getCenter(limitedTargetExtent);\r\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\r\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\r\n            // invalid sourceResolution -> EMPTY\r\n            // probably edges of the projections when no extent is defined\r\n            _this.state = TileState.EMPTY;\r\n            return _this;\r\n        }\r\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\r\n            opt_errorThreshold : ERROR_THRESHOLD;\r\n        /**\r\n         * @private\r\n         * @type {!import(\"./Triangulation.js\").default}\r\n         */\r\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\r\n        if (_this.triangulation_.getTriangles().length === 0) {\r\n            // no valid triangles -> EMPTY\r\n            _this.state = TileState.EMPTY;\r\n            return _this;\r\n        }\r\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\r\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\r\n        if (maxSourceExtent) {\r\n            if (sourceProj.canWrapX()) {\r\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\r\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\r\n            }\r\n            else {\r\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\r\n            }\r\n        }\r\n        if (!getArea(sourceExtent)) {\r\n            _this.state = TileState.EMPTY;\r\n        }\r\n        else {\r\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\r\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\r\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\r\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\r\n                    if (tile) {\r\n                        _this.sourceTiles_.push(tile);\r\n                    }\r\n                }\r\n            }\r\n            if (_this.sourceTiles_.length === 0) {\r\n                _this.state = TileState.EMPTY;\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ReprojTile.prototype.disposeInternal = function () {\r\n        if (this.state == TileState.LOADING) {\r\n            this.unlistenSources_();\r\n        }\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    /**\r\n     * Get the HTML Canvas element for this tile.\r\n     * @return {HTMLCanvasElement} Canvas.\r\n     */\r\n    ReprojTile.prototype.getImage = function () {\r\n        return this.canvas_;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    ReprojTile.prototype.reproject_ = function () {\r\n        var sources = [];\r\n        this.sourceTiles_.forEach(function (tile, i, arr) {\r\n            if (tile && tile.getState() == TileState.LOADED) {\r\n                sources.push({\r\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\r\n                    image: tile.getImage()\r\n                });\r\n            }\r\n        }.bind(this));\r\n        this.sourceTiles_.length = 0;\r\n        if (sources.length === 0) {\r\n            this.state = TileState.ERROR;\r\n        }\r\n        else {\r\n            var z = this.wrappedTileCoord_[0];\r\n            var size = this.targetTileGrid_.getTileSize(z);\r\n            var width = typeof size === 'number' ? size : size[0];\r\n            var height = typeof size === 'number' ? size : size[1];\r\n            var targetResolution = this.targetTileGrid_.getResolution(z);\r\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\r\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\r\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\r\n            this.state = TileState.LOADED;\r\n        }\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ReprojTile.prototype.load = function () {\r\n        if (this.state == TileState.IDLE) {\r\n            this.state = TileState.LOADING;\r\n            this.changed();\r\n            var leftToLoad_1 = 0;\r\n            this.sourcesListenerKeys_ = [];\r\n            this.sourceTiles_.forEach(function (tile, i, arr) {\r\n                var state = tile.getState();\r\n                if (state == TileState.IDLE || state == TileState.LOADING) {\r\n                    leftToLoad_1++;\r\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\r\n                        var state = tile.getState();\r\n                        if (state == TileState.LOADED ||\r\n                            state == TileState.ERROR ||\r\n                            state == TileState.EMPTY) {\r\n                            unlistenByKey(sourceListenKey_1);\r\n                            leftToLoad_1--;\r\n                            if (leftToLoad_1 === 0) {\r\n                                this.unlistenSources_();\r\n                                this.reproject_();\r\n                            }\r\n                        }\r\n                    }, this);\r\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\r\n                }\r\n            }.bind(this));\r\n            this.sourceTiles_.forEach(function (tile, i, arr) {\r\n                var state = tile.getState();\r\n                if (state == TileState.IDLE) {\r\n                    tile.load();\r\n                }\r\n            });\r\n            if (leftToLoad_1 === 0) {\r\n                setTimeout(this.reproject_.bind(this), 0);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    ReprojTile.prototype.unlistenSources_ = function () {\r\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\r\n        this.sourcesListenerKeys_ = null;\r\n    };\r\n    return ReprojTile;\r\n}(Tile));\r\nexport default ReprojTile;\r\n//# sourceMappingURL=Tile.js.map","/**\r\n * @module ol/tilegrid/TileGrid\r\n */\r\nimport { DEFAULT_TILE_SIZE } from './common.js';\r\nimport { assert } from '../asserts.js';\r\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\r\nimport { isSorted, linearFindNearest } from '../array.js';\r\nimport { createOrUpdate, getTopLeft } from '../extent.js';\r\nimport { clamp } from '../math.js';\r\nimport { toSize } from '../size.js';\r\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\r\n/**\r\n * @private\r\n * @type {import(\"../tilecoord.js\").TileCoord}\r\n */\r\nvar tmpTileCoord = [0, 0, 0];\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\r\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\r\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\r\n * @property {number} [minZoom=0] Minimum zoom.\r\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\r\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\r\n * specified, `extent` or `origins` must be provided.\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\r\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\r\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\r\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\r\n * `origin` must be provided.\r\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\r\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\r\n * array will have a length of `maxZoom + 1`.\r\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\r\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\r\n * Default is `[256, 256]`.\r\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\r\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\r\n * tile size.\r\n */\r\n/**\r\n * @classdesc\r\n * Base class for setting the grid pattern for sources accessing tiled-image\r\n * servers.\r\n * @api\r\n */\r\nvar TileGrid = /** @class */ (function () {\r\n    /**\r\n     * @param {Options} options Tile grid options.\r\n     */\r\n    function TileGrid(options) {\r\n        /**\r\n         * @protected\r\n         * @type {number}\r\n         */\r\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\r\n        /**\r\n         * @private\r\n         * @type {!Array<number>}\r\n         */\r\n        this.resolutions_ = options.resolutions;\r\n        assert(isSorted(this.resolutions_, function (a, b) {\r\n            return b - a;\r\n        }, true), 17); // `resolutions` must be sorted in descending order\r\n        // check if we've got a consistent zoom factor and origin\r\n        var zoomFactor;\r\n        if (!options.origins) {\r\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\r\n                if (!zoomFactor) {\r\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\r\n                }\r\n                else {\r\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\r\n                        zoomFactor = undefined;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        this.zoomFactor_ = zoomFactor;\r\n        /**\r\n         * @protected\r\n         * @type {number}\r\n         */\r\n        this.maxZoom = this.resolutions_.length - 1;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../coordinate.js\").Coordinate}\r\n         */\r\n        this.origin_ = options.origin !== undefined ? options.origin : null;\r\n        /**\r\n         * @private\r\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\r\n         */\r\n        this.origins_ = null;\r\n        if (options.origins !== undefined) {\r\n            this.origins_ = options.origins;\r\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\r\n        }\r\n        var extent = options.extent;\r\n        if (extent !== undefined &&\r\n            !this.origin_ && !this.origins_) {\r\n            this.origin_ = getTopLeft(extent);\r\n        }\r\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\r\n        /**\r\n         * @private\r\n         * @type {Array<number|import(\"../size.js\").Size>}\r\n         */\r\n        this.tileSizes_ = null;\r\n        if (options.tileSizes !== undefined) {\r\n            this.tileSizes_ = options.tileSizes;\r\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\r\n        }\r\n        /**\r\n         * @private\r\n         * @type {number|import(\"../size.js\").Size}\r\n         */\r\n        this.tileSize_ = options.tileSize !== undefined ?\r\n            options.tileSize :\r\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\r\n        assert((!this.tileSize_ && this.tileSizes_) ||\r\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\r\n        /**\r\n         * @private\r\n         * @type {import(\"../extent.js\").Extent}\r\n         */\r\n        this.extent_ = extent !== undefined ? extent : null;\r\n        /**\r\n         * @private\r\n         * @type {Array<import(\"../TileRange.js\").default>}\r\n         */\r\n        this.fullTileRanges_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../size.js\").Size}\r\n         */\r\n        this.tmpSize_ = [0, 0];\r\n        if (options.sizes !== undefined) {\r\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\r\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\r\n                return tileRange;\r\n            }, this);\r\n        }\r\n        else if (extent) {\r\n            this.calculateTileRanges_(extent);\r\n        }\r\n    }\r\n    /**\r\n     * Call a function with each tile coordinate for a given extent and zoom level.\r\n     *\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {number} zoom Integer zoom level.\r\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\r\n     * @api\r\n     */\r\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\r\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\r\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\r\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\r\n                callback([zoom, i, j]);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\r\n     * @param {T=} opt_this The object to use as `this` in `callback`.\r\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\r\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\r\n     * @return {boolean} Callback succeeded.\r\n     * @template T\r\n     */\r\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\r\n        var tileRange, x, y;\r\n        var tileCoordExtent = null;\r\n        var z = tileCoord[0] - 1;\r\n        if (this.zoomFactor_ === 2) {\r\n            x = tileCoord[1];\r\n            y = tileCoord[2];\r\n        }\r\n        else {\r\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\r\n        }\r\n        while (z >= this.minZoom) {\r\n            if (this.zoomFactor_ === 2) {\r\n                x = Math.floor(x / 2);\r\n                y = Math.floor(y / 2);\r\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\r\n            }\r\n            else {\r\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\r\n            }\r\n            if (callback.call(opt_this, z, tileRange)) {\r\n                return true;\r\n            }\r\n            --z;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Get the extent for this tile grid, if it was configured.\r\n     * @return {import(\"../extent.js\").Extent} Extent.\r\n     * @api\r\n     */\r\n    TileGrid.prototype.getExtent = function () {\r\n        return this.extent_;\r\n    };\r\n    /**\r\n     * Get the maximum zoom level for the grid.\r\n     * @return {number} Max zoom.\r\n     * @api\r\n     */\r\n    TileGrid.prototype.getMaxZoom = function () {\r\n        return this.maxZoom;\r\n    };\r\n    /**\r\n     * Get the minimum zoom level for the grid.\r\n     * @return {number} Min zoom.\r\n     * @api\r\n     */\r\n    TileGrid.prototype.getMinZoom = function () {\r\n        return this.minZoom;\r\n    };\r\n    /**\r\n     * Get the origin for the grid at the given zoom level.\r\n     * @param {number} z Integer zoom level.\r\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\r\n     * @api\r\n     */\r\n    TileGrid.prototype.getOrigin = function (z) {\r\n        if (this.origin_) {\r\n            return this.origin_;\r\n        }\r\n        else {\r\n            return this.origins_[z];\r\n        }\r\n    };\r\n    /**\r\n     * Get the resolution for the given zoom level.\r\n     * @param {number} z Integer zoom level.\r\n     * @return {number} Resolution.\r\n     * @api\r\n     */\r\n    TileGrid.prototype.getResolution = function (z) {\r\n        return this.resolutions_[z];\r\n    };\r\n    /**\r\n     * Get the list of resolutions for the tile grid.\r\n     * @return {Array<number>} Resolutions.\r\n     * @api\r\n     */\r\n    TileGrid.prototype.getResolutions = function () {\r\n        return this.resolutions_;\r\n    };\r\n    /**\r\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\r\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\r\n     * @return {import(\"../TileRange.js\").default} Tile range.\r\n     */\r\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\r\n        if (tileCoord[0] < this.maxZoom) {\r\n            if (this.zoomFactor_ === 2) {\r\n                var minX = tileCoord[1] * 2;\r\n                var minY = tileCoord[2] * 2;\r\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\r\n            }\r\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\r\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get the extent for a tile range.\r\n     * @param {number} z Integer zoom level.\r\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\r\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\r\n     * @return {import(\"../extent.js\").Extent} Extent.\r\n     */\r\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\r\n        var origin = this.getOrigin(z);\r\n        var resolution = this.getResolution(z);\r\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\r\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\r\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\r\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\r\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\r\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\r\n    };\r\n    /**\r\n     * Get a tile range for the given extent and integer zoom level.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {number} z Integer zoom level.\r\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\r\n     * @return {import(\"../TileRange.js\").default} Tile range.\r\n     */\r\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\r\n        var tileCoord = tmpTileCoord;\r\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\r\n        var minX = tileCoord[1];\r\n        var minY = tileCoord[2];\r\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\r\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\r\n    };\r\n    /**\r\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\r\n     */\r\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\r\n        var origin = this.getOrigin(tileCoord[0]);\r\n        var resolution = this.getResolution(tileCoord[0]);\r\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\r\n        return [\r\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\r\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\r\n        ];\r\n    };\r\n    /**\r\n     * Get the extent of a tile coordinate.\r\n     *\r\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\r\n     * @return {import(\"../extent.js\").Extent} Extent.\r\n     * @api\r\n     */\r\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\r\n        var origin = this.getOrigin(tileCoord[0]);\r\n        var resolution = this.getResolution(tileCoord[0]);\r\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\r\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\r\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\r\n        var maxX = minX + tileSize[0] * resolution;\r\n        var maxY = minY + tileSize[1] * resolution;\r\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\r\n    };\r\n    /**\r\n     * Get the tile coordinate for the given map coordinate and resolution.  This\r\n     * method considers that coordinates that intersect tile boundaries should be\r\n     * assigned the higher tile coordinate.\r\n     *\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @param {number} resolution Resolution.\r\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\r\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\r\n     * @api\r\n     */\r\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\r\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\r\n    };\r\n    /**\r\n     * Note that this method should not be called for resolutions that correspond\r\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\r\n     * @param {number} x X.\r\n     * @param {number} y Y.\r\n     * @param {number} resolution Resolution (for a non-integer zoom level).\r\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\r\n     *     intersections go to the higher tile coordinate, let edge intersections\r\n     *     go to the lower tile coordinate.\r\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\r\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\r\n     * @private\r\n     */\r\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\r\n        var z = this.getZForResolution(resolution);\r\n        var scale = resolution / this.getResolution(z);\r\n        var origin = this.getOrigin(z);\r\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\r\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\r\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\r\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\r\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\r\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\r\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\r\n        if (reverseIntersectionPolicy) {\r\n            tileCoordX = Math.ceil(tileCoordX) - 1;\r\n            tileCoordY = Math.ceil(tileCoordY) - 1;\r\n        }\r\n        else {\r\n            tileCoordX = Math.floor(tileCoordX);\r\n            tileCoordY = Math.floor(tileCoordY);\r\n        }\r\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\r\n    };\r\n    /**\r\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\r\n     * they should have separate implementations.  This method is for integer zoom\r\n     * levels.  The other method should only be called for resolutions corresponding\r\n     * to non-integer zoom levels.\r\n     * @param {number} x Map x coordinate.\r\n     * @param {number} y Map y coordinate.\r\n     * @param {number} z Integer zoom level.\r\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\r\n     *     intersections go to the higher tile coordinate, let edge intersections\r\n     *     go to the lower tile coordinate.\r\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\r\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\r\n     * @private\r\n     */\r\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\r\n        var origin = this.getOrigin(z);\r\n        var resolution = this.getResolution(z);\r\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\r\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\r\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\r\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\r\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\r\n        var tileCoordX = xFromOrigin / tileSize[0];\r\n        var tileCoordY = yFromOrigin / tileSize[1];\r\n        if (reverseIntersectionPolicy) {\r\n            tileCoordX = Math.ceil(tileCoordX) - 1;\r\n            tileCoordY = Math.ceil(tileCoordY) - 1;\r\n        }\r\n        else {\r\n            tileCoordX = Math.floor(tileCoordX);\r\n            tileCoordY = Math.floor(tileCoordY);\r\n        }\r\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\r\n    };\r\n    /**\r\n     * Get a tile coordinate given a map coordinate and zoom level.\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @param {number} z Zoom level.\r\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\r\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\r\n     * @api\r\n     */\r\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\r\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\r\n    };\r\n    /**\r\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @return {number} Tile resolution.\r\n     */\r\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\r\n        return this.resolutions_[tileCoord[0]];\r\n    };\r\n    /**\r\n     * Get the tile size for a zoom level. The type of the return value matches the\r\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\r\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\r\n     * @param {number} z Z.\r\n     * @return {number|import(\"../size.js\").Size} Tile size.\r\n     * @api\r\n     */\r\n    TileGrid.prototype.getTileSize = function (z) {\r\n        if (this.tileSize_) {\r\n            return this.tileSize_;\r\n        }\r\n        else {\r\n            return this.tileSizes_[z];\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} z Zoom level.\r\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\r\n     */\r\n    TileGrid.prototype.getFullTileRange = function (z) {\r\n        if (!this.fullTileRanges_) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.fullTileRanges_[z];\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} resolution Resolution.\r\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\r\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\r\n     *     higher resolution will be used. Default is 0.\r\n     * @return {number} Z.\r\n     * @api\r\n     */\r\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\r\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\r\n        return clamp(z, this.minZoom, this.maxZoom);\r\n    };\r\n    /**\r\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\r\n     * @private\r\n     */\r\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\r\n        var length = this.resolutions_.length;\r\n        var fullTileRanges = new Array(length);\r\n        for (var z = this.minZoom; z < length; ++z) {\r\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\r\n        }\r\n        this.fullTileRanges_ = fullTileRanges;\r\n    };\r\n    return TileGrid;\r\n}());\r\nexport default TileGrid;\r\n//# sourceMappingURL=TileGrid.js.map","/**\r\n * @module ol/tilegrid\r\n */\r\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\r\nimport { toSize } from './size.js';\r\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\r\nimport Corner from './extent/Corner.js';\r\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\r\nimport Units from './proj/Units.js';\r\nimport TileGrid from './tilegrid/TileGrid.js';\r\n/**\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @return {!TileGrid} Default tile grid for the\r\n * passed projection.\r\n */\r\nexport function getForProjection(projection) {\r\n    var tileGrid = projection.getDefaultTileGrid();\r\n    if (!tileGrid) {\r\n        tileGrid = createForProjection(projection);\r\n        projection.setDefaultTileGrid(tileGrid);\r\n    }\r\n    return tileGrid;\r\n}\r\n/**\r\n * @param {TileGrid} tileGrid Tile grid.\r\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\r\n */\r\nexport function wrapX(tileGrid, tileCoord, projection) {\r\n    var z = tileCoord[0];\r\n    var center = tileGrid.getTileCoordCenter(tileCoord);\r\n    var projectionExtent = extentFromProjection(projection);\r\n    if (!containsCoordinate(projectionExtent, center)) {\r\n        var worldWidth = getWidth(projectionExtent);\r\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\r\n        center[0] += worldWidth * worldsAway;\r\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\r\n    }\r\n    else {\r\n        return tileCoord;\r\n    }\r\n}\r\n/**\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number=} opt_maxZoom Maximum zoom level (default is\r\n *     DEFAULT_MAX_ZOOM).\r\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\r\n *     DEFAULT_TILE_SIZE).\r\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\r\n * @return {!TileGrid} TileGrid instance.\r\n */\r\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\r\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\r\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\r\n    return new TileGrid({\r\n        extent: extent,\r\n        origin: getCorner(extent, corner),\r\n        resolutions: resolutions,\r\n        tileSize: opt_tileSize\r\n    });\r\n}\r\n/**\r\n * @typedef {Object} XYZOptions\r\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\r\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\r\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\r\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\r\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\r\n * @property {number} [minZoom=0] Minimum zoom.\r\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\r\n */\r\n/**\r\n * Creates a tile grid with a standard XYZ tiling scheme.\r\n * @param {XYZOptions=} opt_options Tile grid options.\r\n * @return {!TileGrid} Tile grid instance.\r\n * @api\r\n */\r\nexport function createXYZ(opt_options) {\r\n    /** @type {XYZOptions} */\r\n    var xyzOptions = opt_options || {};\r\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\r\n    /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\r\n    var gridOptions = {\r\n        extent: extent,\r\n        minZoom: xyzOptions.minZoom,\r\n        tileSize: xyzOptions.tileSize,\r\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\r\n    };\r\n    return new TileGrid(gridOptions);\r\n}\r\n/**\r\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number=} opt_maxZoom Maximum zoom level (default is\r\n *     DEFAULT_MAX_ZOOM).\r\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\r\n *     DEFAULT_TILE_SIZE).\r\n * @return {!Array<number>} Resolutions array.\r\n */\r\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\r\n    var maxZoom = opt_maxZoom !== undefined ?\r\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\r\n    var height = getHeight(extent);\r\n    var width = getWidth(extent);\r\n    var tileSize = toSize(opt_tileSize !== undefined ?\r\n        opt_tileSize : DEFAULT_TILE_SIZE);\r\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\r\n    var length = maxZoom + 1;\r\n    var resolutions = new Array(length);\r\n    for (var z = 0; z < length; ++z) {\r\n        resolutions[z] = maxResolution / Math.pow(2, z);\r\n    }\r\n    return resolutions;\r\n}\r\n/**\r\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\r\n * @param {number=} opt_maxZoom Maximum zoom level (default is\r\n *     DEFAULT_MAX_ZOOM).\r\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\r\n *     DEFAULT_TILE_SIZE).\r\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\r\n * @return {!TileGrid} TileGrid instance.\r\n */\r\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\r\n    var extent = extentFromProjection(projection);\r\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\r\n}\r\n/**\r\n * Generate a tile grid extent from a projection.  If the projection has an\r\n * extent, it is used.  If not, a global extent is assumed.\r\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\r\n * @return {import(\"./extent.js\").Extent} Extent.\r\n */\r\nexport function extentFromProjection(projection) {\r\n    projection = getProjection(projection);\r\n    var extent = projection.getExtent();\r\n    if (!extent) {\r\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\r\n        extent = createOrUpdate(-half, -half, half, half);\r\n    }\r\n    return extent;\r\n}\r\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/source/Tile\r\n */\r\nimport { abstract } from '../util.js';\r\nimport TileCache from '../TileCache.js';\r\nimport TileState from '../TileState.js';\r\nimport Event from '../events/Event.js';\r\nimport { equivalent } from '../proj.js';\r\nimport { toSize, scale as scaleSize } from '../size.js';\r\nimport Source from './Source.js';\r\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\r\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {number} [cacheSize]\r\n * @property {boolean} [opaque]\r\n * @property {number} [tilePixelRatio]\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\r\n * @property {import(\"./State.js\").default} [state]\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\r\n * @property {boolean} [wrapX=true]\r\n * @property {number} [transition]\r\n * @property {string} [key]\r\n */\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for sources providing images divided into a tile grid.\r\n * @abstract\r\n * @api\r\n */\r\nvar TileSource = /** @class */ (function (_super) {\r\n    __extends(TileSource, _super);\r\n    /**\r\n     * @param {Options} options SourceTile source options.\r\n     */\r\n    function TileSource(options) {\r\n        var _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            attributionsCollapsible: options.attributionsCollapsible,\r\n            projection: options.projection,\r\n            state: options.state,\r\n            wrapX: options.wrapX\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\r\n            options.tilePixelRatio : 1;\r\n        /**\r\n         * @protected\r\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n         */\r\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\r\n        var cacheSize = options.cacheSize;\r\n        if (cacheSize === undefined) {\r\n            var tileSize = [256, 256];\r\n            var tileGrid = options.tileGrid;\r\n            if (tileGrid) {\r\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\r\n            }\r\n            var canUseScreen = 'screen ' in self;\r\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\r\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\r\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\r\n        }\r\n        /**\r\n         * @protected\r\n         * @type {import(\"../TileCache.js\").default}\r\n         */\r\n        _this.tileCache = new TileCache(cacheSize);\r\n        /**\r\n         * @protected\r\n         * @type {import(\"../size.js\").Size}\r\n         */\r\n        _this.tmpSize = [0, 0];\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.key_ = options.key || '';\r\n        /**\r\n         * @protected\r\n         * @type {import(\"../Tile.js\").Options}\r\n         */\r\n        _this.tileOptions = { transition: options.transition };\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {boolean} Can expire cache.\r\n     */\r\n    TileSource.prototype.canExpireCache = function () {\r\n        return this.tileCache.canExpireCache();\r\n    };\r\n    /**\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\r\n     */\r\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\r\n        var tileCache = this.getTileCacheForProjection(projection);\r\n        if (tileCache) {\r\n            tileCache.expireCache(usedTiles);\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @param {number} z Zoom level.\r\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\r\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\r\n     *     loaded tile.  If the callback returns `false`, the tile will not be\r\n     *     considered loaded.\r\n     * @return {boolean} The tile range is fully covered with loaded tiles.\r\n     */\r\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\r\n        var tileCache = this.getTileCacheForProjection(projection);\r\n        if (!tileCache) {\r\n            return false;\r\n        }\r\n        var covered = true;\r\n        var tile, tileCoordKey, loaded;\r\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\r\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\r\n                tileCoordKey = getKeyZXY(z, x, y);\r\n                loaded = false;\r\n                if (tileCache.containsKey(tileCoordKey)) {\r\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\r\n                    loaded = tile.getState() === TileState.LOADED;\r\n                    if (loaded) {\r\n                        loaded = (callback(tile) !== false);\r\n                    }\r\n                }\r\n                if (!loaded) {\r\n                    covered = false;\r\n                }\r\n            }\r\n        }\r\n        return covered;\r\n    };\r\n    /**\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @return {number} Gutter.\r\n     */\r\n    TileSource.prototype.getGutterForProjection = function (projection) {\r\n        return 0;\r\n    };\r\n    /**\r\n     * Return the key to be used for all tiles in the source.\r\n     * @return {string} The key for all tiles.\r\n     * @protected\r\n     */\r\n    TileSource.prototype.getKey = function () {\r\n        return this.key_;\r\n    };\r\n    /**\r\n     * Set the value to be used as the key for all tiles in the source.\r\n     * @param {string} key The key for tiles.\r\n     * @protected\r\n     */\r\n    TileSource.prototype.setKey = function (key) {\r\n        if (this.key_ !== key) {\r\n            this.key_ = key;\r\n            this.changed();\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @return {boolean} Opaque.\r\n     */\r\n    TileSource.prototype.getOpaque = function (projection) {\r\n        return this.opaque_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TileSource.prototype.getResolutions = function () {\r\n        return this.tileGrid.getResolutions();\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {number} z Tile coordinate z.\r\n     * @param {number} x Tile coordinate x.\r\n     * @param {number} y Tile coordinate y.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @return {!import(\"../Tile.js\").default} Tile.\r\n     */\r\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Return the tile grid of the tile source.\r\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\r\n     * @api\r\n     */\r\n    TileSource.prototype.getTileGrid = function () {\r\n        return this.tileGrid;\r\n    };\r\n    /**\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\r\n     */\r\n    TileSource.prototype.getTileGridForProjection = function (projection) {\r\n        if (!this.tileGrid) {\r\n            return getTileGridForProjection(projection);\r\n        }\r\n        else {\r\n            return this.tileGrid;\r\n        }\r\n    };\r\n    /**\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @return {import(\"../TileCache.js\").default} Tile cache.\r\n     * @protected\r\n     */\r\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\r\n        var thisProj = this.getProjection();\r\n        if (thisProj && !equivalent(thisProj, projection)) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.tileCache;\r\n        }\r\n    };\r\n    /**\r\n     * Get the tile pixel ratio for this source. Subclasses may override this\r\n     * method, which is meant to return a supported pixel ratio that matches the\r\n     * provided `pixelRatio` as close as possible.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @return {number} Tile pixel ratio.\r\n     */\r\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\r\n        return this.tilePixelRatio_;\r\n    };\r\n    /**\r\n     * @param {number} z Z.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @return {import(\"../size.js\").Size} Tile size.\r\n     */\r\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\r\n        var tileGrid = this.getTileGridForProjection(projection);\r\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\r\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\r\n        if (tilePixelRatio == 1) {\r\n            return tileSize;\r\n        }\r\n        else {\r\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\r\n     * is outside the resolution and extent range of the tile grid, `null` will be\r\n     * returned.\r\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\r\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\r\n     *     null if no tile URL should be created for the passed `tileCoord`.\r\n     */\r\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\r\n        var projection = opt_projection !== undefined ?\r\n            opt_projection : this.getProjection();\r\n        var tileGrid = this.getTileGridForProjection(projection);\r\n        if (this.getWrapX() && projection.isGlobal()) {\r\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\r\n        }\r\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TileSource.prototype.refresh = function () {\r\n        this.tileCache.clear();\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Marks a tile coord as being used, without triggering a load.\r\n     * @abstract\r\n     * @param {number} z Tile coordinate z.\r\n     * @param {number} x Tile coordinate x.\r\n     * @param {number} y Tile coordinate y.\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     */\r\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\r\n    return TileSource;\r\n}(Source));\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\r\n * type.\r\n */\r\nvar TileSourceEvent = /** @class */ (function (_super) {\r\n    __extends(TileSourceEvent, _super);\r\n    /**\r\n     * @param {string} type Type.\r\n     * @param {import(\"../Tile.js\").default} tile The tile.\r\n     */\r\n    function TileSourceEvent(type, tile) {\r\n        var _this = _super.call(this, type) || this;\r\n        /**\r\n         * The tile related to the event.\r\n         * @type {import(\"../Tile.js\").default}\r\n         * @api\r\n         */\r\n        _this.tile = tile;\r\n        return _this;\r\n    }\r\n    return TileSourceEvent;\r\n}(Event));\r\nexport { TileSourceEvent };\r\nexport default TileSource;\r\n//# sourceMappingURL=Tile.js.map","/**\r\n * @module ol/source/TileEventType\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n    /**\r\n     * Triggered when a tile starts loading.\r\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\r\n     * @api\r\n     */\r\n    TILELOADSTART: 'tileloadstart',\r\n    /**\r\n     * Triggered when a tile finishes loading, either when its data is loaded,\r\n     * or when loading was aborted because the tile is no longer needed.\r\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\r\n     * @api\r\n     */\r\n    TILELOADEND: 'tileloadend',\r\n    /**\r\n     * Triggered if tile loading results in an error.\r\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\r\n     * @api\r\n     */\r\n    TILELOADERROR: 'tileloaderror'\r\n};\r\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/source/UrlTile\r\n */\r\nimport { getUid } from '../util.js';\r\nimport TileState from '../TileState.js';\r\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\r\nimport TileSource, { TileSourceEvent } from './Tile.js';\r\nimport TileEventType from './TileEventType.js';\r\nimport { getKeyZXY } from '../tilecoord.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {number} [cacheSize]\r\n * @property {boolean} [opaque]\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\r\n * @property {import(\"./State.js\").default} [state]\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\r\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\r\n * @property {number} [tilePixelRatio]\r\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\r\n * @property {string} [url]\r\n * @property {Array<string>} [urls]\r\n * @property {boolean} [wrapX=true]\r\n * @property {number} [transition]\r\n * @property {string} [key]\r\n */\r\n/**\r\n * @classdesc\r\n * Base class for sources providing tiles divided into a tile grid over http.\r\n *\r\n * @fires import(\"./Tile.js\").TileSourceEvent\r\n */\r\nvar UrlTile = /** @class */ (function (_super) {\r\n    __extends(UrlTile, _super);\r\n    /**\r\n     * @param {Options} options Image tile options.\r\n     */\r\n    function UrlTile(options) {\r\n        var _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            cacheSize: options.cacheSize,\r\n            opaque: options.opaque,\r\n            projection: options.projection,\r\n            state: options.state,\r\n            tileGrid: options.tileGrid,\r\n            tilePixelRatio: options.tilePixelRatio,\r\n            wrapX: options.wrapX,\r\n            transition: options.transition,\r\n            key: options.key,\r\n            attributionsCollapsible: options.attributionsCollapsible\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\r\n        /**\r\n         * @protected\r\n         * @type {import(\"../Tile.js\").LoadFunction}\r\n         */\r\n        _this.tileLoadFunction = options.tileLoadFunction;\r\n        /**\r\n         * @protected\r\n         * @type {import(\"../Tile.js\").UrlFunction}\r\n         */\r\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\r\n        /**\r\n         * @protected\r\n         * @type {!Array<string>|null}\r\n         */\r\n        _this.urls = null;\r\n        if (options.urls) {\r\n            _this.setUrls(options.urls);\r\n        }\r\n        else if (options.url) {\r\n            _this.setUrl(options.url);\r\n        }\r\n        /**\r\n         * @private\r\n         * @type {!Object<string, boolean>}\r\n         */\r\n        _this.tileLoadingKeys_ = {};\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return the tile load function of the source.\r\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\r\n     * @api\r\n     */\r\n    UrlTile.prototype.getTileLoadFunction = function () {\r\n        return this.tileLoadFunction;\r\n    };\r\n    /**\r\n     * Return the tile URL function of the source.\r\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\r\n     * @api\r\n     */\r\n    UrlTile.prototype.getTileUrlFunction = function () {\r\n        return this.tileUrlFunction;\r\n    };\r\n    /**\r\n     * Return the URLs used for this source.\r\n     * When a tileUrlFunction is used instead of url or urls,\r\n     * null will be returned.\r\n     * @return {!Array<string>|null} URLs.\r\n     * @api\r\n     */\r\n    UrlTile.prototype.getUrls = function () {\r\n        return this.urls;\r\n    };\r\n    /**\r\n     * Handle tile change events.\r\n     * @param {import(\"../events/Event.js\").default} event Event.\r\n     * @protected\r\n     */\r\n    UrlTile.prototype.handleTileChange = function (event) {\r\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\r\n        var uid = getUid(tile);\r\n        var tileState = tile.getState();\r\n        var type;\r\n        if (tileState == TileState.LOADING) {\r\n            this.tileLoadingKeys_[uid] = true;\r\n            type = TileEventType.TILELOADSTART;\r\n        }\r\n        else if (uid in this.tileLoadingKeys_) {\r\n            delete this.tileLoadingKeys_[uid];\r\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\r\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\r\n                    TileEventType.TILELOADEND : undefined;\r\n        }\r\n        if (type != undefined) {\r\n            this.dispatchEvent(new TileSourceEvent(type, tile));\r\n        }\r\n    };\r\n    /**\r\n     * Set the tile load function of the source.\r\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\r\n     * @api\r\n     */\r\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\r\n        this.tileCache.clear();\r\n        this.tileLoadFunction = tileLoadFunction;\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Set the tile URL function of the source.\r\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\r\n     * @param {string=} key Optional new tile key for the source.\r\n     * @api\r\n     */\r\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\r\n        this.tileUrlFunction = tileUrlFunction;\r\n        this.tileCache.pruneExceptNewestZ();\r\n        if (typeof key !== 'undefined') {\r\n            this.setKey(key);\r\n        }\r\n        else {\r\n            this.changed();\r\n        }\r\n    };\r\n    /**\r\n     * Set the URL to use for requests.\r\n     * @param {string} url URL.\r\n     * @api\r\n     */\r\n    UrlTile.prototype.setUrl = function (url) {\r\n        var urls = this.urls = expandUrl(url);\r\n        this.setUrls(urls);\r\n    };\r\n    /**\r\n     * Set the URLs to use for requests.\r\n     * @param {Array<string>} urls URLs.\r\n     * @api\r\n     */\r\n    UrlTile.prototype.setUrls = function (urls) {\r\n        this.urls = urls;\r\n        var key = urls.join('\\n');\r\n        if (this.generateTileUrlFunction_) {\r\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\r\n        }\r\n        else {\r\n            this.setKey(key);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    UrlTile.prototype.useTile = function (z, x, y) {\r\n        var tileCoordKey = getKeyZXY(z, x, y);\r\n        if (this.tileCache.containsKey(tileCoordKey)) {\r\n            this.tileCache.get(tileCoordKey);\r\n        }\r\n    };\r\n    return UrlTile;\r\n}(TileSource));\r\nexport default UrlTile;\r\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/source/TileImage\r\n */\r\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\r\nimport { getUid } from '../util.js';\r\nimport ImageTile from '../ImageTile.js';\r\nimport TileCache from '../TileCache.js';\r\nimport TileState from '../TileState.js';\r\nimport { listen } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { equivalent, get as getProjection } from '../proj.js';\r\nimport ReprojTile from '../reproj/Tile.js';\r\nimport UrlTile from './UrlTile.js';\r\nimport { getKey, getKeyZXY } from '../tilecoord.js';\r\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [opaque=true] Whether the layer is opaque.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {import(\"./State.js\").default} [state] Source state.\r\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\r\n * Default is {@link module:ol/ImageTile~ImageTile}.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\r\n * service advertizes 256px by 256px tiles but actually sends 512px\r\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\r\n * should be set to `2`.\r\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\r\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\r\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\r\n * used instead of defining each one separately in the `urls` option.\r\n * @property {Array<string>} [urls] An array of URL templates.\r\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\r\n * request out-of-bounds tiles from the server. When set to `false`, only one\r\n * world will be rendered. When set to `true`, tiles will be requested for one\r\n * world only, but they will be wrapped horizontally to render multiple worlds.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n * @property {string} [key] Optional tile key for proper cache fetching\r\n */\r\n/**\r\n * @classdesc\r\n * Base class for sources providing images divided into a tile grid.\r\n *\r\n * @fires import(\"./Tile.js\").TileSourceEvent\r\n * @api\r\n */\r\nvar TileImage = /** @class */ (function (_super) {\r\n    __extends(TileImage, _super);\r\n    /**\r\n     * @param {!Options} options Image tile options.\r\n     */\r\n    function TileImage(options) {\r\n        var _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            cacheSize: options.cacheSize,\r\n            opaque: options.opaque,\r\n            projection: options.projection,\r\n            state: options.state,\r\n            tileGrid: options.tileGrid,\r\n            tileLoadFunction: options.tileLoadFunction ?\r\n                options.tileLoadFunction : defaultTileLoadFunction,\r\n            tilePixelRatio: options.tilePixelRatio,\r\n            tileUrlFunction: options.tileUrlFunction,\r\n            url: options.url,\r\n            urls: options.urls,\r\n            wrapX: options.wrapX,\r\n            transition: options.transition,\r\n            key: options.key,\r\n            attributionsCollapsible: options.attributionsCollapsible\r\n        }) || this;\r\n        /**\r\n         * @protected\r\n         * @type {?string}\r\n         */\r\n        _this.crossOrigin =\r\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\r\n        /**\r\n         * @protected\r\n         * @type {typeof ImageTile}\r\n         */\r\n        _this.tileClass = options.tileClass !== undefined ?\r\n            options.tileClass : ImageTile;\r\n        /**\r\n         * @protected\r\n         * @type {!Object<string, TileCache>}\r\n         */\r\n        _this.tileCacheForProjection = {};\r\n        /**\r\n         * @protected\r\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\r\n         */\r\n        _this.tileGridForProjection = {};\r\n        /**\r\n         * @private\r\n         * @type {number|undefined}\r\n         */\r\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.renderReprojectionEdges_ = false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TileImage.prototype.canExpireCache = function () {\r\n        if (!ENABLE_RASTER_REPROJECTION) {\r\n            return _super.prototype.canExpireCache.call(this);\r\n        }\r\n        if (this.tileCache.canExpireCache()) {\r\n            return true;\r\n        }\r\n        else {\r\n            for (var key in this.tileCacheForProjection) {\r\n                if (this.tileCacheForProjection[key].canExpireCache()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\r\n        if (!ENABLE_RASTER_REPROJECTION) {\r\n            _super.prototype.expireCache.call(this, projection, usedTiles);\r\n            return;\r\n        }\r\n        var usedTileCache = this.getTileCacheForProjection(projection);\r\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\r\n        for (var id in this.tileCacheForProjection) {\r\n            var tileCache = this.tileCacheForProjection[id];\r\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TileImage.prototype.getGutterForProjection = function (projection) {\r\n        if (ENABLE_RASTER_REPROJECTION &&\r\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return this.getGutter();\r\n        }\r\n    };\r\n    /**\r\n     * @return {number} Gutter.\r\n     */\r\n    TileImage.prototype.getGutter = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TileImage.prototype.getOpaque = function (projection) {\r\n        if (ENABLE_RASTER_REPROJECTION &&\r\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\r\n            return false;\r\n        }\r\n        else {\r\n            return _super.prototype.getOpaque.call(this, projection);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TileImage.prototype.getTileGridForProjection = function (projection) {\r\n        if (!ENABLE_RASTER_REPROJECTION) {\r\n            return _super.prototype.getTileGridForProjection.call(this, projection);\r\n        }\r\n        var thisProj = this.getProjection();\r\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\r\n            return this.tileGrid;\r\n        }\r\n        else {\r\n            var projKey = getUid(projection);\r\n            if (!(projKey in this.tileGridForProjection)) {\r\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\r\n            }\r\n            return (\r\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\r\n        if (!ENABLE_RASTER_REPROJECTION) {\r\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\r\n        }\r\n        var thisProj = this.getProjection();\r\n        if (!thisProj || equivalent(thisProj, projection)) {\r\n            return this.tileCache;\r\n        }\r\n        else {\r\n            var projKey = getUid(projection);\r\n            if (!(projKey in this.tileCacheForProjection)) {\r\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\r\n            }\r\n            return this.tileCacheForProjection[projKey];\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} z Tile coordinate z.\r\n     * @param {number} x Tile coordinate x.\r\n     * @param {number} y Tile coordinate y.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @param {string} key The key set on the tile.\r\n     * @return {!import(\"../Tile.js\").default} Tile.\r\n     * @private\r\n     */\r\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\r\n        var tileCoord = [z, x, y];\r\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\r\n        var tileUrl = urlTileCoord ?\r\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\r\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\r\n        tile.key = key;\r\n        listen(tile, EventType.CHANGE, this.handleTileChange, this);\r\n        return tile;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\r\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\r\n        if (!ENABLE_RASTER_REPROJECTION ||\r\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\r\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\r\n        }\r\n        else {\r\n            var cache = this.getTileCacheForProjection(projection);\r\n            var tileCoord = [z, x, y];\r\n            var tile = void 0;\r\n            var tileCoordKey = getKey(tileCoord);\r\n            if (cache.containsKey(tileCoordKey)) {\r\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\r\n            }\r\n            var key = this.getKey();\r\n            if (tile && tile.key == key) {\r\n                return tile;\r\n            }\r\n            else {\r\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\r\n                var targetTileGrid = this.getTileGridForProjection(projection);\r\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\r\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\r\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\r\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\r\n                newTile.key = key;\r\n                if (tile) {\r\n                    newTile.interimTile = tile;\r\n                    newTile.refreshInterimChain();\r\n                    cache.replace(tileCoordKey, newTile);\r\n                }\r\n                else {\r\n                    cache.set(tileCoordKey, newTile);\r\n                }\r\n                return newTile;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} z Tile coordinate z.\r\n     * @param {number} x Tile coordinate x.\r\n     * @param {number} y Tile coordinate y.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @return {!import(\"../Tile.js\").default} Tile.\r\n     * @protected\r\n     */\r\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\r\n        var tile = null;\r\n        var tileCoordKey = getKeyZXY(z, x, y);\r\n        var key = this.getKey();\r\n        if (!this.tileCache.containsKey(tileCoordKey)) {\r\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\r\n            this.tileCache.set(tileCoordKey, tile);\r\n        }\r\n        else {\r\n            tile = this.tileCache.get(tileCoordKey);\r\n            if (tile.key != key) {\r\n                // The source's params changed. If the tile has an interim tile and if we\r\n                // can use it then we use it. Otherwise we create a new tile.  In both\r\n                // cases we attempt to assign an interim tile to the new tile.\r\n                var interimTile = tile;\r\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\r\n                //make the new tile the head of the list,\r\n                if (interimTile.getState() == TileState.IDLE) {\r\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\r\n                    tile.interimTile = interimTile.interimTile;\r\n                }\r\n                else {\r\n                    tile.interimTile = interimTile;\r\n                }\r\n                tile.refreshInterimChain();\r\n                this.tileCache.replace(tileCoordKey, tile);\r\n            }\r\n        }\r\n        return tile;\r\n    };\r\n    /**\r\n     * Sets whether to render reprojection edges or not (usually for debugging).\r\n     * @param {boolean} render Render the edges.\r\n     * @api\r\n     */\r\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\r\n        if (!ENABLE_RASTER_REPROJECTION ||\r\n            this.renderReprojectionEdges_ == render) {\r\n            return;\r\n        }\r\n        this.renderReprojectionEdges_ = render;\r\n        for (var id in this.tileCacheForProjection) {\r\n            this.tileCacheForProjection[id].clear();\r\n        }\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Sets the tile grid to use when reprojecting the tiles to the given\r\n     * projection instead of the default tile grid for the projection.\r\n     *\r\n     * This can be useful when the default tile grid cannot be created\r\n     * (e.g. projection has no extent defined) or\r\n     * for optimization reasons (custom tile size, resolutions, ...).\r\n     *\r\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\r\n     * @api\r\n     */\r\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\r\n        if (ENABLE_RASTER_REPROJECTION) {\r\n            var proj = getProjection(projection);\r\n            if (proj) {\r\n                var projKey = getUid(proj);\r\n                if (!(projKey in this.tileGridForProjection)) {\r\n                    this.tileGridForProjection[projKey] = tilegrid;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return TileImage;\r\n}(UrlTile));\r\n/**\r\n * @param {ImageTile} imageTile Image tile.\r\n * @param {string} src Source.\r\n */\r\nfunction defaultTileLoadFunction(imageTile, src) {\r\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\r\n}\r\nexport default TileImage;\r\n//# sourceMappingURL=TileImage.js.map","/**\r\n * @module ol/source/BingMaps\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { createFromTileUrlFunctions } from '../tileurlfunction.js';\r\nimport { applyTransform, intersects } from '../extent.js';\r\nimport { jsonp as requestJSONP } from '../net.js';\r\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\r\nimport SourceState from './State.js';\r\nimport TileImage from './TileImage.js';\r\nimport { createOrUpdate } from '../tilecoord.js';\r\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\r\n/**\r\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\r\n * @return {string} Quad key.\r\n */\r\nexport function quadKey(tileCoord) {\r\n    var z = tileCoord[0];\r\n    var digits = new Array(z);\r\n    var mask = 1 << (z - 1);\r\n    var i, charCode;\r\n    for (i = 0; i < z; ++i) {\r\n        // 48 is charCode for 0 - '0'.charCodeAt(0)\r\n        charCode = 48;\r\n        if (tileCoord[1] & mask) {\r\n            charCode += 1;\r\n        }\r\n        if (tileCoord[2] & mask) {\r\n            charCode += 2;\r\n        }\r\n        digits[i] = String.fromCharCode(charCode);\r\n        mask >>= 1;\r\n    }\r\n    return digits.join('');\r\n}\r\n/**\r\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\r\n * Terms Of Use.\r\n * @const\r\n * @type {string}\r\n */\r\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\r\n    'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\r\n    'Terms of Use</a>';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\r\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\r\n * @property {string} [culture='en-us'] Culture code.\r\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\r\n * @property {string} imagerySet Type of imagery.\r\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n */\r\n/**\r\n * @typedef {Object} BingMapsImageryMetadataResponse\r\n * @property {number} statusCode The response status code\r\n * @property {string} statusDescription The response status description\r\n * @property {string} authenticationResultCode The authentication result code\r\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\r\n */\r\n/**\r\n * @typedef {Object} ResourceSet\r\n * @property {Array<Resource>} resources\r\n */\r\n/**\r\n * @typedef {Object} Resource\r\n * @property {number} imageHeight The image height\r\n * @property {number} imageWidth The image width\r\n * @property {number} zoomMin The minimum zoom level\r\n * @property {number} zoomMax The maximum zoom level\r\n * @property {string} imageUrl The image URL\r\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\r\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\r\n */\r\n/**\r\n * @typedef {Object} ImageryProvider\r\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\r\n * @property {string} [attribution] The attribution\r\n */\r\n/**\r\n * @typedef {Object} CoverageArea\r\n * @property {number} zoomMin The minimum zoom\r\n * @property {number} zoomMax The maximum zoom\r\n * @property {Array<number>} bbox The coverage bounding box\r\n */\r\n/**\r\n * @classdesc\r\n * Layer source for Bing Maps tile data.\r\n * @api\r\n */\r\nvar BingMaps = /** @class */ (function (_super) {\r\n    __extends(BingMaps, _super);\r\n    /**\r\n     * @param {Options} options Bing Maps options.\r\n     */\r\n    function BingMaps(options) {\r\n        var _this = this;\r\n        var hidpi = options.hidpi !== undefined ? options.hidpi : false;\r\n        _this = _super.call(this, {\r\n            cacheSize: options.cacheSize,\r\n            crossOrigin: 'anonymous',\r\n            opaque: true,\r\n            projection: getProjection('EPSG:3857'),\r\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n            state: SourceState.LOADING,\r\n            tileLoadFunction: options.tileLoadFunction,\r\n            tilePixelRatio: hidpi ? 2 : 1,\r\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\r\n            transition: options.transition\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.hidpi_ = hidpi;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.apiKey_ = options.key;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.imagerySet_ = options.imagerySet;\r\n        var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\r\n            _this.imagerySet_ +\r\n            '?uriScheme=https&include=ImageryProviders&key=' + _this.apiKey_ +\r\n            '&c=' + _this.culture_;\r\n        requestJSONP(url, _this.handleImageryMetadataResponse.bind(_this), undefined, 'jsonp');\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get the api key used for this source.\r\n     *\r\n     * @return {string} The api key.\r\n     * @api\r\n     */\r\n    BingMaps.prototype.getApiKey = function () {\r\n        return this.apiKey_;\r\n    };\r\n    /**\r\n     * Get the imagery set associated with this source.\r\n     *\r\n     * @return {string} The imagery set.\r\n     * @api\r\n     */\r\n    BingMaps.prototype.getImagerySet = function () {\r\n        return this.imagerySet_;\r\n    };\r\n    /**\r\n     * @param {BingMapsImageryMetadataResponse} response Response.\r\n     */\r\n    BingMaps.prototype.handleImageryMetadataResponse = function (response) {\r\n        if (response.statusCode != 200 ||\r\n            response.statusDescription != 'OK' ||\r\n            response.authenticationResultCode != 'ValidCredentials' ||\r\n            response.resourceSets.length != 1 ||\r\n            response.resourceSets[0].resources.length != 1) {\r\n            this.setState(SourceState.ERROR);\r\n            return;\r\n        }\r\n        var resource = response.resourceSets[0].resources[0];\r\n        var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\r\n        var sourceProjection = this.getProjection();\r\n        var extent = extentFromProjection(sourceProjection);\r\n        var scale = this.hidpi_ ? 2 : 1;\r\n        var tileSize = resource.imageWidth == resource.imageHeight ?\r\n            resource.imageWidth / scale :\r\n            [resource.imageWidth / scale, resource.imageHeight / scale];\r\n        var tileGrid = createXYZ({\r\n            extent: extent,\r\n            minZoom: resource.zoomMin,\r\n            maxZoom: maxZoom,\r\n            tileSize: tileSize\r\n        });\r\n        this.tileGrid = tileGrid;\r\n        var culture = this.culture_;\r\n        var hidpi = this.hidpi_;\r\n        this.tileUrlFunction = createFromTileUrlFunctions(resource.imageUrlSubdomains.map(function (subdomain) {\r\n            /** @type {import('../tilecoord.js').TileCoord} */\r\n            var quadKeyTileCoord = [0, 0, 0];\r\n            var imageUrl = resource.imageUrl\r\n                .replace('{subdomain}', subdomain)\r\n                .replace('{culture}', culture);\r\n            return (\r\n            /**\r\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n             * @param {number} pixelRatio Pixel ratio.\r\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n             * @return {string|undefined} Tile URL.\r\n             */\r\n            function (tileCoord, pixelRatio, projection) {\r\n                if (!tileCoord) {\r\n                    return undefined;\r\n                }\r\n                else {\r\n                    createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\r\n                    var url = imageUrl;\r\n                    if (hidpi) {\r\n                        url += '&dpi=d1&device=mobile';\r\n                    }\r\n                    return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\r\n                }\r\n            });\r\n        }));\r\n        if (resource.imageryProviders) {\r\n            var transform_1 = getTransformFromProjections(getProjection('EPSG:4326'), this.getProjection());\r\n            this.setAttributions(function (frameState) {\r\n                var attributions = [];\r\n                var viewState = frameState.viewState;\r\n                var tileGrid = this.getTileGrid();\r\n                var tileCoord = tileGrid.getTileCoordForCoordAndResolution(viewState.center, viewState.resolution);\r\n                var zoom = tileCoord[0];\r\n                resource.imageryProviders.map(function (imageryProvider) {\r\n                    var intersecting = false;\r\n                    var coverageAreas = imageryProvider.coverageAreas;\r\n                    for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\r\n                        var coverageArea = coverageAreas[i];\r\n                        if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\r\n                            var bbox = coverageArea.bbox;\r\n                            var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\r\n                            var extent_1 = applyTransform(epsg4326Extent, transform_1);\r\n                            if (intersects(extent_1, frameState.extent)) {\r\n                                intersecting = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (intersecting) {\r\n                        attributions.push(imageryProvider.attribution);\r\n                    }\r\n                });\r\n                attributions.push(TOS_ATTRIBUTION);\r\n                return attributions;\r\n            }.bind(this));\r\n        }\r\n        this.setState(SourceState.READY);\r\n    };\r\n    return BingMaps;\r\n}(TileImage));\r\nexport default BingMaps;\r\n//# sourceMappingURL=BingMaps.js.map","/**\r\n * @module ol/source/XYZ\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport TileImage from './TileImage.js';\r\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [opaque=true] Whether the layer is opaque.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {number} [maxZoom=18] Optional max zoom level.\r\n * @property {number} [minZoom=0] Optional min zoom level.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\r\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\r\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\r\n * should be set to `2`.\r\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\r\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\r\n * tile URL given a tile coordinate and the projection.\r\n * Required if url or urls are not provided.\r\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\r\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\r\n * may be used instead of defining each one separately in the `urls` option.\r\n * @property {Array<string>} [urls] An array of URL templates.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n */\r\n/**\r\n * @classdesc\r\n * Layer source for tile data with URLs in a set XYZ format that are\r\n * defined in a URL template. By default, this follows the widely-used\r\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\r\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\r\n * using the `{-y}` placeholder in the URL template, so long as the\r\n * source does not have a custom tile grid. In this case,\r\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\r\n * such as:\r\n *\r\n *  tileUrlFunction: function(coordinate) {\r\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\r\n *        coordinate[1] + '/' + coordinate[2] + '.png';\r\n *    }\r\n *\r\n * @api\r\n */\r\nvar XYZ = /** @class */ (function (_super) {\r\n    __extends(XYZ, _super);\r\n    /**\r\n     * @param {Options=} opt_options XYZ options.\r\n     */\r\n    function XYZ(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options || {};\r\n        var projection = options.projection !== undefined ?\r\n            options.projection : 'EPSG:3857';\r\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\r\n            createXYZ({\r\n                extent: extentFromProjection(projection),\r\n                maxZoom: options.maxZoom,\r\n                minZoom: options.minZoom,\r\n                tileSize: options.tileSize\r\n            });\r\n        _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            cacheSize: options.cacheSize,\r\n            crossOrigin: options.crossOrigin,\r\n            opaque: options.opaque,\r\n            projection: projection,\r\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n            tileGrid: tileGrid,\r\n            tileLoadFunction: options.tileLoadFunction,\r\n            tilePixelRatio: options.tilePixelRatio,\r\n            tileUrlFunction: options.tileUrlFunction,\r\n            url: options.url,\r\n            urls: options.urls,\r\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\r\n            transition: options.transition,\r\n            attributionsCollapsible: options.attributionsCollapsible\r\n        }) || this;\r\n        return _this;\r\n    }\r\n    return XYZ;\r\n}(TileImage));\r\nexport default XYZ;\r\n//# sourceMappingURL=XYZ.js.map","/**\r\n * @module ol/source/CartoDB\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { assign } from '../obj.js';\r\nimport SourceState from './State.js';\r\nimport XYZ from './XYZ.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\r\n * @property {number} [maxZoom=18] Max zoom.\r\n * @property {number} [minZoom] Minimum zoom.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\r\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\r\n * for more detail.\r\n * If using named maps, a key-value lookup with the template parameters.\r\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\r\n * for more detail.\r\n * @property {string} [map] If using named maps, this will be the name of the template to load.\r\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\r\n * for more detail.\r\n * @property {string} account If using named maps, this will be the name of the template to load.\r\n */\r\n/**\r\n * @typedef {Object} CartoDBLayerInfo\r\n * @property {string} layergroupid The layer group ID\r\n * @property {{https: string}} cdn_url The CDN URL\r\n */\r\n/**\r\n * @classdesc\r\n * Layer source for the CartoDB Maps API.\r\n * @api\r\n */\r\nvar CartoDB = /** @class */ (function (_super) {\r\n    __extends(CartoDB, _super);\r\n    /**\r\n     * @param {Options} options CartoDB options.\r\n     */\r\n    function CartoDB(options) {\r\n        var _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            cacheSize: options.cacheSize,\r\n            crossOrigin: options.crossOrigin,\r\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\r\n            minZoom: options.minZoom,\r\n            projection: options.projection,\r\n            wrapX: options.wrapX\r\n        }) || this;\r\n        /**\r\n         * @type {string}\r\n         * @private\r\n         */\r\n        _this.account_ = options.account;\r\n        /**\r\n         * @type {string}\r\n         * @private\r\n         */\r\n        _this.mapId_ = options.map || '';\r\n        /**\r\n         * @type {!Object}\r\n         * @private\r\n         */\r\n        _this.config_ = options.config || {};\r\n        /**\r\n         * @type {!Object<string, CartoDBLayerInfo>}\r\n         * @private\r\n         */\r\n        _this.templateCache_ = {};\r\n        _this.initializeMap_();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns the current config.\r\n     * @return {!Object} The current configuration.\r\n     * @api\r\n     */\r\n    CartoDB.prototype.getConfig = function () {\r\n        return this.config_;\r\n    };\r\n    /**\r\n     * Updates the carto db config.\r\n     * @param {Object} config a key-value lookup. Values will replace current values\r\n     *     in the config.\r\n     * @api\r\n     */\r\n    CartoDB.prototype.updateConfig = function (config) {\r\n        assign(this.config_, config);\r\n        this.initializeMap_();\r\n    };\r\n    /**\r\n     * Sets the CartoDB config\r\n     * @param {Object} config In the case of anonymous maps, a CartoDB configuration\r\n     *     object.\r\n     * If using named maps, a key-value lookup with the template parameters.\r\n     * @api\r\n     */\r\n    CartoDB.prototype.setConfig = function (config) {\r\n        this.config_ = config || {};\r\n        this.initializeMap_();\r\n    };\r\n    /**\r\n     * Issue a request to initialize the CartoDB map.\r\n     * @private\r\n     */\r\n    CartoDB.prototype.initializeMap_ = function () {\r\n        var paramHash = JSON.stringify(this.config_);\r\n        if (this.templateCache_[paramHash]) {\r\n            this.applyTemplate_(this.templateCache_[paramHash]);\r\n            return;\r\n        }\r\n        var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\r\n        if (this.mapId_) {\r\n            mapUrl += '/named/' + this.mapId_;\r\n        }\r\n        var client = new XMLHttpRequest();\r\n        client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\r\n        client.addEventListener('error', this.handleInitError_.bind(this));\r\n        client.open('POST', mapUrl);\r\n        client.setRequestHeader('Content-type', 'application/json');\r\n        client.send(JSON.stringify(this.config_));\r\n    };\r\n    /**\r\n     * Handle map initialization response.\r\n     * @param {string} paramHash a hash representing the parameter set that was used\r\n     *     for the request\r\n     * @param {Event} event Event.\r\n     * @private\r\n     */\r\n    CartoDB.prototype.handleInitResponse_ = function (paramHash, event) {\r\n        var client = /** @type {XMLHttpRequest} */ (event.target);\r\n        // status will be 0 for file:// urls\r\n        if (!client.status || client.status >= 200 && client.status < 300) {\r\n            var response = void 0;\r\n            try {\r\n                response = /** @type {CartoDBLayerInfo} */ (JSON.parse(client.responseText));\r\n            }\r\n            catch (err) {\r\n                this.setState(SourceState.ERROR);\r\n                return;\r\n            }\r\n            this.applyTemplate_(response);\r\n            this.templateCache_[paramHash] = response;\r\n            this.setState(SourceState.READY);\r\n        }\r\n        else {\r\n            this.setState(SourceState.ERROR);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {Event} event Event.\r\n     */\r\n    CartoDB.prototype.handleInitError_ = function (event) {\r\n        this.setState(SourceState.ERROR);\r\n    };\r\n    /**\r\n     * Apply the new tile urls returned by carto db\r\n     * @param {CartoDBLayerInfo} data Result of carto db call.\r\n     * @private\r\n     */\r\n    CartoDB.prototype.applyTemplate_ = function (data) {\r\n        var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\r\n            '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\r\n        this.setUrl(tilesUrl);\r\n    };\r\n    return CartoDB;\r\n}(XYZ));\r\nexport default CartoDB;\r\n//# sourceMappingURL=CartoDB.js.map","/**\r\n * @module ol/source/Cluster\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { getUid } from '../util.js';\r\nimport { assert } from '../asserts.js';\r\nimport Feature from '../Feature.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport { scale as scaleCoordinate, add as addCoordinate } from '../coordinate.js';\r\nimport { listen } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { buffer, createEmpty, createOrUpdateFromCoordinate } from '../extent.js';\r\nimport Point from '../geom/Point.js';\r\nimport VectorSource from './Vector.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\r\n * @property {function(Feature):Point} [geometryFunction]\r\n * Function that takes an {@link module:ol/Feature} as argument and returns an\r\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\r\n * feature should not be considered for clustering, the function should return\r\n * `null`. The default, which works when the underyling source contains point\r\n * features only, is\r\n * ```js\r\n * function(feature) {\r\n *   return feature.getGeometry();\r\n * }\r\n * ```\r\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\r\n * calculation point for polygons.\r\n * @property {VectorSource} source Source.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n */\r\n/**\r\n * @classdesc\r\n * Layer source to cluster vector data. Works out of the box with point\r\n * geometries. For other geometry types, or if not all geometries should be\r\n * considered for clustering, a custom `geometryFunction` can be defined.\r\n * @api\r\n */\r\nvar Cluster = /** @class */ (function (_super) {\r\n    __extends(Cluster, _super);\r\n    /**\r\n     * @param {Options} options Cluster options.\r\n     */\r\n    function Cluster(options) {\r\n        var _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            wrapX: options.wrapX\r\n        }) || this;\r\n        /**\r\n         * @type {number|undefined}\r\n         * @protected\r\n         */\r\n        _this.resolution = undefined;\r\n        /**\r\n         * @type {number}\r\n         * @protected\r\n         */\r\n        _this.distance = options.distance !== undefined ? options.distance : 20;\r\n        /**\r\n         * @type {Array<Feature>}\r\n         * @protected\r\n         */\r\n        _this.features = [];\r\n        /**\r\n         * @param {Feature} feature Feature.\r\n         * @return {Point} Cluster calculation point.\r\n         * @protected\r\n         */\r\n        _this.geometryFunction = options.geometryFunction || function (feature) {\r\n            var geometry = /** @type {Point} */ (feature.getGeometry());\r\n            assert(geometry.getType() == GeometryType.POINT, 10); // The default `geometryFunction` can only handle `Point` geometries\r\n            return geometry;\r\n        };\r\n        /**\r\n         * @type {VectorSource}\r\n         * @protected\r\n         */\r\n        _this.source = options.source;\r\n        listen(_this.source, EventType.CHANGE, _this.refresh, _this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get the distance in pixels between clusters.\r\n     * @return {number} Distance.\r\n     * @api\r\n     */\r\n    Cluster.prototype.getDistance = function () {\r\n        return this.distance;\r\n    };\r\n    /**\r\n     * Get a reference to the wrapped source.\r\n     * @return {VectorSource} Source.\r\n     * @api\r\n     */\r\n    Cluster.prototype.getSource = function () {\r\n        return this.source;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Cluster.prototype.loadFeatures = function (extent, resolution, projection) {\r\n        this.source.loadFeatures(extent, resolution, projection);\r\n        if (resolution !== this.resolution) {\r\n            this.clear();\r\n            this.resolution = resolution;\r\n            this.cluster();\r\n            this.addFeatures(this.features);\r\n        }\r\n    };\r\n    /**\r\n     * Set the distance in pixels between clusters.\r\n     * @param {number} distance The distance in pixels.\r\n     * @api\r\n     */\r\n    Cluster.prototype.setDistance = function (distance) {\r\n        this.distance = distance;\r\n        this.refresh();\r\n    };\r\n    /**\r\n     * handle the source changing\r\n     * @override\r\n     */\r\n    Cluster.prototype.refresh = function () {\r\n        this.clear();\r\n        this.cluster();\r\n        this.addFeatures(this.features);\r\n        _super.prototype.refresh.call(this);\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    Cluster.prototype.cluster = function () {\r\n        if (this.resolution === undefined) {\r\n            return;\r\n        }\r\n        this.features.length = 0;\r\n        var extent = createEmpty();\r\n        var mapDistance = this.distance * this.resolution;\r\n        var features = this.source.getFeatures();\r\n        /**\r\n         * @type {!Object<string, boolean>}\r\n         */\r\n        var clustered = {};\r\n        for (var i = 0, ii = features.length; i < ii; i++) {\r\n            var feature = features[i];\r\n            if (!(getUid(feature) in clustered)) {\r\n                var geometry = this.geometryFunction(feature);\r\n                if (geometry) {\r\n                    var coordinates = geometry.getCoordinates();\r\n                    createOrUpdateFromCoordinate(coordinates, extent);\r\n                    buffer(extent, mapDistance, extent);\r\n                    var neighbors = this.source.getFeaturesInExtent(extent);\r\n                    neighbors = neighbors.filter(function (neighbor) {\r\n                        var uid = getUid(neighbor);\r\n                        if (!(uid in clustered)) {\r\n                            clustered[uid] = true;\r\n                            return true;\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    });\r\n                    this.features.push(this.createCluster(neighbors));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {Array<Feature>} features Features\r\n     * @return {Feature} The cluster feature.\r\n     * @protected\r\n     */\r\n    Cluster.prototype.createCluster = function (features) {\r\n        var centroid = [0, 0];\r\n        for (var i = features.length - 1; i >= 0; --i) {\r\n            var geometry = this.geometryFunction(features[i]);\r\n            if (geometry) {\r\n                addCoordinate(centroid, geometry.getCoordinates());\r\n            }\r\n            else {\r\n                features.splice(i, 1);\r\n            }\r\n        }\r\n        scaleCoordinate(centroid, 1 / features.length);\r\n        var cluster = new Feature(new Point(centroid));\r\n        cluster.set('features', features);\r\n        return cluster;\r\n    };\r\n    return Cluster;\r\n}(VectorSource));\r\nexport default Cluster;\r\n//# sourceMappingURL=Cluster.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/reproj/Image\r\n */\r\nimport { ERROR_THRESHOLD } from './common.js';\r\nimport ImageBase from '../ImageBase.js';\r\nimport ImageState from '../ImageState.js';\r\nimport { listen, unlistenByKey } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { getCenter, getIntersection, getHeight, getWidth } from '../extent.js';\r\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\r\nimport Triangulation from './Triangulation.js';\r\n/**\r\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\r\n */\r\n/**\r\n * @classdesc\r\n * Class encapsulating single reprojected image.\r\n * See {@link module:ol/source/Image~ImageSource}.\r\n */\r\nvar ReprojImage = /** @class */ (function (_super) {\r\n    __extends(ReprojImage, _super);\r\n    /**\r\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\r\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\r\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\r\n     * @param {number} targetResolution Target resolution.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {FunctionType} getImageFunction\r\n     *     Function returning source images (extent, resolution, pixelRatio).\r\n     */\r\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\r\n        var _this = this;\r\n        var maxSourceExtent = sourceProj.getExtent();\r\n        var maxTargetExtent = targetProj.getExtent();\r\n        var limitedTargetExtent = maxTargetExtent ?\r\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\r\n        var targetCenter = getCenter(limitedTargetExtent);\r\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\r\n        var errorThresholdInPixels = ERROR_THRESHOLD;\r\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\r\n        var sourceExtent = triangulation.calculateSourceExtent();\r\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\r\n        var state = ImageState.LOADED;\r\n        if (sourceImage) {\r\n            state = ImageState.IDLE;\r\n        }\r\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\r\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../proj/Projection.js\").default}\r\n         */\r\n        _this.targetProj_ = targetProj;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../extent.js\").Extent}\r\n         */\r\n        _this.maxSourceExtent_ = maxSourceExtent;\r\n        /**\r\n         * @private\r\n         * @type {!import(\"./Triangulation.js\").default}\r\n         */\r\n        _this.triangulation_ = triangulation;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.targetResolution_ = targetResolution;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../extent.js\").Extent}\r\n         */\r\n        _this.targetExtent_ = targetExtent;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../ImageBase.js\").default}\r\n         */\r\n        _this.sourceImage_ = sourceImage;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.sourcePixelRatio_ = sourcePixelRatio;\r\n        /**\r\n         * @private\r\n         * @type {HTMLCanvasElement}\r\n         */\r\n        _this.canvas_ = null;\r\n        /**\r\n         * @private\r\n         * @type {?import(\"../events.js\").EventsKey}\r\n         */\r\n        _this.sourceListenerKey_ = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ReprojImage.prototype.disposeInternal = function () {\r\n        if (this.state == ImageState.LOADING) {\r\n            this.unlistenSource_();\r\n        }\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ReprojImage.prototype.getImage = function () {\r\n        return this.canvas_;\r\n    };\r\n    /**\r\n     * @return {import(\"../proj/Projection.js\").default} Projection.\r\n     */\r\n    ReprojImage.prototype.getProjection = function () {\r\n        return this.targetProj_;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    ReprojImage.prototype.reproject_ = function () {\r\n        var sourceState = this.sourceImage_.getState();\r\n        if (sourceState == ImageState.LOADED) {\r\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\r\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\r\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [{\r\n                    extent: this.sourceImage_.getExtent(),\r\n                    image: this.sourceImage_.getImage()\r\n                }], 0);\r\n        }\r\n        this.state = sourceState;\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ReprojImage.prototype.load = function () {\r\n        if (this.state == ImageState.IDLE) {\r\n            this.state = ImageState.LOADING;\r\n            this.changed();\r\n            var sourceState = this.sourceImage_.getState();\r\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\r\n                this.reproject_();\r\n            }\r\n            else {\r\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\r\n                    var sourceState = this.sourceImage_.getState();\r\n                    if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\r\n                        this.unlistenSource_();\r\n                        this.reproject_();\r\n                    }\r\n                }, this);\r\n                this.sourceImage_.load();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    ReprojImage.prototype.unlistenSource_ = function () {\r\n        unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\r\n        this.sourceListenerKey_ = null;\r\n    };\r\n    return ReprojImage;\r\n}(ImageBase));\r\nexport default ReprojImage;\r\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/source/Image\r\n */\r\nimport { abstract } from '../util.js';\r\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\r\nimport ImageState from '../ImageState.js';\r\nimport { linearFindNearest } from '../array.js';\r\nimport Event from '../events/Event.js';\r\nimport { equals } from '../extent.js';\r\nimport { equivalent } from '../proj.js';\r\nimport ReprojImage from '../reproj/Image.js';\r\nimport Source from './Source.js';\r\n/**\r\n * @enum {string}\r\n */\r\nvar ImageSourceEventType = {\r\n    /**\r\n     * Triggered when an image starts loading.\r\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\r\n     * @api\r\n     */\r\n    IMAGELOADSTART: 'imageloadstart',\r\n    /**\r\n     * Triggered when an image finishes loading.\r\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\r\n     * @api\r\n     */\r\n    IMAGELOADEND: 'imageloadend',\r\n    /**\r\n     * Triggered if image loading results in an error.\r\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\r\n     * @api\r\n     */\r\n    IMAGELOADERROR: 'imageloaderror'\r\n};\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\r\n * type.\r\n */\r\nvar ImageSourceEvent = /** @class */ (function (_super) {\r\n    __extends(ImageSourceEvent, _super);\r\n    /**\r\n     * @param {string} type Type.\r\n     * @param {import(\"../Image.js\").default} image The image.\r\n     */\r\n    function ImageSourceEvent(type, image) {\r\n        var _this = _super.call(this, type) || this;\r\n        /**\r\n         * The image related to the event.\r\n         * @type {import(\"../Image.js\").default}\r\n         * @api\r\n         */\r\n        _this.image = image;\r\n        return _this;\r\n    }\r\n    return ImageSourceEvent;\r\n}(Event));\r\nexport { ImageSourceEvent };\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\r\n * @property {Array<number>} [resolutions]\r\n * @property {import(\"./State.js\").default} [state]\r\n */\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for sources providing a single image.\r\n * @abstract\r\n * @fires module:ol/source/Image.ImageSourceEvent\r\n * @api\r\n */\r\nvar ImageSource = /** @class */ (function (_super) {\r\n    __extends(ImageSource, _super);\r\n    /**\r\n     * @param {Options} options Single image source options.\r\n     */\r\n    function ImageSource(options) {\r\n        var _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            projection: options.projection,\r\n            state: options.state\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {Array<number>}\r\n         */\r\n        _this.resolutions_ = options.resolutions !== undefined ?\r\n            options.resolutions : null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../reproj/Image.js\").default}\r\n         */\r\n        _this.reprojectedImage_ = null;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.reprojectedRevision_ = 0;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {Array<number>} Resolutions.\r\n     * @override\r\n     */\r\n    ImageSource.prototype.getResolutions = function () {\r\n        return this.resolutions_;\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {number} resolution Resolution.\r\n     * @return {number} Resolution.\r\n     */\r\n    ImageSource.prototype.findNearestResolution = function (resolution) {\r\n        if (this.resolutions_) {\r\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\r\n            resolution = this.resolutions_[idx];\r\n        }\r\n        return resolution;\r\n    };\r\n    /**\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {number} resolution Resolution.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @return {import(\"../ImageBase.js\").default} Single image.\r\n     */\r\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\r\n        var sourceProjection = this.getProjection();\r\n        if (!ENABLE_RASTER_REPROJECTION ||\r\n            !sourceProjection ||\r\n            !projection ||\r\n            equivalent(sourceProjection, projection)) {\r\n            if (sourceProjection) {\r\n                projection = sourceProjection;\r\n            }\r\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\r\n        }\r\n        else {\r\n            if (this.reprojectedImage_) {\r\n                if (this.reprojectedRevision_ == this.getRevision() &&\r\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\r\n                    this.reprojectedImage_.getResolution() == resolution &&\r\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\r\n                    return this.reprojectedImage_;\r\n                }\r\n                this.reprojectedImage_.dispose();\r\n                this.reprojectedImage_ = null;\r\n            }\r\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\r\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\r\n            }.bind(this));\r\n            this.reprojectedRevision_ = this.getRevision();\r\n            return this.reprojectedImage_;\r\n        }\r\n    };\r\n    /**\r\n     * @abstract\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {number} resolution Resolution.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @return {import(\"../ImageBase.js\").default} Single image.\r\n     * @protected\r\n     */\r\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\r\n        return abstract();\r\n    };\r\n    /**\r\n     * Handle image change events.\r\n     * @param {import(\"../events/Event.js\").default} event Event.\r\n     * @protected\r\n     */\r\n    ImageSource.prototype.handleImageChange = function (event) {\r\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\r\n        switch (image.getState()) {\r\n            case ImageState.LOADING:\r\n                this.loading = true;\r\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\r\n                break;\r\n            case ImageState.LOADED:\r\n                this.loading = false;\r\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\r\n                break;\r\n            case ImageState.ERROR:\r\n                this.loading = false;\r\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\r\n                break;\r\n            default:\r\n            // pass\r\n        }\r\n    };\r\n    return ImageSource;\r\n}(Source));\r\n/**\r\n * Default image load function for image sources that use import(\"../Image.js\").Image image\r\n * instances.\r\n * @param {import(\"../Image.js\").default} image Image.\r\n * @param {string} src Source.\r\n */\r\nexport function defaultImageLoadFunction(image, src) {\r\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\r\n}\r\nexport default ImageSource;\r\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/Image\r\n */\r\nimport ImageBase from './ImageBase.js';\r\nimport ImageState from './ImageState.js';\r\nimport { listenOnce, unlistenByKey } from './events.js';\r\nimport EventType from './events/EventType.js';\r\nimport { getHeight } from './extent.js';\r\n/**\r\n * A function that takes an {@link module:ol/Image~Image} for the image and a\r\n * `{string}` for the src as arguments. It is supposed to make it so the\r\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\r\n * content specified by the src. If not specified, the default is\r\n *\r\n *     function(image, src) {\r\n *       image.getImage().src = src;\r\n *     }\r\n *\r\n * Providing a custom `imageLoadFunction` can be useful to load images with\r\n * post requests or - in general - through XHR requests, where the src of the\r\n * image element would be set to a data URI when the content is loaded.\r\n *\r\n * @typedef {function(ImageWrapper, string): void} LoadFunction\r\n * @api\r\n */\r\nvar ImageWrapper = /** @class */ (function (_super) {\r\n    __extends(ImageWrapper, _super);\r\n    /**\r\n     * @param {import(\"./extent.js\").Extent} extent Extent.\r\n     * @param {number|undefined} resolution Resolution.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {string} src Image source URI.\r\n     * @param {?string} crossOrigin Cross origin.\r\n     * @param {LoadFunction} imageLoadFunction Image load function.\r\n     */\r\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\r\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.src_ = src;\r\n        /**\r\n         * @private\r\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\r\n         */\r\n        _this.image_ = new Image();\r\n        if (crossOrigin !== null) {\r\n            _this.image_.crossOrigin = crossOrigin;\r\n        }\r\n        /**\r\n         * @private\r\n         * @type {Array<import(\"./events.js\").EventsKey>}\r\n         */\r\n        _this.imageListenerKeys_ = null;\r\n        /**\r\n         * @protected\r\n         * @type {ImageState}\r\n         */\r\n        _this.state = ImageState.IDLE;\r\n        /**\r\n         * @private\r\n         * @type {LoadFunction}\r\n         */\r\n        _this.imageLoadFunction_ = imageLoadFunction;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     * @api\r\n     */\r\n    ImageWrapper.prototype.getImage = function () {\r\n        return this.image_;\r\n    };\r\n    /**\r\n     * Tracks loading or read errors.\r\n     *\r\n     * @private\r\n     */\r\n    ImageWrapper.prototype.handleImageError_ = function () {\r\n        this.state = ImageState.ERROR;\r\n        this.unlistenImage_();\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Tracks successful image load.\r\n     *\r\n     * @private\r\n     */\r\n    ImageWrapper.prototype.handleImageLoad_ = function () {\r\n        if (this.resolution === undefined) {\r\n            this.resolution = getHeight(this.extent) / this.image_.height;\r\n        }\r\n        this.state = ImageState.LOADED;\r\n        this.unlistenImage_();\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Load the image or retry if loading previously failed.\r\n     * Loading is taken care of by the tile queue, and calling this method is\r\n     * only needed for preloading or for reloading in case of an error.\r\n     * @override\r\n     * @api\r\n     */\r\n    ImageWrapper.prototype.load = function () {\r\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\r\n            this.state = ImageState.LOADING;\r\n            this.changed();\r\n            this.imageListenerKeys_ = [\r\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\r\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\r\n            ];\r\n            this.imageLoadFunction_(this, this.src_);\r\n        }\r\n    };\r\n    /**\r\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\r\n     */\r\n    ImageWrapper.prototype.setImage = function (image) {\r\n        this.image_ = image;\r\n    };\r\n    /**\r\n     * Discards event handlers which listen for load completion or errors.\r\n     *\r\n     * @private\r\n     */\r\n    ImageWrapper.prototype.unlistenImage_ = function () {\r\n        this.imageListenerKeys_.forEach(unlistenByKey);\r\n        this.imageListenerKeys_ = null;\r\n    };\r\n    return ImageWrapper;\r\n}(ImageBase));\r\nexport default ImageWrapper;\r\n//# sourceMappingURL=Image.js.map","/**\r\n * @module ol/uri\r\n */\r\n/**\r\n * Appends query parameters to a URI.\r\n *\r\n * @param {string} uri The original URI, which may already have query data.\r\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\r\n *     and the values are arbitrary types or arrays.\r\n * @return {string} The new URI.\r\n */\r\nexport function appendParams(uri, params) {\r\n    var keyParams = [];\r\n    // Skip any null or undefined parameter values\r\n    Object.keys(params).forEach(function (k) {\r\n        if (params[k] !== null && params[k] !== undefined) {\r\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\r\n        }\r\n    });\r\n    var qs = keyParams.join('&');\r\n    // remove any trailing ? or &\r\n    uri = uri.replace(/[?&]$/, '');\r\n    // append ? or & depending on whether uri has existing parameters\r\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\r\n    return uri + qs;\r\n}\r\n//# sourceMappingURL=uri.js.map","/**\r\n * @module ol/source/ImageArcGISRest\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport ImageWrapper from '../Image.js';\r\nimport { assert } from '../asserts.js';\r\nimport { listen } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { containsExtent, getHeight, getWidth } from '../extent.js';\r\nimport { assign } from '../obj.js';\r\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\r\nimport { appendParams } from '../uri.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\r\n * the remote server.\r\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\r\n * a URL.\r\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\r\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\r\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\r\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\r\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\r\n * for further reference.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\r\n * `2` means twice the size of the map viewport, and so on.\r\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\r\n * these resolutions only.\r\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\r\n * should include /MapServer or /ImageServer.\r\n */\r\n/**\r\n * @classdesc\r\n * Source for data from ArcGIS Rest services providing single, untiled images.\r\n * Useful when underlying map service has labels.\r\n *\r\n * If underlying map service is not using labels,\r\n * take advantage of ol image caching and use\r\n * {@link module:ol/source/TileArcGISRest} data source.\r\n *\r\n * @fires module:ol/source/Image.ImageSourceEvent\r\n * @api\r\n */\r\nvar ImageArcGISRest = /** @class */ (function (_super) {\r\n    __extends(ImageArcGISRest, _super);\r\n    /**\r\n     * @param {Options=} opt_options Image ArcGIS Rest Options.\r\n     */\r\n    function ImageArcGISRest(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options || /** @type {Options} */ ({});\r\n        _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            projection: options.projection,\r\n            resolutions: options.resolutions\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {?string}\r\n         */\r\n        _this.crossOrigin_ =\r\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\r\n        /**\r\n         * @private\r\n         * @type {string|undefined}\r\n         */\r\n        _this.url_ = options.url;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../Image.js\").LoadFunction}\r\n         */\r\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\r\n            options.imageLoadFunction : defaultImageLoadFunction;\r\n        /**\r\n         * @private\r\n         * @type {!Object}\r\n         */\r\n        _this.params_ = options.params || {};\r\n        /**\r\n         * @private\r\n         * @type {import(\"../Image.js\").default}\r\n         */\r\n        _this.image_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../size.js\").Size}\r\n         */\r\n        _this.imageSize_ = [0, 0];\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.renderedRevision_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get the user-provided params, i.e. those passed to the constructor through\r\n     * the \"params\" option, and possibly updated using the updateParams method.\r\n     * @return {Object} Params.\r\n     * @api\r\n     */\r\n    ImageArcGISRest.prototype.getParams = function () {\r\n        return this.params_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ImageArcGISRest.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\r\n        if (this.url_ === undefined) {\r\n            return null;\r\n        }\r\n        resolution = this.findNearestResolution(resolution);\r\n        pixelRatio = this.hidpi_ ? pixelRatio : 1;\r\n        var image = this.image_;\r\n        if (image &&\r\n            this.renderedRevision_ == this.getRevision() &&\r\n            image.getResolution() == resolution &&\r\n            image.getPixelRatio() == pixelRatio &&\r\n            containsExtent(image.getExtent(), extent)) {\r\n            return image;\r\n        }\r\n        var params = {\r\n            'F': 'image',\r\n            'FORMAT': 'PNG32',\r\n            'TRANSPARENT': true\r\n        };\r\n        assign(params, this.params_);\r\n        extent = extent.slice();\r\n        var centerX = (extent[0] + extent[2]) / 2;\r\n        var centerY = (extent[1] + extent[3]) / 2;\r\n        if (this.ratio_ != 1) {\r\n            var halfWidth = this.ratio_ * getWidth(extent) / 2;\r\n            var halfHeight = this.ratio_ * getHeight(extent) / 2;\r\n            extent[0] = centerX - halfWidth;\r\n            extent[1] = centerY - halfHeight;\r\n            extent[2] = centerX + halfWidth;\r\n            extent[3] = centerY + halfHeight;\r\n        }\r\n        var imageResolution = resolution / pixelRatio;\r\n        // Compute an integer width and height.\r\n        var width = Math.ceil(getWidth(extent) / imageResolution);\r\n        var height = Math.ceil(getHeight(extent) / imageResolution);\r\n        // Modify the extent to match the integer width and height.\r\n        extent[0] = centerX - imageResolution * width / 2;\r\n        extent[2] = centerX + imageResolution * width / 2;\r\n        extent[1] = centerY - imageResolution * height / 2;\r\n        extent[3] = centerY + imageResolution * height / 2;\r\n        this.imageSize_[0] = width;\r\n        this.imageSize_[1] = height;\r\n        var url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio, projection, params);\r\n        this.image_ = new ImageWrapper(extent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\r\n        this.renderedRevision_ = this.getRevision();\r\n        listen(this.image_, EventType.CHANGE, this.handleImageChange, this);\r\n        return this.image_;\r\n    };\r\n    /**\r\n     * Return the image load function of the source.\r\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\r\n     * @api\r\n     */\r\n    ImageArcGISRest.prototype.getImageLoadFunction = function () {\r\n        return this.imageLoadFunction_;\r\n    };\r\n    /**\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {import(\"../size.js\").Size} size Size.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @param {Object} params Params.\r\n     * @return {string} Request URL.\r\n     * @private\r\n     */\r\n    ImageArcGISRest.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\r\n        // ArcGIS Server only wants the numeric portion of the projection ID.\r\n        var srid = projection.getCode().split(':').pop();\r\n        params['SIZE'] = size[0] + ',' + size[1];\r\n        params['BBOX'] = extent.join(',');\r\n        params['BBOXSR'] = srid;\r\n        params['IMAGESR'] = srid;\r\n        params['DPI'] = Math.round(90 * pixelRatio);\r\n        var url = this.url_;\r\n        var modifiedUrl = url\r\n            .replace(/MapServer\\/?$/, 'MapServer/export')\r\n            .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\r\n        if (modifiedUrl == url) {\r\n            assert(false, 50); // `options.featureTypes` should be an Array\r\n        }\r\n        return appendParams(modifiedUrl, params);\r\n    };\r\n    /**\r\n     * Return the URL used for this ArcGIS source.\r\n     * @return {string|undefined} URL.\r\n     * @api\r\n     */\r\n    ImageArcGISRest.prototype.getUrl = function () {\r\n        return this.url_;\r\n    };\r\n    /**\r\n     * Set the image load function of the source.\r\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\r\n     * @api\r\n     */\r\n    ImageArcGISRest.prototype.setImageLoadFunction = function (imageLoadFunction) {\r\n        this.image_ = null;\r\n        this.imageLoadFunction_ = imageLoadFunction;\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Set the URL to use for requests.\r\n     * @param {string|undefined} url URL.\r\n     * @api\r\n     */\r\n    ImageArcGISRest.prototype.setUrl = function (url) {\r\n        if (url != this.url_) {\r\n            this.url_ = url;\r\n            this.image_ = null;\r\n            this.changed();\r\n        }\r\n    };\r\n    /**\r\n     * Update the user-provided params.\r\n     * @param {Object} params Params.\r\n     * @api\r\n     */\r\n    ImageArcGISRest.prototype.updateParams = function (params) {\r\n        assign(this.params_, params);\r\n        this.image_ = null;\r\n        this.changed();\r\n    };\r\n    return ImageArcGISRest;\r\n}(ImageSource));\r\nexport default ImageArcGISRest;\r\n//# sourceMappingURL=ImageArcGISRest.js.map","/**\r\n * @module ol/source/ImageCanvas\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport ImageCanvas from '../ImageCanvas.js';\r\nimport { containsExtent, getHeight, getWidth, scaleFromCenter } from '../extent.js';\r\nimport ImageSource from './Image.js';\r\n/**\r\n * A function returning the canvas element (`{HTMLCanvasElement}`)\r\n * used by the source as an image. The arguments passed to the function are:\r\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\r\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\r\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\r\n * this function is cached by the source. The this keyword inside the function\r\n * references the {@link module:ol/source/ImageCanvas}.\r\n *\r\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\r\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\r\n */\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {FunctionType} [canvasFunction] Canvas function.\r\n * The function returning the canvas element used by the source\r\n * as an image. The arguments passed to the function are: `{import(\"../extent.js\").Extent}` the\r\n * image extent, `{number}` the image resolution, `{number}` the device pixel\r\n * ratio, `{import(\"../size.js\").Size}` the image size, and `{import(\"../proj/Projection.js\").Projection}` the image\r\n * projection. The canvas returned by this function is cached by the source. If\r\n * the value returned by the function is later changed then\r\n * `changed` should be called on the source for the source to\r\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\r\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\r\n * width and height of the map viewport, and so on. Must be `1` or higher.\r\n * @property {Array<number>} [resolutions] Resolutions.\r\n * If specified, new canvases will be created for these resolutions\r\n * @property {import(\"./State.js\").default} [state] Source state.\r\n */\r\n/**\r\n * @classdesc\r\n * Base class for image sources where a canvas element is the image.\r\n * @api\r\n */\r\nvar ImageCanvasSource = /** @class */ (function (_super) {\r\n    __extends(ImageCanvasSource, _super);\r\n    /**\r\n     * @param {Options=} opt_options ImageCanvas options.\r\n     */\r\n    function ImageCanvasSource(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options || /** @type {Options} */ ({});\r\n        _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            projection: options.projection,\r\n            resolutions: options.resolutions,\r\n            state: options.state\r\n        }) || this;\r\n        /**\r\n        * @private\r\n        * @type {FunctionType}\r\n        */\r\n        _this.canvasFunction_ = options.canvasFunction;\r\n        /**\r\n        * @private\r\n        * @type {import(\"../ImageCanvas.js\").default}\r\n        */\r\n        _this.canvas_ = null;\r\n        /**\r\n        * @private\r\n        * @type {number}\r\n        */\r\n        _this.renderedRevision_ = 0;\r\n        /**\r\n        * @private\r\n        * @type {number}\r\n        */\r\n        _this.ratio_ = options.ratio !== undefined ?\r\n            options.ratio : 1.5;\r\n        return _this;\r\n    }\r\n    /**\r\n    * @inheritDoc\r\n    */\r\n    ImageCanvasSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\r\n        resolution = this.findNearestResolution(resolution);\r\n        var canvas = this.canvas_;\r\n        if (canvas &&\r\n            this.renderedRevision_ == this.getRevision() &&\r\n            canvas.getResolution() == resolution &&\r\n            canvas.getPixelRatio() == pixelRatio &&\r\n            containsExtent(canvas.getExtent(), extent)) {\r\n            return canvas;\r\n        }\r\n        extent = extent.slice();\r\n        scaleFromCenter(extent, this.ratio_);\r\n        var width = getWidth(extent) / resolution;\r\n        var height = getHeight(extent) / resolution;\r\n        var size = [width * pixelRatio, height * pixelRatio];\r\n        var canvasElement = this.canvasFunction_.call(this, extent, resolution, pixelRatio, size, projection);\r\n        if (canvasElement) {\r\n            canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\r\n        }\r\n        this.canvas_ = canvas;\r\n        this.renderedRevision_ = this.getRevision();\r\n        return canvas;\r\n    };\r\n    return ImageCanvasSource;\r\n}(ImageSource));\r\nexport default ImageCanvasSource;\r\n//# sourceMappingURL=ImageCanvas.js.map","/**\r\n * @module ol/source/ImageMapGuide\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport ImageWrapper from '../Image.js';\r\nimport { listen } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { containsExtent, getCenter, getHeight, getWidth, scaleFromCenter } from '../extent.js';\r\nimport { assign } from '../obj.js';\r\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\r\nimport { appendParams } from '../uri.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [url] The mapagent url.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {number} [displayDpi=96] The display resolution.\r\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\r\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\r\n * the image from the remote server.\r\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\r\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\r\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\r\n * @property {Array<number>} [resolutions] Resolutions.\r\n * If specified, requests will be made for these resolutions only.\r\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\r\n * @property {Object} [params] Additional parameters.\r\n */\r\n/**\r\n * @classdesc\r\n * Source for images from Mapguide servers\r\n *\r\n * @fires module:ol/source/Image.ImageSourceEvent\r\n * @api\r\n */\r\nvar ImageMapGuide = /** @class */ (function (_super) {\r\n    __extends(ImageMapGuide, _super);\r\n    /**\r\n     * @param {Options} options ImageMapGuide options.\r\n     */\r\n    function ImageMapGuide(options) {\r\n        var _this = _super.call(this, {\r\n            projection: options.projection,\r\n            resolutions: options.resolutions\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {?string}\r\n         */\r\n        _this.crossOrigin_ =\r\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.displayDpi_ = options.displayDpi !== undefined ?\r\n            options.displayDpi : 96;\r\n        /**\r\n         * @private\r\n         * @type {!Object}\r\n         */\r\n        _this.params_ = options.params || {};\r\n        /**\r\n         * @private\r\n         * @type {string|undefined}\r\n         */\r\n        _this.url_ = options.url;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../Image.js\").LoadFunction}\r\n         */\r\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\r\n            options.imageLoadFunction : defaultImageLoadFunction;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.metersPerUnit_ = options.metersPerUnit !== undefined ?\r\n            options.metersPerUnit : 1;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.useOverlay_ = options.useOverlay !== undefined ?\r\n            options.useOverlay : false;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../Image.js\").default}\r\n         */\r\n        _this.image_ = null;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.renderedRevision_ = 0;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get the user-provided params, i.e. those passed to the constructor through\r\n     * the \"params\" option, and possibly updated using the updateParams method.\r\n     * @return {Object} Params.\r\n     * @api\r\n     */\r\n    ImageMapGuide.prototype.getParams = function () {\r\n        return this.params_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ImageMapGuide.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\r\n        resolution = this.findNearestResolution(resolution);\r\n        pixelRatio = this.hidpi_ ? pixelRatio : 1;\r\n        var image = this.image_;\r\n        if (image &&\r\n            this.renderedRevision_ == this.getRevision() &&\r\n            image.getResolution() == resolution &&\r\n            image.getPixelRatio() == pixelRatio &&\r\n            containsExtent(image.getExtent(), extent)) {\r\n            return image;\r\n        }\r\n        if (this.ratio_ != 1) {\r\n            extent = extent.slice();\r\n            scaleFromCenter(extent, this.ratio_);\r\n        }\r\n        var width = getWidth(extent) / resolution;\r\n        var height = getHeight(extent) / resolution;\r\n        var size = [width * pixelRatio, height * pixelRatio];\r\n        if (this.url_ !== undefined) {\r\n            var imageUrl = this.getUrl(this.url_, this.params_, extent, size, projection);\r\n            image = new ImageWrapper(extent, resolution, pixelRatio, imageUrl, this.crossOrigin_, this.imageLoadFunction_);\r\n            listen(image, EventType.CHANGE, this.handleImageChange, this);\r\n        }\r\n        else {\r\n            image = null;\r\n        }\r\n        this.image_ = image;\r\n        this.renderedRevision_ = this.getRevision();\r\n        return image;\r\n    };\r\n    /**\r\n     * Return the image load function of the source.\r\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\r\n     * @api\r\n     */\r\n    ImageMapGuide.prototype.getImageLoadFunction = function () {\r\n        return this.imageLoadFunction_;\r\n    };\r\n    /**\r\n     * Update the user-provided params.\r\n     * @param {Object} params Params.\r\n     * @api\r\n     */\r\n    ImageMapGuide.prototype.updateParams = function (params) {\r\n        assign(this.params_, params);\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @param {string} baseUrl The mapagent url.\r\n     * @param {Object<string, string|number>} params Request parameters.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {import(\"../size.js\").Size} size Size.\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @return {string} The mapagent map image request URL.\r\n     */\r\n    ImageMapGuide.prototype.getUrl = function (baseUrl, params, extent, size, projection) {\r\n        var scale = getScale(extent, size, this.metersPerUnit_, this.displayDpi_);\r\n        var center = getCenter(extent);\r\n        var baseParams = {\r\n            'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\r\n            'VERSION': '2.0.0',\r\n            'LOCALE': 'en',\r\n            'CLIENTAGENT': 'ol/source/ImageMapGuide source',\r\n            'CLIP': '1',\r\n            'SETDISPLAYDPI': this.displayDpi_,\r\n            'SETDISPLAYWIDTH': Math.round(size[0]),\r\n            'SETDISPLAYHEIGHT': Math.round(size[1]),\r\n            'SETVIEWSCALE': scale,\r\n            'SETVIEWCENTERX': center[0],\r\n            'SETVIEWCENTERY': center[1]\r\n        };\r\n        assign(baseParams, params);\r\n        return appendParams(baseUrl, baseParams);\r\n    };\r\n    /**\r\n     * Set the image load function of the MapGuide source.\r\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\r\n     * @api\r\n     */\r\n    ImageMapGuide.prototype.setImageLoadFunction = function (imageLoadFunction) {\r\n        this.image_ = null;\r\n        this.imageLoadFunction_ = imageLoadFunction;\r\n        this.changed();\r\n    };\r\n    return ImageMapGuide;\r\n}(ImageSource));\r\n/**\r\n * @param {import(\"../extent.js\").Extent} extent The map extents.\r\n * @param {import(\"../size.js\").Size} size The viewport size.\r\n * @param {number} metersPerUnit The meters-per-unit value.\r\n * @param {number} dpi The display resolution.\r\n * @return {number} The computed map scale.\r\n */\r\nfunction getScale(extent, size, metersPerUnit, dpi) {\r\n    var mcsW = getWidth(extent);\r\n    var mcsH = getHeight(extent);\r\n    var devW = size[0];\r\n    var devH = size[1];\r\n    var mpp = 0.0254 / dpi;\r\n    if (devH * mcsW > devW * mcsH) {\r\n        return mcsW * metersPerUnit / (devW * mpp); // width limited\r\n    }\r\n    else {\r\n        return mcsH * metersPerUnit / (devH * mpp); // height limited\r\n    }\r\n}\r\nexport default ImageMapGuide;\r\n//# sourceMappingURL=ImageMapGuide.js.map","/**\r\n * @module ol/source/ImageStatic\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport ImageWrapper from '../Image.js';\r\nimport ImageState from '../ImageState.js';\r\nimport { createCanvasContext2D } from '../dom.js';\r\nimport { listen } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { intersects, getHeight, getWidth } from '../extent.js';\r\nimport { get as getProjection } from '../proj.js';\r\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\r\n * This is the [left, bottom, right, top] map coordinates of your image.\r\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\r\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\r\n * only needs to be set if auto-detection fails for some reason.\r\n * @property {string} url Image URL.\r\n */\r\n/**\r\n * @classdesc\r\n * A layer source for displaying a single, static image.\r\n * @api\r\n */\r\nvar Static = /** @class */ (function (_super) {\r\n    __extends(Static, _super);\r\n    /**\r\n     * @param {Options} options ImageStatic options.\r\n     */\r\n    function Static(options) {\r\n        var _this = this;\r\n        var crossOrigin = options.crossOrigin !== undefined ?\r\n            options.crossOrigin : null;\r\n        var /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction = options.imageLoadFunction !== undefined ?\r\n            options.imageLoadFunction : defaultImageLoadFunction;\r\n        _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            projection: getProjection(options.projection)\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.url_ = options.url;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../extent.js\").Extent}\r\n         */\r\n        _this.imageExtent_ = options.imageExtent;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../Image.js\").default}\r\n         */\r\n        _this.image_ = new ImageWrapper(_this.imageExtent_, undefined, 1, _this.url_, crossOrigin, imageLoadFunction);\r\n        /**\r\n         * @private\r\n         * @type {import(\"../size.js\").Size}\r\n         */\r\n        _this.imageSize_ = options.imageSize ? options.imageSize : null;\r\n        listen(_this.image_, EventType.CHANGE, _this.handleImageChange, _this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns the image extent\r\n     * @return {import(\"../extent.js\").Extent} image extent.\r\n     * @api\r\n     */\r\n    Static.prototype.getImageExtent = function () {\r\n        return this.imageExtent_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Static.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\r\n        if (intersects(extent, this.image_.getExtent())) {\r\n            return this.image_;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Return the URL used for this image source.\r\n     * @return {string} URL.\r\n     * @api\r\n     */\r\n    Static.prototype.getUrl = function () {\r\n        return this.url_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Static.prototype.handleImageChange = function (evt) {\r\n        if (this.image_.getState() == ImageState.LOADED) {\r\n            var imageExtent = this.image_.getExtent();\r\n            var image = this.image_.getImage();\r\n            var imageWidth = void 0, imageHeight = void 0;\r\n            if (this.imageSize_) {\r\n                imageWidth = this.imageSize_[0];\r\n                imageHeight = this.imageSize_[1];\r\n            }\r\n            else {\r\n                imageWidth = image.width;\r\n                imageHeight = image.height;\r\n            }\r\n            var resolution = getHeight(imageExtent) / imageHeight;\r\n            var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\r\n            if (targetWidth != imageWidth) {\r\n                var context = createCanvasContext2D(targetWidth, imageHeight);\r\n                var canvas = context.canvas;\r\n                context.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, canvas.width, canvas.height);\r\n                this.image_.setImage(canvas);\r\n            }\r\n        }\r\n        _super.prototype.handleImageChange.call(this, evt);\r\n    };\r\n    return Static;\r\n}(ImageSource));\r\nexport default Static;\r\n//# sourceMappingURL=ImageStatic.js.map","/**\r\n * @module ol/source/common\r\n */\r\n/**\r\n * Default WMS version.\r\n * @type {string}\r\n */\r\nexport var DEFAULT_WMS_VERSION = '1.3.0';\r\n//# sourceMappingURL=common.js.map","/**\r\n * @module ol/source/WMSServerType\r\n */\r\n/**\r\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\r\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\r\n *     specification that OpenLayers can make use of.\r\n * @enum {string}\r\n */\r\nexport default {\r\n    CARMENTA_SERVER: 'carmentaserver',\r\n    GEOSERVER: 'geoserver',\r\n    MAPSERVER: 'mapserver',\r\n    QGIS: 'qgis'\r\n};\r\n//# sourceMappingURL=WMSServerType.js.map","/**\r\n * @module ol/source/ImageWMS\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { DEFAULT_WMS_VERSION } from './common.js';\r\nimport ImageWrapper from '../Image.js';\r\nimport { assert } from '../asserts.js';\r\nimport { listen } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { containsExtent, getCenter, getForViewAndSize, getHeight, getWidth } from '../extent.js';\r\nimport { assign } from '../obj.js';\r\nimport { get as getProjection, transform } from '../proj.js';\r\nimport { calculateSourceResolution } from '../reproj.js';\r\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\r\nimport WMSServerType from './WMSServerType.js';\r\nimport { compareVersions } from '../string.js';\r\nimport { appendParams } from '../uri.js';\r\n/**\r\n * @const\r\n * @type {import(\"../size.js\").Size}\r\n */\r\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\r\n * the image from the remote server.\r\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\r\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\r\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\r\n * @property {Object<string,*>} params WMS request parameters.\r\n * At least a `LAYERS` param is required. `STYLES` is\r\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\r\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\r\n * twice the width and height of the map viewport, and so on. Must be `1` or\r\n * higher.\r\n * @property {Array<number>} [resolutions] Resolutions.\r\n * If specified, requests will be made for these resolutions only.\r\n * @property {string} url WMS service URL.\r\n */\r\n/**\r\n * @classdesc\r\n * Source for WMS servers providing single, untiled images.\r\n *\r\n * @fires module:ol/source/Image.ImageSourceEvent\r\n * @api\r\n */\r\nvar ImageWMS = /** @class */ (function (_super) {\r\n    __extends(ImageWMS, _super);\r\n    /**\r\n     * @param {Options=} [opt_options] ImageWMS options.\r\n     */\r\n    function ImageWMS(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options || /** @type {Options} */ ({});\r\n        _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            projection: options.projection,\r\n            resolutions: options.resolutions\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {?string}\r\n         */\r\n        _this.crossOrigin_ =\r\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\r\n        /**\r\n         * @private\r\n         * @type {string|undefined}\r\n         */\r\n        _this.url_ = options.url;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../Image.js\").LoadFunction}\r\n         */\r\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\r\n            options.imageLoadFunction : defaultImageLoadFunction;\r\n        /**\r\n         * @private\r\n         * @type {!Object}\r\n         */\r\n        _this.params_ = options.params || {};\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.v13_ = true;\r\n        _this.updateV13_();\r\n        /**\r\n         * @private\r\n         * @type {import(\"./WMSServerType.js\").default|undefined}\r\n         */\r\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../Image.js\").default}\r\n         */\r\n        _this.image_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../size.js\").Size}\r\n         */\r\n        _this.imageSize_ = [0, 0];\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.renderedRevision_ = 0;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\r\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\r\n     * constructed.\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @param {number} resolution Resolution.\r\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\r\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\r\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\r\n     *     specified here.\r\n     * @return {string|undefined} GetFeatureInfo URL.\r\n     * @api\r\n     */\r\n    ImageWMS.prototype.getGetFeatureInfoUrl = function (coordinate, resolution, projection, params) {\r\n        if (this.url_ === undefined) {\r\n            return undefined;\r\n        }\r\n        var projectionObj = getProjection(projection);\r\n        var sourceProjectionObj = this.getProjection();\r\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\r\n            resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\r\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\r\n        }\r\n        var extent = getForViewAndSize(coordinate, resolution, 0, GETFEATUREINFO_IMAGE_SIZE);\r\n        var baseParams = {\r\n            'SERVICE': 'WMS',\r\n            'VERSION': DEFAULT_WMS_VERSION,\r\n            'REQUEST': 'GetFeatureInfo',\r\n            'FORMAT': 'image/png',\r\n            'TRANSPARENT': true,\r\n            'QUERY_LAYERS': this.params_['LAYERS']\r\n        };\r\n        assign(baseParams, this.params_, params);\r\n        var x = Math.floor((coordinate[0] - extent[0]) / resolution);\r\n        var y = Math.floor((extent[3] - coordinate[1]) / resolution);\r\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\r\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\r\n        return this.getRequestUrl_(extent, GETFEATUREINFO_IMAGE_SIZE, 1, sourceProjectionObj || projectionObj, baseParams);\r\n    };\r\n    /**\r\n     * Get the user-provided params, i.e. those passed to the constructor through\r\n     * the \"params\" option, and possibly updated using the updateParams method.\r\n     * @return {Object} Params.\r\n     * @api\r\n     */\r\n    ImageWMS.prototype.getParams = function () {\r\n        return this.params_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ImageWMS.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\r\n        if (this.url_ === undefined) {\r\n            return null;\r\n        }\r\n        resolution = this.findNearestResolution(resolution);\r\n        if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\r\n            pixelRatio = 1;\r\n        }\r\n        var imageResolution = resolution / pixelRatio;\r\n        var center = getCenter(extent);\r\n        var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\r\n        var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\r\n        var viewExtent = getForViewAndSize(center, imageResolution, 0, [viewWidth, viewHeight]);\r\n        var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\r\n        var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\r\n        var requestExtent = getForViewAndSize(center, imageResolution, 0, [requestWidth, requestHeight]);\r\n        var image = this.image_;\r\n        if (image &&\r\n            this.renderedRevision_ == this.getRevision() &&\r\n            image.getResolution() == resolution &&\r\n            image.getPixelRatio() == pixelRatio &&\r\n            containsExtent(image.getExtent(), viewExtent)) {\r\n            return image;\r\n        }\r\n        var params = {\r\n            'SERVICE': 'WMS',\r\n            'VERSION': DEFAULT_WMS_VERSION,\r\n            'REQUEST': 'GetMap',\r\n            'FORMAT': 'image/png',\r\n            'TRANSPARENT': true\r\n        };\r\n        assign(params, this.params_);\r\n        this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\r\n        this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\r\n        var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio, projection, params);\r\n        this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\r\n        this.renderedRevision_ = this.getRevision();\r\n        listen(this.image_, EventType.CHANGE, this.handleImageChange, this);\r\n        return this.image_;\r\n    };\r\n    /**\r\n     * Return the image load function of the source.\r\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\r\n     * @api\r\n     */\r\n    ImageWMS.prototype.getImageLoadFunction = function () {\r\n        return this.imageLoadFunction_;\r\n    };\r\n    /**\r\n     * @param {import(\"../extent.js\").Extent} extent Extent.\r\n     * @param {import(\"../size.js\").Size} size Size.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @param {Object} params Params.\r\n     * @return {string} Request URL.\r\n     * @private\r\n     */\r\n    ImageWMS.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\r\n        assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\r\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\r\n        if (!('STYLES' in this.params_)) {\r\n            params['STYLES'] = '';\r\n        }\r\n        if (pixelRatio != 1) {\r\n            switch (this.serverType_) {\r\n                case WMSServerType.GEOSERVER:\r\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\r\n                    if ('FORMAT_OPTIONS' in params) {\r\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\r\n                    }\r\n                    else {\r\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\r\n                    }\r\n                    break;\r\n                case WMSServerType.MAPSERVER:\r\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\r\n                    break;\r\n                case WMSServerType.CARMENTA_SERVER:\r\n                case WMSServerType.QGIS:\r\n                    params['DPI'] = 90 * pixelRatio;\r\n                    break;\r\n                default:\r\n                    assert(false, 8); // Unknown `serverType` configured\r\n                    break;\r\n            }\r\n        }\r\n        params['WIDTH'] = size[0];\r\n        params['HEIGHT'] = size[1];\r\n        var axisOrientation = projection.getAxisOrientation();\r\n        var bbox;\r\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\r\n            bbox = [extent[1], extent[0], extent[3], extent[2]];\r\n        }\r\n        else {\r\n            bbox = extent;\r\n        }\r\n        params['BBOX'] = bbox.join(',');\r\n        return appendParams(/** @type {string} */ (this.url_), params);\r\n    };\r\n    /**\r\n     * Return the URL used for this WMS source.\r\n     * @return {string|undefined} URL.\r\n     * @api\r\n     */\r\n    ImageWMS.prototype.getUrl = function () {\r\n        return this.url_;\r\n    };\r\n    /**\r\n     * Set the image load function of the source.\r\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\r\n     * @api\r\n     */\r\n    ImageWMS.prototype.setImageLoadFunction = function (imageLoadFunction) {\r\n        this.image_ = null;\r\n        this.imageLoadFunction_ = imageLoadFunction;\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Set the URL to use for requests.\r\n     * @param {string|undefined} url URL.\r\n     * @api\r\n     */\r\n    ImageWMS.prototype.setUrl = function (url) {\r\n        if (url != this.url_) {\r\n            this.url_ = url;\r\n            this.image_ = null;\r\n            this.changed();\r\n        }\r\n    };\r\n    /**\r\n     * Update the user-provided params.\r\n     * @param {Object} params Params.\r\n     * @api\r\n     */\r\n    ImageWMS.prototype.updateParams = function (params) {\r\n        assign(this.params_, params);\r\n        this.updateV13_();\r\n        this.image_ = null;\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    ImageWMS.prototype.updateV13_ = function () {\r\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\r\n        this.v13_ = compareVersions(version, '1.3') >= 0;\r\n    };\r\n    return ImageWMS;\r\n}(ImageSource));\r\nexport default ImageWMS;\r\n//# sourceMappingURL=ImageWMS.js.map","/**\r\n * @module ol/source/OSM\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport XYZ from './XYZ.js';\r\n/**\r\n * The attribution containing a link to the OpenStreetMap Copyright and License\r\n * page.\r\n * @const\r\n * @type {string}\r\n * @api\r\n */\r\nexport var ATTRIBUTION = '&#169; ' +\r\n    '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\r\n    'contributors.';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {number} [maxZoom=19] Max zoom.\r\n * @property {boolean} [opaque=true] Whether the layer is opaque.\r\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\r\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n */\r\n/**\r\n * @classdesc\r\n * Layer source for the OpenStreetMap tile server.\r\n * @api\r\n */\r\nvar OSM = /** @class */ (function (_super) {\r\n    __extends(OSM, _super);\r\n    /**\r\n     * @param {Options=} [opt_options] Open Street Map options.\r\n     */\r\n    function OSM(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options || {};\r\n        var attributions;\r\n        if (options.attributions !== undefined) {\r\n            attributions = options.attributions;\r\n        }\r\n        else {\r\n            attributions = [ATTRIBUTION];\r\n        }\r\n        var crossOrigin = options.crossOrigin !== undefined ?\r\n            options.crossOrigin : 'anonymous';\r\n        var url = options.url !== undefined ?\r\n            options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\r\n        _this = _super.call(this, {\r\n            attributions: attributions,\r\n            cacheSize: options.cacheSize,\r\n            crossOrigin: crossOrigin,\r\n            opaque: options.opaque !== undefined ? options.opaque : true,\r\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\r\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n            tileLoadFunction: options.tileLoadFunction,\r\n            url: url,\r\n            wrapX: options.wrapX,\r\n            attributionsCollapsible: false\r\n        }) || this;\r\n        return _this;\r\n    }\r\n    return OSM;\r\n}(XYZ));\r\nexport default OSM;\r\n//# sourceMappingURL=OSM.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/source/Raster\r\n */\r\nimport ImageCanvas from '../ImageCanvas.js';\r\nimport TileQueue from '../TileQueue.js';\r\nimport { createCanvasContext2D } from '../dom.js';\r\nimport { listen } from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { Processor } from 'pixelworks/lib/index';\r\nimport { equals, getCenter, getHeight, getWidth } from '../extent.js';\r\nimport ImageLayer from '../layer/Image.js';\r\nimport TileLayer from '../layer/Tile.js';\r\nimport { assign } from '../obj.js';\r\nimport { create as createTransform } from '../transform.js';\r\nimport ImageSource from './Image.js';\r\nimport TileSource from './Tile.js';\r\nimport SourceState from './State.js';\r\nimport Source from './Source.js';\r\n/**\r\n * A function that takes an array of input data, performs some operation, and\r\n * returns an array of output data.\r\n * For `pixel` type operations, the function will be called with an array of\r\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\r\n * range of 0 - 255. It should return a single pixel array.\r\n * For `'image'` type operations, functions will be called with an array of\r\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\r\n * and should return a single {@link ImageData\r\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\r\n * are called with a second \"data\" argument, which can be used for storage.  The\r\n * data object is accessible from raster events, where it can be initialized in\r\n * \"beforeoperations\" and accessed again in \"afteroperations\".\r\n *\r\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\r\n *     (Array<number>|ImageData)} Operation\r\n */\r\n/**\r\n * @enum {string}\r\n */\r\nvar RasterEventType = {\r\n    /**\r\n     * Triggered before operations are run.\r\n     * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\r\n     * @api\r\n     */\r\n    BEFOREOPERATIONS: 'beforeoperations',\r\n    /**\r\n     * Triggered after operations are run.\r\n     * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\r\n     * @api\r\n     */\r\n    AFTEROPERATIONS: 'afteroperations'\r\n};\r\n/**\r\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\r\n * @enum {string}\r\n */\r\nvar RasterOperationType = {\r\n    PIXEL: 'pixel',\r\n    IMAGE: 'image'\r\n};\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\r\n * type.\r\n */\r\nvar RasterSourceEvent = /** @class */ (function (_super) {\r\n    __extends(RasterSourceEvent, _super);\r\n    /**\r\n     * @param {string} type Type.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\r\n     * @param {Object} data An object made available to operations.\r\n     */\r\n    function RasterSourceEvent(type, frameState, data) {\r\n        var _this = _super.call(this, type) || this;\r\n        /**\r\n         * The raster extent.\r\n         * @type {import(\"../extent.js\").Extent}\r\n         * @api\r\n         */\r\n        _this.extent = frameState.extent;\r\n        /**\r\n         * The pixel resolution (map units per pixel).\r\n         * @type {number}\r\n         * @api\r\n         */\r\n        _this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\r\n        /**\r\n         * An object made available to all operations.  This can be used by operations\r\n         * as a storage object (e.g. for calculating statistics).\r\n         * @type {Object}\r\n         * @api\r\n         */\r\n        _this.data = data;\r\n        return _this;\r\n    }\r\n    return RasterSourceEvent;\r\n}(Event));\r\nexport { RasterSourceEvent };\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\r\n * sources or layers.  For vector data, use an VectorImage layer.\r\n * @property {Operation} [operation] Raster operation.\r\n * The operation will be called with data from input sources\r\n * and the output will be assigned to the raster source.\r\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\r\n * @property {number} [threads] By default, operations will be run in a single worker thread.\r\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\r\n * be run in multiple worker threads.  Note that there is additional overhead in\r\n * transferring data to multiple workers, and that depending on the user's\r\n * system, it may not be possible to parallelize the work.\r\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\r\n * Supported values are `'pixel'` and `'image'`.  By default,\r\n * `'pixel'` operations are assumed, and operations will be called with an\r\n * array of pixels from input sources.  If set to `'image'`, operations will\r\n * be called with an array of ImageData objects from input sources.\r\n */\r\n/**\r\n * @classdesc\r\n * A source that transforms data from any number of input sources using an\r\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\r\n * output pixel values.\r\n *\r\n * @fires module:ol/source/Raster.RasterSourceEvent\r\n * @api\r\n */\r\nvar RasterSource = /** @class */ (function (_super) {\r\n    __extends(RasterSource, _super);\r\n    /**\r\n     * @param {Options} options Options.\r\n     */\r\n    function RasterSource(options) {\r\n        var _this = _super.call(this, {\r\n            projection: null\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {*}\r\n         */\r\n        _this.worker_ = null;\r\n        /**\r\n         * @private\r\n         * @type {RasterOperationType}\r\n         */\r\n        _this.operationType_ = options.operationType !== undefined ?\r\n            options.operationType : RasterOperationType.PIXEL;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.threads_ = options.threads !== undefined ? options.threads : 1;\r\n        /**\r\n         * @private\r\n         * @type {Array<import(\"../layer/Layer.js\").default>}\r\n         */\r\n        _this.layers_ = createLayers(options.sources);\r\n        for (var i = 0, ii = _this.layers_.length; i < ii; ++i) {\r\n            listen(_this.layers_[i], EventType.CHANGE, _this.changed, _this);\r\n        }\r\n        /**\r\n         * @private\r\n         * @type {import(\"../TileQueue.js\").default}\r\n         */\r\n        _this.tileQueue_ = new TileQueue(function () {\r\n            return 1;\r\n        }, _this.changed.bind(_this));\r\n        /**\r\n         * The most recently requested frame state.\r\n         * @type {import(\"../PluggableMap.js\").FrameState}\r\n         * @private\r\n         */\r\n        _this.requestedFrameState_;\r\n        /**\r\n         * The most recently rendered image canvas.\r\n         * @type {import(\"../ImageCanvas.js\").default}\r\n         * @private\r\n         */\r\n        _this.renderedImageCanvas_ = null;\r\n        /**\r\n         * The most recently rendered revision.\r\n         * @type {number}\r\n         */\r\n        _this.renderedRevision_;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../PluggableMap.js\").FrameState}\r\n         */\r\n        _this.frameState_ = {\r\n            animate: false,\r\n            coordinateToPixelTransform: createTransform(),\r\n            extent: null,\r\n            focus: null,\r\n            index: 0,\r\n            layerStatesArray: getLayerStatesArray(_this.layers_),\r\n            pixelRatio: 1,\r\n            pixelToCoordinateTransform: createTransform(),\r\n            postRenderFunctions: [],\r\n            size: [0, 0],\r\n            skippedFeatureUids: {},\r\n            tileQueue: _this.tileQueue_,\r\n            time: Date.now(),\r\n            usedTiles: {},\r\n            viewState: /** @type {import(\"../View.js\").State} */ ({\r\n                rotation: 0\r\n            }),\r\n            viewHints: [],\r\n            wantedTiles: {}\r\n        };\r\n        if (options.operation !== undefined) {\r\n            _this.setOperation(options.operation, options.lib);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Set the operation.\r\n     * @param {Operation} operation New operation.\r\n     * @param {Object=} opt_lib Functions that will be available to operations run\r\n     *     in a worker.\r\n     * @api\r\n     */\r\n    RasterSource.prototype.setOperation = function (operation, opt_lib) {\r\n        this.worker_ = new Processor({\r\n            operation: operation,\r\n            imageOps: this.operationType_ === RasterOperationType.IMAGE,\r\n            queue: 1,\r\n            lib: opt_lib,\r\n            threads: this.threads_\r\n        });\r\n        this.changed();\r\n    };\r\n    /**\r\n     * Update the stored frame state.\r\n     * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\r\n     * @param {number} resolution The view resolution.\r\n     * @param {import(\"../proj/Projection.js\").default} projection The view projection.\r\n     * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\r\n     * @private\r\n     */\r\n    RasterSource.prototype.updateFrameState_ = function (extent, resolution, projection) {\r\n        var frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign({}, this.frameState_));\r\n        frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign({}, frameState.viewState));\r\n        var center = getCenter(extent);\r\n        frameState.extent = extent.slice();\r\n        frameState.focus = center;\r\n        frameState.size[0] = Math.round(getWidth(extent) / resolution);\r\n        frameState.size[1] = Math.round(getHeight(extent) / resolution);\r\n        frameState.time = Date.now();\r\n        frameState.animate = false;\r\n        var viewState = frameState.viewState;\r\n        viewState.center = center;\r\n        viewState.projection = projection;\r\n        viewState.resolution = resolution;\r\n        return frameState;\r\n    };\r\n    /**\r\n     * Determine if all sources are ready.\r\n     * @return {boolean} All sources are ready.\r\n     * @private\r\n     */\r\n    RasterSource.prototype.allSourcesReady_ = function () {\r\n        var ready = true;\r\n        var source;\r\n        for (var i = 0, ii = this.layers_.length; i < ii; ++i) {\r\n            source = this.layers_[i].getSource();\r\n            if (source.getState() !== SourceState.READY) {\r\n                ready = false;\r\n                break;\r\n            }\r\n        }\r\n        return ready;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RasterSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\r\n        if (!this.allSourcesReady_()) {\r\n            return null;\r\n        }\r\n        var frameState = this.updateFrameState_(extent, resolution, projection);\r\n        this.requestedFrameState_ = frameState;\r\n        // check if we can't reuse the existing ol/ImageCanvas\r\n        if (this.renderedImageCanvas_) {\r\n            var renderedResolution = this.renderedImageCanvas_.getResolution();\r\n            var renderedExtent = this.renderedImageCanvas_.getExtent();\r\n            if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\r\n                this.renderedImageCanvas_ = null;\r\n            }\r\n        }\r\n        if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\r\n            this.processSources_();\r\n        }\r\n        frameState.tileQueue.loadMoreTiles(16, 16);\r\n        if (frameState.animate) {\r\n            requestAnimationFrame(this.changed.bind(this));\r\n        }\r\n        return this.renderedImageCanvas_;\r\n    };\r\n    /**\r\n     * Start processing source data.\r\n     * @private\r\n     */\r\n    RasterSource.prototype.processSources_ = function () {\r\n        var frameState = this.requestedFrameState_;\r\n        var len = this.layers_.length;\r\n        var imageDatas = new Array(len);\r\n        for (var i = 0; i < len; ++i) {\r\n            var imageData = getImageData(this.layers_[i], frameState, frameState.layerStatesArray[i]);\r\n            if (imageData) {\r\n                imageDatas[i] = imageData;\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        var data = {};\r\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\r\n        this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\r\n    };\r\n    /**\r\n     * Called when pixel processing is complete.\r\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\r\n     * @param {Error} err Any error during processing.\r\n     * @param {ImageData} output The output image data.\r\n     * @param {Object} data The user data.\r\n     * @private\r\n     */\r\n    RasterSource.prototype.onWorkerComplete_ = function (frameState, err, output, data) {\r\n        if (err || !output) {\r\n            return;\r\n        }\r\n        // do nothing if extent or resolution changed\r\n        var extent = frameState.extent;\r\n        var resolution = frameState.viewState.resolution;\r\n        if (resolution !== this.requestedFrameState_.viewState.resolution ||\r\n            !equals(extent, this.requestedFrameState_.extent)) {\r\n            return;\r\n        }\r\n        var context;\r\n        if (this.renderedImageCanvas_) {\r\n            context = this.renderedImageCanvas_.getImage().getContext('2d');\r\n        }\r\n        else {\r\n            var width = Math.round(getWidth(extent) / resolution);\r\n            var height = Math.round(getHeight(extent) / resolution);\r\n            context = createCanvasContext2D(width, height);\r\n            this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\r\n        }\r\n        context.putImageData(output, 0, 0);\r\n        this.changed();\r\n        this.renderedRevision_ = this.getRevision();\r\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    RasterSource.prototype.getImageInternal = function () {\r\n        return null; // not implemented\r\n    };\r\n    return RasterSource;\r\n}(ImageSource));\r\n/**\r\n * A reusable canvas context.\r\n * @type {CanvasRenderingContext2D}\r\n * @private\r\n */\r\nvar sharedContext = null;\r\n/**\r\n * Get image data from a layer.\r\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\r\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\r\n * @param {import(\"../layer/Layer.js\").State} layerState The layer state.\r\n * @return {ImageData} The image data.\r\n */\r\nfunction getImageData(layer, frameState, layerState) {\r\n    var renderer = layer.getRenderer();\r\n    if (!renderer) {\r\n        throw new Error('Unsupported layer type: ' + layer);\r\n    }\r\n    if (!renderer.prepareFrame(frameState, layerState)) {\r\n        return null;\r\n    }\r\n    var width = frameState.size[0];\r\n    var height = frameState.size[1];\r\n    var element = renderer.renderFrame(frameState, layerState);\r\n    if (!(element instanceof HTMLCanvasElement)) {\r\n        throw new Error('Unsupported rendered element: ' + element);\r\n    }\r\n    if (element.width === width && element.height === height) {\r\n        var context = element.getContext('2d');\r\n        return context.getImageData(0, 0, width, height);\r\n    }\r\n    if (!sharedContext) {\r\n        sharedContext = createCanvasContext2D(width, height);\r\n    }\r\n    else {\r\n        var canvas = sharedContext.canvas;\r\n        if (canvas.width !== width || canvas.height !== height) {\r\n            sharedContext = createCanvasContext2D(width, height);\r\n        }\r\n        else {\r\n            sharedContext.clearRect(0, 0, width, height);\r\n        }\r\n    }\r\n    sharedContext.drawImage(element, 0, 0, width, height);\r\n    return sharedContext.getImageData(0, 0, width, height);\r\n}\r\n/**\r\n * Get a list of layer states from a list of layers.\r\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\r\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\r\n */\r\nfunction getLayerStatesArray(layers) {\r\n    return layers.map(function (layer) {\r\n        return layer.getLayerState();\r\n    });\r\n}\r\n/**\r\n * Create layers for all sources.\r\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\r\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\r\n */\r\nfunction createLayers(sources) {\r\n    var len = sources.length;\r\n    var layers = new Array(len);\r\n    for (var i = 0; i < len; ++i) {\r\n        layers[i] = createLayer(sources[i]);\r\n    }\r\n    return layers;\r\n}\r\n/**\r\n * Create a layer for the provided source.\r\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\r\n * @return {import(\"../layer/Layer.js\").default} The layer.\r\n */\r\nfunction createLayer(layerOrSource) {\r\n    // @type {import(\"../layer/Layer.js\").default}\r\n    var layer;\r\n    if (layerOrSource instanceof Source) {\r\n        if (layerOrSource instanceof TileSource) {\r\n            layer = new TileLayer({ source: layerOrSource });\r\n        }\r\n        else if (layerOrSource instanceof ImageSource) {\r\n            layer = new ImageLayer({ source: layerOrSource });\r\n        }\r\n    }\r\n    else {\r\n        layer = layerOrSource;\r\n    }\r\n    return layer;\r\n}\r\nexport default RasterSource;\r\n//# sourceMappingURL=Raster.js.map","/**\r\n * @module ol/source/Stamen\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { ATTRIBUTION as OSM_ATTRIBUTION } from './OSM.js';\r\nimport XYZ from './XYZ.js';\r\n/**\r\n * @const\r\n * @type {Array<string>}\r\n */\r\nvar ATTRIBUTIONS = [\r\n    'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\r\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\r\n        ' 3.0</a>.',\r\n    OSM_ATTRIBUTION\r\n];\r\n/**\r\n * @type {Object<string, {extension: string, opaque: boolean}>}\r\n */\r\nvar LayerConfig = {\r\n    'terrain': {\r\n        extension: 'jpg',\r\n        opaque: true\r\n    },\r\n    'terrain-background': {\r\n        extension: 'jpg',\r\n        opaque: true\r\n    },\r\n    'terrain-labels': {\r\n        extension: 'png',\r\n        opaque: false\r\n    },\r\n    'terrain-lines': {\r\n        extension: 'png',\r\n        opaque: false\r\n    },\r\n    'toner-background': {\r\n        extension: 'png',\r\n        opaque: true\r\n    },\r\n    'toner': {\r\n        extension: 'png',\r\n        opaque: true\r\n    },\r\n    'toner-hybrid': {\r\n        extension: 'png',\r\n        opaque: false\r\n    },\r\n    'toner-labels': {\r\n        extension: 'png',\r\n        opaque: false\r\n    },\r\n    'toner-lines': {\r\n        extension: 'png',\r\n        opaque: false\r\n    },\r\n    'toner-lite': {\r\n        extension: 'png',\r\n        opaque: true\r\n    },\r\n    'watercolor': {\r\n        extension: 'jpg',\r\n        opaque: true\r\n    }\r\n};\r\n/**\r\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\r\n */\r\nvar ProviderConfig = {\r\n    'terrain': {\r\n        minZoom: 4,\r\n        maxZoom: 18\r\n    },\r\n    'toner': {\r\n        minZoom: 0,\r\n        maxZoom: 20\r\n    },\r\n    'watercolor': {\r\n        minZoom: 1,\r\n        maxZoom: 16\r\n    }\r\n};\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\r\n * @property {string} layer Layer name.\r\n * @property {number} [minZoom] Minimum zoom.\r\n * @property {number} [maxZoom] Maximum zoom.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\r\n * Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n */\r\n/**\r\n * @classdesc\r\n * Layer source for the Stamen tile server.\r\n * @api\r\n */\r\nvar Stamen = /** @class */ (function (_super) {\r\n    __extends(Stamen, _super);\r\n    /**\r\n     * @param {Options} options Stamen options.\r\n     */\r\n    function Stamen(options) {\r\n        var _this = this;\r\n        var i = options.layer.indexOf('-');\r\n        var provider = i == -1 ? options.layer : options.layer.slice(0, i);\r\n        var providerConfig = ProviderConfig[provider];\r\n        var layerConfig = LayerConfig[options.layer];\r\n        var url = options.url !== undefined ? options.url :\r\n            'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\r\n                '/{z}/{x}/{y}.' + layerConfig.extension;\r\n        _this = _super.call(this, {\r\n            attributions: ATTRIBUTIONS,\r\n            cacheSize: options.cacheSize,\r\n            crossOrigin: 'anonymous',\r\n            maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\r\n            minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\r\n            opaque: layerConfig.opaque,\r\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n            tileLoadFunction: options.tileLoadFunction,\r\n            url: url,\r\n            wrapX: options.wrapX\r\n        }) || this;\r\n        return _this;\r\n    }\r\n    return Stamen;\r\n}(XYZ));\r\nexport default Stamen;\r\n//# sourceMappingURL=Stamen.js.map","/**\r\n * @module ol/source/TileArcGISRest\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { createEmpty } from '../extent.js';\r\nimport { modulo } from '../math.js';\r\nimport { assign } from '../obj.js';\r\nimport { toSize, scale as scaleSize } from '../size.js';\r\nimport TileImage from './TileImage.js';\r\nimport { hash as tileCoordHash } from '../tilecoord.js';\r\nimport { appendParams } from '../uri.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\r\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\r\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\r\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\r\n * override the default service layer visibility. See\r\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\r\n * for further reference.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\r\n * tilesize and extent supported by the server.\r\n * If this is not defined, a default grid will be used: if there is a projection\r\n * extent, the grid will be based on that; if not, a grid based on a global\r\n * extent with origin at 0,0 will be used.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\r\n * The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\r\n * url should include /MapServer or /ImageServer.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\r\n * transition, pass `transition: 0`.\r\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\r\n * Service supports multiple urls for export requests.\r\n */\r\n/**\r\n * @classdesc\r\n * Layer source for tile data from ArcGIS Rest services. Map and Image\r\n * Services are supported.\r\n *\r\n * For cached ArcGIS services, better performance is available using the\r\n * {@link module:ol/source/XYZ~XYZ} data source.\r\n * @api\r\n */\r\nvar TileArcGISRest = /** @class */ (function (_super) {\r\n    __extends(TileArcGISRest, _super);\r\n    /**\r\n     * @param {Options=} opt_options Tile ArcGIS Rest options.\r\n     */\r\n    function TileArcGISRest(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options || /** @type {Options} */ ({});\r\n        _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            cacheSize: options.cacheSize,\r\n            crossOrigin: options.crossOrigin,\r\n            projection: options.projection,\r\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n            tileGrid: options.tileGrid,\r\n            tileLoadFunction: options.tileLoadFunction,\r\n            tileUrlFunction: tileUrlFunction,\r\n            url: options.url,\r\n            urls: options.urls,\r\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\r\n            transition: options.transition\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {!Object}\r\n         */\r\n        _this.params_ = options.params || {};\r\n        /**\r\n         * @private\r\n         * @type {import(\"../extent.js\").Extent}\r\n         */\r\n        _this.tmpExtent_ = createEmpty();\r\n        _this.setKey(_this.getKeyForParams_());\r\n        return _this;\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {string} The key for the current params.\r\n     */\r\n    TileArcGISRest.prototype.getKeyForParams_ = function () {\r\n        var i = 0;\r\n        var res = [];\r\n        for (var key in this.params_) {\r\n            res[i++] = key + '-' + this.params_[key];\r\n        }\r\n        return res.join('/');\r\n    };\r\n    /**\r\n     * Get the user-provided params, i.e. those passed to the constructor through\r\n     * the \"params\" option, and possibly updated using the updateParams method.\r\n     * @return {Object} Params.\r\n     * @api\r\n     */\r\n    TileArcGISRest.prototype.getParams = function () {\r\n        return this.params_;\r\n    };\r\n    /**\r\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\r\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @param {Object} params Params.\r\n     * @return {string|undefined} Request URL.\r\n     * @private\r\n     */\r\n    TileArcGISRest.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\r\n        var urls = this.urls;\r\n        if (!urls) {\r\n            return undefined;\r\n        }\r\n        // ArcGIS Server only wants the numeric portion of the projection ID.\r\n        var srid = projection.getCode().split(':').pop();\r\n        params['SIZE'] = tileSize[0] + ',' + tileSize[1];\r\n        params['BBOX'] = tileExtent.join(',');\r\n        params['BBOXSR'] = srid;\r\n        params['IMAGESR'] = srid;\r\n        params['DPI'] = Math.round(params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio);\r\n        var url;\r\n        if (urls.length == 1) {\r\n            url = urls[0];\r\n        }\r\n        else {\r\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\r\n            url = urls[index];\r\n        }\r\n        var modifiedUrl = url\r\n            .replace(/MapServer\\/?$/, 'MapServer/export')\r\n            .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\r\n        return appendParams(modifiedUrl, params);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TileArcGISRest.prototype.getTilePixelRatio = function (pixelRatio) {\r\n        return /** @type {number} */ (pixelRatio);\r\n    };\r\n    /**\r\n     * Update the user-provided params.\r\n     * @param {Object} params Params.\r\n     * @api\r\n     */\r\n    TileArcGISRest.prototype.updateParams = function (params) {\r\n        assign(this.params_, params);\r\n        this.setKey(this.getKeyForParams_());\r\n    };\r\n    return TileArcGISRest;\r\n}(TileImage));\r\n/**\r\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\r\n * @param {number} pixelRatio The pixel ratio\r\n * @param {import(\"../proj/Projection.js\").default} projection The projection\r\n * @return {string|undefined} The tile URL\r\n * @this {TileArcGISRest}\r\n */\r\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\r\n    var tileGrid = this.getTileGrid();\r\n    if (!tileGrid) {\r\n        tileGrid = this.getTileGridForProjection(projection);\r\n    }\r\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\r\n        return undefined;\r\n    }\r\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\r\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\r\n    if (pixelRatio != 1) {\r\n        tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\r\n    }\r\n    // Apply default params and override with user specified values.\r\n    var baseParams = {\r\n        'F': 'image',\r\n        'FORMAT': 'PNG32',\r\n        'TRANSPARENT': true\r\n    };\r\n    assign(baseParams, this.params_);\r\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\r\n}\r\nexport default TileArcGISRest;\r\n//# sourceMappingURL=TileArcGISRest.js.map","/**\r\n * @module ol/source/TileDebug\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport Tile from '../Tile.js';\r\nimport TileState from '../TileState.js';\r\nimport { createCanvasContext2D } from '../dom.js';\r\nimport { toSize } from '../size.js';\r\nimport XYZ from './XYZ.js';\r\nimport { getKeyZXY } from '../tilecoord.js';\r\nvar LabeledTile = /** @class */ (function (_super) {\r\n    __extends(LabeledTile, _super);\r\n    /**\r\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\r\n     * @param {string} text Text.\r\n     */\r\n    function LabeledTile(tileCoord, tileSize, text) {\r\n        var _this = _super.call(this, tileCoord, TileState.LOADED) || this;\r\n        /**\r\n        * @private\r\n        * @type {import(\"../size.js\").Size}\r\n        */\r\n        _this.tileSize_ = tileSize;\r\n        /**\r\n        * @private\r\n        * @type {string}\r\n        */\r\n        _this.text_ = text;\r\n        /**\r\n        * @private\r\n        * @type {HTMLCanvasElement}\r\n        */\r\n        _this.canvas_ = null;\r\n        return _this;\r\n    }\r\n    /**\r\n    * Get the image element for this tile.\r\n    * @return {HTMLCanvasElement} Image.\r\n    */\r\n    LabeledTile.prototype.getImage = function () {\r\n        if (this.canvas_) {\r\n            return this.canvas_;\r\n        }\r\n        else {\r\n            var tileSize = this.tileSize_;\r\n            var context = createCanvasContext2D(tileSize[0], tileSize[1]);\r\n            context.strokeStyle = 'grey';\r\n            context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\r\n            context.fillStyle = 'grey';\r\n            context.textAlign = 'center';\r\n            context.textBaseline = 'middle';\r\n            context.font = '24px sans-serif';\r\n            context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2);\r\n            this.canvas_ = context.canvas;\r\n            return context.canvas;\r\n        }\r\n    };\r\n    /**\r\n    * @override\r\n    */\r\n    LabeledTile.prototype.load = function () { };\r\n    return LabeledTile;\r\n}(Tile));\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n */\r\n/**\r\n * @classdesc\r\n * A pseudo tile source, which does not fetch tiles from a server, but renders\r\n * a grid outline for the tile grid/projection along with the coordinates for\r\n * each tile. See examples/canvas-tiles for an example.\r\n *\r\n * Uses Canvas context2d, so requires Canvas support.\r\n * @api\r\n */\r\nvar TileDebug = /** @class */ (function (_super) {\r\n    __extends(TileDebug, _super);\r\n    /**\r\n     * @param {Options=} opt_options Debug tile options.\r\n     */\r\n    function TileDebug(opt_options) {\r\n        var _this = this;\r\n        /**\r\n         * @type {Options}\r\n         */\r\n        var options = opt_options || {};\r\n        _this = _super.call(this, {\r\n            opaque: false,\r\n            projection: options.projection,\r\n            tileGrid: options.tileGrid,\r\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\r\n        }) || this;\r\n        return _this;\r\n    }\r\n    /**\r\n    * @inheritDoc\r\n    */\r\n    TileDebug.prototype.getTile = function (z, x, y) {\r\n        var tileCoordKey = getKeyZXY(z, x, y);\r\n        if (this.tileCache.containsKey(tileCoordKey)) {\r\n            return /** @type {!LabeledTile} */ (this.tileCache.get(tileCoordKey));\r\n        }\r\n        else {\r\n            var tileSize = toSize(this.tileGrid.getTileSize(z));\r\n            var tileCoord = [z, x, y];\r\n            var textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\r\n            var text = void 0;\r\n            if (textTileCoord) {\r\n                text = 'z:' + textTileCoord[0] + ' x:' + textTileCoord[1] + ' y:' + textTileCoord[2];\r\n            }\r\n            else {\r\n                text = 'none';\r\n            }\r\n            var tile = new LabeledTile(tileCoord, tileSize, text);\r\n            this.tileCache.set(tileCoordKey, tile);\r\n            return tile;\r\n        }\r\n    };\r\n    return TileDebug;\r\n}(XYZ));\r\nexport default TileDebug;\r\n//# sourceMappingURL=TileDebug.js.map","/**\r\n * @module ol/source/TileJSON\r\n */\r\n// FIXME check order of async callbacks\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * See http://mapbox.com/developers/api/.\r\n */\r\nimport { createFromTemplates } from '../tileurlfunction.js';\r\nimport { assert } from '../asserts.js';\r\nimport { applyTransform, intersects } from '../extent.js';\r\nimport { jsonp as requestJSONP } from '../net.js';\r\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\r\nimport SourceState from './State.js';\r\nimport TileImage from './TileImage.js';\r\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\r\n/**\r\n * @typedef {Object} Config\r\n * @property {string} [name] The name.\r\n * @property {string} [description] The description.\r\n * @property {string} [version] The version.\r\n * @property {string} [attribution] The attribution.\r\n * @property {string} [template] The template.\r\n * @property {string} [legend] The legend.\r\n * @property {string} [scheme] The scheme.\r\n * @property {Array<string>} tiles The tile URL templates.\r\n * @property {Array<string>} [grids] Optional grids.\r\n * @property {number} [minzoom] Minimum zoom level.\r\n * @property {number} [maxzoom] Maximum zoom level.\r\n * @property {Array<number>} [bounds] Optional bounds.\r\n * @property {Array<number>} [center] Optional center.\r\n */\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\r\n * Useful when the server does not support CORS..\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {Config} [tileJSON] TileJSON configuration for this source.\r\n * If not provided, `url` must be configured.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n */\r\n/**\r\n * @classdesc\r\n * Layer source for tile data in TileJSON format.\r\n * @api\r\n */\r\nvar TileJSON = /** @class */ (function (_super) {\r\n    __extends(TileJSON, _super);\r\n    /**\r\n     * @param {Options} options TileJSON options.\r\n     */\r\n    function TileJSON(options) {\r\n        var _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            cacheSize: options.cacheSize,\r\n            crossOrigin: options.crossOrigin,\r\n            projection: getProjection('EPSG:3857'),\r\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n            state: SourceState.LOADING,\r\n            tileLoadFunction: options.tileLoadFunction,\r\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\r\n            transition: options.transition\r\n        }) || this;\r\n        /**\r\n         * @type {Config}\r\n         * @private\r\n         */\r\n        _this.tileJSON_ = null;\r\n        if (options.url) {\r\n            if (options.jsonp) {\r\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\r\n            }\r\n            else {\r\n                var client = new XMLHttpRequest();\r\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\r\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\r\n                client.open('GET', options.url);\r\n                client.send();\r\n            }\r\n        }\r\n        else if (options.tileJSON) {\r\n            _this.handleTileJSONResponse(options.tileJSON);\r\n        }\r\n        else {\r\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {Event} event The load event.\r\n     */\r\n    TileJSON.prototype.onXHRLoad_ = function (event) {\r\n        var client = /** @type {XMLHttpRequest} */ (event.target);\r\n        // status will be 0 for file:// urls\r\n        if (!client.status || client.status >= 200 && client.status < 300) {\r\n            var response = void 0;\r\n            try {\r\n                response = /** @type {TileJSON} */ (JSON.parse(client.responseText));\r\n            }\r\n            catch (err) {\r\n                this.handleTileJSONError();\r\n                return;\r\n            }\r\n            this.handleTileJSONResponse(response);\r\n        }\r\n        else {\r\n            this.handleTileJSONError();\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {Event} event The error event.\r\n     */\r\n    TileJSON.prototype.onXHRError_ = function (event) {\r\n        this.handleTileJSONError();\r\n    };\r\n    /**\r\n     * @return {Config} The tilejson object.\r\n     * @api\r\n     */\r\n    TileJSON.prototype.getTileJSON = function () {\r\n        return this.tileJSON_;\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {Config} tileJSON Tile JSON.\r\n     */\r\n    TileJSON.prototype.handleTileJSONResponse = function (tileJSON) {\r\n        var epsg4326Projection = getProjection('EPSG:4326');\r\n        var sourceProjection = this.getProjection();\r\n        var extent;\r\n        if (tileJSON['bounds'] !== undefined) {\r\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\r\n            extent = applyTransform(tileJSON['bounds'], transform);\r\n        }\r\n        var minZoom = tileJSON['minzoom'] || 0;\r\n        var maxZoom = tileJSON['maxzoom'] || 22;\r\n        var tileGrid = createXYZ({\r\n            extent: extentFromProjection(sourceProjection),\r\n            maxZoom: maxZoom,\r\n            minZoom: minZoom\r\n        });\r\n        this.tileGrid = tileGrid;\r\n        this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\r\n        if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\r\n            var attributionExtent_1 = extent !== undefined ?\r\n                extent : epsg4326Projection.getExtent();\r\n            this.setAttributions(function (frameState) {\r\n                if (intersects(attributionExtent_1, frameState.extent)) {\r\n                    return [tileJSON['attribution']];\r\n                }\r\n                return null;\r\n            });\r\n        }\r\n        this.tileJSON_ = tileJSON;\r\n        this.setState(SourceState.READY);\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    TileJSON.prototype.handleTileJSONError = function () {\r\n        this.setState(SourceState.ERROR);\r\n    };\r\n    return TileJSON;\r\n}(TileImage));\r\nexport default TileJSON;\r\n//# sourceMappingURL=TileJSON.js.map","/**\r\n * @module ol/source/TileWMS\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { DEFAULT_WMS_VERSION } from './common.js';\r\nimport { assert } from '../asserts.js';\r\nimport { buffer, createEmpty } from '../extent.js';\r\nimport { assign } from '../obj.js';\r\nimport { modulo } from '../math.js';\r\nimport { get as getProjection, transform, transformExtent } from '../proj.js';\r\nimport { calculateSourceResolution } from '../reproj.js';\r\nimport { toSize, buffer as bufferSize, scale as scaleSize } from '../size.js';\r\nimport TileImage from './TileImage.js';\r\nimport WMSServerType from './WMSServerType.js';\r\nimport { hash as tileCoordHash } from '../tilecoord.js';\r\nimport { compareVersions } from '../string.js';\r\nimport { appendParams } from '../uri.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {Object<string,*>} params WMS request parameters.\r\n * At least a `LAYERS` param is required. `STYLES` is\r\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\r\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\r\n * @property {number} [gutter=0]\r\n * The size in pixels of the gutter around image tiles to ignore. By setting\r\n * this property to a non-zero value, images will be requested that are wider\r\n * and taller than the tile size by a value of `2 x gutter`.\r\n * Using a non-zero value allows artifacts of rendering at tile edges to be\r\n * ignored. If you control the WMS service it is recommended to address\r\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\r\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\r\n * this. See http://mapserver.org/output/tile_mode.html.\r\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\r\n * the image from the remote server.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\r\n * Default is {@link module:ol/ImageTile~ImageTile}.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\r\n * tilesize and extent supported by the server.\r\n * If this is not defined, a default grid will be used: if there is a projection\r\n * extent, the grid will be based on that; if not, a grid based on a global\r\n * extent with origin at 0,0 will be used..\r\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\r\n * The type of the remote WMS server. Currently only used when `hidpi` is\r\n * `true`.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {string} [url] WMS service URL.\r\n * @property {Array<string>} [urls] WMS service urls.\r\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * When set to `false`, only one world\r\n * will be rendered. When `true`, tiles will be requested for one world only,\r\n * but they will be wrapped horizontally to render multiple worlds.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n */\r\n/**\r\n * @classdesc\r\n * Layer source for tile data from WMS servers.\r\n * @api\r\n */\r\nvar TileWMS = /** @class */ (function (_super) {\r\n    __extends(TileWMS, _super);\r\n    /**\r\n     * @param {Options=} [opt_options] Tile WMS options.\r\n     */\r\n    function TileWMS(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options || /** @type {Options} */ ({});\r\n        var params = options.params || {};\r\n        var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\r\n        _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            cacheSize: options.cacheSize,\r\n            crossOrigin: options.crossOrigin,\r\n            opaque: !transparent,\r\n            projection: options.projection,\r\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n            tileClass: options.tileClass,\r\n            tileGrid: options.tileGrid,\r\n            tileLoadFunction: options.tileLoadFunction,\r\n            tileUrlFunction: tileUrlFunction,\r\n            url: options.url,\r\n            urls: options.urls,\r\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\r\n            transition: options.transition\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        _this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\r\n        /**\r\n         * @private\r\n         * @type {!Object}\r\n         */\r\n        _this.params_ = params;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.v13_ = true;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./WMSServerType.js\").default|undefined}\r\n         */\r\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../extent.js\").Extent}\r\n         */\r\n        _this.tmpExtent_ = createEmpty();\r\n        _this.updateV13_();\r\n        _this.setKey(_this.getKeyForParams_());\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\r\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\r\n     * constructed.\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @param {number} resolution Resolution.\r\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\r\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\r\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\r\n     *     specified here.\r\n     * @return {string|undefined} GetFeatureInfo URL.\r\n     * @api\r\n     */\r\n    TileWMS.prototype.getGetFeatureInfoUrl = function (coordinate, resolution, projection, params) {\r\n        var projectionObj = getProjection(projection);\r\n        var sourceProjectionObj = this.getProjection();\r\n        var tileGrid = this.getTileGrid();\r\n        if (!tileGrid) {\r\n            tileGrid = this.getTileGridForProjection(projectionObj);\r\n        }\r\n        var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\r\n        if (tileGrid.getResolutions().length <= tileCoord[0]) {\r\n            return undefined;\r\n        }\r\n        var tileResolution = tileGrid.getResolution(tileCoord[0]);\r\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\r\n        var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\r\n        var gutter = this.gutter_;\r\n        if (gutter !== 0) {\r\n            tileSize = bufferSize(tileSize, gutter, this.tmpSize);\r\n            tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\r\n        }\r\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\r\n            tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\r\n            tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\r\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\r\n        }\r\n        var baseParams = {\r\n            'SERVICE': 'WMS',\r\n            'VERSION': DEFAULT_WMS_VERSION,\r\n            'REQUEST': 'GetFeatureInfo',\r\n            'FORMAT': 'image/png',\r\n            'TRANSPARENT': true,\r\n            'QUERY_LAYERS': this.params_['LAYERS']\r\n        };\r\n        assign(baseParams, this.params_, params);\r\n        var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\r\n        var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\r\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\r\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\r\n        return this.getRequestUrl_(tileCoord, tileSize, tileExtent, 1, sourceProjectionObj || projectionObj, baseParams);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TileWMS.prototype.getGutter = function () {\r\n        return this.gutter_;\r\n    };\r\n    /**\r\n     * Get the user-provided params, i.e. those passed to the constructor through\r\n     * the \"params\" option, and possibly updated using the updateParams method.\r\n     * @return {Object} Params.\r\n     * @api\r\n     */\r\n    TileWMS.prototype.getParams = function () {\r\n        return this.params_;\r\n    };\r\n    /**\r\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\r\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @param {Object} params Params.\r\n     * @return {string|undefined} Request URL.\r\n     * @private\r\n     */\r\n    TileWMS.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\r\n        var urls = this.urls;\r\n        if (!urls) {\r\n            return undefined;\r\n        }\r\n        params['WIDTH'] = tileSize[0];\r\n        params['HEIGHT'] = tileSize[1];\r\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\r\n        if (!('STYLES' in this.params_)) {\r\n            params['STYLES'] = '';\r\n        }\r\n        if (pixelRatio != 1) {\r\n            switch (this.serverType_) {\r\n                case WMSServerType.GEOSERVER:\r\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\r\n                    if ('FORMAT_OPTIONS' in params) {\r\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\r\n                    }\r\n                    else {\r\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\r\n                    }\r\n                    break;\r\n                case WMSServerType.MAPSERVER:\r\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\r\n                    break;\r\n                case WMSServerType.CARMENTA_SERVER:\r\n                case WMSServerType.QGIS:\r\n                    params['DPI'] = 90 * pixelRatio;\r\n                    break;\r\n                default:\r\n                    assert(false, 52); // Unknown `serverType` configured\r\n                    break;\r\n            }\r\n        }\r\n        var axisOrientation = projection.getAxisOrientation();\r\n        var bbox = tileExtent;\r\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\r\n            var tmp = void 0;\r\n            tmp = tileExtent[0];\r\n            bbox[0] = tileExtent[1];\r\n            bbox[1] = tmp;\r\n            tmp = tileExtent[2];\r\n            bbox[2] = tileExtent[3];\r\n            bbox[3] = tmp;\r\n        }\r\n        params['BBOX'] = bbox.join(',');\r\n        var url;\r\n        if (urls.length == 1) {\r\n            url = urls[0];\r\n        }\r\n        else {\r\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\r\n            url = urls[index];\r\n        }\r\n        return appendParams(url, params);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TileWMS.prototype.getTilePixelRatio = function (pixelRatio) {\r\n        return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\r\n            /** @type {number} */ (pixelRatio);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {string} The key for the current params.\r\n     */\r\n    TileWMS.prototype.getKeyForParams_ = function () {\r\n        var i = 0;\r\n        var res = [];\r\n        for (var key in this.params_) {\r\n            res[i++] = key + '-' + this.params_[key];\r\n        }\r\n        return res.join('/');\r\n    };\r\n    /**\r\n     * Update the user-provided params.\r\n     * @param {Object} params Params.\r\n     * @api\r\n     */\r\n    TileWMS.prototype.updateParams = function (params) {\r\n        assign(this.params_, params);\r\n        this.updateV13_();\r\n        this.setKey(this.getKeyForParams_());\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    TileWMS.prototype.updateV13_ = function () {\r\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\r\n        this.v13_ = compareVersions(version, '1.3') >= 0;\r\n    };\r\n    return TileWMS;\r\n}(TileImage));\r\n/**\r\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\r\n * @param {number} pixelRatio The pixel ratio\r\n * @param {import(\"../proj/Projection.js\").default} projection The projection\r\n * @return {string|undefined} The tile URL\r\n * @this {TileWMS}\r\n */\r\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\r\n    var tileGrid = this.getTileGrid();\r\n    if (!tileGrid) {\r\n        tileGrid = this.getTileGridForProjection(projection);\r\n    }\r\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\r\n        return undefined;\r\n    }\r\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\r\n        pixelRatio = 1;\r\n    }\r\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\r\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\r\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\r\n    var gutter = this.gutter_;\r\n    if (gutter !== 0) {\r\n        tileSize = bufferSize(tileSize, gutter, this.tmpSize);\r\n        tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\r\n    }\r\n    if (pixelRatio != 1) {\r\n        tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\r\n    }\r\n    var baseParams = {\r\n        'SERVICE': 'WMS',\r\n        'VERSION': DEFAULT_WMS_VERSION,\r\n        'REQUEST': 'GetMap',\r\n        'FORMAT': 'image/png',\r\n        'TRANSPARENT': true\r\n    };\r\n    assign(baseParams, this.params_);\r\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\r\n}\r\nexport default TileWMS;\r\n//# sourceMappingURL=TileWMS.js.map","/**\r\n * @module ol/source/UTFGrid\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport Tile from '../Tile.js';\r\nimport TileState from '../TileState.js';\r\nimport { createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\r\nimport { assert } from '../asserts.js';\r\nimport { listenOnce } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { applyTransform, intersects } from '../extent.js';\r\nimport { jsonp as requestJSONP } from '../net.js';\r\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\r\nimport SourceState from './State.js';\r\nimport TileSource from './Tile.js';\r\nimport { getKeyZXY } from '../tilecoord.js';\r\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\r\n/**\r\n * @typedef {Object} UTFGridJSON\r\n * @property {Array<string>} grid The grid.\r\n * @property {Array<string>} keys The keys.\r\n * @property {Object<string, Object>} [data] Optional data.\r\n */\r\nvar CustomTile = /** @class */ (function (_super) {\r\n    __extends(CustomTile, _super);\r\n    /**\r\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @param {TileState} state State.\r\n     * @param {string} src Image source URI.\r\n     * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\r\n     * @param {boolean} preemptive Load the tile when visible (before it's needed).\r\n     * @param {boolean} jsonp Load the tile as a script.\r\n     */\r\n    function CustomTile(tileCoord, state, src, extent, preemptive, jsonp) {\r\n        var _this = _super.call(this, tileCoord, state) || this;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.src_ = src;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../extent.js\").Extent}\r\n         */\r\n        _this.extent_ = extent;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.preemptive_ = preemptive;\r\n        /**\r\n         * @private\r\n         * @type {Array<string>}\r\n         */\r\n        _this.grid_ = null;\r\n        /**\r\n         * @private\r\n         * @type {Array<string>}\r\n         */\r\n        _this.keys_ = null;\r\n        /**\r\n         * @private\r\n         * @type {Object<string, Object>|undefined}\r\n         */\r\n        _this.data_ = null;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.jsonp_ = jsonp;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get the image element for this tile.\r\n     * @return {HTMLImageElement} Image.\r\n     */\r\n    CustomTile.prototype.getImage = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * Synchronously returns data at given coordinate (if available).\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @return {*} The data.\r\n     */\r\n    CustomTile.prototype.getData = function (coordinate) {\r\n        if (!this.grid_ || !this.keys_) {\r\n            return null;\r\n        }\r\n        var xRelative = (coordinate[0] - this.extent_[0]) /\r\n            (this.extent_[2] - this.extent_[0]);\r\n        var yRelative = (coordinate[1] - this.extent_[1]) /\r\n            (this.extent_[3] - this.extent_[1]);\r\n        var row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\r\n        if (typeof row !== 'string') {\r\n            return null;\r\n        }\r\n        var code = row.charCodeAt(Math.floor(xRelative * row.length));\r\n        if (code >= 93) {\r\n            code--;\r\n        }\r\n        if (code >= 35) {\r\n            code--;\r\n        }\r\n        code -= 32;\r\n        var data = null;\r\n        if (code in this.keys_) {\r\n            var id = this.keys_[code];\r\n            if (this.data_ && id in this.data_) {\r\n                data = this.data_[id];\r\n            }\r\n            else {\r\n                data = id;\r\n            }\r\n        }\r\n        return data;\r\n    };\r\n    /**\r\n     * Calls the callback (synchronously by default) with the available data\r\n     * for given coordinate (or `null` if not yet loaded).\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @param {function(this: T, *): void} callback Callback.\r\n     * @param {T=} opt_this The object to use as `this` in the callback.\r\n     * @param {boolean=} opt_request If `true` the callback is always async.\r\n     *                               The tile data is requested if not yet loaded.\r\n     * @template T\r\n     */\r\n    CustomTile.prototype.forDataAtCoordinate = function (coordinate, callback, opt_this, opt_request) {\r\n        if (this.state == TileState.IDLE && opt_request === true) {\r\n            listenOnce(this, EventType.CHANGE, function (e) {\r\n                callback.call(opt_this, this.getData(coordinate));\r\n            }, this);\r\n            this.loadInternal_();\r\n        }\r\n        else {\r\n            if (opt_request === true) {\r\n                setTimeout(function () {\r\n                    callback.call(opt_this, this.getData(coordinate));\r\n                }.bind(this), 0);\r\n            }\r\n            else {\r\n                callback.call(opt_this, this.getData(coordinate));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CustomTile.prototype.getKey = function () {\r\n        return this.src_;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    CustomTile.prototype.handleError_ = function () {\r\n        this.state = TileState.ERROR;\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @param {!UTFGridJSON} json UTFGrid data.\r\n     * @private\r\n     */\r\n    CustomTile.prototype.handleLoad_ = function (json) {\r\n        this.grid_ = json['grid'];\r\n        this.keys_ = json['keys'];\r\n        this.data_ = json['data'];\r\n        this.state = TileState.EMPTY;\r\n        this.changed();\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    CustomTile.prototype.loadInternal_ = function () {\r\n        if (this.state == TileState.IDLE) {\r\n            this.state = TileState.LOADING;\r\n            if (this.jsonp_) {\r\n                requestJSONP(this.src_, this.handleLoad_.bind(this), this.handleError_.bind(this));\r\n            }\r\n            else {\r\n                var client = new XMLHttpRequest();\r\n                client.addEventListener('load', this.onXHRLoad_.bind(this));\r\n                client.addEventListener('error', this.onXHRError_.bind(this));\r\n                client.open('GET', this.src_);\r\n                client.send();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {Event} event The load event.\r\n     */\r\n    CustomTile.prototype.onXHRLoad_ = function (event) {\r\n        var client = /** @type {XMLHttpRequest} */ (event.target);\r\n        // status will be 0 for file:// urls\r\n        if (!client.status || client.status >= 200 && client.status < 300) {\r\n            var response = void 0;\r\n            try {\r\n                response = /** @type {!UTFGridJSON} */ (JSON.parse(client.responseText));\r\n            }\r\n            catch (err) {\r\n                this.handleError_();\r\n                return;\r\n            }\r\n            this.handleLoad_(response);\r\n        }\r\n        else {\r\n            this.handleError_();\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {Event} event The error event.\r\n     */\r\n    CustomTile.prototype.onXHRError_ = function (event) {\r\n        this.handleError_();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    CustomTile.prototype.load = function () {\r\n        if (this.preemptive_) {\r\n            this.loadInternal_();\r\n        }\r\n    };\r\n    return CustomTile;\r\n}(Tile));\r\nexport { CustomTile };\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean} [preemptive=true]\r\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\r\n * This improves the speed of response, but increases traffic.\r\n * Note that if set to `false`, you need to pass `true` as `opt_request`\r\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\r\n * will ever be loaded.\r\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\r\n * Useful when the server does not support CORS..\r\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\r\n * If not provided, `url` must be configured.\r\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\r\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\r\n */\r\n/**\r\n * @classdesc\r\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\r\n * @api\r\n */\r\nvar UTFGrid = /** @class */ (function (_super) {\r\n    __extends(UTFGrid, _super);\r\n    /**\r\n     * @param {Options} options Source options.\r\n     */\r\n    function UTFGrid(options) {\r\n        var _this = _super.call(this, {\r\n            projection: getProjection('EPSG:3857'),\r\n            state: SourceState.LOADING\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.preemptive_ = options.preemptive !== undefined ?\r\n            options.preemptive : true;\r\n        /**\r\n         * @private\r\n         * @type {!import(\"../Tile.js\").UrlFunction}\r\n         */\r\n        _this.tileUrlFunction_ = nullTileUrlFunction;\r\n        /**\r\n         * @private\r\n         * @type {string|undefined}\r\n         */\r\n        _this.template_ = undefined;\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.jsonp_ = options.jsonp || false;\r\n        if (options.url) {\r\n            if (_this.jsonp_) {\r\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\r\n            }\r\n            else {\r\n                var client = new XMLHttpRequest();\r\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\r\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\r\n                client.open('GET', options.url);\r\n                client.send();\r\n            }\r\n        }\r\n        else if (options.tileJSON) {\r\n            _this.handleTileJSONResponse(options.tileJSON);\r\n        }\r\n        else {\r\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {Event} event The load event.\r\n     */\r\n    UTFGrid.prototype.onXHRLoad_ = function (event) {\r\n        var client = /** @type {XMLHttpRequest} */ (event.target);\r\n        // status will be 0 for file:// urls\r\n        if (!client.status || client.status >= 200 && client.status < 300) {\r\n            var response = void 0;\r\n            try {\r\n                response = /** @type {import(\"./TileJSON.js\").Config} */ (JSON.parse(client.responseText));\r\n            }\r\n            catch (err) {\r\n                this.handleTileJSONError();\r\n                return;\r\n            }\r\n            this.handleTileJSONResponse(response);\r\n        }\r\n        else {\r\n            this.handleTileJSONError();\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {Event} event The error event.\r\n     */\r\n    UTFGrid.prototype.onXHRError_ = function (event) {\r\n        this.handleTileJSONError();\r\n    };\r\n    /**\r\n     * Return the template from TileJSON.\r\n     * @return {string|undefined} The template from TileJSON.\r\n     * @api\r\n     */\r\n    UTFGrid.prototype.getTemplate = function () {\r\n        return this.template_;\r\n    };\r\n    /**\r\n     * Calls the callback (synchronously by default) with the available data\r\n     * for given coordinate and resolution (or `null` if not yet loaded or\r\n     * in case of an error).\r\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @param {number} resolution Resolution.\r\n     * @param {function(*): void} callback Callback.\r\n     * @param {boolean=} opt_request If `true` the callback is always async.\r\n     *                               The tile data is requested if not yet loaded.\r\n     * @api\r\n     */\r\n    UTFGrid.prototype.forDataAtCoordinateAndResolution = function (coordinate, resolution, callback, opt_request) {\r\n        if (this.tileGrid) {\r\n            var tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\r\n            var tile = /** @type {!CustomTile} */ (this.getTile(tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\r\n            tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\r\n        }\r\n        else {\r\n            if (opt_request === true) {\r\n                setTimeout(function () {\r\n                    callback(null);\r\n                }, 0);\r\n            }\r\n            else {\r\n                callback(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    UTFGrid.prototype.handleTileJSONError = function () {\r\n        this.setState(SourceState.ERROR);\r\n    };\r\n    /**\r\n     * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\r\n     * @protected\r\n     * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\r\n     */\r\n    UTFGrid.prototype.handleTileJSONResponse = function (tileJSON) {\r\n        var epsg4326Projection = getProjection('EPSG:4326');\r\n        var sourceProjection = this.getProjection();\r\n        var extent;\r\n        if (tileJSON['bounds'] !== undefined) {\r\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\r\n            extent = applyTransform(tileJSON['bounds'], transform);\r\n        }\r\n        var minZoom = tileJSON['minzoom'] || 0;\r\n        var maxZoom = tileJSON['maxzoom'] || 22;\r\n        var tileGrid = createXYZ({\r\n            extent: extentFromProjection(sourceProjection),\r\n            maxZoom: maxZoom,\r\n            minZoom: minZoom\r\n        });\r\n        this.tileGrid = tileGrid;\r\n        this.template_ = tileJSON['template'];\r\n        var grids = tileJSON['grids'];\r\n        if (!grids) {\r\n            this.setState(SourceState.ERROR);\r\n            return;\r\n        }\r\n        this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\r\n        if (tileJSON['attribution'] !== undefined) {\r\n            var attributionExtent_1 = extent !== undefined ?\r\n                extent : epsg4326Projection.getExtent();\r\n            this.setAttributions(function (frameState) {\r\n                if (intersects(attributionExtent_1, frameState.extent)) {\r\n                    return [tileJSON['attribution']];\r\n                }\r\n                return null;\r\n            });\r\n        }\r\n        this.setState(SourceState.READY);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    UTFGrid.prototype.getTile = function (z, x, y, pixelRatio, projection) {\r\n        var tileCoordKey = getKeyZXY(z, x, y);\r\n        if (this.tileCache.containsKey(tileCoordKey)) {\r\n            return (\r\n            /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey)));\r\n        }\r\n        else {\r\n            var tileCoord = [z, x, y];\r\n            var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\r\n            var tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\r\n            var tile = new CustomTile(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.tileGrid.getTileCoordExtent(tileCoord), this.preemptive_, this.jsonp_);\r\n            this.tileCache.set(tileCoordKey, tile);\r\n            return tile;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    UTFGrid.prototype.useTile = function (z, x, y) {\r\n        var tileCoordKey = getKeyZXY(z, x, y);\r\n        if (this.tileCache.containsKey(tileCoordKey)) {\r\n            this.tileCache.get(tileCoordKey);\r\n        }\r\n    };\r\n    return UTFGrid;\r\n}(TileSource));\r\nexport default UTFGrid;\r\n//# sourceMappingURL=UTFGrid.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/VectorRenderTile\r\n */\r\nimport { getUid } from './util.js';\r\nimport Tile from './Tile.js';\r\nimport TileState from './TileState.js';\r\nimport { createCanvasContext2D } from './dom.js';\r\n/**\r\n * @typedef {Object} ReplayState\r\n * @property {boolean} dirty\r\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder\r\n * @property {number} renderedTileRevision\r\n * @property {number} renderedRevision\r\n * @property {number} renderedZ\r\n * @property {number} renderedTileZ\r\n */\r\nvar VectorRenderTile = /** @class */ (function (_super) {\r\n    __extends(VectorRenderTile, _super);\r\n    /**\r\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @param {TileState} state State.\r\n     * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\r\n     * @param {import(\"./tilegrid/TileGrid.js\").default} sourceTileGrid Tile grid of the source.\r\n     * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\r\n     * to get an source tiles for this tile.\r\n     * @param {function(VectorRenderTile):void} removeSourceTiles Function to remove this tile from its\r\n     * source tiles's consumer count.\r\n     */\r\n    function VectorRenderTile(tileCoord, state, urlTileCoord, sourceTileGrid, getSourceTiles, removeSourceTiles) {\r\n        var _this = _super.call(this, tileCoord, state, { transition: 0 }) || this;\r\n        /**\r\n         * @private\r\n         * @type {!Object<string, CanvasRenderingContext2D>}\r\n         */\r\n        _this.context_ = {};\r\n        /**\r\n         * Executor groups by layer uid. Entries are read/written by the renderer.\r\n         * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\r\n         */\r\n        _this.executorGroups = {};\r\n        /**\r\n         * Number of loading source tiles. Read/written by the source.\r\n         * @type {number}\r\n         */\r\n        _this.loadingSourceTiles = 0;\r\n        /**\r\n         * Tile keys of error source tiles. Read/written by the source.\r\n         * @type {Object<string, boolean>}\r\n         */\r\n        _this.errorSourceTileKeys = {};\r\n        /**\r\n         * @private\r\n         * @type {!Object<string, ReplayState>}\r\n         */\r\n        _this.replayState_ = {};\r\n        /**\r\n         * @type {!function(import(\"./VectorRenderTile.js\").default):Array<import(\"./VectorTile.js\").default>}\r\n         */\r\n        _this.getSourceTiles_ = getSourceTiles;\r\n        /**\r\n         * @type {!function(import(\"./VectorRenderTile.js\").default):void}\r\n         */\r\n        _this.removeSourceTiles_ = removeSourceTiles;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./tilegrid/TileGrid.js\").default}\r\n         */\r\n        _this.sourceTileGrid_ = sourceTileGrid;\r\n        /**\r\n         * z of the source tiles of the last getSourceTiles call.\r\n         * @type {number}\r\n         */\r\n        _this.sourceZ = -1;\r\n        /**\r\n         * True when all tiles for this tile's nominal resolution are available.\r\n         * @type {boolean}\r\n         */\r\n        _this.hifi = false;\r\n        /**\r\n         * @type {import(\"./tilecoord.js\").TileCoord}\r\n         */\r\n        _this.wrappedTileCoord = urlTileCoord;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    VectorRenderTile.prototype.disposeInternal = function () {\r\n        this.removeSourceTiles_(this);\r\n        for (var key in this.context_) {\r\n            var canvas = this.context_[key].canvas;\r\n            canvas.width = canvas.height = 0;\r\n        }\r\n        for (var key in this.executorGroups) {\r\n            var executorGroups = this.executorGroups[key];\r\n            for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\r\n                executorGroups[i].disposeInternal();\r\n            }\r\n        }\r\n        this.setState(TileState.ABORT);\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    /**\r\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\r\n     * @return {CanvasRenderingContext2D} The rendering context.\r\n     */\r\n    VectorRenderTile.prototype.getContext = function (layer) {\r\n        var key = getUid(layer);\r\n        if (!(key in this.context_)) {\r\n            this.context_[key] = createCanvasContext2D();\r\n        }\r\n        return this.context_[key];\r\n    };\r\n    /**\r\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\r\n     * @return {boolean} Tile has a rendering context for the given layer.\r\n     */\r\n    VectorRenderTile.prototype.hasContext = function (layer) {\r\n        return getUid(layer) in this.context_;\r\n    };\r\n    /**\r\n     * Get the Canvas for this tile.\r\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\r\n     * @return {HTMLCanvasElement} Canvas.\r\n     */\r\n    VectorRenderTile.prototype.getImage = function (layer) {\r\n        return this.hasContext(layer) ? this.getContext(layer).canvas : null;\r\n    };\r\n    /**\r\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\r\n     * @return {ReplayState} The replay state.\r\n     */\r\n    VectorRenderTile.prototype.getReplayState = function (layer) {\r\n        var key = getUid(layer);\r\n        if (!(key in this.replayState_)) {\r\n            this.replayState_[key] = {\r\n                dirty: false,\r\n                renderedRenderOrder: null,\r\n                renderedRevision: -1,\r\n                renderedTileRevision: -1,\r\n                renderedZ: -1,\r\n                renderedTileZ: -1\r\n            };\r\n        }\r\n        return this.replayState_[key];\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     * @return {Array<import(\"./VectorTile.js\").default>} Source tiles for this tile.\r\n     */\r\n    VectorRenderTile.prototype.load = function () {\r\n        return this.getSourceTiles_(this);\r\n    };\r\n    return VectorRenderTile;\r\n}(Tile));\r\nexport default VectorRenderTile;\r\n//# sourceMappingURL=VectorRenderTile.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/VectorTile\r\n */\r\nimport Tile from './Tile.js';\r\nimport TileState from './TileState.js';\r\n/**\r\n * @const\r\n * @type {import(\"./extent.js\").Extent}\r\n */\r\nvar DEFAULT_EXTENT = [0, 0, 4096, 4096];\r\nvar VectorTile = /** @class */ (function (_super) {\r\n    __extends(VectorTile, _super);\r\n    /**\r\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @param {TileState} state State.\r\n     * @param {string} src Data source url.\r\n     * @param {import(\"./format/Feature.js\").default} format Feature format.\r\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\r\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\r\n     */\r\n    function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\r\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        _this.consumers = 0;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./extent.js\").Extent}\r\n         */\r\n        _this.extent_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./format/Feature.js\").default}\r\n         */\r\n        _this.format_ = format;\r\n        /**\r\n         * @private\r\n         * @type {Array<import(\"./Feature.js\").default>}\r\n         */\r\n        _this.features_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./featureloader.js\").FeatureLoader}\r\n         */\r\n        _this.loader_;\r\n        /**\r\n         * Data projection\r\n         * @private\r\n         * @type {import(\"./proj/Projection.js\").default}\r\n         */\r\n        _this.projection_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"./Tile.js\").LoadFunction}\r\n         */\r\n        _this.tileLoadFunction_ = tileLoadFunction;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.url_ = src;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    VectorTile.prototype.disposeInternal = function () {\r\n        this.setState(TileState.ABORT);\r\n        _super.prototype.disposeInternal.call(this);\r\n    };\r\n    /**\r\n     * Gets the extent of the vector tile.\r\n     * @return {import(\"./extent.js\").Extent} The extent.\r\n     * @api\r\n     */\r\n    VectorTile.prototype.getExtent = function () {\r\n        return this.extent_ || DEFAULT_EXTENT;\r\n    };\r\n    /**\r\n     * Get the feature format assigned for reading this tile's features.\r\n     * @return {import(\"./format/Feature.js\").default} Feature format.\r\n     * @api\r\n     */\r\n    VectorTile.prototype.getFormat = function () {\r\n        return this.format_;\r\n    };\r\n    /**\r\n     * Get the features for this tile. Geometries will be in the projection returned\r\n     * by {@link module:ol/VectorTile~VectorTile#getProjection}.\r\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\r\n     * @api\r\n     */\r\n    VectorTile.prototype.getFeatures = function () {\r\n        return this.features_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    VectorTile.prototype.getKey = function () {\r\n        return this.url_;\r\n    };\r\n    /**\r\n     * Get the feature projection of features returned by\r\n     * {@link module:ol/VectorTile~VectorTile#getFeatures}.\r\n     * @return {import(\"./proj/Projection.js\").default} Feature projection.\r\n     * @api\r\n     */\r\n    VectorTile.prototype.getProjection = function () {\r\n        return this.projection_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    VectorTile.prototype.load = function () {\r\n        if (this.state == TileState.IDLE) {\r\n            this.setState(TileState.LOADING);\r\n            this.tileLoadFunction_(this, this.url_);\r\n            this.loader_(null, NaN, null);\r\n        }\r\n    };\r\n    /**\r\n     * Handler for successful tile load.\r\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\r\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\r\n     * @param {import(\"./extent.js\").Extent} extent Extent.\r\n     */\r\n    VectorTile.prototype.onLoad = function (features, dataProjection, extent) {\r\n        this.setProjection(dataProjection);\r\n        this.setFeatures(features);\r\n        this.setExtent(extent);\r\n    };\r\n    /**\r\n     * Handler for tile load errors.\r\n     */\r\n    VectorTile.prototype.onError = function () {\r\n        this.setState(TileState.ERROR);\r\n    };\r\n    /**\r\n     * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\r\n     * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\r\n     * for tiles in projections with `tile-pixels` as units. The extent should be\r\n     * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\r\n     * calculated by multiplying the tile size with the tile pixel ratio. For\r\n     * sources using {@link module:ol/format/MVT~MVT} as feature format, the\r\n     * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\r\n     * extent. The default is `[0, 0, 4096, 4096]`.\r\n     * @param {import(\"./extent.js\").Extent} extent The extent.\r\n     * @api\r\n     */\r\n    VectorTile.prototype.setExtent = function (extent) {\r\n        this.extent_ = extent;\r\n    };\r\n    /**\r\n     * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\r\n     * Sets the features for the tile.\r\n     * @param {Array<import(\"./Feature.js\").default>} features Features.\r\n     * @api\r\n     */\r\n    VectorTile.prototype.setFeatures = function (features) {\r\n        this.features_ = features;\r\n        this.setState(TileState.LOADED);\r\n    };\r\n    /**\r\n     * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\r\n     * Sets the projection of the features that were added with\r\n     * {@link module:ol/VectorTile~VectorTile#setFeatures}.\r\n     * @param {import(\"./proj/Projection.js\").default} projection Feature projection.\r\n     * @api\r\n     */\r\n    VectorTile.prototype.setProjection = function (projection) {\r\n        this.projection_ = projection;\r\n    };\r\n    /**\r\n     * Set the feature loader for reading this tile's features.\r\n     * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\r\n     * @api\r\n     */\r\n    VectorTile.prototype.setLoader = function (loader) {\r\n        this.loader_ = loader;\r\n    };\r\n    return VectorTile;\r\n}(Tile));\r\nexport default VectorTile;\r\n//# sourceMappingURL=VectorTile.js.map","/**\r\n * @module ol/source/VectorTile\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport TileState from '../TileState.js';\r\nimport VectorRenderTile from '../VectorRenderTile.js';\r\nimport Tile from '../VectorTile.js';\r\nimport { toSize } from '../size.js';\r\nimport UrlTile from './UrlTile.js';\r\nimport { getKeyZXY, getKey } from '../tilecoord.js';\r\nimport { createXYZ, extentFromProjection, createForProjection } from '../tilegrid.js';\r\nimport { buffer as bufferExtent, getIntersection } from '../extent.js';\r\nimport { listen, unlistenByKey } from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport { loadFeaturesXhr } from '../featureloader.js';\r\nimport { isEmpty } from '../obj.js';\r\nimport { equals } from '../array.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize=128] Cache size.\r\n * @property {import(\"../extent.js\").Extent} [extent]\r\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\r\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\r\n * to `false` (e.g. for sources with polygons that represent administrative\r\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\r\n * stroke operations.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {import(\"./State.js\").default} [state] Source state.\r\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\r\n * Default is {@link module:ol/VectorTile}.\r\n * @property {number} [maxZoom=22] Optional max zoom level.\r\n * @property {number} [minZoom] Optional min zoom level.\r\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\r\n * Optional function to load a tile given a URL. Could look like this:\r\n * ```js\r\n * function(tile, url) {\r\n *   tile.setLoader(function() {\r\n *     var data = // ... fetch data\r\n *     var format = tile.getFormat();\r\n *     tile.setProjection(format.readProjection(data));\r\n *     tile.setFeatures(format.readFeatures(data, {\r\n *       // featureProjection is not required for ol/format/MVT\r\n *       featureProjection: map.getView().getProjection()\r\n *     }));\r\n *     // the line below is only required for ol/format/MVT\r\n *     tile.setExtent(format.getLastExtent());\r\n *   }\r\n * });\r\n * ```\r\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\r\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\r\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\r\n * used instead of defining each one separately in the `urls` option.\r\n * @property {number} [transition] A duration for tile opacity\r\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\r\n * @property {Array<string>} [urls] An array of URL templates.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * When set to `false`, only one world\r\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\r\n * render multiple worlds.\r\n */\r\n/**\r\n * @classdesc\r\n * Class for layer sources providing vector data divided into a tile grid, to be\r\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\r\n * with vector features from the server, it is not meant for feature editing.\r\n * Features are optimized for rendering, their geometries are clipped at or near\r\n * tile boundaries and simplified for a view resolution. See\r\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\r\n * editing.\r\n *\r\n * @fires import(\"./Tile.js\").TileSourceEvent\r\n * @api\r\n */\r\nvar VectorTile = /** @class */ (function (_super) {\r\n    __extends(VectorTile, _super);\r\n    /**\r\n     * @param {!Options} options Vector tile options.\r\n     */\r\n    function VectorTile(options) {\r\n        var _this = this;\r\n        var projection = options.projection || 'EPSG:3857';\r\n        var extent = options.extent || extentFromProjection(projection);\r\n        var tileGrid = options.tileGrid || createXYZ({\r\n            extent: extent,\r\n            maxZoom: options.maxZoom || 22,\r\n            minZoom: options.minZoom,\r\n            tileSize: options.tileSize || 512\r\n        });\r\n        _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            cacheSize: options.cacheSize,\r\n            opaque: false,\r\n            projection: projection,\r\n            state: options.state,\r\n            tileGrid: tileGrid,\r\n            tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\r\n            tileUrlFunction: options.tileUrlFunction,\r\n            url: options.url,\r\n            urls: options.urls,\r\n            wrapX: options.wrapX === undefined ? true : options.wrapX,\r\n            transition: options.transition\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../format/Feature.js\").default}\r\n         */\r\n        _this.format_ = options.format ? options.format : null;\r\n        /**\r\n         * @type {Object<string, import(\"./VectorTile\").default>}\r\n         */\r\n        _this.loadingTiles_ = {};\r\n        /**\r\n         * @private\r\n         * @type {Object<string, import(\"../VectorTile.js\").default>}\r\n         */\r\n        _this.sourceTiles_ = {};\r\n        /**\r\n         * @private\r\n         * @type {Object<string, Array<import(\"../VectorTile.js\").default>>}\r\n         */\r\n        _this.sourceTilesByTileKey_ = {};\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\r\n        /**\r\n         * @protected\r\n         * @type {typeof import(\"../VectorTile.js\").default}\r\n         */\r\n        _this.tileClass = options.tileClass ? options.tileClass : Tile;\r\n        /**\r\n         * @private\r\n         * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\r\n         */\r\n        _this.tileGrids_ = {};\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {boolean} The source can have overlapping geometries.\r\n     */\r\n    VectorTile.prototype.getOverlaps = function () {\r\n        return this.overlaps_;\r\n    };\r\n    /**\r\n     * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\r\n     * @api\r\n     */\r\n    VectorTile.prototype.clear = function () {\r\n        this.tileCache.clear();\r\n        this.sourceTiles_ = {};\r\n        this.sourceTilesByTileKey_ = {};\r\n    };\r\n    /**\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../proj/Projection\").default} projection Projection.\r\n     * @param {VectorRenderTile} tile Vector image tile.\r\n     * @return {Array<import(\"../VectorTile\").default>} Tile keys.\r\n     */\r\n    VectorTile.prototype.getSourceTiles = function (pixelRatio, projection, tile) {\r\n        var sourceTiles = [];\r\n        var urlTileCoord = tile.wrappedTileCoord;\r\n        if (urlTileCoord) {\r\n            var tileGrid = this.getTileGridForProjection(projection);\r\n            var extent = tileGrid.getTileCoordExtent(urlTileCoord);\r\n            var z = urlTileCoord[0];\r\n            var resolution = tileGrid.getResolution(z);\r\n            // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\r\n            bufferExtent(extent, -1 / resolution, extent);\r\n            var sourceTileGrid = this.tileGrid;\r\n            var sourceExtent = sourceTileGrid.getExtent();\r\n            if (sourceExtent) {\r\n                getIntersection(extent, sourceTileGrid.getExtent(), extent);\r\n            }\r\n            var sourceZ_1 = sourceTileGrid.getZForResolution(resolution);\r\n            var minZoom = sourceTileGrid.getMinZoom();\r\n            var loadedZ_1 = sourceZ_1 + 1;\r\n            var covered_1, empty_1;\r\n            do {\r\n                --loadedZ_1;\r\n                covered_1 = true;\r\n                empty_1 = true;\r\n                sourceTileGrid.forEachTileCoord(extent, loadedZ_1, function (sourceTileCoord) {\r\n                    var tileKey = getKey(sourceTileCoord);\r\n                    var sourceTile;\r\n                    if (tileKey in this.sourceTiles_) {\r\n                        sourceTile = this.sourceTiles_[tileKey];\r\n                        var state = sourceTile.getState();\r\n                        if (state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\r\n                            empty_1 = empty_1 && state === TileState.EMPTY;\r\n                            sourceTiles.push(sourceTile);\r\n                            return;\r\n                        }\r\n                    }\r\n                    else if (loadedZ_1 === sourceZ_1) {\r\n                        var tileUrl = this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\r\n                        sourceTile = new this.tileClass(sourceTileCoord, tileUrl == undefined ? TileState.EMPTY : TileState.IDLE, tileUrl == undefined ? '' : tileUrl, this.format_, this.tileLoadFunction);\r\n                        this.sourceTiles_[tileKey] = sourceTile;\r\n                        empty_1 = empty_1 && sourceTile.getState() === TileState.EMPTY;\r\n                        listen(sourceTile, EventType.CHANGE, this.handleTileChange, this);\r\n                        sourceTile.load();\r\n                    }\r\n                    else {\r\n                        empty_1 = false;\r\n                    }\r\n                    covered_1 = false;\r\n                    if (!sourceTile) {\r\n                        return;\r\n                    }\r\n                    if (sourceTile.getState() !== TileState.EMPTY && tile.getState() === TileState.IDLE) {\r\n                        tile.loadingSourceTiles++;\r\n                        var key_1 = listen(sourceTile, EventType.CHANGE, function () {\r\n                            var state = sourceTile.getState();\r\n                            var sourceTileKey = getKey(sourceTile.tileCoord);\r\n                            if (state === TileState.LOADED || state === TileState.ERROR) {\r\n                                if (state === TileState.LOADED) {\r\n                                    unlistenByKey(key_1);\r\n                                    tile.loadingSourceTiles--;\r\n                                    delete tile.errorSourceTileKeys[sourceTileKey];\r\n                                }\r\n                                else if (state === TileState.ERROR) {\r\n                                    tile.errorSourceTileKeys[sourceTileKey] = true;\r\n                                }\r\n                                if (tile.loadingSourceTiles - Object.keys(tile.errorSourceTileKeys).length === 0) {\r\n                                    tile.hifi = true;\r\n                                    tile.sourceZ = sourceZ_1;\r\n                                    tile.setState(isEmpty(tile.errorSourceTileKeys) ? TileState.LOADED : TileState.ERROR);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }.bind(this));\r\n                if (!covered_1) {\r\n                    sourceTiles.length = 0;\r\n                }\r\n            } while (!covered_1 && loadedZ_1 > minZoom);\r\n            if (!empty_1 && tile.getState() === TileState.IDLE) {\r\n                tile.setState(TileState.LOADING);\r\n            }\r\n            if (covered_1 || empty_1) {\r\n                tile.hifi = sourceZ_1 === loadedZ_1;\r\n                tile.sourceZ = loadedZ_1;\r\n                var previousSourceTiles = this.sourceTilesByTileKey_[getKey(tile.tileCoord)];\r\n                if (tile.getState() < TileState.LOADED) {\r\n                    tile.setState(empty_1 ? TileState.EMPTY : TileState.LOADED);\r\n                }\r\n                else if (!previousSourceTiles || !equals(sourceTiles, previousSourceTiles)) {\r\n                    this.removeSourceTiles(tile);\r\n                    this.addSourceTiles(tile, sourceTiles);\r\n                }\r\n            }\r\n        }\r\n        return sourceTiles;\r\n    };\r\n    /**\r\n     * @param {VectorRenderTile} tile Tile.\r\n     * @param {Array<import(\"../VectorTile\").default>} sourceTiles Source tiles.\r\n     */\r\n    VectorTile.prototype.addSourceTiles = function (tile, sourceTiles) {\r\n        this.sourceTilesByTileKey_[getKey(tile.tileCoord)] = sourceTiles;\r\n        for (var i = 0, ii = sourceTiles.length; i < ii; ++i) {\r\n            sourceTiles[i].consumers++;\r\n        }\r\n    };\r\n    /**\r\n     * @param {VectorRenderTile} tile Tile.\r\n     */\r\n    VectorTile.prototype.removeSourceTiles = function (tile) {\r\n        var tileKey = getKey(tile.tileCoord);\r\n        if (tileKey in this.sourceTilesByTileKey_) {\r\n            var sourceTiles = this.sourceTilesByTileKey_[tileKey];\r\n            for (var i = 0, ii = sourceTiles.length; i < ii; ++i) {\r\n                var sourceTile = sourceTiles[i];\r\n                sourceTile.consumers--;\r\n                if (sourceTile.consumers === 0) {\r\n                    sourceTile.dispose();\r\n                    delete this.sourceTiles_[getKey(sourceTile.tileCoord)];\r\n                }\r\n            }\r\n        }\r\n        delete this.sourceTilesByTileKey_[tileKey];\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    VectorTile.prototype.getTile = function (z, x, y, pixelRatio, projection) {\r\n        var tileCoordKey = getKeyZXY(z, x, y);\r\n        if (this.tileCache.containsKey(tileCoordKey)) {\r\n            return (\r\n            /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey)));\r\n        }\r\n        else {\r\n            var tileCoord = [z, x, y];\r\n            var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\r\n            var tile = new VectorRenderTile(tileCoord, urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY, urlTileCoord, this.tileGrid, this.getSourceTiles.bind(this, pixelRatio, projection), this.removeSourceTiles.bind(this));\r\n            tile.key = this.getRevision().toString();\r\n            this.tileCache.set(tileCoordKey, tile);\r\n            return tile;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    VectorTile.prototype.getTileGridForProjection = function (projection) {\r\n        var code = projection.getCode();\r\n        var tileGrid = this.tileGrids_[code];\r\n        if (!tileGrid) {\r\n            // A tile grid that matches the tile size of the source tile grid is more\r\n            // likely to have 1:1 relationships between source tiles and rendered tiles.\r\n            var sourceTileGrid = this.tileGrid;\r\n            tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined, sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\r\n        }\r\n        return tileGrid;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    VectorTile.prototype.getTilePixelRatio = function (pixelRatio) {\r\n        return pixelRatio;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    VectorTile.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\r\n        var tileGrid = this.getTileGridForProjection(projection);\r\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\r\n        return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\r\n    };\r\n    return VectorTile;\r\n}(UrlTile));\r\nexport default VectorTile;\r\n/**\r\n * Sets the loader for a tile.\r\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\r\n * @param {string} url URL.\r\n */\r\nexport function defaultLoadFunction(tile, url) {\r\n    var loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\r\n    tile.setLoader(loader);\r\n}\r\n//# sourceMappingURL=VectorTile.js.map","/**\r\n * @module ol/source/WMTSRequestEncoding\r\n */\r\n/**\r\n * Request encoding. One of 'KVP', 'REST'.\r\n * @enum {string}\r\n */\r\nexport default {\r\n    KVP: 'KVP',\r\n    REST: 'REST' // see spec §10\r\n};\r\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\r\n * @module ol/tilegrid/WMTS\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { find } from '../array.js';\r\nimport { get as getProjection } from '../proj.js';\r\nimport TileGrid from './TileGrid.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\r\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\r\n * When no `origin` or `origins` are configured, the `origin` will be set to the\r\n * top-left corner of the extent.\r\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\r\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\r\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\r\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\r\n * given, the array length should match the length of the `resolutions` array, i.e.\r\n * each resolution can have a different origin. Tile coordinates increase left to\r\n * right and upwards. If not specified, `extent` or `origin` must be provided.\r\n * @property {!Array<number>} resolutions Resolutions. The array index of each\r\n * resolution needs to match the zoom level. This means that even if a `minZoom`\r\n * is configured, the resolutions array will have a length of `maxZoom + 1`\r\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\r\n * to match the length of the `resolutions` array.\r\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\r\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\r\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\r\n * define the grid's extent together with the `origin`.\r\n * An `extent` can be configured in addition, and will further limit the extent for\r\n * which tile requests are made by sources. If the bottom-left corner of\r\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\r\n * negative because OpenLayers tile coordinates use the top left as the origin.\r\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\r\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\r\n * this array needs to match the length of the `resolutions` array.\r\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\r\n * extent for each zoom level. Only required when used with a source that has `wrapX`\r\n * set to `true`, and only when the grid's origin differs from the one of the\r\n * projection's extent. The array length has to match the length of the `resolutions`\r\n * array, i.e. each resolution will have a matching entry here.\r\n */\r\n/**\r\n * @classdesc\r\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\r\n * @api\r\n */\r\nvar WMTSTileGrid = /** @class */ (function (_super) {\r\n    __extends(WMTSTileGrid, _super);\r\n    /**\r\n     * @param {Options} options WMTS options.\r\n     */\r\n    function WMTSTileGrid(options) {\r\n        var _this = _super.call(this, {\r\n            extent: options.extent,\r\n            origin: options.origin,\r\n            origins: options.origins,\r\n            resolutions: options.resolutions,\r\n            tileSize: options.tileSize,\r\n            tileSizes: options.tileSizes,\r\n            sizes: options.sizes\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {!Array<string>}\r\n         */\r\n        _this.matrixIds_ = options.matrixIds;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {number} z Z.\r\n     * @return {string} MatrixId..\r\n     */\r\n    WMTSTileGrid.prototype.getMatrixId = function (z) {\r\n        return this.matrixIds_[z];\r\n    };\r\n    /**\r\n     * Get the list of matrix identifiers.\r\n     * @return {Array<string>} MatrixIds.\r\n     * @api\r\n     */\r\n    WMTSTileGrid.prototype.getMatrixIds = function () {\r\n        return this.matrixIds_;\r\n    };\r\n    return WMTSTileGrid;\r\n}(TileGrid));\r\nexport default WMTSTileGrid;\r\n/**\r\n * Create a tile grid from a WMTS capabilities matrix set and an\r\n * optional TileMatrixSetLimits.\r\n * @param {Object} matrixSet An object representing a matrixSet in the\r\n *     capabilities document.\r\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\r\n *     ranges the server provides.\r\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\r\n *     the available matrices for tileGrid.\r\n * @return {WMTSTileGrid} WMTS tileGrid instance.\r\n * @api\r\n */\r\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\r\n    /** @type {!Array<number>} */\r\n    var resolutions = [];\r\n    /** @type {!Array<string>} */\r\n    var matrixIds = [];\r\n    /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\r\n    var origins = [];\r\n    /** @type {!Array<import(\"../size.js\").Size>} */\r\n    var tileSizes = [];\r\n    /** @type {!Array<import(\"../size.js\").Size>} */\r\n    var sizes = [];\r\n    var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\r\n    var supportedCRSPropName = 'SupportedCRS';\r\n    var matrixIdsPropName = 'TileMatrix';\r\n    var identifierPropName = 'Identifier';\r\n    var scaleDenominatorPropName = 'ScaleDenominator';\r\n    var topLeftCornerPropName = 'TopLeftCorner';\r\n    var tileWidthPropName = 'TileWidth';\r\n    var tileHeightPropName = 'TileHeight';\r\n    var code = matrixSet[supportedCRSPropName];\r\n    var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\r\n        getProjection(code);\r\n    var metersPerUnit = projection.getMetersPerUnit();\r\n    // swap origin x and y coordinates if axis orientation is lat/long\r\n    var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\r\n    matrixSet[matrixIdsPropName].sort(function (a, b) {\r\n        return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\r\n    });\r\n    matrixSet[matrixIdsPropName].forEach(function (elt) {\r\n        var matrixAvailable;\r\n        // use of matrixLimits to filter TileMatrices from GetCapabilities\r\n        // TileMatrixSet from unavailable matrix levels.\r\n        if (matrixLimits.length > 0) {\r\n            matrixAvailable = find(matrixLimits, function (elt_ml) {\r\n                if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\r\n                    return true;\r\n                }\r\n                // Fallback for tileMatrix identifiers that don't get prefixed\r\n                // by their tileMatrixSet identifiers.\r\n                if (elt[identifierPropName].indexOf(':') === -1) {\r\n                    return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        else {\r\n            matrixAvailable = true;\r\n        }\r\n        if (matrixAvailable) {\r\n            matrixIds.push(elt[identifierPropName]);\r\n            var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\r\n            var tileWidth = elt[tileWidthPropName];\r\n            var tileHeight = elt[tileHeightPropName];\r\n            if (switchOriginXY) {\r\n                origins.push([elt[topLeftCornerPropName][1],\r\n                    elt[topLeftCornerPropName][0]]);\r\n            }\r\n            else {\r\n                origins.push(elt[topLeftCornerPropName]);\r\n            }\r\n            resolutions.push(resolution);\r\n            tileSizes.push(tileWidth == tileHeight ?\r\n                tileWidth : [tileWidth, tileHeight]);\r\n            sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\r\n        }\r\n    });\r\n    return new WMTSTileGrid({\r\n        extent: opt_extent,\r\n        origins: origins,\r\n        resolutions: resolutions,\r\n        matrixIds: matrixIds,\r\n        tileSizes: tileSizes,\r\n        sizes: sizes\r\n    });\r\n}\r\n//# sourceMappingURL=WMTS.js.map","/**\r\n * @module ol/source/WMTS\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { expandUrl, createFromTileUrlFunctions, nullTileUrlFunction } from '../tileurlfunction.js';\r\nimport { find, findIndex, includes } from '../array.js';\r\nimport { containsExtent } from '../extent.js';\r\nimport { assign } from '../obj.js';\r\nimport { get as getProjection, equivalent, transformExtent } from '../proj.js';\r\nimport TileImage from './TileImage.js';\r\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\r\nimport { createFromCapabilitiesMatrixSet } from '../tilegrid/WMTS.js';\r\nimport { appendParams } from '../uri.js';\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\r\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\r\n * @property {string} style Style name as advertised in the WMTS capabilities.\r\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\r\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\r\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\r\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\r\n * should be set to `2`.\r\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\r\n * @property {string} [version='1.0.0'] WMTS version.\r\n * @property {string} matrixSet Matrix set.\r\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\r\n * This is an object with properties named like the advertised WMTS dimensions.\r\n * @property {string} [url]  A URL for the service.\r\n * For the RESTful request encoding, this is a URL\r\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\r\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\r\n * each one separately in the `urls` option.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {Array<string>} [urls] An array of URLs.\r\n * Requests will be distributed among the URLs in this array.\r\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n */\r\n/**\r\n * @classdesc\r\n * Layer source for tile data from WMTS servers.\r\n * @api\r\n */\r\nvar WMTS = /** @class */ (function (_super) {\r\n    __extends(WMTS, _super);\r\n    /**\r\n     * @param {Options} options WMTS options.\r\n     */\r\n    function WMTS(options) {\r\n        // TODO: add support for TileMatrixLimits\r\n        var _this = this;\r\n        var requestEncoding = options.requestEncoding !== undefined ?\r\n            /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\r\n            WMTSRequestEncoding.KVP;\r\n        // FIXME: should we create a default tileGrid?\r\n        // we could issue a getCapabilities xhr to retrieve missing configuration\r\n        var tileGrid = options.tileGrid;\r\n        var urls = options.urls;\r\n        if (urls === undefined && options.url !== undefined) {\r\n            urls = expandUrl(options.url);\r\n        }\r\n        _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            cacheSize: options.cacheSize,\r\n            crossOrigin: options.crossOrigin,\r\n            projection: options.projection,\r\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n            tileClass: options.tileClass,\r\n            tileGrid: tileGrid,\r\n            tileLoadFunction: options.tileLoadFunction,\r\n            tilePixelRatio: options.tilePixelRatio,\r\n            tileUrlFunction: nullTileUrlFunction,\r\n            urls: urls,\r\n            wrapX: options.wrapX !== undefined ? options.wrapX : false,\r\n            transition: options.transition\r\n        }) || this;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.version_ = options.version !== undefined ? options.version : '1.0.0';\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\r\n        /**\r\n         * @private\r\n         * @type {!Object}\r\n         */\r\n        _this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.layer_ = options.layer;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.matrixSet_ = options.matrixSet;\r\n        /**\r\n         * @private\r\n         * @type {string}\r\n         */\r\n        _this.style_ = options.style;\r\n        // FIXME: should we guess this requestEncoding from options.url(s)\r\n        //        structure? that would mean KVP only if a template is not provided.\r\n        /**\r\n         * @private\r\n         * @type {import(\"./WMTSRequestEncoding.js\").default}\r\n         */\r\n        _this.requestEncoding_ = requestEncoding;\r\n        _this.setKey(_this.getKeyForDimensions_());\r\n        if (urls && urls.length > 0) {\r\n            _this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(_this)));\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Set the URLs to use for requests.\r\n     * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\r\n     * @override\r\n     */\r\n    WMTS.prototype.setUrls = function (urls) {\r\n        this.urls = urls;\r\n        var key = urls.join('\\n');\r\n        this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\r\n    };\r\n    /**\r\n     * Get the dimensions, i.e. those passed to the constructor through the\r\n     * \"dimensions\" option, and possibly updated using the updateDimensions\r\n     * method.\r\n     * @return {!Object} Dimensions.\r\n     * @api\r\n     */\r\n    WMTS.prototype.getDimensions = function () {\r\n        return this.dimensions_;\r\n    };\r\n    /**\r\n     * Return the image format of the WMTS source.\r\n     * @return {string} Format.\r\n     * @api\r\n     */\r\n    WMTS.prototype.getFormat = function () {\r\n        return this.format_;\r\n    };\r\n    /**\r\n     * Return the layer of the WMTS source.\r\n     * @return {string} Layer.\r\n     * @api\r\n     */\r\n    WMTS.prototype.getLayer = function () {\r\n        return this.layer_;\r\n    };\r\n    /**\r\n     * Return the matrix set of the WMTS source.\r\n     * @return {string} MatrixSet.\r\n     * @api\r\n     */\r\n    WMTS.prototype.getMatrixSet = function () {\r\n        return this.matrixSet_;\r\n    };\r\n    /**\r\n     * Return the request encoding, either \"KVP\" or \"REST\".\r\n     * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\r\n     * @api\r\n     */\r\n    WMTS.prototype.getRequestEncoding = function () {\r\n        return this.requestEncoding_;\r\n    };\r\n    /**\r\n     * Return the style of the WMTS source.\r\n     * @return {string} Style.\r\n     * @api\r\n     */\r\n    WMTS.prototype.getStyle = function () {\r\n        return this.style_;\r\n    };\r\n    /**\r\n     * Return the version of the WMTS source.\r\n     * @return {string} Version.\r\n     * @api\r\n     */\r\n    WMTS.prototype.getVersion = function () {\r\n        return this.version_;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {string} The key for the current dimensions.\r\n     */\r\n    WMTS.prototype.getKeyForDimensions_ = function () {\r\n        var i = 0;\r\n        var res = [];\r\n        for (var key in this.dimensions_) {\r\n            res[i++] = key + '-' + this.dimensions_[key];\r\n        }\r\n        return res.join('/');\r\n    };\r\n    /**\r\n     * Update the dimensions.\r\n     * @param {Object} dimensions Dimensions.\r\n     * @api\r\n     */\r\n    WMTS.prototype.updateDimensions = function (dimensions) {\r\n        assign(this.dimensions_, dimensions);\r\n        this.setKey(this.getKeyForDimensions_());\r\n    };\r\n    return WMTS;\r\n}(TileImage));\r\nexport default WMTS;\r\n/**\r\n * Generate source options from a capabilities object.\r\n * @param {Object} wmtsCap An object representing the capabilities document.\r\n * @param {!Object} config Configuration properties for the layer.  Defaults for\r\n *                  the layer will apply if not provided.\r\n *\r\n * Required config properties:\r\n *  - layer - {string} The layer identifier.\r\n *\r\n * Optional config properties:\r\n *  - matrixSet - {string} The matrix set identifier, required if there is\r\n *       more than one matrix set in the layer capabilities.\r\n *  - projection - {string} The desired CRS when no matrixSet is specified.\r\n *       eg: \"EPSG:3857\". If the desired projection is not available,\r\n *       an error is thrown.\r\n *  - requestEncoding - {string} url encoding format for the layer. Default is\r\n *       the first tile url format found in the GetCapabilities response.\r\n *  - style - {string} The name of the style\r\n *  - format - {string} Image format for the layer. Default is the first\r\n *       format returned in the GetCapabilities response.\r\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\r\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\r\n * @api\r\n */\r\nexport function optionsFromCapabilities(wmtsCap, config) {\r\n    var layers = wmtsCap['Contents']['Layer'];\r\n    var l = find(layers, function (elt, index, array) {\r\n        return elt['Identifier'] == config['layer'];\r\n    });\r\n    if (l === null) {\r\n        return null;\r\n    }\r\n    var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\r\n    var idx;\r\n    if (l['TileMatrixSetLink'].length > 1) {\r\n        if ('projection' in config) {\r\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\r\n                var tileMatrixSet = find(tileMatrixSets, function (el) {\r\n                    return el['Identifier'] == elt['TileMatrixSet'];\r\n                });\r\n                var supportedCRS = tileMatrixSet['SupportedCRS'];\r\n                var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\r\n                    getProjection(supportedCRS);\r\n                var proj2 = getProjection(config['projection']);\r\n                if (proj1 && proj2) {\r\n                    return equivalent(proj1, proj2);\r\n                }\r\n                else {\r\n                    return supportedCRS == config['projection'];\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\r\n                return elt['TileMatrixSet'] == config['matrixSet'];\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        idx = 0;\r\n    }\r\n    if (idx < 0) {\r\n        idx = 0;\r\n    }\r\n    var matrixSet = /** @type {string} */ (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\r\n    var matrixLimits = /** @type {Array<Object>} */ (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\r\n    var format = /** @type {string} */ (l['Format'][0]);\r\n    if ('format' in config) {\r\n        format = config['format'];\r\n    }\r\n    idx = findIndex(l['Style'], function (elt, index, array) {\r\n        if ('style' in config) {\r\n            return elt['Title'] == config['style'];\r\n        }\r\n        else {\r\n            return elt['isDefault'];\r\n        }\r\n    });\r\n    if (idx < 0) {\r\n        idx = 0;\r\n    }\r\n    var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\r\n    var dimensions = {};\r\n    if ('Dimension' in l) {\r\n        l['Dimension'].forEach(function (elt, index, array) {\r\n            var key = elt['Identifier'];\r\n            var value = elt['Default'];\r\n            if (value === undefined) {\r\n                value = elt['Value'][0];\r\n            }\r\n            dimensions[key] = value;\r\n        });\r\n    }\r\n    var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\r\n    var matrixSetObj = find(matrixSets, function (elt, index, array) {\r\n        return elt['Identifier'] == matrixSet;\r\n    });\r\n    var projection;\r\n    var code = matrixSetObj['SupportedCRS'];\r\n    if (code) {\r\n        projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\r\n            getProjection(code);\r\n    }\r\n    if ('projection' in config) {\r\n        var projConfig = getProjection(config['projection']);\r\n        if (projConfig) {\r\n            if (!projection || equivalent(projConfig, projection)) {\r\n                projection = projConfig;\r\n            }\r\n        }\r\n    }\r\n    var wgs84BoundingBox = l['WGS84BoundingBox'];\r\n    var extent, wrapX;\r\n    if (wgs84BoundingBox !== undefined) {\r\n        var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\r\n        wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\r\n            wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\r\n        extent = transformExtent(wgs84BoundingBox, 'EPSG:4326', projection);\r\n        var projectionExtent = projection.getExtent();\r\n        if (projectionExtent) {\r\n            // If possible, do a sanity check on the extent - it should never be\r\n            // bigger than the validity extent of the projection of a matrix set.\r\n            if (!containsExtent(projectionExtent, extent)) {\r\n                extent = undefined;\r\n            }\r\n        }\r\n    }\r\n    var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\r\n    /** @type {!Array<string>} */\r\n    var urls = [];\r\n    var requestEncoding = config['requestEncoding'];\r\n    requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\r\n    if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\r\n        var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\r\n        for (var i = 0, ii = gets.length; i < ii; ++i) {\r\n            if (gets[i]['Constraint']) {\r\n                var constraint = find(gets[i]['Constraint'], function (element) {\r\n                    return element['name'] == 'GetEncoding';\r\n                });\r\n                var encodings = constraint['AllowedValues']['Value'];\r\n                if (requestEncoding === '') {\r\n                    // requestEncoding not provided, use the first encoding from the list\r\n                    requestEncoding = encodings[0];\r\n                }\r\n                if (requestEncoding === WMTSRequestEncoding.KVP) {\r\n                    if (includes(encodings, WMTSRequestEncoding.KVP)) {\r\n                        urls.push(/** @type {string} */ (gets[i]['href']));\r\n                    }\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            else if (gets[i]['href']) {\r\n                requestEncoding = WMTSRequestEncoding.KVP;\r\n                urls.push(/** @type {string} */ (gets[i]['href']));\r\n            }\r\n        }\r\n    }\r\n    if (urls.length === 0) {\r\n        requestEncoding = WMTSRequestEncoding.REST;\r\n        l['ResourceURL'].forEach(function (element) {\r\n            if (element['resourceType'] === 'tile') {\r\n                format = element['format'];\r\n                urls.push(/** @type {string} */ (element['template']));\r\n            }\r\n        });\r\n    }\r\n    return {\r\n        urls: urls,\r\n        layer: config['layer'],\r\n        matrixSet: matrixSet,\r\n        format: format,\r\n        projection: projection,\r\n        requestEncoding: requestEncoding,\r\n        tileGrid: tileGrid,\r\n        style: style,\r\n        dimensions: dimensions,\r\n        wrapX: wrapX,\r\n        crossOrigin: config['crossOrigin']\r\n    };\r\n}\r\n/**\r\n * @param {string} template Template.\r\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\r\n * @this {WMTS}\r\n */\r\nfunction createFromWMTSTemplate(template) {\r\n    var requestEncoding = this.requestEncoding_;\r\n    // context property names are lower case to allow for a case insensitive\r\n    // replacement as some services use different naming conventions\r\n    var context = {\r\n        'layer': this.layer_,\r\n        'style': this.style_,\r\n        'tilematrixset': this.matrixSet_\r\n    };\r\n    if (requestEncoding == WMTSRequestEncoding.KVP) {\r\n        assign(context, {\r\n            'Service': 'WMTS',\r\n            'Request': 'GetTile',\r\n            'Version': this.version_,\r\n            'Format': this.format_\r\n        });\r\n    }\r\n    // TODO: we may want to create our own appendParams function so that params\r\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\r\n    // special template params\r\n    template = (requestEncoding == WMTSRequestEncoding.KVP) ?\r\n        appendParams(template, context) :\r\n        template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\r\n            return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\r\n        });\r\n    var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this.tileGrid);\r\n    var dimensions = this.dimensions_;\r\n    return (\r\n    /**\r\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @return {string|undefined} Tile URL.\r\n     */\r\n    function (tileCoord, pixelRatio, projection) {\r\n        if (!tileCoord) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            var localContext_1 = {\r\n                'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\r\n                'TileCol': tileCoord[1],\r\n                'TileRow': tileCoord[2]\r\n            };\r\n            assign(localContext_1, dimensions);\r\n            var url = template;\r\n            if (requestEncoding == WMTSRequestEncoding.KVP) {\r\n                url = appendParams(url, localContext_1);\r\n            }\r\n            else {\r\n                url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\r\n                    return localContext_1[p];\r\n                });\r\n            }\r\n            return url;\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=WMTS.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * @module ol/source/Zoomify\r\n */\r\nimport { DEFAULT_TILE_SIZE } from '../tilegrid/common.js';\r\nimport ImageTile from '../ImageTile.js';\r\nimport TileState from '../TileState.js';\r\nimport { expandUrl, createFromTileUrlFunctions } from '../tileurlfunction.js';\r\nimport { assert } from '../asserts.js';\r\nimport { createCanvasContext2D } from '../dom.js';\r\nimport { getTopLeft } from '../extent.js';\r\nimport { toSize } from '../size.js';\r\nimport TileImage from './TileImage.js';\r\nimport TileGrid from '../tilegrid/TileGrid.js';\r\n/**\r\n * @enum {string}\r\n */\r\nvar TierSizeCalculation = {\r\n    DEFAULT: 'default',\r\n    TRUNCATED: 'truncated'\r\n};\r\nvar CustomTile = /** @class */ (function (_super) {\r\n    __extends(CustomTile, _super);\r\n    /**\r\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid TileGrid that the tile belongs to.\r\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @param {TileState} state State.\r\n     * @param {string} src Image source URI.\r\n     * @param {?string} crossOrigin Cross origin.\r\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\r\n     * @param {import(\"../Tile.js\").Options=} opt_options Tile options.\r\n     */\r\n    function CustomTile(tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\r\n        var _this = _super.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) || this;\r\n        /**\r\n         * @private\r\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\r\n         */\r\n        _this.zoomifyImage_ = null;\r\n        /**\r\n         * @private\r\n         * @type {import(\"../size.js\").Size}\r\n         */\r\n        _this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CustomTile.prototype.getImage = function () {\r\n        if (this.zoomifyImage_) {\r\n            return this.zoomifyImage_;\r\n        }\r\n        var image = _super.prototype.getImage.call(this);\r\n        if (this.state == TileState.LOADED) {\r\n            var tileSize = this.tileSize_;\r\n            if (image.width == tileSize[0] && image.height == tileSize[1]) {\r\n                this.zoomifyImage_ = image;\r\n                return image;\r\n            }\r\n            else {\r\n                var context = createCanvasContext2D(tileSize[0], tileSize[1]);\r\n                context.drawImage(image, 0, 0);\r\n                this.zoomifyImage_ = context.canvas;\r\n                return context.canvas;\r\n            }\r\n        }\r\n        else {\r\n            return image;\r\n        }\r\n    };\r\n    return CustomTile;\r\n}(ImageTile));\r\nexport { CustomTile };\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value  you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {string} [url] URL template or base URL of the Zoomify service.\r\n * A base URL is the fixed part\r\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\r\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\r\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\r\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\r\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\r\n * `{tileIndex}` and `{z}` placeholders, e.g.\r\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\r\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\r\n * used instead of defining each one separately in the `urls` option.\r\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\r\n * @property {import(\"../size.js\").Size} [size] Size of the image.\r\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\r\n * Default sets the TileGrid in the\r\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\r\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\r\n * as `[0, 0, width, height]`.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\r\n */\r\n/**\r\n * @classdesc\r\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\r\n * Imaging Protocol are supported).\r\n * @api\r\n */\r\nvar Zoomify = /** @class */ (function (_super) {\r\n    __extends(Zoomify, _super);\r\n    /**\r\n     * @param {Options=} opt_options Options.\r\n     */\r\n    function Zoomify(opt_options) {\r\n        var _this = this;\r\n        var options = opt_options || {};\r\n        var size = options.size;\r\n        var tierSizeCalculation = options.tierSizeCalculation !== undefined ?\r\n            options.tierSizeCalculation :\r\n            TierSizeCalculation.DEFAULT;\r\n        var imageWidth = size[0];\r\n        var imageHeight = size[1];\r\n        var extent = options.extent || [0, -size[1], size[0], 0];\r\n        var tierSizeInTiles = [];\r\n        var tileSize = options.tileSize || DEFAULT_TILE_SIZE;\r\n        var tileSizeForTierSizeCalculation = tileSize;\r\n        switch (tierSizeCalculation) {\r\n            case TierSizeCalculation.DEFAULT:\r\n                while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\r\n                    tierSizeInTiles.push([\r\n                        Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\r\n                        Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\r\n                    ]);\r\n                    tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\r\n                }\r\n                break;\r\n            case TierSizeCalculation.TRUNCATED:\r\n                var width = imageWidth;\r\n                var height = imageHeight;\r\n                while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\r\n                    tierSizeInTiles.push([\r\n                        Math.ceil(width / tileSizeForTierSizeCalculation),\r\n                        Math.ceil(height / tileSizeForTierSizeCalculation)\r\n                    ]);\r\n                    width >>= 1;\r\n                    height >>= 1;\r\n                }\r\n                break;\r\n            default:\r\n                assert(false, 53); // Unknown `tierSizeCalculation` configured\r\n                break;\r\n        }\r\n        tierSizeInTiles.push([1, 1]);\r\n        tierSizeInTiles.reverse();\r\n        var resolutions = [1];\r\n        var tileCountUpToTier = [0];\r\n        for (var i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\r\n            resolutions.push(1 << i);\r\n            tileCountUpToTier.push(tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\r\n                tileCountUpToTier[i - 1]);\r\n        }\r\n        resolutions.reverse();\r\n        var tileGrid = new TileGrid({\r\n            tileSize: tileSize,\r\n            extent: extent,\r\n            origin: getTopLeft(extent),\r\n            resolutions: resolutions\r\n        });\r\n        var url = options.url;\r\n        if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\r\n            url += '{TileGroup}/{z}-{x}-{y}.jpg';\r\n        }\r\n        var urls = expandUrl(url);\r\n        /**\r\n         * @param {string} template Template.\r\n         * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\r\n         */\r\n        function createFromTemplate(template) {\r\n            return (\r\n            /**\r\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\r\n             * @param {number} pixelRatio Pixel ratio.\r\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n             * @return {string|undefined} Tile URL.\r\n             */\r\n            function (tileCoord, pixelRatio, projection) {\r\n                if (!tileCoord) {\r\n                    return undefined;\r\n                }\r\n                else {\r\n                    var tileCoordZ = tileCoord[0];\r\n                    var tileCoordX = tileCoord[1];\r\n                    var tileCoordY = tileCoord[2];\r\n                    var tileIndex = tileCoordX +\r\n                        tileCoordY * tierSizeInTiles[tileCoordZ][0];\r\n                    var tileSize_1 = tileGrid.getTileSize(tileCoordZ);\r\n                    var tileWidth = Array.isArray(tileSize_1) ? tileSize_1[0] : tileSize_1;\r\n                    var tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\r\n                    var localContext_1 = {\r\n                        'z': tileCoordZ,\r\n                        'x': tileCoordX,\r\n                        'y': tileCoordY,\r\n                        'tileIndex': tileIndex,\r\n                        'TileGroup': 'TileGroup' + tileGroup\r\n                    };\r\n                    return template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\r\n                        return localContext_1[p];\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        var tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\r\n        var ZoomifyTileClass = CustomTile.bind(null, tileGrid);\r\n        _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            cacheSize: options.cacheSize,\r\n            crossOrigin: options.crossOrigin,\r\n            projection: options.projection,\r\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n            tileClass: ZoomifyTileClass,\r\n            tileGrid: tileGrid,\r\n            tileUrlFunction: tileUrlFunction,\r\n            transition: options.transition\r\n        }) || this;\r\n        return _this;\r\n    }\r\n    return Zoomify;\r\n}(TileImage));\r\nexport default Zoomify;\r\n//# sourceMappingURL=Zoomify.js.map","import {stableSort as _ol_array$stableSort} from './ol/array';\nimport $ol$Collection from './ol/Collection';\nimport {asString as _ol_color$asString} from './ol/color';\nimport {asArray as _ol_color$asArray} from './ol/color';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike';\nimport $ol$control$Attribution from './ol/control/Attribution';\nimport {render as _ol_control_Attribution$render} from './ol/control/Attribution';\nimport $ol$control$Control from './ol/control/Control';\nimport $ol$control$FullScreen from './ol/control/FullScreen';\nimport $ol$control$MousePosition from './ol/control/MousePosition';\nimport {render as _ol_control_MousePosition$render} from './ol/control/MousePosition';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap';\nimport {render as _ol_control_OverviewMap$render} from './ol/control/OverviewMap';\nimport $ol$control$Rotate from './ol/control/Rotate';\nimport {render as _ol_control_Rotate$render} from './ol/control/Rotate';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine';\nimport {render as _ol_control_ScaleLine$render} from './ol/control/ScaleLine';\nimport {defaults as _ol_control$defaults} from './ol/control';\nimport $ol$control$Zoom from './ol/control/Zoom';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider';\nimport {render as _ol_control_ZoomSlider$render} from './ol/control/ZoomSlider';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent';\nimport {add as _ol_coordinate$add} from './ol/coordinate';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate';\nimport {format as _ol_coordinate$format} from './ol/coordinate';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing';\nimport {linear as _ol_easing$linear} from './ol/easing';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition';\nimport {always as _ol_events_condition$always} from './ol/events/condition';\nimport {click as _ol_events_condition$click} from './ol/events/condition';\nimport {never as _ol_events_condition$never} from './ol/events/condition';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent';\nimport {buffer as _ol_extent$buffer} from './ol/extent';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent';\nimport {equals as _ol_extent$equals} from './ol/extent';\nimport {extend as _ol_extent$extend} from './ol/extent';\nimport {getArea as _ol_extent$getArea} from './ol/extent';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent';\nimport {getSize as _ol_extent$getSize} from './ol/extent';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent';\nimport {intersects as _ol_extent$intersects} from './ol/extent';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent';\nimport $ol$Feature from './ol/Feature';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON';\nimport $ol$format$Feature from './ol/format/Feature';\nimport $ol$format$filter$Bbox from './ol/format/filter/Bbox';\nimport $ol$format$filter$Contains from './ol/format/filter/Contains';\nimport $ol$format$filter$During from './ol/format/filter/During';\nimport $ol$format$filter$EqualTo from './ol/format/filter/EqualTo';\nimport $ol$format$filter$GreaterThan from './ol/format/filter/GreaterThan';\nimport $ol$format$filter$GreaterThanOrEqualTo from './ol/format/filter/GreaterThanOrEqualTo';\nimport $ol$format$filter$Intersects from './ol/format/filter/Intersects';\nimport $ol$format$filter$IsBetween from './ol/format/filter/IsBetween';\nimport $ol$format$filter$IsLike from './ol/format/filter/IsLike';\nimport $ol$format$filter$IsNull from './ol/format/filter/IsNull';\nimport $ol$format$filter$LessThan from './ol/format/filter/LessThan';\nimport $ol$format$filter$LessThanOrEqualTo from './ol/format/filter/LessThanOrEqualTo';\nimport $ol$format$filter$Not from './ol/format/filter/Not';\nimport $ol$format$filter$NotEqualTo from './ol/format/filter/NotEqualTo';\nimport $ol$format$filter$Or from './ol/format/filter/Or';\nimport $ol$format$filter$Within from './ol/format/filter/Within';\nimport {and as _ol_format_filter$and} from './ol/format/filter';\nimport {or as _ol_format_filter$or} from './ol/format/filter';\nimport {not as _ol_format_filter$not} from './ol/format/filter';\nimport {bbox as _ol_format_filter$bbox} from './ol/format/filter';\nimport {contains as _ol_format_filter$contains} from './ol/format/filter';\nimport {intersects as _ol_format_filter$intersects} from './ol/format/filter';\nimport {within as _ol_format_filter$within} from './ol/format/filter';\nimport {equalTo as _ol_format_filter$equalTo} from './ol/format/filter';\nimport {notEqualTo as _ol_format_filter$notEqualTo} from './ol/format/filter';\nimport {lessThan as _ol_format_filter$lessThan} from './ol/format/filter';\nimport {lessThanOrEqualTo as _ol_format_filter$lessThanOrEqualTo} from './ol/format/filter';\nimport {greaterThan as _ol_format_filter$greaterThan} from './ol/format/filter';\nimport {greaterThanOrEqualTo as _ol_format_filter$greaterThanOrEqualTo} from './ol/format/filter';\nimport {isNull as _ol_format_filter$isNull} from './ol/format/filter';\nimport {between as _ol_format_filter$between} from './ol/format/filter';\nimport {like as _ol_format_filter$like} from './ol/format/filter';\nimport {during as _ol_format_filter$during} from './ol/format/filter';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON';\nimport $ol$format$GML from './ol/format/GML';\nimport $ol$format$GML2 from './ol/format/GML2';\nimport $ol$format$GML3 from './ol/format/GML3';\nimport $ol$format$GML32 from './ol/format/GML32';\nimport $ol$format$GPX from './ol/format/GPX';\nimport $ol$format$IGC from './ol/format/IGC';\nimport $ol$format$KML from './ol/format/KML';\nimport $ol$format$MVT from './ol/format/MVT';\nimport $ol$format$OSMXML from './ol/format/OSMXML';\nimport $ol$format$Polyline from './ol/format/Polyline';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON';\nimport $ol$format$WFS from './ol/format/WFS';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS';\nimport $ol$format$WKT from './ol/format/WKT';\nimport $ol$format$WMSCapabilities from './ol/format/WMSCapabilities';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities';\nimport $ol$Geolocation from './ol/Geolocation';\nimport $ol$geom$Circle from './ol/geom/Circle';\nimport $ol$geom$Geometry from './ol/geom/Geometry';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing';\nimport $ol$geom$LineString from './ol/geom/LineString';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon';\nimport $ol$geom$Point from './ol/geom/Point';\nimport $ol$geom$Polygon from './ol/geom/Polygon';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has';\nimport {GEOLOCATION as _ol_has$GEOLOCATION} from './ol/has';\nimport {TOUCH as _ol_has$TOUCH} from './ol/has';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom';\nimport $ol$interaction$Draw from './ol/interaction/Draw';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw';\nimport $ol$interaction$Extent from './ol/interaction/Extent';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom';\nimport $ol$interaction$Modify from './ol/interaction/Modify';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer';\nimport $ol$interaction$Select from './ol/interaction/Select';\nimport $ol$interaction$Snap from './ol/interaction/Snap';\nimport $ol$interaction$Translate from './ol/interaction/Translate';\nimport {defaults as _ol_interaction$defaults} from './ol/interaction';\nimport $ol$Kinetic from './ol/Kinetic';\nimport $ol$layer$Base from './ol/layer/Base';\nimport $ol$layer$BaseImage from './ol/layer/BaseImage';\nimport $ol$layer$BaseTile from './ol/layer/BaseTile';\nimport $ol$layer$BaseVector from './ol/layer/BaseVector';\nimport $ol$layer$Graticule from './ol/layer/Graticule';\nimport $ol$layer$Group from './ol/layer/Group';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap';\nimport $ol$layer$Image from './ol/layer/Image';\nimport $ol$layer$Tile from './ol/layer/Tile';\nimport $ol$layer$Vector from './ol/layer/Vector';\nimport $ol$layer$VectorImage from './ol/layer/VectorImage';\nimport $ol$layer$VectorTile from './ol/layer/VectorTile';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy';\nimport $ol$Map from './ol/Map';\nimport $ol$Object from './ol/Object';\nimport $ol$Observable from './ol/Observable';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable';\nimport $ol$Overlay from './ol/Overlay';\nimport $ol$PluggableMap from './ol/PluggableMap';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4';\nimport $ol$proj$Projection from './ol/proj/Projection';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj';\nimport {get as _ol_proj$get} from './ol/proj';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj';\nimport {transform as _ol_proj$transform} from './ol/proj';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj';\nimport {labelCache as _ol_render_canvas$labelCache} from './ol/render/canvas';\nimport $ol$render$VectorContext from './ol/render/VectorContext';\nimport {toContext as _ol_render$toContext} from './ol/render';\nimport {getVectorContext as _ol_render$getVectorContext} from './ol/render';\nimport {getRenderPixel as _ol_render$getRenderPixel} from './ol/render';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer';\nimport $ol$renderer$canvas$VectorTileLayer from './ol/renderer/canvas/VectorTileLayer';\nimport $ol$renderer$Composite from './ol/renderer/Composite';\nimport $ol$renderer$webgl$PointsLayer from './ol/renderer/webgl/PointsLayer';\nimport {toSize as _ol_size$toSize} from './ol/size';\nimport $ol$source$BingMaps from './ol/source/BingMaps';\nimport $ol$source$CartoDB from './ol/source/CartoDB';\nimport $ol$source$Cluster from './ol/source/Cluster';\nimport $ol$source$Image from './ol/source/Image';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas';\nimport $ol$source$ImageMapGuide from './ol/source/ImageMapGuide';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM';\nimport $ol$source$OSM from './ol/source/OSM';\nimport $ol$source$Raster from './ol/source/Raster';\nimport $ol$source$Source from './ol/source/Source';\nimport $ol$source$Stamen from './ol/source/Stamen';\nimport $ol$source$Tile from './ol/source/Tile';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest';\nimport $ol$source$TileDebug from './ol/source/TileDebug';\nimport $ol$source$TileImage from './ol/source/TileImage';\nimport $ol$source$TileJSON from './ol/source/TileJSON';\nimport $ol$source$TileWMS from './ol/source/TileWMS';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid';\nimport $ol$source$Vector from './ol/source/Vector';\nimport $ol$source$VectorTile from './ol/source/VectorTile';\nimport $ol$source$WMTS from './ol/source/WMTS';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS';\nimport $ol$source$XYZ from './ol/source/XYZ';\nimport $ol$source$Zoomify from './ol/source/Zoomify';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere';\nimport $ol$style$Circle from './ol/style/Circle';\nimport $ol$style$Fill from './ol/style/Fill';\nimport $ol$style$Icon from './ol/style/Icon';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache';\nimport $ol$style$Image from './ol/style/Image';\nimport $ol$style$RegularShape from './ol/style/RegularShape';\nimport $ol$style$Stroke from './ol/style/Stroke';\nimport $ol$style$Style from './ol/style/Style';\nimport $ol$style$Text from './ol/style/Text';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid';\nimport {getUid as _ol$getUid} from './ol';\nimport $ol$View from './ol/View';\nimport $ol$webgl$Helper from './ol/webgl/Helper';\nimport $ol$webgl$PostProcessingPass from './ol/webgl/PostProcessingPass';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml';\nimport {parse as _ol_xml$parse} from './ol/xml';\n\nvar ol = {};\n\nol.array = {};\nol.color = {};\nol.colorlike = {};\nol.control = {};\nol.coordinate = {};\nol.easing = {};\nol.events = {};\nol.events.condition = {};\nol.extent = {};\nol.featureloader = {};\nol.format = {};\nol.format.filter = {};\nol.geom = {};\nol.has = {};\nol.interaction = {};\nol.layer = {};\nol.loadingstrategy = {};\nol.proj = {};\nol.proj.Units = {};\nol.proj.proj4 = {};\nol.render = {};\nol.render.canvas = {};\nol.renderer = {};\nol.renderer.canvas = {};\nol.renderer.webgl = {};\nol.size = {};\nol.source = {};\nol.sphere = {};\nol.style = {};\nol.style.IconImageCache = {};\nol.tilegrid = {};\nol.webgl = {};\nol.xml = {};\nol.Collection = $ol$Collection;\nol.Feature = $ol$Feature;\nol.Geolocation = $ol$Geolocation;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.Object = $ol$Object;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.PluggableMap = $ol$PluggableMap;\nol.View = $ol$View;\nol.array.stableSort = _ol_array$stableSort;\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.control.Attribution = $ol$control$Attribution;\nol.control.Attribution.render = _ol_control_Attribution$render;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.MousePosition.render = _ol_control_MousePosition$render;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.OverviewMap.render = _ol_control_OverviewMap$render;\nol.control.Rotate = $ol$control$Rotate;\nol.control.Rotate.render = _ol_control_Rotate$render;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.ScaleLine.render = _ol_control_ScaleLine$render;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomSlider.render = _ol_control_ZoomSlider$render;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = _ol_control$defaults;\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.GML = $ol$format$GML;\nol.format.GML2 = $ol$format$GML2;\nol.format.GML3 = $ol$format$GML3;\nol.format.GML32 = $ol$format$GML32;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.KML = $ol$format$KML;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WKT = $ol$format$WKT;\nol.format.WMSCapabilities = $ol$format$WMSCapabilities;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.filter.Bbox = $ol$format$filter$Bbox;\nol.format.filter.Contains = $ol$format$filter$Contains;\nol.format.filter.During = $ol$format$filter$During;\nol.format.filter.EqualTo = $ol$format$filter$EqualTo;\nol.format.filter.GreaterThan = $ol$format$filter$GreaterThan;\nol.format.filter.GreaterThanOrEqualTo = $ol$format$filter$GreaterThanOrEqualTo;\nol.format.filter.Intersects = $ol$format$filter$Intersects;\nol.format.filter.IsBetween = $ol$format$filter$IsBetween;\nol.format.filter.IsLike = $ol$format$filter$IsLike;\nol.format.filter.IsNull = $ol$format$filter$IsNull;\nol.format.filter.LessThan = $ol$format$filter$LessThan;\nol.format.filter.LessThanOrEqualTo = $ol$format$filter$LessThanOrEqualTo;\nol.format.filter.Not = $ol$format$filter$Not;\nol.format.filter.NotEqualTo = $ol$format$filter$NotEqualTo;\nol.format.filter.Or = $ol$format$filter$Or;\nol.format.filter.Within = $ol$format$filter$Within;\nol.format.filter.and = _ol_format_filter$and;\nol.format.filter.bbox = _ol_format_filter$bbox;\nol.format.filter.between = _ol_format_filter$between;\nol.format.filter.contains = _ol_format_filter$contains;\nol.format.filter.during = _ol_format_filter$during;\nol.format.filter.equalTo = _ol_format_filter$equalTo;\nol.format.filter.greaterThan = _ol_format_filter$greaterThan;\nol.format.filter.greaterThanOrEqualTo = _ol_format_filter$greaterThanOrEqualTo;\nol.format.filter.intersects = _ol_format_filter$intersects;\nol.format.filter.isNull = _ol_format_filter$isNull;\nol.format.filter.lessThan = _ol_format_filter$lessThan;\nol.format.filter.lessThanOrEqualTo = _ol_format_filter$lessThanOrEqualTo;\nol.format.filter.like = _ol_format_filter$like;\nol.format.filter.not = _ol_format_filter$not;\nol.format.filter.notEqualTo = _ol_format_filter$notEqualTo;\nol.format.filter.or = _ol_format_filter$or;\nol.format.filter.within = _ol_format_filter$within;\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.getUid = _ol$getUid;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.GEOLOCATION = _ol_has$GEOLOCATION;\nol.has.TOUCH = _ol_has$TOUCH;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.defaults = _ol_interaction$defaults;\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.layer.VectorTile = $ol$layer$VectorTile;\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas.labelCache = _ol_render_canvas$labelCache;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.canvas.VectorTileLayer = $ol$renderer$canvas$VectorTileLayer;\nol.renderer.webgl.PointsLayer = $ol$renderer$webgl$PointsLayer;\nol.size.toSize = _ol_size$toSize;\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.CartoDB = $ol$source$CartoDB;\nol.source.Cluster = $ol$source$Cluster;\nol.source.Image = $ol$source$Image;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageMapGuide = $ol$source$ImageMapGuide;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.Vector = $ol$source$Vector;\nol.source.VectorTile = $ol$source$VectorTile;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.Zoomify = $ol$source$Zoomify;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Text = $ol$style$Text;\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.webgl.Helper = $ol$webgl$Helper;\nol.webgl.PostProcessingPass = $ol$webgl$PostProcessingPass;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.parse = _ol_xml$parse;\n\nexport default ol;","/**\r\n * @module ol/proj/proj4\r\n */\r\nimport { addCoordinateTransforms, addProjection, addEquivalentProjections, get } from '../proj.js';\r\nimport { get as getTransform } from './transforms.js';\r\nimport Projection from './Projection.js';\r\n/**\r\n * Make projections defined in proj4 (with `proj4.defs()`) available in\r\n * OpenLayers.\r\n *\r\n * This function should be called whenever changes are made to the proj4\r\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\r\n * modified by this function.\r\n *\r\n * @param {?} proj4 Proj4.\r\n * @api\r\n */\r\nexport function register(proj4) {\r\n    var projCodes = Object.keys(proj4.defs);\r\n    var len = projCodes.length;\r\n    var i, j;\r\n    for (i = 0; i < len; ++i) {\r\n        var code = projCodes[i];\r\n        if (!get(code)) {\r\n            var def = proj4.defs(code);\r\n            addProjection(new Projection({\r\n                code: code,\r\n                axisOrientation: def.axis,\r\n                metersPerUnit: def.to_meter,\r\n                units: def.units\r\n            }));\r\n        }\r\n    }\r\n    for (i = 0; i < len; ++i) {\r\n        var code1 = projCodes[i];\r\n        var proj1 = get(code1);\r\n        for (j = 0; j < len; ++j) {\r\n            var code2 = projCodes[j];\r\n            var proj2 = get(code2);\r\n            if (!getTransform(code1, code2)) {\r\n                if (proj4.defs[code1] === proj4.defs[code2]) {\r\n                    addEquivalentProjections([proj1, proj2]);\r\n                }\r\n                else {\r\n                    var transform = proj4(code1, code2);\r\n                    addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=proj4.js.map","/**\r\n * @module ol/render\r\n */\r\nimport { DEVICE_PIXEL_RATIO } from './has.js';\r\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform } from './transform.js';\r\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\r\n/**\r\n * @typedef {Object} State\r\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\r\n * @property {import(\"./Feature.js\").FeatureLike} feature\r\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\r\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\r\n * @property {number} resolution Resolution that the render batch was created and optimized for.\r\n * This is not the view's resolution that is being rendered.\r\n * @property {number} rotation Rotation of the rendered layer in radians.\r\n */\r\n/**\r\n * A function to be used when sorting features before rendering.\r\n * It takes two instances of {@link module:ol/Feature} or\r\n * {@link module:ol/render/Feature} and returns a `{number}`.\r\n *\r\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\r\n */\r\n/**\r\n * @typedef {Object} ToContextOptions\r\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\r\n * pixels. When provided, both canvas and css size will be set according to the\r\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\r\n * altered.\r\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\r\n * pixel to css pixel ratio) for the canvas.\r\n */\r\n/**\r\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\r\n * to the context's canvas.\r\n *\r\n * The units for geometry coordinates are css pixels relative to the top left\r\n * corner of the canvas element.\r\n * ```js\r\n * import {toContext} from 'ol/render';\r\n * import Fill from 'ol/style/Fill';\r\n * import Polygon from 'ol/geom/Polygon';\r\n *\r\n * var canvas = document.createElement('canvas');\r\n * var render = toContext(canvas.getContext('2d'),\r\n *     { size: [100, 100] });\r\n * render.setFillStrokeStyle(new Fill({ color: blue }));\r\n * render.drawPolygon(\r\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\r\n * ```\r\n *\r\n * @param {CanvasRenderingContext2D} context Canvas context.\r\n * @param {ToContextOptions=} opt_options Options.\r\n * @return {CanvasImmediateRenderer} Canvas Immediate.\r\n * @api\r\n */\r\nexport function toContext(context, opt_options) {\r\n    var canvas = context.canvas;\r\n    var options = opt_options ? opt_options : {};\r\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\r\n    var size = options.size;\r\n    if (size) {\r\n        canvas.width = size[0] * pixelRatio;\r\n        canvas.height = size[1] * pixelRatio;\r\n        canvas.style.width = size[0] + 'px';\r\n        canvas.style.height = size[1] + 'px';\r\n    }\r\n    var extent = [0, 0, canvas.width, canvas.height];\r\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\r\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\r\n}\r\n/**\r\n * Gets a vector context for drawing to the event's canvas.\r\n * @param {import(\"./render/Event.js\").default} event Render event.\r\n * @returns {CanvasImmediateRenderer} Vector context.\r\n * @api\r\n */\r\nexport function getVectorContext(event) {\r\n    var frameState = event.frameState;\r\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\r\n    return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation);\r\n}\r\n/**\r\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\r\n * @param {import(\"./render/Event.js\").default} event Render event.\r\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\r\n * corner of the map viewport.\r\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\r\n * @api\r\n */\r\nexport function getRenderPixel(event, pixel) {\r\n    var result = pixel.slice(0);\r\n    applyTransform(event.inversePixelTransform.slice(), result);\r\n    return result;\r\n}\r\n//# sourceMappingURL=render.js.map"],"sourceRoot":""}